-- Copy of English lexicon for GF, from: /lib/src/english/DictEng.gf
--# -path=.:../prelude:../abstract:../common
concrete DictAce of DictAceAbs = CatEng ** open MorphoEng, ResEng, ParadigmsEng, IrregEng, Prelude in {

flags
  coding=utf8 ;

lin a_bomb_N = mkN "a - bomb" "a - bombs";
lin a_fortiori_Adv = mkAdv "a fortiori";
lin a_la_carte_Adv = mkAdv "à la carte";
lin a_la_mode_Adv = mkAdv "à la mode";
lin a_level_N = mkN "a - level" "a - levels";
lin a_posteriori_A = compoundA (mkA "a posteriori");
lin a_posteriori_Adv = mkAdv "a posteriori";
lin a_priori_A = compoundA (mkA "a priori");
lin a_priori_Adv = mkAdv "a priori";
lin aachen_PN = mkPN "Aachen";
lin aarhus_PN = mkPN "Aarhus";
lin ab_initio_Adv = mkAdv "ab initio";
lin aback_Adv = mkAdv "aback";
lin abacus_N = mkN "abacus" "abacuses";
lin abaft_Adv = mkAdv "abaft";
lin abaft_Prep = mkPrep "abaft";
lin abandon_N = mkN "abandon" ;
lin abandon_V2 = mkV2 (mkV "abandon" "abandons" "abandoned" "abandoned" "abandoning");
lin abandoned_A = compoundA (mkA "abandoned");
lin abandonment_N = mkN "abandonment" ;
lin abase_V2 = mkV2 (mkV "abase" "abases" "abased" "abased" "abasing");
lin abasement_N = mkN "abasement" ;
lin abash_V2 = mkV2 (mkV "abash" "abashes" "abashed" "abashed" "abashing");
lin abate_V = mkV "abate" "abates" "abated" "abated" "abating";
lin abate_V2 = mkV2 (mkV "abate" "abates" "abated" "abated" "abating");
lin abatement_N = mkN "abatement" ;
lin abattoir_N = mkN "abattoir" "abattoirs";
lin abbe_N = mkN "abbé" "abbés";
lin abbess_N = mkN "abbess" "abbesses";
lin abbey_N = mkN "abbey" "abbeys";
lin abbot_N = mkN "abbot" "abbots";
lin abbreviate_V2 = mkV2 (mkV "abbreviate" "abbreviates" "abbreviated" "abbreviated" "abbreviating");
lin abbreviation_N = mkN "abbreviation" "abbreviations";
lin abc_N = mkN "abc" "abcs" ;
lin abdicate_V = mkV "abdicate" "abdicates" "abdicated" "abdicated" "abdicating";
lin abdicate_V2 = mkV2 (mkV "abdicate" "abdicates" "abdicated" "abdicated" "abdicating");
lin abdication_N = mkN "abdication" "abdications";
lin abdomen_N = mkN "abdomen" "abdomens";
lin abdominal_A = compoundA (mkA "abdominal");
lin abduct_V2 = mkV2 (mkV "abduct" "abducts" "abducted" "abducted" "abducting");
lin abduction_N = mkN "abduction" "abductions";
lin abe_PN = mkPN "Abe";
lin abeam_Adv = mkAdv "abeam";
lin abed_Adv = mkAdv "abed";
lin abercarn_PN = mkPN "Abercarn";
lin aberdare_PN = mkPN "Aberdare";
lin aberdeen_PN = mkPN "Aberdeen";
lin abergavenny_PN = mkPN "Abergavenny";
lin abergele_PN = mkPN "Abergele";
lin aberrant_A = compoundA (mkA "aberrant");
lin aberration_N = mkN "aberration" "aberrations";
lin abertillery_PN = mkPN "Abertillery";
lin aberystwyth_PN = mkPN "Aberystwyth";
lin abet_V = mkV "abet";
lin abet_V2 = mkV2 (mkV "abet" "abets" "abetted" "abetted" "abetting");
lin abeyance_N = mkN "abeyance" ;
lin abhor_V2 = mkV2 (mkV "abhor" "abhors" "abhorred" "abhorred" "abhorring");
lin abhorrence_N = mkN "abhorrence" ;
lin abhorrent_A = compoundA (mkA "abhorrent");
lin abide_V = mkV "abide" "abides" "abided" "abided" "abiding";
lin abide_V2 = mkV2 (mkV "abide" "abides" "abided" "abided" "abiding");
lin abiding_A = compoundA (mkA "abiding");
lin ability_N = mkN "ability" "abilities";
lin abingdon_PN = mkPN "Abingdon";
lin abject_A = compoundA (mkA "abject");
lin abjection_N = mkN "abjection" "abjections";
lin abjuration_N = mkN "abjuration" "abjurations";
lin abjure_V2 = mkV2 (mkV "abjure" "abjures" "abjured" "abjured" "abjuring");
lin ablative_A = compoundA (mkA "ablative");
lin ablative_N = mkN "ablative" "ablatives";
lin ablaut_N = mkN "ablaut" "ablauts";
lin ablaze_A = compoundA (mkA "ablaze");
lin ablaze_Adv = mkAdv "ablaze";
lin able_A = mkA "able" "abler";
lin able_bodied_A = compoundA (mkA "able - bodied");
lin ablution_N = mkN "ablution" "ablutions";
lin ably_Adv = mkAdv "ably";
lin abnegation_N = mkN "abnegation" ;
lin abnormal_A = compoundA (mkA "abnormal");
lin abnormality_N = mkN "abnormality" "abnormalities";
lin abo_N = mkN "abo" "abos";
lin aboard_Adv = mkAdv "aboard";
lin aboard_Prep = mkPrep "aboard";
lin abode_N = mkN "abode" "abodes";
lin abolish_V2 = mkV2 (mkV "abolish" "abolishes" "abolished" "abolished" "abolishing");
lin abolition_N = mkN "abolition" ;
lin abolitionist_N = mkN "abolitionist" "abolitionists";
lin abominable_A = compoundA (mkA "abominable");
lin abominate_V2 = mkV2 (mkV "abominate" "abominates" "abominated" "abominated" "abominating");
lin abomination_N = mkN "abomination" "abominations";
lin aboriginal_A = compoundA (mkA "aboriginal");
lin aboriginal_N = mkN "aboriginal" "aboriginals";
lin aborigine_N = mkN "aborigine" "aborigines";
lin abort_V = mkV "abort" "aborts" "aborted" "aborted" "aborting";
lin abort_V2 = mkV2 (mkV "abort" "aborts" "aborted" "aborted" "aborting");
lin abortion_N = mkN "abortion" "abortions";
lin abortionist_N = mkN "abortionist" "abortionists";
lin abortive_A = compoundA (mkA "abortive");
lin abound_V = mkV "abound" "abounds" "abounded" "abounded" "abounding";
lin about_AdN = mkAdN "about";
lin about_Adv = mkAdv "about";
lin about_Prep = mkPrep "about";
lin about_face_N = mkN "about - face" "about - faces";
lin about_face_V = mkV "about - face" "about - faces" "about - faced" "about - faced" "about - facing";
lin above_Adv = mkAdv "above";
lin above_Prep = mkPrep "above";
lin above_board_A = compoundA (mkA "above board");
lin above_board_Adv = mkAdv "above board";
lin above_mentioned_A = compoundA (mkA "above - mentioned");
lin above_named_A = compoundA (mkA "above - named");
lin abracadabra_N = mkN "abracadabra" ;
lin abrade_V2 = mkV2 (mkV "abrade" "abrades" "abraded" "abraded" "abrading");
lin abraham_PN = mkPN "Abraham";
lin abrasion_N = mkN "abrasion" "abrasions";
lin abrasive_A = compoundA (mkA "abrasive");
lin abrasive_N = mkN "abrasive" "abrasives";
lin abreast_Adv = mkAdv "abreast";
lin abridge_V2 = mkV2 (mkV "abridge" "abridges" "abridged" "abridged" "abridging");
lin abridgement_N = mkN "abridgement" "abridgements";
lin abridgment_N = mkN "abridgment" "abridgments";
lin abroad_Adv = mkAdv "abroad";
lin abrogate_V2 = mkV2 (mkV "abrogate" "abrogates" "abrogated" "abrogated" "abrogating");
lin abrogation_N = mkN "abrogation" "abrogations";
lin abrupt_A = compoundA (mkA "abrupt");
lin abruptness_N = mkN "abruptness" ;
lin abscess_N = mkN "abscess" "abscesses";
lin abscond_V = mkV "abscond" "absconds" "absconded" "absconded" "absconding";
lin absence_N = mkN "absence" "absences";
lin absent_A = compoundA (mkA "absent");
lin absent_V2 = mkV2 (mkV "absent" "absents" "absented" "absented" "absenting");
lin absent_minded_A = compoundA (mkA "absent - minded");
lin absent_mindedness_N = mkN "absent - mindedness" ;
lin absentee_N = mkN "absentee" "absentees";
lin absenteeism_N = mkN "absenteeism" ;
lin absinth_N = mkN "absinth" ;
lin absinthe_N = mkN "absinthe" ;
lin absolute_A = compoundA (mkA "absolute");
lin absolution_N = mkN "absolution" ;
lin absolutism_N = mkN "absolutism" ;
lin absolve_V2 = mkV2 (mkV "absolve" "absolves" "absolved" "absolved" "absolving");
lin absorb_V2 = mkV2 (mkV "absorb" "absorbs" "absorbed" "absorbed" "absorbing");
lin absorbent_A = compoundA (mkA "absorbent");
lin absorbent_N = mkN "absorbent" "absorbents";
lin absorption_N = mkN "absorption" ;
lin abstain_V = mkV "abstain" "abstains" "abstained" "abstained" "abstaining";
lin abstainer_N = mkN "abstainer" "abstainers";
lin abstemious_A = compoundA (mkA "abstemious");
lin abstemiousness_N = mkN "abstemiousness" ;
lin abstention_N = mkN "abstention" "abstentions";
lin abstinence_N = mkN "abstinence" ;
lin abstract_A = compoundA (mkA "abstract");
lin abstract_N = mkN "abstract" "abstracts";
lin abstract_V2 = mkV2 (mkV "abstract" "abstracts" "abstracted" "abstracted" "abstracting");
lin abstracted_A = compoundA (mkA "abstracted");
lin abstraction_N = mkN "abstraction" "abstractions";
lin abstruse_A = compoundA (mkA "abstruse");
lin abstruseness_N = mkN "abstruseness" ;
lin absurd_A = compoundA (mkA "absurd");
lin absurdity_N = mkN "absurdity" "absurdities";
lin abundance_N = mkN "abundance" ;
lin abundant_A = compoundA (mkA "abundant");
lin abuse_N = mkN "abuse" "abuses";
lin abuse_V2 = mkV2 (mkV "abuse" "abuses" "abused" "abused" "abusing");
lin abusive_A = compoundA (mkA "abusive");
lin abut_V = mkV "abut" "abuts" "abutted" "abutted" "abutting";
lin abutment_N = mkN "abutment" "abutments";
lin abysm_N = mkN "abysm" "abysms";
lin abysmal_A = compoundA (mkA "abysmal");
lin abyss_N = mkN "abyss" "abysses";
lin acacia_N = mkN "acacia" "acacias";
lin academic_A = compoundA (mkA "academic");
lin academic_N = mkN "academic" "academics";
lin academically_Adv = mkAdv "academically";
lin academician_N = mkN "academician" "academicians";
lin academy_N = mkN "academy" "academies";
lin accede_V = mkV "accede" "accedes" "acceded" "acceded" "acceding";
lin accelerando_A = compoundA (mkA "accelerando");
lin accelerando_Adv = mkAdv "accelerando";
lin accelerando_N = mkN "accelerando" "accelerandos";
lin accelerate_V = mkV "accelerate" "accelerates" "accelerated" "accelerated" "accelerating";
lin accelerate_V2 = mkV2 (mkV "accelerate" "accelerates" "accelerated" "accelerated" "accelerating");
lin acceleration_N = mkN "acceleration" ;
lin accelerator_N = mkN "accelerator" "accelerators";
lin accent_N = mkN "accent" "accents";
lin accent_V2 = mkV2 (mkV "accent" "accents" "accented" "accented" "accenting");
lin accentuate_V2 = mkV2 (mkV "accentuate" "accentuates" "accentuated" "accentuated" "accentuating");
lin accentuation_N = mkN "accentuation" "accentuations";
lin accept_V = mkV "accept" "accepts" "accepted" "accepted" "accepting";
lin accept_V2 = mkV2 (mkV "accept" "accepts" "accepted" "accepted" "accepting");
lin accept_VS = mkVS (mkV "accept" "accepts" "accepted" "accepted" "accepting");
lin acceptability_N = mkN "acceptability" ;
lin acceptable_A = compoundA (mkA "acceptable");
lin acceptance_N = mkN "acceptance" ;
lin acceptation_N = mkN "acceptation" "acceptations";
lin access_N = mkN "access" ;
lin access_V2 = mkV2 (mkV "access");
lin accessary_N = mkN "accessary" "accessaries";
lin accessibility_N = mkN "accessibility" ;
lin accessible_A = compoundA (mkA "accessible");
lin accession_N = mkN "accession" "accessions";
lin accessory_N = mkN "accessory" "accessories";
lin accidence_N = mkN "accidence" ;
lin accident_N = mkN "accident" "accidents";
lin accident_prone_A = compoundA (mkA "accident - prone");
lin accidental_A = compoundA (mkA "accidental");
lin acclaim_N = mkN "acclaim" ;
lin acclaim_V2 = mkV2 (mkV "acclaim" "acclaims" "acclaimed" "acclaimed" "acclaiming");
lin acclamation_N = mkN "acclamation" ;
lin acclimate_V = mkV "acclimate" "acclimates" "acclimated" "acclimated" "acclimating";
lin acclimate_V2 = mkV2 (mkV "acclimate" "acclimates" "acclimated" "acclimated" "acclimating");
lin acclimation_N = mkN "acclimation" ;
lin acclimatization_N = mkN "acclimatization" ;
lin acclimatize_V = mkV "acclimatize" "acclimatizes" "acclimatized" "acclimatized" "acclimatizing";
lin acclimatize_V2 = mkV2 (mkV "acclimatize" "acclimatizes" "acclimatized" "acclimatized" "acclimatizing");
lin acclivity_N = mkN "acclivity" "acclivities";
lin accolade_N = mkN "accolade" "accolades";
lin accommodate_V = mkV "accommodate";
lin accommodate_V2 = mkV2 (mkV "accommodate" "accommodates" "accommodated" "accommodated" "accommodating");
lin accommodating_A = compoundA (mkA "accommodating");
lin accommodation_N = mkN "accommodation" "accommodations";
lin accompaniment_N = mkN "accompaniment" "accompaniments";
lin accompanist_N = mkN "accompanist" "accompanists";
lin accompany_V2 = mkV2 (mkV "accompany" "accompanies" "accompanied" "accompanied" "accompanying");
lin accomplice_N = mkN "accomplice" "accomplices";
lin accomplish_V2 = mkV2 (mkV "accomplish" "accomplishes" "accomplished" "accomplished" "accomplishing");
lin accomplished_A = compoundA (mkA "accomplished");
lin accomplishment_N = mkN "accomplishment" "accomplishments";
lin accord_N = mkN "accord" "accords";
lin accord_V = mkV "accord" "accords" "accorded" "accorded" "according";
lin accord_V2 = mkV2 (mkV "accord" "accords" "accorded" "accorded" "according");
lin accordance_N = mkN "accordance" "accordances";
lin accordingly_Adv = mkAdv "accordingly";
lin accordion_N = mkN "accordion" "accordions";
lin accost_V2 = mkV2 (mkV "accost" "accosts" "accosted" "accosted" "accosting");
lin accouchement_N = mkN "accouchement" "accouchements";
lin account_N = mkN "account" "accounts";
lin account_V = mkV "account" "accounts" "accounted" "accounted" "accounting";
lin account_V2 = mkV2 (mkV "account" "accounts" "accounted" "accounted" "accounting");
lin accountable_A = compoundA (mkA "accountable");
lin accountancy_N = mkN "accountancy" ;
lin accountant_N = mkN "accountant" "accountants";
lin accra_PN = mkPN "Accra";
lin accredit_V2 = mkV2 (mkV "accredit" "accredits" "accredited" "accredited" "accrediting");
lin accredited_A = compoundA (mkA "accredited");
lin accretion_N = mkN "accretion" "accretions";
lin accrington_PN = mkPN "Accrington";
lin accrue_V = mkV "accrue" "accrues" "accrued" "accrued" "accruing";
lin accrue_V2 = mkV2 (mkV "accrue" "accrues" "accrued" "accrued" "accruing");
lin accumulate_V = mkV "accumulate" "accumulates" "accumulated" "accumulated" "accumulating";
lin accumulate_V2 = mkV2 (mkV "accumulate" "accumulates" "accumulated" "accumulated" "accumulating");
lin accumulation_N = mkN "accumulation" "accumulations";
lin accumulative_A = compoundA (mkA "accumulative");
lin accumulator_N = mkN "accumulator" "accumulators";
lin accuracy_N = mkN "accuracy" "accuracies";
lin accurate_A = compoundA (mkA "accurate");
lin accursed_A = compoundA (mkA "accursed");
lin accurst_A = compoundA (mkA "accurst");
lin accusation_N = mkN "accusation" "accusations";
lin accusative_A = compoundA (mkA "accusative");
lin accusative_N = mkN "accusative" "accusatives";
lin accuse_V2 = mkV2 (mkV "accuse" "accuses" "accused" "accused" "accusing");
lin accuser_N = mkN "accuser" "accusers";
lin accusingly_Adv = mkAdv "accusingly";
lin accustom_V2 = mkV2 (mkV "accustom" "accustoms" "accustomed" "accustomed" "accustoming");
lin accustomed_A = compoundA (mkA "accustomed");
lin ace_N = mkN "ace" "aces";
lin acerbity_N = mkN "acerbity" "acerbities";
lin acetate_N = mkN "acetate" "acetates";
lin acetic_A = compoundA (mkA "acetic");
lin acetylene_N = mkN "acetylene" ;
lin ache_N = mkN "ache" "aches";
lin ache_V = mkV "ache" "aches" "ached" "ached" "aching";
lin achievable_A = compoundA (mkA "achievable");
lin achieve_V2 = mkV2 (mkV "achieve" "achieves" "achieved" "achieved" "achieving");
lin achievement_N = mkN "achievement" "achievements";
lin achilles_PN = mkPN "Achilles";
lin acid_A = compoundA (mkA "acid");
lin acid_N = mkN "acid" "acids";
lin acidic_A = compoundA (mkA "acidic");
lin acidify_V = mkV "acidify" "acidifies" "acidified" "acidified" "acidifying";
lin acidify_V2 = mkV2 (mkV "acidify" "acidifies" "acidified" "acidified" "acidifying");
lin acidity_N = mkN "acidity" ;
lin acidulated_A = compoundA (mkA "acidulated");
lin acidulous_A = compoundA (mkA "acidulous");
lin ack_ack_N = mkN "ack - ack" ;
lin acknowledge_V = mkV "acknowledge";
lin acknowledge_V2 = mkV2 (mkV "acknowledge" "acknowledges" "acknowledged" "acknowledged" "acknowledging");
lin acknowledge_VS = mkVS (mkV "acknowledge");
lin acknowledgement_N = mkN "acknowledgement" "acknowledgements";
lin acme_N = mkN "acme" "IRREG";
lin acne_N = mkN "acne" ;
lin acolyte_N = mkN "acolyte" "acolytes";
lin aconite_N = mkN "aconite" "aconites";
lin acorn_N = mkN "acorn" "acorns";
lin acorn_cup_N = mkN "acorn - cup" "acorn - cups";
lin acoustic_A = compoundA (mkA "acoustic");
lin acoustic_N = mkN "acoustic" "acoustics";
lin acoustics_N = mkN "acoustics" "acoustics";
lin acquaint_V2 = mkV2 (mkV "acquaint" "acquaints" "acquainted" "acquainted" "acquainting");
lin acquaintance_N = mkN "acquaintance" "acquaintances";
lin acquaintanceship_N = mkN "acquaintanceship" "acquaintanceships";
lin acquiesce_V = mkV "acquiesce" "acquiesces" "acquiesced" "acquiesced" "acquiescing";
lin acquiescence_N = mkN "acquiescence" "acquiescences";
lin acquiescent_A = compoundA (mkA "acquiescent");
lin acquire_V2 = mkV2 (mkV "acquire" "acquires" "acquired" "acquired" "acquiring");
lin acquirement_N = mkN "acquirement" "acquirements";
lin acquisition_N = mkN "acquisition" "acquisitions";
lin acquisitive_A = compoundA (mkA "acquisitive");
lin acquit_V2 = mkV2 (mkV "acquit" "acquits" "acquitted" "acquitted" "acquitting");
lin acquittal_N = mkN "acquittal" "acquittals";
lin acre_N = mkN "acre" "acres";
lin acreage_N = mkN "acreage" ;
lin acrid_A = compoundA (mkA "acrid");
lin acrimonious_A = compoundA (mkA "acrimonious");
lin acrimony_N = mkN "acrimony" ;
lin acrobat_N = mkN "acrobat" "acrobats";
lin acrobatic_A = compoundA (mkA "acrobatic");
lin acrobatics_N = mkN "acrobatics" "acrobatics";
lin acronym_N = mkN "acronym" "acronyms";
lin acropolis_N = mkN "acropolis" "acropolises";
lin across_Adv = mkAdv "across";
lin across_Prep = mkPrep "across";
lin acrostic_N = mkN "acrostic" "acrostics";
lin acrylic_N = mkN "acrylic" "acrylics";
lin act_N = mkN "act" "acts";
lin act_V = mkV "act" "acts" "acted" "acted" "acting";
lin act_V2 = mkV2 (mkV "act" "acts" "acted" "acted" "acting");
lin act_V2V = mkV2V (mkV "act" "acts" "acted" "acted" "acting") noPrep to_Prep ;
lin act_VA = mkVA (mkV "act" "acts" "acted" "acted" "acting");
lin acting_A = compoundA (mkA "acting");
lin acting_N = mkN "acting" ;
lin actinic_A = compoundA (mkA "actinic");
lin actinism_N = mkN "actinism" ;
lin action_N = mkN "action" "actions";
lin actionable_A = compoundA (mkA "actionable");
lin activate_V2 = mkV2 (mkV "activate" "activates" "activated" "activated" "activating");
lin activation_N = mkN "activation" "activations";
lin active_A = compoundA (mkA "active");
lin activist_N = mkN "activist" "activists";
lin activity_N = mkN "activity" "activities";
lin actor_N = mkN "actor" "actors";
lin actress_N = mkN "actress" "actresses";
lin actual_A = compoundA (mkA "actual");
lin actuality_N = mkN "actuality" "actualities";
lin actuarial_A = compoundA (mkA "actuarial");
lin actuary_N = mkN "actuary" "actuaries";
lin actuate_V2 = mkV2 (mkV "actuate" "actuates" "actuated" "actuated" "actuating");
lin acuity_N = mkN "acuity" ;
lin acumen_N = mkN "acumen" ;
lin acupuncture_N = mkN "acupuncture" ;
lin acute_A = compoundA (mkA "acute");
lin acuteness_N = mkN "acuteness" ;
lin ad_N = mkN "ad" "ads";
lin ad_PN = mkPN "Ad";
lin ad_hoc_A = compoundA (mkA "ad hoc");
lin ad_hoc_Adv = mkAdv "ad hoc";
lin ad_infinitum_Adv = mkAdv "ad infinitum";
lin ad_interim_Adv = mkAdv "ad interim";
lin ad_lib_A = compoundA (mkA "ad - lib");
lin ad_lib_Adv = mkAdv "ad lib";
lin ad_lib_V = mkV "ad - lib" "ad - libs" "ad - libbed" "ad - libbed" "ad - libbing";
lin ad_libitum_Adv = mkAdv "ad libitum";
lin ad_man_N = mkN "ad - man" "ad - men";
lin ad_nauseam_Adv = mkAdv "ad nauseam";
lin ad_valorem_Adv = mkAdv "ad valorem";
lin ada_PN = mkPN "Ada";
lin adage_N = mkN "adage" "adages";
lin adagio_A = compoundA (mkA "adagio");
lin adagio_Adv = mkAdv "adagio";
lin adagio_N = mkN "adagio" "adagios";
lin adam_PN = mkPN "Adam";
lin adamant_A = compoundA (mkA "adamant");
lin adamant_N = mkN "adamant" "adamants";
lin adamantine_A = compoundA (mkA "adamantine");
lin adapt_V = mkV "adapt";
lin adapt_V2 = mkV2 (mkV "adapt" "adapts" "adapted" "adapted" "adapting");
lin adaptability_N = mkN "adaptability" ;
lin adaptable_A = compoundA (mkA "adaptable");
lin adaptation_N = mkN "adaptation" "adaptations";
lin adapter_N = mkN "adapter" "adapters";
lin adaptor_N = mkN "adaptor" "adaptors";
lin add_V = mkV "add";
lin add_V2 = mkV2 (mkV "add");
lin add_VS = mkVS (mkV "add");
lin addendum_N = mkN "addendum" "addenda" {- FIXME: guessed plural form -};
lin adder_N = mkN "adder" "adders";
lin addict_N = mkN "addict" "addicts";
lin addict_V2 = mkV2 (mkV "addict" "addicts" "addicted" "addicted" "addicting");
lin addiction_N = mkN "addiction" "addictions";
lin addictive_A = compoundA (mkA "addictive");
lin adding_machine_N = mkN "adding - machine" "adding - machines";
lin addis_ababa_PN = mkPN "Addis Ababa";
lin addition_N = mkN "addition" "additions";
lin additional_A = compoundA (mkA "additional");
lin additive_N = mkN "additive" "additives";
lin addle_A = compoundA (mkA "addle");
lin addle_V = mkV "addle" "addles" "addled" "addled" "addling";
lin addle_V2 = mkV2 (mkV "addle" "addles" "addled" "addled" "addling");
lin addle_brained_A = compoundA (mkA "addle - brained");
lin addle_head_N = mkN "addle - head" "addle - heads";
lin addle_pated_A = compoundA (mkA "addle - pated");
lin address_N = mkN "address" "addresses";
lin address_V2 = mkV2 (mkV "address" "addresses" "addressed" "addressed" "addressing");
lin addressee_N = mkN "addressee" "addressees";
lin addressograph_N = mkN "addressograph" "addressographs";
lin adduce_V2 = mkV2 (mkV "adduce" "adduces" "adduced" "adduced" "adducing");
lin adelaide_PN = mkPN "Adelaide";
lin adenoidal_A = compoundA (mkA "adenoidal");
lin adept_A = compoundA (mkA "adept");
lin adept_N = mkN "adept" "adepts";
lin adequacy_N = mkN "adequacy" ;
lin adequate_A = compoundA (mkA "adequate");
lin adhere_V = mkV "adhere" "adheres" "adhered" "adhered" "adhering";
lin adherence_N = mkN "adherence" "adherences";
lin adherent_N = mkN "adherent" "adherents";
lin adhesion_N = mkN "adhesion" "adhesions";
lin adhesive_A = compoundA (mkA "adhesive");
lin adhesive_N = mkN "adhesive" "adhesives";
lin adieu_N = mkN "adieu" "adieus";
lin adipose_A = compoundA (mkA "adipose");
lin adjacent_A = compoundA (mkA "adjacent");
lin adjectival_A = compoundA (mkA "adjectival");
lin adjective_N = mkN "adjective" "adjectives";
lin adjoin_V = mkV "adjoin" "adjoins" "adjoined" "adjoined" "adjoining";
lin adjoin_V2 = mkV2 (mkV "adjoin" "adjoins" "adjoined" "adjoined" "adjoining");
lin adjoining_A = compoundA (mkA "adjoining");
lin adjourn_V = mkV "adjourn" "adjourns" "adjourned" "adjourned" "adjourning";
lin adjourn_V2 = mkV2 (mkV "adjourn" "adjourns" "adjourned" "adjourned" "adjourning");
lin adjournment_N = mkN "adjournment" "adjournments";
lin adjudge_V2 = mkV2 (mkV "adjudge" "adjudges" "adjudged" "adjudged" "adjudging");
lin adjudicate_V = mkV "adjudicate" "adjudicates" "adjudicated" "adjudicated" "adjudicating";
lin adjudicate_V2 = mkV2 (mkV "adjudicate" "adjudicates" "adjudicated" "adjudicated" "adjudicating");
lin adjudication_N = mkN "adjudication" "adjudications";
lin adjudicator_N = mkN "adjudicator" "adjudicators";
lin adjunct_N = mkN "adjunct" "adjuncts";
lin adjuration_N = mkN "adjuration" "adjurations";
lin adjure_V2 = mkV2 (mkV "adjure" "adjures" "adjured" "adjured" "adjuring");
lin adjust_V = mkV "adjust";
lin adjust_V2 = mkV2 (mkV "adjust" "adjusts" "adjusted" "adjusted" "adjusting");
lin adjust_V2V = mkV2V (mkV "adjust") noPrep to_Prep ;
lin adjustable_A = compoundA (mkA "adjustable");
lin adjuster_N = mkN "adjuster" "adjusters";
lin adjustment_N = mkN "adjustment" "adjustments";
lin adjutant_N = mkN "adjutant" "adjutants";
lin admass_N = mkN "admass" ;
lin administer_V = mkV "administer" "administers" "administered" "administered" "administering";
lin administer_V2 = mkV2 (mkV "administer" "administers" "administered" "administered" "administering");
lin administration_N = mkN "administration" "administrations";
lin administrative_A = compoundA (mkA "administrative");
lin administrator_N = mkN "administrator" "administrators";
lin admirable_A = compoundA (mkA "admirable");
lin admiral_N = mkN "admiral" "admirals";
lin admiralty_N = mkN "admiralty" "admiralties";
lin admiration_N = mkN "admiration" ;
lin admire_V2 = mkV2 (mkV "admire" "admires" "admired" "admired" "admiring");
lin admirer_N = mkN "admirer" "admirers";
lin admiring_A = compoundA (mkA "admiring");
lin admissibility_N = mkN "admissibility" ;
lin admissible_A = compoundA (mkA "admissible");
lin admission_N = mkN "admission" "admissions";
lin admit_V = mkV "admit" "admits" "admitted" "admitted" "admitting";
lin admit_V2 = mkV2 (mkV "admit" "admits" "admitted" "admitted" "admitting");
lin admit_VS = mkVS (mkV "admit" "admits" "admitted" "admitted" "admitting");
lin admittance_N = mkN "admittance" ;
lin admittedly_Adv = mkAdv "admittedly";
lin admix_V = mkV "admix" "admixes" "admixed" "admixed" "admixing";
lin admix_V2 = mkV2 (mkV "admix" "admixes" "admixed" "admixed" "admixing");
lin admixture_N = mkN "admixture" "admixtures";
lin admonish_V2 = mkV2 (mkV "admonish" "admonishes" "admonished" "admonished" "admonishing");
lin admonition_N = mkN "admonition" "admonitions";
lin admonitory_A = compoundA (mkA "admonitory");
lin ado_N = mkN "ado" ;
lin adobe_N = mkN "adobe" ;
lin adolescence_N = mkN "adolescence" ;
lin adolescent_A = compoundA (mkA "adolescent");
lin adolescent_N = mkN "adolescent" "adolescents";
lin adopt_V2 = mkV2 (mkV "adopt" "adopts" "adopted" "adopted" "adopting");
lin adoption_N = mkN "adoption" "adoptions";
lin adoptive_A = compoundA (mkA "adoptive");
lin adorable_A = compoundA (mkA "adorable");
lin adoration_N = mkN "adoration" ;
lin adore_V2 = mkV2 (mkV "adore" "adores" "adored" "adored" "adoring");
lin adorer_N = mkN "adorer" "adorers";
lin adoring_A = compoundA (mkA "adoring");
lin adorn_V2 = mkV2 (mkV "adorn" "adorns" "adorned" "adorned" "adorning");
lin adornment_N = mkN "adornment" "adornments";
lin adrenal_A = compoundA (mkA "adrenal");
lin adrenalin_N = mkN "adrenalin" ;
lin adrian_PN = mkPN "Adrian";
lin adrift_A = compoundA (mkA "adrift");
lin adrift_Adv = mkAdv "adrift";
lin adroit_A = compoundA (mkA "adroit");
lin adroitness_N = mkN "adroitness" ;
lin adulation_N = mkN "adulation" ;
lin adult_A = compoundA (mkA "adult");
lin adult_N = mkN "adult" "adults";
lin adulterant_N = mkN "adulterant" "adulterants";
lin adulterate_V2 = mkV2 (mkV "adulterate" "adulterates" "adulterated" "adulterated" "adulterating");
lin adulteration_N = mkN "adulteration" "adulterations";
lin adulterer_N = mkN "adulterer" "adulterers";
lin adulteress_N = mkN "adulteress" "adulteresses";
lin adulterous_A = compoundA (mkA "adulterous");
lin adultery_N = mkN "adultery" "adulteries";
lin adulthood_N = mkN "adulthood" "adulthoods";
lin adumbrate_V2 = mkV2 (mkV "adumbrate" "adumbrates" "adumbrated" "adumbrated" "adumbrating");
lin advance_N = mkN "advance" "advances";
lin advance_V = mkV "advance" "advances" "advanced" "advanced" "advancing";
lin advance_V2 = mkV2 (mkV "advance" "advances" "advanced" "advanced" "advancing");
lin advanced_A = compoundA (mkA "advanced");
lin advancement_N = mkN "advancement" ;
lin advantage_N = mkN "advantage" "advantages";
lin advantage_V2 = mkV2 (mkV "advantage" "advantages" "advantaged" "advantaged" "advantaging");
lin advantageous_A = compoundA (mkA "advantageous");
lin advent_N = mkN "advent" "advents";
lin adventist_N = mkN "adventist" "adventists";
lin adventitious_A = compoundA (mkA "adventitious");
lin adventure_N = mkN "adventure" "adventures";
lin adventure_V2 = mkV2 (mkV "adventure" "adventures" "adventured" "adventured" "adventuring");
lin adventurer_N = mkN "adventurer" "adventurers";
lin adventuresome_A = compoundA (mkA "adventuresome");
lin adventuress_N = mkN "adventuress" "adventuresses";
lin adventurous_A = compoundA (mkA "adventurous");
lin adverb_N = mkN "adverb" "adverbs";
lin adverbial_A = compoundA (mkA "adverbial");
lin adversary_N = mkN "adversary" "adversaries";
lin adverse_A = compoundA (mkA "adverse");
lin adversity_N = mkN "adversity" "adversities";
lin advert_N = mkN "advert" "adverts";
lin advert_V = mkV "advert" "adverts" "adverted" "adverted" "adverting";
lin advertise_V = mkV "advertise" "advertises" "advertised" "advertised" "advertising";
lin advertise_V2 = mkV2 (mkV "advertise" "advertises" "advertised" "advertised" "advertising");
lin advertisement_N = mkN "advertisement" "advertisements";
lin advertiser_N = mkN "advertiser" "advertisers";
lin advice_N = mkN "advice" "advices";
lin advisability_N = mkN "advisability" ;
lin advisable_A = compoundA (mkA "advisable");
lin advise_V = mkV "advise" "advises" "advised" "advised" "advising";
lin advise_V2 = mkV2 (mkV "advise" "advises" "advised" "advised" "advising");
lin advise_VS = mkVS (mkV "advise" "advises" "advised" "advised" "advising");
lin advised_A = compoundA (mkA "advised");
lin adviser_N = mkN "adviser" "advisers";
lin advisory_A = compoundA (mkA "advisory");
lin advocacy_N = mkN "advocacy" ;
lin advocate_N = mkN "advocate" "advocates";
lin advocate_V2 = mkV2 (mkV "advocate" "advocates" "advocated" "advocated" "advocating");
lin advocate_VS = mkVS (mkV "advocate");
lin advowson_N = mkN "advowson" "advowsons";
lin adz_N = mkN "adz" "adzes";
lin adze_N = mkN "adze" "adzes";
lin aegis_N = mkN "aegis" "aegises";
lin aeon_N = mkN "aeon" "aeons";
lin aerate_V2 = mkV2 (mkV "aerate" "aerates" "aerated" "aerated" "aerating");
lin aeration_N = mkN "aeration" "aerations";
lin aerial_A = compoundA (mkA "aerial");
lin aerial_N = mkN "aerial" "aerials";
lin aerie_N = mkN "aerie" "aeries";
lin aerobatics_N = mkN "aerobatics" "aerobatics";
lin aerodrome_N = mkN "aerodrome" "aerodromes";
lin aerodynamic_A = compoundA (mkA "aerodynamic");
lin aerodynamics_N = mkN "aerodynamics" "aerodynamics";
lin aeronaut_N = mkN "aeronaut" "aeronauts";
lin aeronautics_N = mkN "aeronautics" "aeronautics";
lin aeroplane_N = mkN "aeroplane" "aeroplanes";
lin aerosol_N = mkN "aerosol" "aerosols";
lin aerospace_N = mkN "aerospace" ;
lin aertex_N = mkN "aertex" ;
lin aery_N = mkN "aery" "aeries";
lin aesthete_N = mkN "aesthete" "aesthetes";
lin aesthetic_A = compoundA (mkA "aesthetic");
lin aesthetic_N = mkN "aesthetic" ;
lin aesthetical_A = compoundA (mkA "aesthetical");
lin aesthetics_N = mkN "aesthetics" "aesthetics";
lin aether_N = mkN "aether" ;
lin aetiology_N = mkN "aetiology" "aetiologies";
lin afar_Adv = mkAdv "afar";
lin affability_N = mkN "affability" ;
lin affable_A = compoundA (mkA "affable");
lin affair_N = mkN "affair" "affairs";
lin affect_V2 = mkV2 (mkV "affect" "affects" "affected" "affected" "affecting");
lin affectation_N = mkN "affectation" "affectations";
lin affected_A = compoundA (mkA "affected");
lin affecting_A = compoundA (mkA "affecting");
lin affection_N = mkN "affection" "affections";
lin affectionate_A = compoundA (mkA "affectionate");
lin affiance_V2 = mkV2 (mkV "affiance" "affiances" "affianced" "affianced" "affiancing");
lin affidavit_N = mkN "affidavit" "affidavits";
lin affiliate_V = mkV "affiliate" "affiliates" "affiliated" "affiliated" "affiliating";
lin affiliate_V2 = mkV2 (mkV "affiliate" "affiliates" "affiliated" "affiliated" "affiliating");
lin affiliation_N = mkN "affiliation" "affiliations";
lin affinity_N = mkN "affinity" "affinities";
lin affirm_V = mkV "affirm" "affirms" "affirmed" "affirmed" "affirming";
lin affirm_V2 = mkV2 (mkV "affirm" "affirms" "affirmed" "affirmed" "affirming");
lin affirm_VS = mkVS (mkV "affirm" "affirms" "affirmed" "affirmed" "affirming");
lin affirmation_N = mkN "affirmation" "affirmations";
lin affirmative_A = compoundA (mkA "affirmative");
lin affirmative_N = mkN "affirmative" "affirmatives";
lin affix_N = mkN "affix" "affixes";
lin affix_V2 = mkV2 (mkV "affix" "affixes" "affixed" "affixed" "affixing");
lin afflatus_N = mkN "afflatus" ;
lin afflict_V2 = mkV2 (mkV "afflict" "afflicts" "afflicted" "afflicted" "afflicting");
lin affliction_N = mkN "affliction" "afflictions";
lin affluence_N = mkN "affluence" ;
lin affluent_A = compoundA (mkA "affluent");
lin affluent_N = mkN "affluent" "affluents";
lin afford_V2 = mkV2 (mkV "afford" "affords" "afforded" "afforded" "affording");
lin afford_V2V = mkV2V (mkV "afford") noPrep to_Prep ;
lin afforest_V2 = mkV2 (mkV "afforest" "afforests" "afforested" "afforested" "afforesting");
lin afforestation_N = mkN "afforestation" "afforestations";
lin affranchise_V2 = mkV2 (mkV "affranchise" "affranchises" "affranchised" "affranchised" "affranchising");
lin affray_N = mkN "affray" "affrays";
lin affront_N = mkN "affront" "affronts";
lin affront_V2 = mkV2 (mkV "affront" "affronts" "affronted" "affronted" "affronting");
lin afghan_A = compoundA (mkA "afghan");
lin afghan_N = mkN "afghan" "afghans";
lin afghanistan_PN = mkPN "Afghanistan";
lin afghanistani_A = compoundA (mkA "afghanistani");
lin afghanistani_N = mkN "afghanistani" "afghanistanis";
lin afield_Adv = mkAdv "afield";
lin afire_A = compoundA (mkA "afire");
lin aflame_A = compoundA (mkA "aflame");
lin afloat_A = compoundA (mkA "afloat");
lin afoot_A = compoundA (mkA "afoot");
lin afore_Adv = mkAdv "afore";
lin afore_Prep = mkPrep "afore";
lin aforesaid_A = compoundA (mkA "aforesaid");
lin aforethought_Adv = mkAdv "aforethought";
lin afoul_Adv = mkAdv "afoul";
lin afraid_A = compoundA (mkA "afraid");
lin afresh_Adv = mkAdv "afresh";
lin africa_PN = mkPN "Africa";
lin african_A = compoundA (mkA "African");
lin african_N = mkN "African" "Africans";
lin afrikaans_N = mkN "Afrikaans" ;
lin afrikaner_A = compoundA (mkA "Afrikaner");
lin afrikaner_N = mkN "Afrikaner" "Afrikaners";
lin afro_american_N = mkN "Afro - American" "Afro - Americans";
lin afro_asian_A = compoundA (mkA "Afro - Asian");
lin afro_wig_N = mkN "afro - wig" "afro - wigs";
lin aft_Adv = mkAdv "aft";
lin after_A = compoundA (mkA "after");
lin after_Adv = mkAdv "after";
lin after_Prep = mkPrep "after";
lin aftercare_N = mkN "aftercare" ;
lin afterdamp_N = mkN "afterdamp" ;
lin aftereffect_N = mkN "aftereffect" "aftereffects";
lin afterglow_N = mkN "afterglow";
lin aftermath_N = mkN "aftermath";
lin afternoon_N = mkN "afternoon" "afternoons";
lin afterthought_N = mkN "afterthought" "afterthoughts";
lin afterwards_Adv = mkAdv "afterwards";
lin again_Adv = mkAdv "again";
lin against_Prep = mkPrep "against";
lin agape_A = compoundA (mkA "agape");
lin agar_agar_N = mkN "agar - agar" ;
lin agate_N = mkN "agate" "agates";
lin agatha_PN = mkPN "Agatha";
lin agave_N = mkN "agave" "agaves";
lin age_N = mkN "age" "ages";
lin age_V = mkV "age" "ages" "aged" "aged" "aging";
lin age_V2 = mkV2 (mkV "age" "ages" "aged" "aged" "aging");
lin age_bracket_N = mkN "age - bracket" "age - brackets";
lin age_group_N = mkN "age - group" "age - groups";
lin age_long_A = compoundA (mkA "age - long");
lin age_old_A = compoundA (mkA "age - old");
lin aged_A = compoundA (mkA "aged");
lin ageing_N = mkN "ageing" ;
lin ageless_A = compoundA (mkA "ageless");
lin agency_N = mkN "agency" "agencies";
lin agenda_N = mkN "agenda" "agendas";
lin agent_N = mkN "agent" "agents";
lin agent_provocateur_N = mkN "agent provocateur" "IRREG";
lin aggie_PN = mkPN "Aggie";
lin agglomerate_A = compoundA (mkA "agglomerate");
lin agglomerate_V = mkV "agglomerate" "agglomerates" "agglomerated" "agglomerated" "agglomerating";
lin agglomerate_V2 = mkV2 (mkV "agglomerate" "agglomerates" "agglomerated" "agglomerated" "agglomerating");
lin agglomeration_N = mkN "agglomeration" "agglomerations";
lin agglutinate_V2 = mkV2 (mkV "agglutinate" "agglutinates" "agglutinated" "agglutinated" "agglutinating");
lin agglutinative_A = compoundA (mkA "agglutinative");
lin aggrandize_V2 = mkV2 (mkV "aggrandize" "aggrandizes" "aggrandized" "aggrandized" "aggrandizing");
lin aggrandizement_N = mkN "aggrandizement" "aggrandizements";
lin aggravate_V2 = mkV2 (mkV "aggravate" "aggravates" "aggravated" "aggravated" "aggravating");
lin aggravation_N = mkN "aggravation" "aggravations";
lin aggregate_N = mkN "aggregate" "aggregates";
lin aggregate_V = mkV "aggregate" "aggregates" "aggregated" "aggregated" "aggregating";
lin aggregate_V2 = mkV2 (mkV "aggregate" "aggregates" "aggregated" "aggregated" "aggregating");
lin aggregation_N = mkN "aggregation" "aggregations";
lin aggression_N = mkN "aggression" "aggressions";
lin aggressive_A = compoundA (mkA "aggressive");
lin aggressiveness_N = mkN "aggressiveness" ;
lin aggressor_N = mkN "aggressor" "aggressors";
lin aggrieve_V2 = mkV2 (mkV "aggrieve" "aggrieves" "aggrieved" "aggrieved" "aggrieving");
lin aggro_N = mkN "aggro" ;
lin aghast_A = compoundA (mkA "aghast");
lin agile_A = compoundA (mkA "agile");
lin agility_N = mkN "agility" ;
lin agin_Prep = mkPrep "agin";
lin aging_N = mkN "aging" ;
lin agitate_V = mkV "agitate" "agitates" "agitated" "agitated" "agitating";
lin agitate_V2 = mkV2 (mkV "agitate" "agitates" "agitated" "agitated" "agitating");
lin agitated_A = compoundA (mkA "agitated");
lin agitating_A = compoundA (mkA "agitating");
lin agitation_N = mkN "agitation" "agitations";
lin agitator_N = mkN "agitator" "agitators";
lin aglow_A = compoundA (mkA "aglow");
lin agm_N = mkN "agm" ;
lin agnail_N = mkN "agnail" ;
lin agnes_PN = mkPN "Agnes";
lin agnostic_A = compoundA (mkA "agnostic");
lin agnostic_N = mkN "agnostic" "agnostics";
lin agnosticism_N = mkN "agnosticism" ;
lin ago_Adv = mkAdv "ago";
lin ago_Prep = mkPrep "ago";
lin agog_A = compoundA (mkA "agog");
lin agonize_V = mkV "agonize";
lin agonized_A = compoundA (mkA "agonized");
lin agonizing_A = compoundA (mkA "agonizing");
lin agony_N = mkN "agony" "agonies";
lin agora_N = mkN "agora" "agoras";
lin agoraphobia_N = mkN "agoraphobia" ;
lin agra_PN = mkPN "Agra";
lin agrarian_A = compoundA (mkA "agrarian");
lin agree_V = mkV "agree";
lin agree_V2 = mkV2 (mkV "agree");
lin agree_VV = mkVV (mkV "agree");
lin agree_VS = mkVS (mkV "agree");
lin agreeable_A = compoundA (mkA "agreeable");
lin agreement_N = mkN "agreement" "agreements";
lin agricultural_A = compoundA (mkA "agricultural");
lin agriculture_N = mkN "agriculture" ;
lin aground_A = compoundA (mkA "aground");
lin aground_Adv = mkAdv "aground";
lin ague_N = mkN "ague" "agues";
lin ahead_Adv = mkAdv "ahead";
lin ahmedabad_PN = mkPN "Ahmedabad";
lin aid_N = mkN "aid" "aids";
lin aid_V = mkV "aid";
lin aid_V2 = mkV2 (mkV "aid" "aids" "aided" "aided" "aiding");
lin aide_de_camp_N = mkN "aide - de - camp";
lin aide_memoire_N = mkN "aide - mémoire" "aide - mémoires";
lin aids_N = mkN "aids" ;
lin aigret_N = mkN "aigret" "aigrets";
lin aigrette_N = mkN "aigrette" "aigrettes";
lin ail_V = mkV "ail" "ails" "ailed" "ailed" "ailing";
lin ail_V2 = mkV2 (mkV "ail" "ails" "ailed" "ailed" "ailing");
lin aileron_N = mkN "aileron" "ailerons";
lin ailment_N = mkN "ailment" "ailments";
lin aim_N = mkN "aim" "aims";
lin aim_V = mkV "aim" "aims" "aimed" "aimed" "aiming";
lin aim_V2 = mkV2 (mkV "aim" "aims" "aimed" "aimed" "aiming");
lin aim_VV = mkVV (mkV "aim" "aims" "aimed" "aimed" "aiming");
lin aimless_A = compoundA (mkA "aimless");
lin air_N = mkN "air" "airs";
lin air_V = mkV "air";
lin air_V2 = mkV2 (mkV "air" "airs" "aired" "aired" "airing");
lin air_bladder_N = mkN "air - bladder" "air - bladders";
lin air_conditioned_A = compoundA (mkA "air - conditioned");
lin air_conditioning_N = mkN "air - conditioning" ;
lin air_cooled_A = compoundA (mkA "air - cooled");
lin air_minded_A = compoundA (mkA "air - minded");
lin air_pump_N = mkN "air - pump" "air - pumps";
lin air_raid_N = mkN "air - raid" "air - raids";
lin air_shaft_N = mkN "air - shaft" "air - shafts";
lin air_sick_A = compoundA (mkA "air - sick");
lin air_sickness_N = mkN "air - sickness" ;
lin air_to_air_A = compoundA (mkA "air - to - air");
lin air_to_ground_A = compoundA (mkA "air - to - ground");
lin airbed_N = mkN "airbed" "airbeds";
lin airborne_A = compoundA (mkA "airborne");
lin airbrake_N = mkN "airbrake" "airbrakes";
lin aircraft_N = mkN "aircraft" "aircraft";
lin aircraftman_N = mkN "aircraftman" "aircraftmen" {- FIXME: guessed plural form -};
lin aircrew_N = mkN "aircrew" "aircrews";
lin airdrie_PN = mkPN "Airdrie";
lin airdrome_N = mkN "airdrome" "airdromes";
lin aireborough_PN = mkPN "Aireborough";
lin airedale_N = mkN "airedale" "airedales";
lin airfield_N = mkN "airfield" "airfields";
lin airflow_N = mkN "airflow" "airflows";
lin airframe_N = mkN "airframe" "airframes";
lin airing_N = mkN "airing" "airings";
lin airing_cupboard_N = mkN "airing - cupboard" "airing - cupboards";
lin airless_A = compoundA (mkA "airless");
lin airline_N = mkN "airline" "airlines";
lin airliner_N = mkN "airliner" "airliners";
lin airmail_N = mkN "airmail" ;
lin airman_N = mkN "airman" "airmen" {- FIXME: guessed plural form -};
lin airplane_N = mkN "airplane" "airplanes";
lin airport_N = mkN "airport" "airports";
lin airscrew_N = mkN "airscrew" "airscrews";
lin airship_N = mkN "airship" "airships";
lin airstrip_N = mkN "airstrip" "airstrips";
lin airtight_A = compoundA (mkA "airtight");
lin airway_N = mkN "airway" "airways";
lin airwoman_N = mkN "airwoman" "airwomen" {- FIXME: guessed plural form -};
lin airworthiness_N = mkN "airworthiness" ;
lin airworthy_A = compoundA (mkA "airworthy");
lin airy_A = compoundA (mkA "airy");
lin aisle_N = mkN "aisle" "aisles";
lin aitch_N = mkN "aitch" "aitches";
lin aitch_bone_N = mkN "aitch - bone" "aitch - bones";
lin ajar_A = compoundA (mkA "ajar");
lin aka_Prep = mkPrep "a/k/a";
lin akimbo_Adv = mkAdv "akimbo";
lin akin_A = compoundA (mkA "akin");
lin akron_PN = mkPN "Akron";
lin al_PN = mkPN "Al";
lin alabama_PN = mkPN "Alabama";
lin alabaster_A = compoundA (mkA "alabaster");
lin alabaster_N = mkN "alabaster" ;
lin alacrity_N = mkN "alacrity" ;
lin alan_PN = mkPN "Alan";
lin alarm_N = mkN "alarm" "alarms";
lin alarm_V2 = mkV2 (mkV "alarm" "alarms" "alarmed" "alarmed" "alarming");
lin alarm_clock_N = mkN "alarm - clock" "alarm - clocks";
lin alarming_A = compoundA (mkA "alarming");
lin alarmist_N = mkN "alarmist" "alarmists";
lin alaska_PN = mkPN "Alaska";
lin alb_N = mkN "alb" "albs";
lin albania_PN = mkPN "Albania";
lin albanian_A = compoundA (mkA "albanian");
lin albanian_N = mkN "albanian" "albanians";
lin albatross_N = mkN "albatross" "albatrosses";
lin albeit_Subj = mkSubj "albeit";
lin albert_PN = mkPN "Albert";
lin alberta_PN = mkPN "Alberta";
lin albino_N = mkN "albino" "albinos";
lin album_N = mkN "album" "albums";
lin albumen_N = mkN "albumen" ;
lin alchemist_N = mkN "alchemist" "alchemists";
lin alchemy_N = mkN "alchemy" ;
lin alcohol_N = mkN "alcohol" "alcohols";
lin alcoholic_A = compoundA (mkA "alcoholic");
lin alcoholic_N = mkN "alcoholic" "alcoholics";
lin alcoholism_N = mkN "alcoholism" ;
lin alcove_N = mkN "alcove" "alcoves";
lin alder_N = mkN "alder" "alders";
lin alderman_N = mkN "alderman" "aldermen" {- FIXME: guessed plural form -};
lin aldermanic_A = compoundA (mkA "aldermanic");
lin aldershot_PN = mkPN "Aldershot";
lin ale_N = mkN "ale" "ales";
lin ale_house_N = mkN "ale - house" "ale - houses";
lin alee_A = compoundA (mkA "alee");
lin alee_Adv = mkAdv "alee";
lin aleppo_PN = mkPN "Aleppo";
lin alert_A = compoundA (mkA "alert");
lin alert_N = mkN "alert" "alerts";
lin alert_V2 = mkV2 (mkV "alert" "alerts" "alerted" "alerted" "alerting");
lin alertness_N = mkN "alertness" ;
lin alessandria_PN = mkPN "Alessandria";
lin alex_PN = mkPN "Alex";
lin alexander_PN = mkPN "Alexander";
lin alexandra_PN = mkPN "Alexandra";
lin alexandria_PN = mkPN "Alexandria";
lin alexandrine_N = mkN "alexandrine" "alexandrines";
lin alexia_N = mkN "alexia" ;
lin alexic_A = compoundA (mkA "alexic");
lin alexic_N = mkN "alexic" "alexics";
lin alf_PN = mkPN "Alf";
lin alfalfa_N = mkN "alfalfa" ;
lin alfred_PN = mkPN "Alfred";
lin alfresco_A = compoundA (mkA "alfresco");
lin alfresco_Adv = mkAdv "alfresco";
lin alfreton_PN = mkPN "Alfreton";
lin alga_N = mkN "alga" "algae" {- FIXME: guessed plural form -};
lin algebra_N = mkN "algebra" "algebras";
lin algebraic_A = compoundA (mkA "algebraic");
lin algebraical_A = compoundA (mkA "algebraical");
lin alger_PN = mkPN "Alger";
lin algeria_PN = mkPN "Algeria";
lin algerian_A = compoundA (mkA "algerian");
lin algerian_N = mkN "algerian" "algerians";
lin ali_PN = mkPN "Ali";
lin alias_Adv = mkAdv "alias";
lin alias_N = mkN "alias" "aliases";
lin alibi_N = mkN "alibi" "alibis";
lin alicante_PN = mkPN "Alicante";
lin alice_PN = mkPN "Alice";
lin alien_A = compoundA (mkA "alien");
lin alien_N = mkN "alien" "aliens";
lin alienate_V2 = mkV2 (mkV "alienate" "alienates" "alienated" "alienated" "alienating");
lin alienation_N = mkN "alienation" ;
lin alienist_N = mkN "alienist" "alienists";
lin alight_A = compoundA (mkA "alight");
lin alight_V = mkV "alight" "alights" "alighted" "alighted" "alighting";
lin align_V = mkV "align" "aligns" "aligned" "aligned" "aligning";
lin align_V2 = mkV2 (mkV "align" "aligns" "aligned" "aligned" "aligning");
lin alignment_N = mkN "alignment" "alignments";
lin alike_A = compoundA (mkA "alike");
lin alike_Adv = mkAdv "alike";
lin alimentary_A = compoundA (mkA "alimentary");
lin alimony_N = mkN "alimony" ;
lin alison_PN = mkPN "Alison";
lin alive_A = compoundA (mkA "alive");
lin alkali_N = mkN "alkali" "alkalis";
lin alkaline_A = compoundA (mkA "alkaline");
lin all_Predet = ss "all";
lin all_mains_A = compoundA (mkA "all - mains");
lin all_round_A = compoundA (mkA "all - round");
lin all_rounder_N = mkN "all - rounder" "all - rounders";
lin allah_PN = mkPN "Allah";
lin allahabad_PN = mkPN "Allahabad";
lin allan_PN = mkPN "Allan";
lin allay_V2 = mkV2 (mkV "allay" "allays" "allayed" "allayed" "allaying");
lin allegation_N = mkN "allegation" "allegations";
lin allege_V2 = mkV2 (mkV "allege" "alleges" "alleged" "alleged" "alleging");
lin allege_V2V = mkV2V (mkV "allege") noPrep to_Prep ;
lin allege_VS = mkVS (mkV "allege");
lin allegedly_Adv = mkAdv "allegedly";
lin allegiance_N = mkN "allegiance" ;
lin allegoric_A = compoundA (mkA "allegoric");
lin allegorical_A = compoundA (mkA "allegorical");
lin allegory_N = mkN "allegory" "allegories";
lin allegretto_A = compoundA (mkA "allegretto");
lin allegretto_Adv = mkAdv "allegretto";
lin allegretto_N = mkN "allegretto" "allegrettos";
lin allegro_A = compoundA (mkA "allegro");
lin allegro_Adv = mkAdv "allegro";
lin allegro_N = mkN "allegro" "allegros";
lin allen_PN = mkPN "Allen";
lin allergen_N = mkN "allergen" "allergens";
lin allergic_A = compoundA (mkA "allergic");
lin allergy_N = mkN "allergy" "allergies";
lin alleviate_V2 = mkV2 (mkV "alleviate" "alleviates" "alleviated" "alleviated" "alleviating");
lin alleviation_N = mkN "alleviation" "alleviations";
lin alley_N = mkN "alley" "alleys";
lin alleyway_N = mkN "alleyway" "alleyways";
lin alliance_N = mkN "alliance" "alliances";
lin alligator_N = mkN "alligator" "alligators";
lin alliteration_N = mkN "alliteration" ;
lin alliterative_A = compoundA (mkA "alliterative");
lin alloa_PN = mkPN "Alloa";
lin allocate_V = mkV "allocate";
lin allocate_V2 = mkV2 (mkV "allocate" "allocates" "allocated" "allocated" "allocating");
lin allocation_N = mkN "allocation" "allocations";
lin allot_V2 = mkV2 (mkV "allot" "allots" "allotted" "allotted" "allotting");
lin allotment_N = mkN "allotment" "allotments";
lin allow_V = mkV "allow" "allows" "allowed" "allowed" "allowing";
lin allow_V2 = mkV2 (mkV "allow" "allows" "allowed" "allowed" "allowing");
lin allow_V2V = mkV2V (mkV "allow" "allows" "allowed" "allowed" "allowing") noPrep to_Prep ;
lin allow_VS = mkVS (mkV "allow" "allows" "allowed" "allowed" "allowing");
lin allowable_A = compoundA (mkA "allowable");
lin allowance_N = mkN "allowance" "allowances";
lin alloy_N = mkN "alloy" "alloys";
lin alloy_V2 = mkV2 (mkV "alloy" "alloys" "alloyed" "alloyed" "alloying");
lin allspice_N = mkN "allspice" ;
lin allude_V = mkV "allude" "alludes" "alluded" "alluded" "alluding";
lin allure_N = mkN "allure" "allures";
lin allure_V2 = mkV2 (mkV "allure" "allures" "allured" "allured" "alluring");
lin allurement_N = mkN "allurement" "allurements";
lin alluring_A = compoundA (mkA "alluring");
lin allusion_N = mkN "allusion" "allusions";
lin allusive_A = compoundA (mkA "allusive");
lin alluvial_A = compoundA (mkA "alluvial");
lin ally_N = mkN "ally" "allies";
lin ally_V2 = mkV2 (mkV "ally" "allies" "allied" "allied" "allying");
lin alma_ata_PN = mkPN "Alma - ata";
lin alma_mater_N = mkN "alma mater" "alma maters";
lin almanac_N = mkN "almanac" "almanacs";
lin almeria_PN = mkPN "Almeria";
lin almighty_A = compoundA (mkA "almighty");
lin almighty_N = mkN "almighty";
lin almond_N = mkN "almond" "almonds";
lin almond_eyed_A = compoundA (mkA "almond - eyed");
lin almoner_N = mkN "almoner" "almoners";
lin almost_AdN = mkAdN "almost" ;
lin almost_Adv = mkAdv "almost";
lin almost_Predet = {s="almost"} ;
lin alms_box_N = mkN "alms - box" "alms - boxes";
lin alms_giving_N = mkN "alms - giving" ;
lin alms_house_N = mkN "alms - house" "alms - houses";
lin alnwick_PN = mkPN "Alnwick";
lin aloe_N = mkN "aloe" "aloes";
lin aloft_Adv = mkAdv "aloft";
lin alone_A = compoundA (mkA "alone");
lin alone_Adv = mkAdv "alone";
lin along_Adv = mkAdv "along";
lin along_Prep = mkPrep "along";
lin alongside_Adv = mkAdv "alongside";
lin alongside_Prep = mkPrep "alongside";
lin aloof_A = compoundA (mkA "aloof");
lin aloof_Adv = mkAdv "aloof";
lin aloofness_N = mkN "aloofness" ;
lin aloud_Adv = mkAdv "aloud";
lin alp_N = mkN "alp" "alps";
lin alpaca_N = mkN "alpaca" "alpacas";
lin alpenstock_N = mkN "alpenstock" "alpenstocks";
lin alpha_N = mkN "alpha" "alphas";
lin alphabet_N = mkN "alphabet" "alphabets";
lin alphabetical_A = compoundA (mkA "alphabetical");
lin alpine_A = compoundA (mkA "alpine");
lin alpinist_N = mkN "alpinist" "alpinists";
lin already_Adv = mkAdv "already";
lin already_AdV = mkAdV "already";
lin alright_Adv = mkAdv "alright";
lin alsatian_N = mkN "alsatian" "alsatians";
lin also_AdV = mkAdV "also";
lin also_Adv = mkAdv "also";
lin also_ran_N = mkN "also - ran" "also - rans";
lin altar_N = mkN "altar" "altars";
lin altar_piece_N = mkN "altar - piece" "altar - pieces";
lin alter_V = mkV "alter" "alters" "altered" "altered" "altering";
lin alter_V2 = mkV2 (mkV "alter" "alters" "altered" "altered" "altering");
lin alter_ego_N = mkN "alter ego" "alter egos";
lin alterable_A = compoundA (mkA "alterable");
lin alteration_N = mkN "alteration" "alterations";
lin altercation_N = mkN "altercation" "altercations";
lin alternate_A = compoundA (mkA "alternate");
lin alternate_V = mkV "alternate" "alternates" "alternated" "alternated" "alternating";
lin alternate_V2 = mkV2 (mkV "alternate" "alternates" "alternated" "alternated" "alternating");
lin alternation_N = mkN "alternation" "alternations";
lin alternative_A = compoundA (mkA "alternative");
lin alternative_N = mkN "alternative" "alternatives";
lin although_Subj = mkSubj "although";
lin altimeter_N = mkN "altimeter" "altimeters";
lin altitude_N = mkN "altitude" "altitudes";
lin alto_N = mkN "alto" "altos";
lin altogether_Adv = mkAdv "altogether";
lin alton_PN = mkPN "Alton";
lin altrincham_PN = mkPN "Altrincham";
lin altruism_N = mkN "altruism" "altruisms";
lin altruist_N = mkN "altruist" "altruists";
lin altruistic_A = compoundA (mkA "altruistic");
lin altruistically_Adv = mkAdv "altruistically";
lin alum_N = mkN "alum" ;
lin aluminium_N = mkN "aluminium" ;
lin alumna_N = mkN "alumna" "alumnae" {- FIXME: guessed plural form -};
lin alumnus_N = mkN "alumnus" "alumni" {- FIXME: guessed plural form -};
lin alvechurch_PN = mkPN "Alvechurch";
lin alveolar_A = compoundA (mkA "alveolar");
lin alveolar_N = mkN "alveolar" "alveolars";
lin always_AdV = mkAdV "always";
lin amah_N = mkN "amah" "amahs";
lin amain_Adv = mkAdv "amain";
lin amalgam_N = mkN "amalgam" "amalgams";
lin amalgamate_V = mkV "amalgamate" "amalgamates" "amalgamated" "amalgamated" "amalgamating";
lin amalgamate_V2 = mkV2 (mkV "amalgamate" "amalgamates" "amalgamated" "amalgamated" "amalgamating");
lin amalgamation_N = mkN "amalgamation" "amalgamations";
lin amanda_PN = mkPN "Amanda";
lin amanuensis_N = mkN "amanuensis" "amanuenses" {- FIXME: guessed plural form -};
lin amaryllis_N = mkN "amaryllis" "amaryllises";
lin amass_V2 = mkV2 (mkV "amass" "amasses" "amassed" "amassed" "amassing");
lin amateur_N = mkN "amateur" "amateurs";
lin amateurish_A = compoundA (mkA "amateurish");
lin amateurism_N = mkN "amateurism" ;
lin amatory_A = compoundA (mkA "amatory");
lin amaze_V2 = mkV2 (mkV "amaze" "amazes" "amazed" "amazed" "amazing");
lin amaze_V2V = mkV2V (mkV "amaze") noPrep to_Prep ;
lin amazement_N = mkN "amazement" ;
lin amazing_A = compoundA (mkA "amazing");
lin amazon_N = mkN "amazon" "amazons";
lin ambassador_N = mkN "ambassador" "ambassadors";
lin ambassadorial_A = compoundA (mkA "ambassadorial");
lin ambassadress_N = mkN "ambassadress" "ambassadresses";
lin amber_N = mkN "amber" ;
lin ambergris_N = mkN "ambergris" ;
lin ambidextrous_A = compoundA (mkA "ambidextrous");
lin ambience_N = mkN "ambience";
lin ambient_A = compoundA (mkA "ambient");
lin ambiguity_N = mkN "ambiguity" "ambiguities";
lin ambiguous_A = compoundA (mkA "ambiguous");
lin ambit_N = mkN "ambit" "ambits";
lin ambition_N = mkN "ambition" "ambitions";
lin ambitious_A = compoundA (mkA "ambitious");
lin ambivalence_N = mkN "ambivalence" ;
lin ambivalent_A = compoundA (mkA "ambivalent");
lin amble_N = mkN "amble" "ambles";
lin amble_V = mkV "amble" "ambles" "ambled" "ambled" "ambling";
lin ambrosia_N = mkN "ambrosia" ;
lin ambulance_N = mkN "ambulance" "ambulances";
lin ambuscade_N = mkN "ambuscade" "ambuscades";
lin ambuscade_V2 = mkV2 (mkV "ambuscade" "ambuscades" "ambuscaded" "ambuscaded" "ambuscading");
lin ambush_N = mkN "ambush" "ambushes";
lin ambush_V2 = mkV2 (mkV "ambush" "ambushes" "ambushed" "ambushed" "ambushing");
lin ameba_N = mkN "ameba" "amebas";
lin ameer_N = mkN "ameer" "ameers";
lin ameliorate_V = mkV "ameliorate" "ameliorates" "ameliorated" "ameliorated" "ameliorating";
lin ameliorate_V2 = mkV2 (mkV "ameliorate" "ameliorates" "ameliorated" "ameliorated" "ameliorating");
lin amelioration_N = mkN "amelioration" "ameliorations";
lin amenable_A = compoundA (mkA "amenable");
lin amend_V = mkV "amend" "amends" "amended" "amended" "amending";
lin amend_V2 = mkV2 (mkV "amend" "amends" "amended" "amended" "amending");
lin amend_V2V = mkV2V (mkV "amend" "amends" "amended" "amended" "amending") noPrep to_Prep ;
lin amendable_A = compoundA (mkA "amendable");
lin amendment_N = mkN "amendment" "amendments";
lin amenity_N = mkN "amenity" "amenities";
lin america_PN = mkPN "America";
lin american_A = compoundA (mkA "American");
lin american_N = mkN "American" "Americans";
lin americanism_N = mkN "americanism" "americanisms";
lin americanize_V2 = mkV2 (mkV "americanize");
lin amesbury_PN = mkPN "Amesbury";
lin amethyst_N = mkN "amethyst" "amethysts";
lin amharic_N = mkN "amharic" ;
lin amiability_N = mkN "amiability" ;
lin amiable_A = compoundA (mkA "amiable");
lin amicability_N = mkN "amicability" ;
lin amicable_A = compoundA (mkA "amicable");
lin amid_Prep = mkPrep "amid";
lin amidst_Prep = mkPrep "amidst";
lin amidships_Adv = mkAdv "amidships";
lin amiens_PN = mkPN "Amiens";
lin amir_N = mkN "amir" "amirs";
lin amiss_A = compoundA (mkA "amiss");
lin amiss_Adv = mkAdv "amiss";
lin amity_N = mkN "amity" ;
lin ammanford_PN = mkPN "Ammanford";
lin ammeter_N = mkN "ammeter" "ammeters";
lin ammonia_N = mkN "ammonia" ;
lin ammoniated_A = compoundA (mkA "ammoniated");
lin ammonite_N = mkN "ammonite" "ammonites";
lin ammunition_N = mkN "ammunition" ;
lin amnesia_N = mkN "amnesia" ;
lin amnesty_N = mkN "amnesty" "amnesties";
lin amoeba_N = mkN "amoeba" "amoebas";
lin amoebic_A = compoundA (mkA "amoebic");
lin amok_Adv = mkAdv "amok";
lin among_Prep = mkPrep "among";
lin amongst_Prep = mkPrep "amongst";
lin amoral_A = compoundA (mkA "amoral");
lin amorous_A = compoundA (mkA "amorous");
lin amorphous_A = compoundA (mkA "amorphous");
lin amortization_N = mkN "amortization" "amortizations";
lin amortize_V2 = mkV2 (mkV "amortize" "amortizes" "amortized" "amortized" "amortizing");
lin amount_N = mkN "amount" "amounts";
lin amount_V = mkV "amount" "amounts" "amounted" "amounted" "amounting";
lin amour_N = mkN "amour" "amours";
lin amour_propre_N = mkN "amour - propre" ;
lin amp_Conj = mkConj "&";
lin amp_N = mkN "amp" "amps";
lin ampere_N = mkN "ampere" "amperes";
lin amphetamine_N = mkN "amphetamine" "amphetamines";
lin amphibian_N = mkN "amphibian" "amphibians";
lin amphibious_A = compoundA (mkA "amphibious");
lin amphitheatre_N = mkN "amphitheatre" "amphitheatres";
lin amphora_N = mkN "amphora" "amphoras";
lin ample_A = irregAdv (mkA "ample" "ampler") "amply" ;
lin amplification_N = mkN "amplification" "amplifications";
lin amplifier_N = mkN "amplifier" "amplifiers";
lin amplify_V2 = mkV2 (mkV "amplify" "amplifies" "amplified" "amplified" "amplifying");
lin amplitude_N = mkN "amplitude" ;
lin ampoule_N = mkN "ampoule" "ampoules";
lin amputate_V2 = mkV2 (mkV "amputate" "amputates" "amputated" "amputated" "amputating");
lin amputation_N = mkN "amputation" "amputations";
lin amsterdam_PN = mkPN "Amsterdam";
lin amuck_Adv = mkAdv "amuck";
lin amulet_N = mkN "amulet" "amulets";
lin amuse_V2 = mkV2 (mkV "amuse" "amuses" "amused" "amused" "amusing");
lin amusement_N = mkN "amusement" "amusements";
lin amusing_A = compoundA (mkA "amusing");
lin amy_PN = mkPN "Amy";
lin anachronism_N = mkN "anachronism" "anachronisms";
lin anachronistic_A = compoundA (mkA "anachronistic");
lin anaconda_N = mkN "anaconda" "anacondas";
lin anaemia_N = mkN "anaemia" ;
lin anaemic_A = compoundA (mkA "anaemic");
lin anaesthesia_N = mkN "anaesthesia" ;
lin anaesthetic_A = compoundA (mkA "anaesthetic");
lin anaesthetic_N = mkN "anaesthetic" "anaesthetics";
lin anaesthetist_N = mkN "anaesthetist" "anaesthetists";
lin anaesthetize_V2 = mkV2 (mkV "anaesthetize" "anaesthetizes" "anaesthetized" "anaesthetized" "anaesthetizing");
lin anagram_N = mkN "anagram" "anagrams";
lin anal_A = compoundA (mkA "anal");
lin analgesia_N = mkN "analgesia" ;
lin analgesic_N = mkN "analgesic" "analgesics";
lin analog_N = mkN "analog" "analogs";
lin analogous_A = compoundA (mkA "analogous");
lin analogue_N = mkN "analogue" "analogues";
lin analogy_N = mkN "analogy" "analogies";
lin analyse_V2 = mkV2 (mkV "analyse" "analyses" "analysed" "analysed" "analysing");
lin analysis_N = mkN "analysis" "analyses" {- FIXME: guessed plural form -};
lin analyst_N = mkN "analyst" "analysts";
lin analytic_A = compoundA (mkA "analytic");
lin analytical_A = compoundA (mkA "analytical");
lin analyze_V2 = mkV2 (mkV "analyze" "analyzes" "analyzed" "analyzed" "analyzing");
lin anapaest_N = mkN "anapaest" "anapaests";
lin anapaestic_A = compoundA (mkA "anapaestic");
lin anarchic_A = compoundA (mkA "anarchic");
lin anarchically_Adv = mkAdv "anarchically";
lin anarchism_N = mkN "anarchism" ;
lin anarchist_N = mkN "anarchist" "anarchists";
lin anarchy_N = mkN "anarchy" ;
lin anathema_N = mkN "anathema" "anathemas";
lin anathematize_V = mkV "anathematize" "anathematizes" "anathematized" "anathematized" "anathematizing";
lin anathematize_V2 = mkV2 (mkV "anathematize" "anathematizes" "anathematized" "anathematized" "anathematizing");
lin anatomical_A = compoundA (mkA "anatomical");
lin anatomist_N = mkN "anatomist" "anatomists";
lin anatomy_N = mkN "anatomy" ;
lin ancestor_N = mkN "ancestor" "ancestors";
lin ancestral_A = compoundA (mkA "ancestral");
lin ancestress_N = mkN "ancestress" "ancestresses";
lin ancestry_N = mkN "ancestry" "ancestries";
lin anchor_N = mkN "anchor" "anchors";
lin anchor_V = mkV "anchor" "anchors" "anchored" "anchored" "anchoring";
lin anchor_V2 = mkV2 (mkV "anchor" "anchors" "anchored" "anchored" "anchoring");
lin anchorage_N = mkN "anchorage" "anchorages";
lin anchorite_N = mkN "anchorite" "anchorites";
lin anchorman_N = mkN "anchorman" "anchormen" {- FIXME: guessed plural form -};
lin anchovy_N = mkN "anchovy" "anchovies";
lin ancient_A = compoundA (mkA "ancient");
lin ancillary_A = compoundA (mkA "ancillary");
lin ancona_PN = mkPN "Ancona";
lin and_Conj = mkConj "and" ;
lin andante_A = compoundA (mkA "andante");
lin andante_Adv = mkAdv "andante";
lin andante_N = mkN "andante" "andantes";
lin andiron_N = mkN "andiron" "andirons";
lin andorra_PN = mkPN "Andorra";
lin andorran_A = compoundA (mkA "andorran");
lin andorran_N = mkN "andorran" "andorrans";
lin andover_PN = mkPN "Andover";
lin andrew_PN = mkPN "Andrew";
lin andy_PN = mkPN "Andy";
lin anecdotal_A = compoundA (mkA "anecdotal");
lin anecdote_N = mkN "anecdote" "anecdotes";
lin anemometer_N = mkN "anemometer" "anemometers";
lin anemone_N = mkN "anemone" "anemones";
lin anent_Prep = mkPrep "anent";
lin aneroid_A = compoundA (mkA "aneroid");
lin aneroid_N = mkN "aneroid" "aneroids";
lin anesthetic_A = compoundA (mkA "anesthetic");
lin anesthetic_N = mkN "anesthetic" "anesthetics";
lin anesthetist_N = mkN "anesthetist" "anesthetists";
lin anesthetize_V2 = mkV2 (mkV "anesthetize" "anesthetizes" "anesthetized" "anesthetized" "anesthetizing");
lin anew_Adv = mkAdv "anew";
lin angel_N = mkN "angel" "angels";
lin angela_PN = mkPN "Angela";
lin angelic_A = compoundA (mkA "angelic");
lin angelica_N = mkN "angelica" ;
lin angelically_Adv = mkAdv "angelically";
lin angelus_N = mkN "angelus" "angeluses";
lin anger_N = mkN "anger" ;
lin anger_V2 = mkV2 (mkV "anger" "angers" "angered" "angered" "angering");
lin angers_PN = mkPN "Angers";
lin angie_PN = mkPN "Angie";
lin angina_N = mkN "angina" ;
lin angle_N = mkN "angle" "angles";
lin angle_V = mkV "angle" "angles" "angled" "angled" "angling";
lin angle_V2 = mkV2 (mkV "angle" "angles" "angled" "angled" "angling");
lin angle_dozer_N = mkN "angle - dozer" "angle - dozers";
lin angle_iron_N = mkN "angle - iron" "angle - irons";
lin angle_park_V = mkV "angle - park" "angle - parks" "angle - parked" "angle - parked" "angle - parking";
lin angle_park_V2 = mkV2 (mkV "angle - park" "angle - parks" "angle - parked" "angle - parked" "angle - parking");
lin angler_N = mkN "angler" "anglers";
lin anglican_A = compoundA (mkA "anglican");
lin anglican_N = mkN "anglican" "anglicans";
lin anglicism_N = mkN "anglicism" "anglicisms";
lin anglicize_V2 = mkV2 (mkV "anglicize" "anglicizes" "anglicized" "anglicized" "anglicizing");
lin angling_N = mkN "angling" ;
lin anglo_catholic_A = compoundA (mkA "anglo - catholic");
lin anglo_catholic_N = mkN "anglo - catholic" "anglo - catholics";
lin anglo_indian_A = compoundA (mkA "anglo - indian");
lin anglo_indian_N = mkN "anglo - indian" "anglo - indians";
lin anglo_saxon_A = compoundA (mkA "anglo - saxon");
lin anglo_saxon_N = mkN "anglo - saxon" "anglo - saxons";
lin anglomania_N = mkN "anglomania" ;
lin anglophil_N = mkN "anglophil" "anglophils";
lin anglophile_N = mkN "anglophile" "anglophiles";
lin anglophobe_N = mkN "anglophobe" "anglophobes";
lin anglophobia_N = mkN "anglophobia" ;
lin angola_PN = mkPN "Angola";
lin angolan_A = compoundA (mkA "angolan");
lin angolan_N = mkN "angolan" "angolans";
lin angora_N = mkN "angora" "angoras";
lin angostura_N = mkN "angostura" ;
lin angry_A = mkA "angry" "angrier";
lin angst_N = mkN "angst" ;
lin anguilla_PN = mkPN "Anguilla";
lin anguillan_A = compoundA (mkA "anguillan");
lin anguillan_N = mkN "anguillan" "anguillans";
lin anguish_N = mkN "anguish" ;
lin anguished_A = compoundA (mkA "anguished");
lin angular_A = compoundA (mkA "angular");
lin angularity_N = mkN "angularity" "angularities";
lin angus_PN = mkPN "Angus";
lin aniline_N = mkN "aniline" "anilines";
lin animadversion_N = mkN "animadversion" "animadversions";
lin animadvert_V = mkV "animadvert" "animadverts" "animadverted" "animadverted" "animadverting";
lin animal_N = mkN "animal" "animals";
lin animalcule_N = mkN "animalcule" "animalcules";
lin animate_A = compoundA (mkA "animate");
lin animate_V2 = mkV2 (mkV "animate" "animates" "animated" "animated" "animating");
lin animatedly_A = compoundA (mkA "animatedly");
lin animation_N = mkN "animation" ;
lin animism_N = mkN "animism" ;
lin animosity_N = mkN "animosity" "animosities";
lin animus_N = mkN "animus" ;
lin anise_N = mkN "anise" "anises";
lin aniseed_N = mkN "aniseed" ;
lin anita_PN = mkPN "Anita";
lin ankara_PN = mkPN "Ankara";
lin ankle_N = mkN "ankle" "ankles";
lin anklet_N = mkN "anklet" "anklets";
lin ann_PN = mkPN "Ann";
lin anna_N = mkN "anna" "annas";
lin annabel_PN = mkPN "Annabel";
lin annalist_N = mkN "annalist" "annalists";
lin annan_PN = mkPN "Annan";
lin anne_PN = mkPN "Anne";
lin anneal_V2 = mkV2 (mkV "anneal" "anneals" "annealed" "annealed" "annealing");
lin annex_N = mkN "annex" "annexes";
lin annex_V2 = mkV2 (mkV "annex" "annexes" "annexed" "annexed" "annexing");
lin annexation_N = mkN "annexation" ;
lin annexe_N = mkN "annexe" "annexes";
lin annfield_PN = mkPN "Annfield";
lin annfield_plain_PN = mkPN "Annfield plain";
lin annie_PN = mkPN "Annie";
lin annihilate_V2 = mkV2 (mkV "annihilate" "annihilates" "annihilated" "annihilated" "annihilating");
lin annihilation_N = mkN "annihilation" ;
lin anniversary_N = mkN "anniversary" "anniversaries";
lin annotate_V2 = mkV2 (mkV "annotate" "annotates" "annotated" "annotated" "annotating");
lin annotation_N = mkN "annotation" "annotations";
lin announce_V2 = mkV2 (mkV "announce" "announces" "announced" "announced" "announcing");
lin announce_VS = mkVS (mkV "announce" "announces" "announced" "announced" "announcing");
lin announcement_N = mkN "announcement" "announcements";
lin announcer_N = mkN "announcer" "announcers";
lin annoy_V2 = mkV2 (mkV "annoy" "annoys" "annoyed" "annoyed" "annoying");
lin annoyance_N = mkN "annoyance" "annoyances";
lin annoying_A = compoundA (mkA "annoying");
lin annual_A = compoundA (mkA "annual");
lin annual_N = mkN "annual" "annuals";
lin annuitant_N = mkN "annuitant" "annuitants";
lin annuity_N = mkN "annuity" "annuities";
lin annul_V2 = mkV2 (mkV "annul" "annuls" "annulled" "annulled" "annulling");
lin annular_A = compoundA (mkA "annular");
lin annulment_N = mkN "annulment" "annulments";
lin annunciate_V2 = mkV2 (mkV "annunciate" "annunciates" "annunciated" "annunciated" "annunciating");
lin annunciation_N = mkN "annunciation" "annunciations";
lin anode_N = mkN "anode" "anodes";
lin anodyne_A = compoundA (mkA "anodyne");
lin anodyne_N = mkN "anodyne" "anodynes";
lin anoint_V2 = mkV2 (mkV "anoint" "anoints" "anointed" "anointed" "anointing");
lin anointment_N = mkN "anointment" "anointments";
lin anomalous_A = compoundA (mkA "anomalous");
lin anomaly_N = mkN "anomaly" "anomalies";
lin anon_Adv = mkAdv "anon";
lin anon_PN = mkPN "Anon";
lin anonymity_N = mkN "anonymity" ;
lin anonymous_A = compoundA (mkA "anonymous");
lin anopheles_N = mkN "anopheles" "anopheles";
lin anorak_N = mkN "anorak" "anoraks";
lin another_Quant = mkQuant "another" "other";
lin anshan_PN = mkPN "Anshan";
lin answer_N = mkN "answer" "answers";
lin answer_V = mkV "answer" "answers" "answered" "answered" "answering";
lin answer_V2 = mkV2 (mkV "answer" "answers" "answered" "answered" "answering");
lin answerable_A = compoundA (mkA "answerable");
lin ant_N = mkN "ant" "ants";
lin ant_eater_N = mkN "ant - eater" "ant - eaters";
lin ant_hill_N = mkN "ant - hill" "ant - hills";
lin antagonism_N = mkN "antagonism" "antagonisms";
lin antagonist_N = mkN "antagonist" "antagonists";
lin antagonistic_A = compoundA (mkA "antagonistic");
lin antagonistically_Adv = mkAdv "antagonistically";
lin antagonize_V2 = mkV2 (mkV "antagonize" "antagonizes" "antagonized" "antagonized" "antagonizing");
lin antarctic_A = compoundA (mkA "antarctic");
lin ante_N = mkN "ante" "antes";
lin ante_meridiem_Adv = mkAdv "ante meridiem";
lin antecedence_N = mkN "antecedence" "antecedences";
lin antecedent_A = compoundA (mkA "antecedent");
lin antecedent_N = mkN "antecedent" "antecedents";
lin antechamber_N = mkN "antechamber" "antechambers";
lin antedate_V2 = mkV2 (mkV "antedate" "antedates" "antedated" "antedated" "antedating");
lin antediluvian_A = compoundA (mkA "antediluvian");
lin antediluvian_N = mkN "antediluvian" "antediluvians";
lin antelope_N = mkN "antelope" "antelopes";
lin antenatal_A = compoundA (mkA "antenatal");
lin antenna_N = mkN "antenna" "antennae" {- FIXME: guessed plural form -};
lin antenuptial_A = compoundA (mkA "antenuptial");
lin antepenultimate_A = compoundA (mkA "antepenultimate");
lin anterior_A = compoundA (mkA "anterior");
lin anteroom_N = mkN "anteroom" "anterooms";
lin anthea_PN = mkPN "Anthea";
lin anthem_N = mkN "anthem" "anthems";
lin anther_N = mkN "anther" "anthers";
lin anthology_N = mkN "anthology" "anthologies";
lin anthony_PN = mkPN "Anthony";
lin anthracite_N = mkN "anthracite" ;
lin anthrax_N = mkN "anthrax" ;
lin anthropoid_A = compoundA (mkA "anthropoid");
lin anthropoid_N = mkN "anthropoid" "anthropoids";
lin anthropological_A = compoundA (mkA "anthropological");
lin anthropologist_N = mkN "anthropologist" "anthropologists";
lin anthropology_N = mkN "anthropology" ;
lin anti_aircraft_A = compoundA (mkA "anti - aircraft");
lin anti_hero_N = mkN "anti - hero" "anti - heroes";
lin anti_personnel_A = compoundA (mkA "anti - personnel");
lin anti_semite_A = compoundA (mkA "anti - semite");
lin anti_semite_N = mkN "anti - semite" "anti - semites";
lin anti_semitic_A = compoundA (mkA "anti - semitic");
lin anti_semitism_N = mkN "anti - semitism" ;
lin antibiotic_A = compoundA (mkA "antibiotic");
lin antibiotic_N = mkN "antibiotic" "antibiotics";
lin antibody_N = mkN "antibody" "antibodies";
lin antic_N = mkN "antic" "antics";
lin anticipate_V = mkV "anticipate";
lin anticipate_V2 = mkV2 (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipate_VS = mkVS (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipate_VV = ingVV (mkV "anticipate" "anticipates" "anticipated" "anticipated" "anticipating");
lin anticipation_N = mkN "anticipation" "anticipations";
lin anticipatory_A = compoundA (mkA "anticipatory");
lin anticlimax_N = mkN "anticlimax" "anticlimaxes";
lin anticlockwise_Adv = mkAdv "anticlockwise";
lin anticyclone_N = mkN "anticyclone" "anticyclones";
lin antidote_N = mkN "antidote" "antidotes";
lin antifreeze_N = mkN "antifreeze" ;
lin antigua_PN = mkPN "Antigua";
lin antiguan_A = compoundA (mkA "antiguan");
lin antiguan_N = mkN "antiguan" "antiguans";
lin antiknock_N = mkN "antiknock" ;
lin antilogarithm_N = mkN "antilogarithm" "antilogarithms";
lin antimacassar_N = mkN "antimacassar" "antimacassars";
lin antimony_N = mkN "antimony" ;
lin antipathetic_A = compoundA (mkA "antipathetic");
lin antipathy_N = mkN "antipathy" "antipathies";
lin antiquarian_A = compoundA (mkA "antiquarian");
lin antiquarian_N = mkN "antiquarian" "antiquarians";
lin antiquary_N = mkN "antiquary" "antiquaries";
lin antiquated_A = compoundA (mkA "antiquated");
lin antique_A = compoundA (mkA "antique");
lin antique_N = mkN "antique" "antiques";
lin antiquity_N = mkN "antiquity" "antiquities";
lin antirrhinum_N = mkN "antirrhinum" "antirrhinums";
lin antiseptic_A = compoundA (mkA "antiseptic");
lin antiseptic_N = mkN "antiseptic" "antiseptics";
lin antisocial_A = compoundA (mkA "antisocial");
lin antitank_A = compoundA (mkA "antitank");
lin antithesis_N = mkN "antithesis" "antitheses" {- FIXME: guessed plural form -};
lin antithetic_A = compoundA (mkA "antithetic");
lin antithetical_A = compoundA (mkA "antithetical");
lin antitoxin_N = mkN "antitoxin" "antitoxins";
lin antitrade_A = compoundA (mkA "antitrade");
lin antitrade_N = mkN "antitrade" "antitrades";
lin antler_N = mkN "antler" "antlers";
lin antony_PN = mkPN "Antony";
lin antonym_N = mkN "antonym" "antonyms";
lin antrim_PN = mkPN "Antrim";
lin antwerp_PN = mkPN "Antwerp";
lin anus_N = mkN "anus" "anuses";
lin anvil_N = mkN "anvil" "anvils";
lin anxiety_N = mkN "anxiety" "anxieties";
lin anxious_A = compoundA (mkA "anxious");
lin anyPl_Det = mkDeterminer plural   "any";
lin anySg_Det = mkDeterminer singular "any";
lin anybody_NP = regNP "anybody" singular;
lin anyhow_Adv = mkAdv "anyhow";
lin anyone_NP = regNP "anyone" singular;
lin anyplace_Adv = mkAdv "anyplace";
lin anything_NP = regNP "anything" singular;
lin anyway_Adv = mkAdv "anyway";
lin anywhere_Adv = mkAdv "anywhere";
lin aorta_N = mkN "aorta" "aortas";
lin apace_Adv = mkAdv "apace";
lin apache_N = mkN "apache" "apaches";
lin apanage_N = mkN "apanage" ;
lin apart_Adv = mkAdv "apart";
lin apartheid_N = mkN "apartheid" ;
lin apartment_N = mkN "apartment" "apartments";
lin apathetic_A = compoundA (mkA "apathetic");
lin apathetically_Adv = mkAdv "apathetically";
lin apathy_N = mkN "apathy" ;
lin ape_N = mkN "ape" "apes";
lin ape_V2 = mkV2 (mkV "ape" "apes" "aped" "aped" "aping");
lin apeldoorn_PN = mkPN "Apeldoorn";
lin aperient_A = compoundA (mkA "aperient");
lin aperient_N = mkN "aperient" "aperients";
lin aperitif_N = mkN "aperitif" "aperitifs";
lin aperture_N = mkN "aperture" "apertures";
lin apex_N = mkN "apex" "apexes";
lin aphasia_N = mkN "aphasia" ;
lin aphid_N = mkN "aphid" "aphids";
lin aphis_N = mkN "aphis" "aphes" {- FIXME: guessed plural form -};
lin aphorism_N = mkN "aphorism" "aphorisms";
lin aphrodisiac_A = compoundA (mkA "aphrodisiac");
lin aphrodisiac_N = mkN "aphrodisiac" "aphrodisiacs";
lin apiarist_N = mkN "apiarist" "apiarists";
lin apiary_N = mkN "apiary" "apiaries";
lin apiculture_N = mkN "apiculture" "apicultures";
lin apiece_Adv = mkAdv "apiece";
lin apish_A = compoundA (mkA "apish");
lin aplomb_N = mkN "aplomb" ;
lin apocalypse_N = mkN "apocalypse" "apocalypses";
lin apocalyptic_A = compoundA (mkA "apocalyptic");
lin apocrypha_N = mkN "apocrypha" "apocrypha";
lin apocryphal_A = compoundA (mkA "apocryphal");
lin apogee_N = mkN "apogee" "apogees";
lin apologetic_A = compoundA (mkA "apologetic");
lin apologetically_Adv = mkAdv "apologetically";
lin apologetics_N = mkN "apologetics" "apologetics";
lin apologist_N = mkN "apologist" "apologists";
lin apologize_V = mkV "apologize" "apologizes" "apologized" "apologized" "apologizing";
lin apology_N = mkN "apology" "apologies";
lin apophthegm_N = mkN "apophthegm" "apophthegms";
lin apoplectic_A = compoundA (mkA "apoplectic");
lin apoplexy_N = mkN "apoplexy" ;
lin apostasy_N = mkN "apostasy" "apostasies";
lin apostate_A = compoundA (mkA "apostate");
lin apostate_N = mkN "apostate" "apostates";
lin apostle_N = mkN "apostle" "apostles";
lin apostolic_A = compoundA (mkA "apostolic");
lin apostrophe_N = mkN "apostrophe" "apostrophes";
lin apostrophize_V2 = mkV2 (mkV "apostrophize" "apostrophizes" "apostrophized" "apostrophized" "apostrophizing");
lin apothecary_N = mkN "apothecary" "apothecaries";
lin apothegm_N = mkN "apothegm" "apothegms";
lin apotheosis_N = mkN "apotheosis" "apotheoses" {- FIXME: guessed plural form -};
lin appal_V2 = mkV2 (mkV "appal" "appals" "appalled" "appalled" "appalling");
lin appalling_A = compoundA (mkA "appalling");
lin appanage_N = mkN "appanage" ;
lin apparatus_N = mkN "apparatus" "apparatuses";
lin apparel_N = mkN "apparel" ;
lin apparel_V2 = mkV2 (mkV "apparel" "apparels" "apparelled" "apparelled" "apparelling");
lin apparent_A = compoundA (mkA "apparent");
lin apparition_N = mkN "apparition" "apparitions";
lin appeal_N = mkN "appeal" "appeals";
lin appeal_V = mkV "appeal";
lin appeal_V2 = mkV2 (mkV "appeal");
lin appeal_V2V = mkV2V (mkV "appeal" "appeals" "appealed" "appealed" "appealing") to_Prep to_Prep;
lin appealing_A = compoundA (mkA "appealing");
lin appear_V = mkV "appear" "appears" "appeared" "appeared" "appearing";
lin appear_V2 = mkV2 (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VA = mkVA (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VV = mkVV (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appear_VS = mkVS (mkV "appear" "appears" "appeared" "appeared" "appearing");
lin appearance_N = mkN "appearance" "appearances";
lin appease_V2 = mkV2 (mkV "appease" "appeases" "appeased" "appeased" "appeasing");
lin appeasement_N = mkN "appeasement" ;
lin appellant_A = compoundA (mkA "appellant");
lin appellant_N = mkN "appellant" "appellants";
lin appellation_N = mkN "appellation" "appellations";
lin append_V2 = mkV2 (mkV "append" "appends" "appended" "appended" "appending");
lin appendage_N = mkN "appendage" "appendages";
lin appendectomy_N = mkN "appendectomy" "appendectomies";
lin appendicitis_N = mkN "appendicitis" ;
lin appendix_N = mkN "appendix" "appendixes";
lin appertain_V = mkV "appertain" "appertains" "appertained" "appertained" "appertaining";
lin appetite_N = mkN "appetite" "appetites";
lin appetizer_N = mkN "appetizer" "appetizers";
lin appetizing_A = compoundA (mkA "appetizing");
lin applaud_V = mkV "applaud" "applauds" "applauded" "applauded" "applauding";
lin applaud_V2 = mkV2 (mkV "applaud" "applauds" "applauded" "applauded" "applauding");
lin applause_N = mkN "applause" ;
lin apple_N = mkN "apple" "apples";
lin applejack_N = mkN "applejack" ;
lin appliance_N = mkN "appliance" "appliances";
lin applicability_N = mkN "applicability" ;
lin applicable_A = compoundA (mkA "applicable");
lin applicant_N = mkN "applicant" "applicants";
lin application_N = mkN "application" "applications";
lin applied_A = compoundA (mkA "applied");
lin applique_N = mkN "appliqué" ;
lin applique_V2 = mkV2 (mkV "appliqué" "appliqués" "appliquéed" "appliquéed" "appliquéing");
lin apply_V = mkV "apply" "applies" "applied" "applied" "applying";
lin apply_V2 = mkV2 (mkV "apply" "applies" "applied" "applied" "applying");
lin apply_V2V = mkV2V (mkV "apply" "applies" "applied" "applied" "applying") noPrep to_Prep ;
lin apply_VV = mkVV (mkV "apply" "applies" "applied" "applied" "applying");
lin appoint_V2 = mkV2 (mkV "appoint" "appoints" "appointed" "appointed" "appointing");
lin appoint_V2V = mkV2V (mkV "appoint") noPrep to_Prep ;
lin appoint_VS = mkVS (mkV "appoint");
lin appointee_N = mkN "appointee" "appointees";
lin appointment_N = mkN "appointment" "appointments";
lin apportion_V2 = mkV2 (mkV "apportion" "apportions" "apportioned" "apportioned" "apportioning");
lin apportionment_N = mkN "apportionment" ;
lin apposite_A = compoundA (mkA "apposite");
lin apposition_N = mkN "apposition" ;
lin appraisal_N = mkN "appraisal" "appraisals";
lin appraise_V2 = mkV2 (mkV "appraise" "appraises" "appraised" "appraised" "appraising");
lin appreciable_A = compoundA (mkA "appreciable");
lin appreciate_V = mkV "appreciate" "appreciates" "appreciated" "appreciated" "appreciating";
lin appreciate_V2 = mkV2 (mkV "appreciate" "appreciates" "appreciated" "appreciated" "appreciating");
lin appreciation_N = mkN "appreciation" "appreciations";
lin appreciative_A = compoundA (mkA "appreciative");
lin apprehend_V2 = mkV2 (mkV "apprehend" "apprehends" "apprehended" "apprehended" "apprehending");
lin apprehensible_A = compoundA (mkA "apprehensible");
lin apprehension_N = mkN "apprehension" "apprehensions";
lin apprehensive_A = compoundA (mkA "apprehensive");
lin apprentice_N = mkN "apprentice" "apprentices";
lin apprentice_V2 = mkV2 (mkV "apprentice" "apprentices" "apprenticed" "apprenticed" "apprenticing");
lin apprenticeship_N = mkN "apprenticeship" "apprenticeships";
lin apprise_V2 = mkV2 (mkV "apprise" "apprises" "apprised" "apprised" "apprising");
lin appro_N = mkN "appro" ;
lin approach_N = mkN "approach" "approaches";
lin approach_V = mkV "approach" "approaches" "approached" "approached" "approaching";
lin approach_V2 = mkV2 (mkV "approach" "approaches" "approached" "approached" "approaching");
lin approachable_A = compoundA (mkA "approachable");
lin approbation_N = mkN "approbation" ;
lin appropriate_A = compoundA (mkA "appropriate");
lin appropriate_V2 = mkV2 (mkV "appropriate" "appropriates" "appropriated" "appropriated" "appropriating");
lin appropriation_N = mkN "appropriation" "appropriations";
lin approval_N = mkN "approval" ;
lin approve_V = mkV "approve" "approves" "approved" "approved" "approving";
lin approve_V2 = mkV2 (mkV "approve" "approves" "approved" "approved" "approving");
lin approvingly_Adv = mkAdv "approvingly";
lin approx_PN = mkPN "Approx";
lin approximate_A = compoundA (mkA "approximate");
lin approximate_V = mkV "approximate" "approximates" "approximated" "approximated" "approximating";
lin approximate_V2 = mkV2 (mkV "approximate" "approximates" "approximated" "approximated" "approximating");
lin approximation_N = mkN "approximation" "approximations";
lin appurtenance_N = mkN "appurtenance" "appurtenances";
lin apr_PN = mkPN "Apr";
lin apres_ski_A = compoundA (mkA "après - ski");
lin apricot_N = mkN "apricot" "apricots";
lin april_N = mkN "april" "aprils";
lin april_PN = mkPN "April";
lin apron_N = mkN "apron" "aprons";
lin apropos_A = compoundA (mkA "apropos");
lin apropos_Adv = mkAdv "apropos";
lin apse_N = mkN "apse" "apses";
lin apt_A = mkA "apt" "apter";
lin aptitude_N = mkN "aptitude" "aptitudes";
lin aptness_N = mkN "aptness" ;
lin aqualung_N = mkN "aqualung" "aqualungs";
lin aquamarine_N = mkN "aquamarine" "aquamarines";
lin aquanaut_N = mkN "aquanaut" "aquanauts";
lin aquaplane_N = mkN "aquaplane" "aquaplanes";
lin aquaplane_V = mkV "aquaplane" "aquaplanes" "aquaplaned" "aquaplaned" "aquaplaning";
lin aquarium_N = mkN "aquarium" "aquariums";
lin aquarius_PN = mkPN "Aquarius";
lin aquatic_A = compoundA (mkA "aquatic");
lin aquatint_N = mkN "aquatint" "aquatints";
lin aquavit_N = mkN "aquavit" ;
lin aqueduct_N = mkN "aqueduct" "aqueducts";
lin aqueous_A = compoundA (mkA "aqueous");
lin aquiline_A = compoundA (mkA "aquiline");
lin arab_N = mkN "arab" "arabs";
lin arabesque_N = mkN "arabesque" "arabesques";
lin arabian_A = compoundA (mkA "arabian");
lin arabian_N = mkN "arabian" "arabians";
lin arabic_A = compoundA (mkA "arabic");
lin arabic_N = mkN "arabic" ;
lin arabist_N = mkN "arabist" "arabists";
lin arable_A = compoundA (mkA "arable");
lin arachnid_N = mkN "arachnid" "arachnids";
lin arbiter_N = mkN "arbiter" "arbiters";
lin arbitrament_N = mkN "arbitrament" "arbitraments";
lin arbitrary_A = compoundA (mkA "arbitrary");
lin arbitrate_V = mkV "arbitrate" "arbitrates" "arbitrated" "arbitrated" "arbitrating";
lin arbitrate_V2 = mkV2 (mkV "arbitrate" "arbitrates" "arbitrated" "arbitrated" "arbitrating");
lin arbitration_N = mkN "arbitration" "arbitrations";
lin arbitrator_N = mkN "arbitrator" "arbitrators";
lin arboreal_A = compoundA (mkA "arboreal");
lin arbour_N = mkN "arbour" "arbours";
lin arbroath_PN = mkPN "Arbroath";
lin arc_N = mkN "arc" "arcs";
lin arc_lamp_N = mkN "arc - lamp" "arc - lamps";
lin arc_light_N = mkN "arc - light" "arc - lights";
lin arcade_N = mkN "arcade" "arcades";
lin arcadian_A = compoundA (mkA "arcadian");
lin arcadian_N = mkN "arcadian" "arcadians";
lin arcane_A = compoundA (mkA "arcane");
lin arch_A = compoundA (mkA "arch");
lin arch_N = mkN "arch" "arches";
lin arch_V = mkV "arch" "arches" "arched" "arched" "arching";
lin arch_V2 = mkV2 (mkV "arch" "arches" "arched" "arched" "arching");
lin archaeological_A = compoundA (mkA "archaeological");
lin archaeologist_N = mkN "archaeologist" "archaeologists";
lin archaeology_N = mkN "archaeology" ;
lin archaic_A = compoundA (mkA "archaic");
lin archaism_N = mkN "archaism" "archaisms";
lin archangel_N = mkN "archangel" "archangels";
lin archbishop_N = mkN "archbishop" "archbishops";
lin archbishopric_N = mkN "archbishopric" "archbishoprics";
lin archdeacon_N = mkN "archdeacon" "archdeacons";
lin archdeaconry_N = mkN "archdeaconry" "archdeaconries";
lin archdiocese_N = mkN "archdiocese" "archdioceses";
lin archduke_N = mkN "archduke" "archdukes";
lin archeology_N = mkN "archeology" ;
lin archer_N = mkN "archer" "archers";
lin archery_N = mkN "archery" ;
lin archetypal_A = compoundA (mkA "archetypal");
lin archetype_N = mkN "archetype" "archetypes";
lin archimandrite_N = mkN "archimandrite" "archimandrites";
lin archipelago_N = mkN "archipelago" "archipelagos";
lin architect_N = mkN "architect" "architects";
lin architectural_A = compoundA (mkA "architectural");
lin architecture_N = mkN "architecture" ;
lin archivist_N = mkN "archivist" "archivists";
lin archway_N = mkN "archway" "archways";
lin arctic_A = compoundA (mkA "arctic");
lin ardent_A = compoundA (mkA "ardent");
lin ardour_N = mkN "ardour" "ardours";
lin ardrossan_PN = mkPN "Ardrossan";
lin arduous_A = compoundA (mkA "arduous");
lin are_N = mkN "are" "ares";
lin area_N = mkN "area" "areas";
lin areca_N = mkN "areca" "arecas";
lin arena_N = mkN "arena" "arenas";
lin arete_N = mkN "arête" "arêtes";
lin argent_A = compoundA (mkA "argent");
lin argent_N = mkN "argent" "argents";
lin argentina_PN = mkPN "Argentina";
lin argentine_PN = mkPN "Argentine";
lin argentinian_A = compoundA (mkA "argentinian");
lin argentinian_N = mkN "argentinian" "argentinians";
lin argon_N = mkN "argon" ;
lin argonaut_N = mkN "argonaut" "argonauts";
lin argosy_N = mkN "argosy" "argosies";
lin argot_N = mkN "argot" ;
lin arguable_A = compoundA (mkA "arguable");
lin argue_V = mkV "argue" "argues" "argued" "argued" "arguing";
lin argue_V2 = mkV2 (mkV "argue" "argues" "argued" "argued" "arguing");
lin argue_VS = mkVS (mkV "argue" "argues" "argued" "argued" "arguing");
lin argument_N = mkN "argument" "arguments";
lin argumentation_N = mkN "argumentation" ;
lin argumentative_A = compoundA (mkA "argumentative");
lin argus_N = mkN "argus" "arguses";
lin argus_eyed_A = compoundA (mkA "argus - eyed");
lin aria_N = mkN "aria" "arias";
lin arid_A = compoundA (mkA "arid");
lin aridity_N = mkN "aridity" ;
lin aries_PN = mkPN "Aries";
lin aright_Adv = mkAdv "aright";
lin arise_V = mkV "a" IrregEng.rise_V;
lin arise_VS = mkVS (mkV "a" IrregEng.rise_V);
lin aristocracy_N = mkN "aristocracy" "aristocracies";
lin aristocrat_N = mkN "aristocrat" "aristocrats";
lin aristocratic_A = compoundA (mkA "aristocratic");
lin aristocratically_Adv = mkAdv "aristocratically";
lin arithmetic_N = mkN "arithmetic" ;
lin arithmetical_A = compoundA (mkA "arithmetical");
lin arithmetician_N = mkN "arithmetician" "arithmeticians";
lin arizona_PN = mkPN "Arizona";
lin ark_N = mkN "ark" "arks";
lin arkansas_PN = mkPN "Arkansas";
lin arm_N = mkN "arm" "arms";
lin arm_V = mkV "arm" "arms" "armed" "armed" "arming";
lin arm_V2 = mkV2 (mkV "arm" "arms" "armed" "armed" "arming");
lin arm_hole_N = mkN "arm - hole" "arm - holes";
lin armada_N = mkN "armada" "armadas";
lin armadale_PN = mkPN "Armadale";
lin armadillo_N = mkN "armadillo" "armadillos";
lin armageddon_PN = mkPN "Armageddon";
lin armagh_PN = mkPN "Armagh";
lin armament_N = mkN "armament" "armaments";
lin armature_N = mkN "armature" "armatures";
lin armband_N = mkN "armband" "armbands";
lin armchair_N = mkN "armchair" "armchairs";
lin armful_N = mkN "armful" "armfuls";
lin armistice_N = mkN "armistice" "armistices";
lin armlet_N = mkN "armlet" "armlets";
lin armoire_N = mkN "armoire" "armoires";
lin armorial_A = compoundA (mkA "armorial");
lin armour_N = mkN "armour" ;
lin armour_plate_N = mkN "armour - plate" "armour - plates";
lin armoured_A = compoundA (mkA "armoured");
lin armourer_N = mkN "armourer" "armourers";
lin armoury_N = mkN "armoury" "armouries";
lin armpit_N = mkN "armpit" "armpits";
lin arms_race_N = mkN "arms - race" "IRREG";
lin arms_runner_N = mkN "arms - runner" "arms - runners";
lin army_N = mkN "army" "armies";
lin arnhem_PN = mkPN "Arnhem";
lin arnica_N = mkN "arnica" ;
lin arnold_PN = mkPN "Arnold";
lin aroma_N = mkN "aroma" "aromas";
lin aromatic_A = compoundA (mkA "aromatic");
lin arose_V2 = mkV2 (mkV "arose");
lin arose_VS = mkVS (mkV "arose");
lin around_Adv = mkAdv "around";
lin around_AdN = mkAdN "around";
lin around_Prep = mkPrep "around";
lin arouse_V2 = mkV2 (mkV "arouse" "arouses" "aroused" "aroused" "arousing");
lin arouse_V2V = mkV2V (mkV "arouse") noPrep to_Prep ;
lin arpeggio_N = mkN "arpeggio" "arpeggios";
lin arquebus_N = mkN "arquebus" "arquebuses";
lin arr_PN = mkPN "Arr";
lin arrack_N = mkN "arrack" ;
lin arraign_V2 = mkV2 (mkV "arraign" "arraigns" "arraigned" "arraigned" "arraigning");
lin arraignment_N = mkN "arraignment" "arraignments";
lin arrange_V = mkV "arrange" "arranges" "arranged" "arranged" "arranging";
lin arrange_V2 = mkV2 (mkV "arrange" "arranges" "arranged" "arranged" "arranging");
lin arrangement_N = mkN "arrangement" "arrangements";
lin arrant_A = compoundA (mkA "arrant");
lin arras_N = mkN "arras" "arrases";
lin array_N = mkN "array" "arrays";
lin array_V2 = mkV2 (mkV "array" "arrays" "arrayed" "arrayed" "arraying");
lin arrest_N = mkN "arrest" "arrests";
lin arrest_V2 = mkV2 (mkV "arrest" "arrests" "arrested" "arrested" "arresting");
lin arrester_N = mkN "arrester" "arresters";
lin arresting_A = compoundA (mkA "arresting");
lin arriere_pensee_N = mkN "arrière pensée" "arrière pensées";
lin arrival_N = mkN "arrival" "arrivals";
lin arrive_V = mkV "arrive" "arrives" "arrived" "arrived" "arriving";
lin arrive_V2 = mkV2 (mkV "arrive" "arrives" "arrived" "arrived" "arriving");
lin arrogance_N = mkN "arrogance" ;
lin arrogant_A = compoundA (mkA "arrogant");
lin arrogate_V2 = mkV2 (mkV "arrogate" "arrogates" "arrogated" "arrogated" "arrogating");
lin arrow_N = mkN "arrow" "arrows";
lin arrowhead_N = mkN "arrowhead" "arrowheads";
lin arrowroot_N = mkN "arrowroot" ;
lin arse_N = mkN "arse" "arses";
lin arsehole_N = mkN "arsehole" "arseholes";
lin arsenal_N = mkN "arsenal" "arsenals";
lin arsenic_N = mkN "arsenic" ;
lin arson_N = mkN "arson" ;
lin art_N = mkN "art" "arts";
lin art_PN = mkPN "Art";
lin artefact_N = mkN "artefact" "artefacts";
lin arterial_A = compoundA (mkA "arterial");
lin arteriosclerosis_N = mkN "arteriosclerosis" ;
lin artery_N = mkN "artery" "arteries";
lin artesian_A = compoundA (mkA "artesian");
lin artful_A = compoundA (mkA "artful");
lin artfulness_N = mkN "artfulness" ;
lin arthritic_A = compoundA (mkA "arthritic");
lin arthritis_N = mkN "arthritis" ;
lin arthur_PN = mkPN "Arthur";
lin artichoke_N = mkN "artichoke" "artichokes";
lin article_N = mkN "article" "articles";
lin article_V2 = mkV2 (mkV "article" "articles" "articled" "articled" "articling");
lin articulate_A = compoundA (mkA "articulate");
lin articulate_V = mkV "articulate" "articulates" "articulated" "articulated" "articulating";
lin articulate_V2 = mkV2 (mkV "articulate" "articulates" "articulated" "articulated" "articulating");
lin articulation_N = mkN "articulation" ;
lin artie_PN = mkPN "Artie";
lin artifact_N = mkN "artifact" "artifacts";
lin artifice_N = mkN "artifice" "artifices";
lin artificer_N = mkN "artificer" "artificers";
lin artificial_A = compoundA (mkA "artificial");
lin artillery_N = mkN "artillery" ;
lin artisan_N = mkN "artisan" "artisans";
lin artist_N = mkN "artist" "artists";
lin artiste_N = mkN "artiste" "artistes";
lin artistic_A = compoundA (mkA "artistic");
lin artistically_Adv = mkAdv "artistically";
lin artistry_N = mkN "artistry" ;
lin artless_A = compoundA (mkA "artless");
lin artlessness_N = mkN "artlessness" ;
lin arty_A = compoundA (mkA "arty");
lin arty_crafty_A = compoundA (mkA "arty - crafty");
lin arum_N = mkN "arum" "arums";
lin aryan_A = compoundA (mkA "aryan");
lin aryan_N = mkN "aryan" "aryans";
lin as_Prep = mkPrep "as";
lin asap_PN = mkPN "Asap";
lin asbestos_N = mkN "asbestos" ;
lin ascend_V = mkV "ascend" "ascends" "ascended" "ascended" "ascending";
lin ascend_V2 = mkV2 (mkV "ascend" "ascends" "ascended" "ascended" "ascending");
lin ascendancy_N = mkN "ascendancy" ;
lin ascendant_N = mkN "ascendant" "ascendants";
lin ascendency_N = mkN "ascendency" ;
lin ascendent_N = mkN "ascendent" "ascendents";
lin ascension_N = mkN "ascension" "ascensions";
lin ascent_N = mkN "ascent" "ascents";
lin ascertain_V2 = mkV2 (mkV "ascertain" "ascertains" "ascertained" "ascertained" "ascertaining");
lin ascertainable_A = compoundA (mkA "ascertainable");
lin ascetic_A = compoundA (mkA "ascetic");
lin ascetic_N = mkN "ascetic" "ascetics";
lin ascetically_Adv = mkAdv "ascetically";
lin asceticism_N = mkN "asceticism" ;
lin ascorbic_A = compoundA (mkA "ascorbic");
lin ascot_PN = mkPN "Ascot";
lin ascribable_A = compoundA (mkA "ascribable");
lin ascribe_V2 = mkV2 (mkV "ascribe" "ascribes" "ascribed" "ascribed" "ascribing");
lin ascription_N = mkN "ascription" "ascriptions";
lin asdic_N = mkN "asdic" "asdics";
lin asepsis_N = mkN "asepsis" ;
lin aseptic_A = compoundA (mkA "aseptic");
lin asexual_A = compoundA (mkA "asexual");
lin asexuality_N = mkN "asexuality" ;
lin ash_N = mkN "ash" "ashes";
lin ash_bin_N = mkN "ash - bin" "ash - bins";
lin ash_can_N = mkN "ash - can" "ash - cans";
lin ash_key_N = mkN "ash - key" "ash - keys";
lin ash_pan_N = mkN "ash - pan" "ash - pans";
lin ashamed_A = compoundA (mkA "ashamed");
lin ashbourne_PN = mkPN "Ashbourne";
lin ashby_PN = mkPN "Ashby";
lin ashby_de_la_zouch_PN = mkPN "Ashby de la Zouch";
lin ashby_woulds_PN = mkPN "Ashby Woulds";
lin ashen_A = compoundA (mkA "ashen");
lin ashford_PN = mkPN "Ashford";
lin ashington_PN = mkPN "Ashington";
lin ashore_Adv = mkAdv "ashore";
lin ashton_in_makerfield_PN = mkPN "Ashton - in - makerfield";
lin ashton_under_lyne_PN = mkPN "Ashton - under - lyne";
lin ashtray_N = mkN "ashtray" "ashtrays";
lin ashy_A = compoundA (mkA "ashy");
lin asian_A = compoundA (mkA "Asian");
lin asian_N = mkN "Asian" "Asians";
lin asiatic_A = compoundA (mkA "asiatic");
lin asiatic_N = mkN "asiatic" "asiatics";
lin aside_Adv = mkAdv "aside";
lin aside_N = mkN "aside" "asides";
lin asinine_A = compoundA (mkA "asinine");
lin ask_V = mkV "ask" "asks" "asked" "asked" "asking";
lin ask_V2 = mkV2 (mkV "ask");
lin ask_V2V = mkV2V (mkV "ask") noPrep to_Prep;
lin ask_VS = mkVS (mkV "ask" "asks" "asked" "asked" "asking");
lin ask_VV = mkVV (mkV "ask" "asks" "asked" "asked" "asking");
lin askance_Adv = mkAdv "askance";
lin askern_PN = mkPN "Askern";
lin askew_A = compoundA (mkA "askew");
lin askew_Adv = mkAdv "askew";
lin asking_N = mkN "asking" "IRREG";
lin aslant_Adv = mkAdv "aslant";
lin asleep_A = compoundA (mkA "asleep");
lin asleep_Adv = mkAdv "asleep";
lin asp_N = mkN "asp" "asps";
lin asparagus_N = mkN "asparagus" ;
lin aspect_N = mkN "aspect" "aspects";
lin aspectual_A = compoundA (mkA "aspectual");
lin aspen_N = mkN "aspen" "aspens";
lin asperity_N = mkN "asperity" "asperities";
lin asperse_V2 = mkV2 (mkV "asperse" "asperses" "aspersed" "aspersed" "aspersing");
lin aspersion_N = mkN "aspersion" "aspersions";
lin asphalt_N = mkN "asphalt" ;
lin asphalt_V2 = mkV2 (mkV "asphalt" "asphalts" "asphalted" "asphalted" "asphalting");
lin asphodel_N = mkN "asphodel" "asphodels";
lin asphyxia_N = mkN "asphyxia" ;
lin asphyxiate_V2 = mkV2 (mkV "asphyxiate" "asphyxiates" "asphyxiated" "asphyxiated" "asphyxiating");
lin asphyxiation_N = mkN "asphyxiation" ;
lin aspic_N = mkN "aspic" ;
lin aspidistra_N = mkN "aspidistra" "aspidistras";
lin aspirant_N = mkN "aspirant" "aspirants";
lin aspirate_N = mkN "aspirate" "aspirates";
lin aspirate_V2 = mkV2 (mkV "aspirate" "aspirates" "aspirated" "aspirated" "aspirating");
lin aspiration_N = mkN "aspiration" "aspirations";
lin aspire_V = mkV "aspire" "aspires" "aspired" "aspired" "aspiring";
lin aspirin_N = mkN "aspirin" "aspirins";
lin aspull_PN = mkPN "Aspull";
lin ass_N = mkN "ass" "asses";
lin assagai_N = mkN "assagai" "assagais";
lin assail_V2 = mkV2 (mkV "assail" "assails" "assailed" "assailed" "assailing");
lin assailable_A = compoundA (mkA "assailable");
lin assailant_N = mkN "assailant" "assailants";
lin assassin_N = mkN "assassin" "assassins";
lin assassinate_V2 = mkV2 (mkV "assassinate" "assassinates" "assassinated" "assassinated" "assassinating");
lin assassination_N = mkN "assassination" "assassinations";
lin assault_N = mkN "assault" "assaults";
lin assault_V2 = mkV2 (mkV "assault" "assaults" "assaulted" "assaulted" "assaulting");
lin assay_N = mkN "assay" "assays";
lin assay_V2 = mkV2 (mkV "assay" "assays" "assayed" "assayed" "assaying");
lin assegai_N = mkN "assegai" "assegais";
lin assemblage_N = mkN "assemblage" "assemblages";
lin assemble_V = mkV "assemble" "assembles" "assembled" "assembled" "assembling";
lin assemble_V2 = mkV2 (mkV "assemble" "assembles" "assembled" "assembled" "assembling");
lin assembly_N = mkN "assembly" "assemblies";
lin assent_N = mkN "assent" "assents";
lin assent_V = mkV "assent" "assents" "assented" "assented" "assenting";
lin assert_V = mkV "assert";
lin assert_V2 = mkV2 (mkV "assert" "asserts" "asserted" "asserted" "asserting");
lin assert_VS = mkVS (mkV "assert");
lin assertion_N = mkN "assertion" "assertions";
lin assertive_A = compoundA (mkA "assertive");
lin assess_V2 = mkV2 (mkV "assess" "assesses" "assessed" "assessed" "assessing");
lin assessment_N = mkN "assessment" "assessments";
lin assessor_N = mkN "assessor" "assessors";
lin asset_N = mkN "asset" "assets";
lin asseverate_V2 = mkV2 (mkV "asseverate" "asseverates" "asseverated" "asseverated" "asseverating");
lin asseveration_N = mkN "asseveration" "asseverations";
lin asshole_N = mkN "asshole" "assholes";
lin assiduity_N = mkN "assiduity" "assiduities";
lin assiduous_A = compoundA (mkA "assiduous");
lin assign_V2 = mkV2 (mkV "assign" "assigns" "assigned" "assigned" "assigning");
lin assign_V2V = mkV2V (mkV "assign") noPrep to_Prep ;
lin assignable_A = compoundA (mkA "assignable");
lin assignation_N = mkN "assignation" "assignations";
lin assignment_N = mkN "assignment" "assignments";
lin assimilate_V = mkV "assimilate" "assimilates" "assimilated" "assimilated" "assimilating";
lin assimilate_V2 = mkV2 (mkV "assimilate" "assimilates" "assimilated" "assimilated" "assimilating");
lin assimilation_N = mkN "assimilation" ;
lin assist_V = mkV "assist" "assists" "assisted" "assisted" "assisting";
lin assist_V2 = mkV2 (mkV "assist" "assists" "assisted" "assisted" "assisting");
lin assistance_N = mkN "assistance" ;
lin assistant_N = mkN "assistant" "assistants";
lin assize_N = mkN "assize" ;
lin assoc_N = mkN "assoc" ;
lin associate_A = compoundA (mkA "associate");
lin associate_N = mkN "associate" "associates";
lin associate_V = mkV "associate" "associates" "associated" "associated" "associating";
lin associate_V2 = mkV2 (mkV "associate" "associates" "associated" "associated" "associating");
lin association_N = mkN "association" "associations";
lin assonance_N = mkN "assonance" "assonances";
lin assorted_A = compoundA (mkA "assorted");
lin assortment_N = mkN "assortment" "assortments";
lin asst_N = mkN "asst" ;
lin assuage_V2 = mkV2 (mkV "assuage" "assuages" "assuaged" "assuaged" "assuaging");
lin assume_V = mkV "assume";
lin assume_V2 = mkV2 (mkV "assume" "assumes" "assumed" "assumed" "assuming");
lin assume_VS = mkVS (mkV "assume");
lin assumption_N = mkN "assumption" "assumptions";
lin assurance_N = mkN "assurance" "assurances";
lin assure_V2 = mkV2 (mkV "assure" "assures" "assured" "assured" "assuring");
lin assure_VS = mkVS (mkV "assure");
lin assured_A = compoundA (mkA "assured");
lin assuredness_N = mkN "assuredness" ;
lin aster_N = mkN "aster" "asters";
lin asterisk_N = mkN "asterisk" "asterisks";
lin astern_Adv = mkAdv "astern";
lin asteroid_N = mkN "asteroid" "asteroids";
lin asthma_N = mkN "asthma" ;
lin asthmatic_A = compoundA (mkA "asthmatic");
lin astigmatic_A = compoundA (mkA "astigmatic");
lin astigmatism_N = mkN "astigmatism" ;
lin astir_A = compoundA (mkA "astir");
lin astir_Adv = mkAdv "astir";
lin aston_PN = mkPN "Aston";
lin astonish_V2 = mkV2 (mkV "astonish" "astonishes" "astonished" "astonished" "astonishing");
lin astonishing_A = compoundA (mkA "astonishing");
lin astonishment_N = mkN "astonishment" ;
lin astound_V2 = mkV2 (mkV "astound" "astounds" "astounded" "astounded" "astounding");
lin astrakhan_N = mkN "astrakhan" ;
lin astral_A = compoundA (mkA "astral");
lin astray_A = compoundA (mkA "astray");
lin astray_Adv = mkAdv "astray";
lin astride_A = compoundA (mkA "astride");
lin astride_Adv = mkAdv "astride";
lin astride_Prep = mkPrep "astride";
lin astringency_N = mkN "astringency" ;
lin astringent_A = compoundA (mkA "astringent");
lin astringent_N = mkN "astringent" "astringents";
lin astrodome_N = mkN "astrodome" "astrodomes";
lin astrolabe_N = mkN "astrolabe" "astrolabes";
lin astrologer_N = mkN "astrologer" "astrologers";
lin astrological_A = compoundA (mkA "astrological");
lin astrology_N = mkN "astrology" ;
lin astronaut_N = mkN "astronaut" "astronauts";
lin astronautics_N = mkN "astronautics" "astronautics";
lin astronomer_N = mkN "astronomer" "astronomers";
lin astronomical_A = compoundA (mkA "astronomical");
lin astronomy_N = mkN "astronomy" ;
lin astrophysics_N = mkN "astrophysics" "astrophysics";
lin astute_A = compoundA (mkA "astute");
lin astuteness_N = mkN "astuteness" ;
lin asunder_Adv = mkAdv "asunder";
lin asylum_N = mkN "asylum" "asylums";
lin asymmetric_A = compoundA (mkA "asymmetric");
lin asymmetrical_A = compoundA (mkA "asymmetrical");
lin asymmetry_N = mkN "asymmetry" ;
lin asymptote_N = mkN "asymptote" "asymptotes";
lin asymptotic_A = compoundA (mkA "asymptotic");
lin asymptotically_Adv = mkAdv "asymptotically";
lin at_Prep = mkPrep "at";
lin at_home_N = mkN "at - home" "at - homes";
lin atabrine_N = mkN "atabrine" ;
lin atavism_N = mkN "atavism" "atavisms";
lin atavistic_A = compoundA (mkA "atavistic");
lin atelier_N = mkN "atelier" "ateliers";
lin atheism_N = mkN "atheism" ;
lin atheist_N = mkN "atheist" "atheists";
lin atheistic_A = compoundA (mkA "atheistic");
lin athenian_A = compoundA (mkA "athenian");
lin athenian_N = mkN "athenian" "athenians";
lin athens_PN = mkPN "Athens";
lin atherstone_PN = mkPN "Atherstone";
lin athirst_A = compoundA (mkA "athirst");
lin athlete_N = mkN "athlete" "athletes";
lin athletic_A = compoundA (mkA "athletic");
lin athletics_N = mkN "athletics" "athletics";
lin athlone_PN = mkPN "Athlone";
lin athwart_Adv = mkAdv "athwart";
lin atlanta_PN = mkPN "Atlanta";
lin atlantic_PN = mkPN "Atlantic";
lin atlas_N = mkN "atlas" "atlases";
lin atmosphere_N = mkN "atmosphere" "atmospheres";
lin atmospheric_A = compoundA (mkA "atmospheric");
lin atmospherics_N = mkN "atmospherics" "atmospherics";
lin atoll_N = mkN "atoll" "atolls";
lin atom_N = mkN "atom" "atoms";
lin atomic_A = compoundA (mkA "atomic");
lin atomize_V2 = mkV2 (mkV "atomize" "atomizes" "atomized" "atomized" "atomizing");
lin atomizer_N = mkN "atomizer" "atomizers";
lin atonal_A = compoundA (mkA "atonal");
lin atonality_N = mkN "atonality" ;
lin atone_V = mkV "atone" "atones" "atoned" "atoned" "atoning";
lin atonement_N = mkN "atonement" ;
lin atop_Adv = mkAdv "atop";
lin atop_Prep = mkPrep "atop";
lin atrabilious_A = compoundA (mkA "atrabilious");
lin atrocious_A = compoundA (mkA "atrocious");
lin atrocity_N = mkN "atrocity" "atrocities";
lin atrophy_N = mkN "atrophy" ;
lin atrophy_V = mkV "atrophy" "atrophies" "atrophied" "atrophied" "atrophying";
lin atrophy_V2 = mkV2 (mkV "atrophy" "atrophies" "atrophied" "atrophied" "atrophying");
lin attach_V = mkV "attach" "attaches" "attached" "attached" "attaching";
lin attach_V2 = mkV2 (mkV "attach" "attaches" "attached" "attached" "attaching");
lin attache_N = mkN "attaché" "attachés";
lin attachment_N = mkN "attachment" "attachments";
lin attack_N = mkN "attack" "attacks";
lin attack_V2 = mkV2 (mkV "attack" "attacks" "attacked" "attacked" "attacking");
lin attacker_N = mkN "attacker" "attackers";
lin attain_V = mkV "attain" "attains" "attained" "attained" "attaining";
lin attain_V2 = mkV2 (mkV "attain" "attains" "attained" "attained" "attaining");
lin attainable_A = compoundA (mkA "attainable");
lin attainder_N = mkN "attainder" "attainders";
lin attainment_N = mkN "attainment" "attainments";
lin attar_N = mkN "attar" ;
lin attempt_N = mkN "attempt" "attempts";
lin attempt_V2 = mkV2 (mkV "attempt" "attempts" "attempted" "attempted" "attempting");
lin attempt_VV = mkVV (mkV "attempt");
lin attend_V = mkV "attend" "attends" "attended" "attended" "attending";
lin attend_V2 = mkV2 (mkV "attend" "attends" "attended" "attended" "attending");
lin attendance_N = mkN "attendance" "attendances";
lin attendant_A = compoundA (mkA "attendant");
lin attendant_N = mkN "attendant" "attendants";
lin attention_N = mkN "attention" "attentions";
lin attentive_A = compoundA (mkA "attentive");
lin attentiveness_N = mkN "attentiveness" ;
lin attenuate_V2 = mkV2 (mkV "attenuate" "attenuates" "attenuated" "attenuated" "attenuating");
lin attenuation_N = mkN "attenuation" ;
lin attest_V = mkV "attest" "attests" "attested" "attested" "attesting";
lin attest_V2 = mkV2 (mkV "attest" "attests" "attested" "attested" "attesting");
lin attest_VS = mkVS (mkV "attest" "attests" "attested" "attested" "attesting");
lin attic_A = compoundA (mkA "attic");
lin attic_N = mkN "attic" "attics";
lin attire_N = mkN "attire" ;
lin attire_V2 = mkV2 (mkV "attire" "attires" "attired" "attired" "attiring");
lin attitude_N = mkN "attitude" "attitudes";
lin attitudinize_V = mkV "attitudinize" "attitudinizes" "attitudinized" "attitudinized" "attitudinizing";
lin attorney_N = mkN "attorney" "attorneys";
lin attract_V2 = mkV2 (mkV "attract" "attracts" "attracted" "attracted" "attracting");
lin attraction_N = mkN "attraction" "attractions";
lin attractive_A = compoundA (mkA "attractive");
lin attributable_A = compoundA (mkA "attributable");
lin attribute_N = mkN "attribute" "attributes";
lin attribute_V2 = mkV2 (mkV "attribute" "attributes" "attributed" "attributed" "attributing");
lin attribution_N = mkN "attribution" "attributions";
lin attributive_A = compoundA (mkA "attributive");
lin attrition_N = mkN "attrition" ;
lin attune_V2 = mkV2 (mkV "attune" "attunes" "attuned" "attuned" "attuning");
lin atypical_A = compoundA (mkA "atypical");
lin au_fait_A = compoundA (mkA "au fait");
lin au_fond_Adv = mkAdv "au fond";
lin au_pair_N = mkN "au pair" "au pairs";
lin aubergine_N = mkN "aubergine" "aubergines";
lin aubrietia_N = mkN "aubrietia" "aubrietias";
lin auburn_A = compoundA (mkA "auburn");
lin auckland_PN = mkPN "Auckland";
lin auction_N = mkN "auction" "auctions";
lin auction_V2 = mkV2 (mkV "auction" "auctions" "auctioned" "auctioned" "auctioning");
lin auctioneer_N = mkN "auctioneer" "auctioneers";
lin audacious_A = compoundA (mkA "audacious");
lin audacity_N = mkN "audacity" ;
lin audibility_N = mkN "audibility" ;
lin audible_A = compoundA (mkA "audible");
lin audience_N = mkN "audience" "audiences";
lin audio_lingual_A = compoundA (mkA "audio - lingual");
lin audit_N = mkN "audit" "audits";
lin audit_V2 = mkV2 (mkV "audit" "audits" "audited" "audited" "auditing");
lin audition_N = mkN "audition" "auditions";
lin audition_V = mkV "audition";
lin audition_V2 = mkV2 (mkV "audition" "auditions" "auditioned" "auditioned" "auditioning");
lin auditor_N = mkN "auditor" "auditors";
lin auditorium_N = mkN "auditorium" "auditoriums";
lin auditory_A = compoundA (mkA "auditory");
lin audley_PN = mkPN "Audley";
lin audrey_PN = mkPN "Audrey";
lin aug_PN = mkPN "Aug";
lin auger_N = mkN "auger" "augers";
lin aught_N = mkN "aught" ;
lin augment_V = mkV "augment" "augments" "augmented" "augmented" "augmenting";
lin augment_V2 = mkV2 (mkV "augment" "augments" "augmented" "augmented" "augmenting");
lin augmentation_N = mkN "augmentation" "augmentations";
lin augsburg_PN = mkPN "Augsburg";
lin augur_N = mkN "augur" "augurs";
lin augur_V = mkV "augur" "augurs" "augured" "augured" "auguring";
lin augur_V2 = mkV2 (mkV "augur" "augurs" "augured" "augured" "auguring");
lin augury_N = mkN "augury" "auguries";
lin august_A = compoundA (mkA "august");
lin august_N = mkN "august" "augusts";
lin august_PN = mkPN "August";
lin augustan_A = compoundA (mkA "augustan");
lin auk_N = mkN "auk" "auks";
lin auld_lang_syne_N = mkN "auld lang syne" "IRREG";
lin aunt_N = mkN "aunt" "aunts";
lin auntie_N = mkN "auntie" "aunties";
lin aunty_N = mkN "aunty" "aunties";
lin aura_N = mkN "aura" "auras";
lin aural_A = compoundA (mkA "aural");
lin aureole_N = mkN "aureole" "aureoles";
lin auricle_N = mkN "auricle" "auricles";
lin auricular_A = compoundA (mkA "auricular");
lin auriferous_A = compoundA (mkA "auriferous");
lin aurora_N = mkN "aurora" "auroras";
lin auspicious_A = compoundA (mkA "auspicious");
lin aussie_N = mkN "aussie" "aussies";
lin austere_A = compoundA (mkA "austere");
lin austerity_N = mkN "austerity" "austerities";
lin australia_PN = mkPN "Australia";
lin australian_A = compoundA (mkA "australian");
lin australian_N = mkN "australian" "australians";
lin austria_PN = mkPN "Austria";
lin austrian_A = compoundA (mkA "austrian");
lin austrian_N = mkN "austrian" "austrians";
lin autarchy_N = mkN "autarchy" "autarchies";
lin autarky_N = mkN "autarky" ;
lin authentic_A = compoundA (mkA "authentic");
lin authentically_Adv = mkAdv "authentically";
lin authenticate_V2 = mkV2 (mkV "authenticate" "authenticates" "authenticated" "authenticated" "authenticating");
lin authentication_N = mkN "authentication" ;
lin authenticity_N = mkN "authenticity" ;
lin author_N = mkN "author" "authors";
lin authore_V2 = mkV2 (mkV "authore");
lin authoress_N = mkN "authoress" "authoresses";
lin authoritarian_A = compoundA (mkA "authoritarian");
lin authoritarian_N = mkN "authoritarian" "authoritarians";
lin authoritarianism_N = mkN "authoritarianism" ;
lin authoritative_A = compoundA (mkA "authoritative");
lin authority_N = mkN "authority" "authorities";
lin authorization_N = mkN "authorization" ;
lin authorize_V2 = mkV2 (mkV "authorize" "authorizes" "authorized" "authorized" "authorizing");
lin authorize_V2V = mkV2V (mkV "authorize") noPrep to_Prep ;
lin authorship_N = mkN "authorship" ;
lin autism_N = mkN "autism" ;
lin autistic_A = compoundA (mkA "autistic");
lin auto_N = mkN "auto" "autos";
lin auto_changer_N = mkN "auto - changer" "auto - changers";
lin auto_da_fe_N = mkN "auto - da - fé" (variants {"autos - de - fé"; "auto - de - fés"});
lin autobahn_N = mkN "autobahn" "autobahns";
lin autobiographic_A = compoundA (mkA "autobiographic");
lin autobiographical_A = compoundA (mkA "autobiographical");
lin autobiography_N = mkN "autobiography" "autobiographies";
lin autocracy_N = mkN "autocracy" "autocracies";
lin autocrat_N = mkN "autocrat" "autocrats";
lin autocratic_A = compoundA (mkA "autocratic");
lin autocratically_Adv = mkAdv "autocratically";
lin autogiro_N = mkN "autogiro" "autogiros";
lin autograph_N = mkN "autograph" "autographs";
lin autograph_V2 = mkV2 (mkV "autograph" "autographs" "autographed" "autographed" "autographing");
lin autogyro_N = mkN "autogyro" "autogyros";
lin automat_N = mkN "automat" "automats";
lin automate_V2 = mkV2 (mkV "automate" "automates" "automated" "automated" "automating");
lin automatic_A = compoundA (mkA "automatic");
lin automatic_N = mkN "automatic" "automatics";
lin automatically_Adv = mkAdv "automatically";
lin automation_N = mkN "automation" ;
lin automaton_N = mkN "automaton" "automatons";
lin automobile_N = mkN "automobile" "automobiles";
lin autonomous_A = compoundA (mkA "autonomous");
lin autonomy_N = mkN "autonomy" "autonomies";
lin autopsy_N = mkN "autopsy" "autopsies";
lin autostrada_N = mkN "autostrada" "autostradas";
lin autumn_N = mkN "autumn" "autumns";
lin autumnal_A = compoundA (mkA "autumnal");
lin auxiliary_A = compoundA (mkA "auxiliary");
lin auxiliary_N = mkN "auxiliary" "auxiliaries";
lin avail_N = mkN "avail" ;
lin avail_V = mkV "avail" "avails" "availed" "availed" "availing";
lin avail_V2 = mkV2 (mkV "avail" "avails" "availed" "availed" "availing");
lin availability_N = mkN "availability" ;
lin available_A = compoundA (mkA "available");
lin avalanche_N = mkN "avalanche" "avalanches";
lin avant_garde_N = mkN "avant - garde" "avant - gardes";
lin avarice_N = mkN "avarice" ;
lin avaricious_A = compoundA (mkA "avaricious");
lin avatar_N = mkN "avatar" "avatars";
lin ave_PN = mkPN "Ave";
lin aveley_PN = mkPN "Aveley";
lin avenge_V2 = mkV2 (mkV "avenge" "avenges" "avenged" "avenged" "avenging");
lin avenger_N = mkN "avenger" "avengers";
lin avenue_N = mkN "avenue" "avenues";
lin aver_V2 = mkV2 (mkV "aver" "avers" "averred" "averred" "averring");
lin average_A = compoundA (mkA "average");
lin average_N = mkN "average" "averages";
lin average_V = mkV "average" "averages" "averaged" "averaged" "averaging";
lin average_V2 = mkV2 (mkV "average" "averages" "averaged" "averaged" "averaging");
lin averr_VS = mkVS (mkV "averr");
lin averse_A = compoundA (mkA "averse");
lin aversion_N = mkN "aversion" "aversions";
lin avert_V2 = mkV2 (mkV "avert" "averts" "averted" "averted" "averting");
lin aviary_N = mkN "aviary" "aviaries";
lin aviation_N = mkN "aviation" ;
lin aviator_N = mkN "aviator" "aviators";
lin avid_A = compoundA (mkA "avid");
lin avidity_N = mkN "avidity" ;
lin avignon_PN = mkPN "Avignon";
lin avocado_N = mkN "avocado" "avocados";
lin avocation_N = mkN "avocation" "avocations";
lin avoid_V2 = mkV2 (mkV "avoid" "avoids" "avoided" "avoided" "avoiding");
lin avoid_VV = ingVV (mkV "avoid" "avoids" "avoided" "avoided" "avoiding");
lin avoidable_A = compoundA (mkA "avoidable");
lin avoidance_N = mkN "avoidance" ;
lin avoirdupois_N = mkN "avoirdupois" ;
lin avon_PN = mkPN "Avon";
lin avouch_V = mkV "avouch" "avouches" "avouched" "avouched" "avouching";
lin avouch_V2 = mkV2 (mkV "avouch" "avouches" "avouched" "avouched" "avouching");
lin avow_V2 = mkV2 (mkV "avow" "avows" "avowed" "avowed" "avowing");
lin avowal_N = mkN "avowal" "avowals";
lin avowedly_Adv = mkAdv "avowedly";
lin avuncular_A = compoundA (mkA "avuncular");
lin await_V2 = mkV2 (mkV "await" "awaits" "awaited" "awaited" "awaiting");
lin awake_A = compoundA (mkA "awake");
lin awake_V = IrregEng.awake_V;
lin awaken_V2 = mkV2 (mkV "awaken" "awakens" "awakened" "awakened" "awakening");
lin awakening_N = mkN "awakening" "awakenings";
lin award_N = mkN "award" "awards";
lin award_V2 = mkV2 (mkV "award" "awards" "awarded" "awarded" "awarding");
lin aware_A = compoundA (mkA "aware");
lin awareness_N = mkN "awareness" ;
lin awash_A = compoundA (mkA "awash");
lin away_A = compoundA (mkA "away");
lin away_Adv = mkAdv "away";
lin awe_N = mkN "awe" ;
lin awe_V2 = mkV2 (mkV "awe" "awes" "awed" "awed" "awing");
lin awe_inspiring_A = compoundA (mkA "awe - inspiring");
lin awe_stricken_A = compoundA (mkA "awe - stricken");
lin awe_struck_A = compoundA (mkA "awe - struck");
lin aweigh_Adv = mkAdv "aweigh";
lin awesome_A = compoundA (mkA "awesome");
lin awful_A = compoundA (mkA "awful");
lin awhile_Adv = mkAdv "awhile";
lin awkward_A = compoundA (mkA "awkward");
lin awkwardness_N = mkN "awkwardness" ;
lin awl_N = mkN "awl" "awls";
lin awning_N = mkN "awning" "awnings";
lin awol_PN = mkPN "Awol";
lin awry_A = compoundA (mkA "awry");
lin awry_Adv = mkAdv "awry";
lin ax_N = mkN "ax" "axes";
lin ax_V2 = mkV2 (mkV "ax" "axes" "axed" "axed" "axing");
lin axe_N = mkN "axe" "axes";
lin axe_V2 = mkV2 (mkV "axe" "axes" "axed" "axed" "axing");
lin axiom_N = mkN "axiom" "axioms";
lin axiomatic_A = compoundA (mkA "axiomatic");
lin axiomatically_Adv = mkAdv "axiomatically";
lin axis_N = mkN "axis" "axes" {- FIXME: guessed plural form -};
lin axle_N = mkN "axle" "axles";
lin ay_Adv = mkAdv "ay";
lin ayah_N = mkN "ayah" "ayahs";
lin aycliffe_PN = mkPN "Aycliffe";
lin aye_Adv = mkAdv "aye";
lin aylesbury_PN = mkPN "Aylesbury";
lin aylesford_PN = mkPN "Aylesford";
lin ayr_PN = mkPN "Ayr";
lin azalea_N = mkN "azalea" "azaleas";
lin azimuth_N = mkN "azimuth" "azimuths";
lin azure_A = compoundA (mkA "azure");
lin azure_N = mkN "azure" "azures";
lin b_ed_N = mkN "b ed" ;
lin ba_N = mkN "ba" ;
lin baa_N = mkN "baa" "baas";
lin baa_V = mkV "baa" "baas" "baaed" "baaed" "baaing";
lin baa_lamb_N = mkN "baa - lamb" "baa - lambs";
lin babble_N = mkN "babble" ;
lin babble_V = mkV "babble" "babbles" "babbled" "babbled" "babbling";
lin babble_V2 = mkV2 (mkV "babble" "babbles" "babbled" "babbled" "babbling");
lin babbler_N = mkN "babbler" "babblers";
lin babe_N = mkN "babe" "babes";
lin babel_N = mkN "babel" "babels";
lin baboo_N = mkN "baboo" "baboos";
lin baboon_N = mkN "baboon" "baboons";
lin babs_PN = mkPN "Babs";
lin babu_N = mkN "babu" "babus";
lin baby_N = mkN "baby" "babies";
lin baby_V2 = mkV2 (mkV "baby" "babies" "babied" "babied" "babying");
lin baby_faced_A = compoundA (mkA "baby - faced");
lin baby_farmer_N = mkN "baby - farmer" "baby - farmers";
lin baby_minder_N = mkN "baby - minder" "baby - minders";
lin baby_talk_N = mkN "baby - talk";
lin babyhood_N = mkN "babyhood";
lin babyish_A = compoundA (mkA "babyish");
lin babysit_V = mkV "baby" IrregEng.sit_V;
lin babysitter_N = mkN "babysitter" "babysitters";
lin babysitting_N = mkN "babysitting" ;
lin baccalaureate_N = mkN "baccalaureate" "baccalaureates";
lin baccarat_N = mkN "baccarat" ;
lin bacchanal_A = compoundA (mkA "bacchanal");
lin bacchanal_N = mkN "bacchanal" "bacchanals";
lin bacchanalian_A = compoundA (mkA "bacchanalian");
lin baccy_N = mkN "baccy" ;
lin bachelor_N = mkN "bachelor" "bachelors";
lin bacillus_N = mkN "bacillus" "bacilli" {- FIXME: guessed plural form -};
lin back_Adv = mkAdv "back";
lin back_N = mkN "back" "backs";
lin back_V = mkV "back" "backs" "backed" "backed" "backing";
lin back_V2 = mkV2 (mkV "back" "backs" "backed" "backed" "backing");
lin back_breaking_A = compoundA (mkA "back - breaking");
lin back_down_N = mkN "back - down" "back - downs";
lin back_formation_N = mkN "back - formation" "back - formations";
lin back_up_N = mkN "back - up" "back - ups";
lin backache_N = mkN "backache" "backaches";
lin backband_N = mkN "backband" "backbands";
lin backbench_N = mkN "backbench" "backbenches";
lin backbencher_N = mkN "backbencher" "backbenchers";
lin backbite_V = mkV "back" IrregEng.bite_V;
lin backbite_V2 = mkV2 (mkV "back" IrregEng.bite_V);
lin backbiter_N = mkN "backbiter" "backbiters";
lin backboard_N = mkN "backboard" "backboards";
lin backbone_N = mkN "backbone" "backbones";
lin backchat_N = mkN "backchat" ;
lin backcloth_N = mkN "backcloth" "backcloths";
lin backdate_V2 = mkV2 (mkV "backdate" "backdates" "backdated" "backdated" "backdating");
lin backdoor_N = mkN "backdoor" "backdoors";
lin backdrop_N = mkN "backdrop" "backdrops";
lin backer_N = mkN "backer" "backers";
lin backfire_N = mkN "backfire" "backfires";
lin backfire_V = mkV "backfire" "backfires" "backfired" "backfired" "backfiring";
lin backgammon_N = mkN "backgammon" ;
lin background_N = mkN "background" "backgrounds";
lin backhand_A = compoundA (mkA "backhand");
lin backhanded_A = compoundA (mkA "backhanded");
lin backing_N = mkN "backing" "backings";
lin backlash_N = mkN "backlash" ;
lin backless_A = compoundA (mkA "backless");
lin backlog_N = mkN "backlog" "backlogs";
lin backmost_A = compoundA (mkA "backmost");
lin backpedal_V = mkV "backpedal" "backpedals" "backpedalled" "backpedalled" "backpedalling";
lin backpedaling_V = mkV "backpedaling";
lin backroom_N = mkN "backroom" "backrooms";
lin backscratcher_N = mkN "backscratcher" "backscratchers";
lin backseat_N = mkN "backseat" "backseats";
lin backsheesh_N = mkN "backsheesh" "backsheesh";
lin backside_N = mkN "backside" "backsides";
lin backslide_V = mkV "back" IrregEng.slide_V;
lin backspace_V = mkV "backspace" "backspaces" "backspaced" "backspaced" "backspacing";
lin backstage_Adv = mkAdv "backstage";
lin backstair_A = compoundA (mkA "backstair");
lin backstroke_N = mkN "backstroke" "backstrokes";
lin backsword_N = mkN "backsword" "backswords";
lin backtalk_N = mkN "backtalk" ;
lin backward_A = compoundA (mkA "backward");
lin backward_Adv = mkAdv "backward";
lin backwards_A = compoundA (mkA "backwards");
lin backwards_Adv = mkAdv "backwards";
lin backwash_N = mkN "backwash" ;
lin backwater_N = mkN "backwater" "backwaters";
lin backwoodsman_N = mkN "backwoodsman" "backwoodsmen" {- FIXME: guessed plural form -};
lin backworth_PN = mkPN "Backworth";
lin bacon_N = mkN "bacon" ;
lin bacterial_A = compoundA (mkA "bacterial");
lin bacteriologist_N = mkN "bacteriologist" "bacteriologists";
lin bacteriology_N = mkN "bacteriology" ;
lin bacterium_N = mkN "bacterium" "bacteria" {- FIXME: guessed plural form -};
lin bacup_PN = mkPN "Bacup";
lin bad_A = mkA "bad" "badder*";
lin bad_N = mkN "bad" ;
lin badajoz_PN = mkPN "Badajoz";
lin badalona_PN = mkPN "Badalona";
lin badge_N = mkN "badge" "badges";
lin badger_N = mkN "badger" "badgers";
lin badger_V2 = mkV2 (mkV "badger" "badgers" "badgered" "badgered" "badgering");
lin badinage_N = mkN "badinage" ;
lin badly_behaved_A = compoundA (mkA "badly - behaved");
lin badminton_N = mkN "badminton" ;
lin badness_N = mkN "badness" ;
lin baffle_N = mkN "baffle" "baffles";
lin baffle_V2 = mkV2 (mkV "baffle" "baffles" "baffled" "baffled" "baffling");
lin bag_N = mkN "bag" "bags";
lin bag_V = mkV "bag" "bags" "bagged" "bagged" "bagging";
lin bag_V2 = mkV2 (mkV "bag" "bags" "bagged" "bagged" "bagging");
lin bagatelle_N = mkN "bagatelle" "bagatelles";
lin baggage_N = mkN "baggage" ;
lin baggy_A = compoundA (mkA "baggy");
lin baghdad_PN = mkPN "Baghdad";
lin bagnio_N = mkN "bagnio" "bagnios";
lin bagpipe_N = mkN "bagpipe" "bagpipes";
lin bahamas_PN = mkPN "Bahamas";
lin bahamian_A = compoundA (mkA "bahamian");
lin bahamian_N = mkN "bahamian" "bahamians";
lin bahasa_N = mkN "bahasa" ;
lin bahrain_PN = mkPN "Bahrain";
lin bahraini_A = compoundA (mkA "bahraini");
lin bahraini_N = mkN "bahraini" "bahrainis";
lin bail_N = mkN "bail" "bails";
lin bail_V = mkV "bail" "bails" "bailed" "bailed" "bailing";
lin bail_V2 = mkV2 (mkV "bail" "bails" "bailed" "bailed" "bailing");
lin bailee_N = mkN "bailee" "bailees";
lin bailey_N = mkN "bailey" "baileys";
lin bailey_PN = mkPN "Bailey";
lin bailiff_N = mkN "bailiff" "bailiffs";
lin bailment_N = mkN "bailment" "bailments";
lin bailor_N = mkN "bailor" "bailors";
lin bairn_N = mkN "bairn" "bairns";
lin bait_N = mkN "bait" "baits";
lin bait_V = mkV "bait" "baits" "baited" "baited" "baiting";
lin bait_V2 = mkV2 (mkV "bait" "baits" "baited" "baited" "baiting");
lin baize_N = mkN "baize" ;
lin bake_V = mkV "bake" "bakes" "baked" "baked" "baking";
lin bake_V2 = mkV2 (mkV "bake" "bakes" "baked" "baked" "baking");
lin bakelite_N = mkN "bakelite" ;
lin baker_N = mkN "baker" "bakers";
lin bakery_N = mkN "bakery" "bakeries";
lin baking_hot_A = compoundA (mkA "baking - hot");
lin baking_powder_N = mkN "baking - powder" "baking - powders";
lin baksheesh_N = mkN "baksheesh" "baksheesh";
lin baku_PN = mkPN "Baku";
lin balaclava_N = mkN "balaclava" "balaclavas";
lin balalaika_N = mkN "balalaika" "balalaikas";
lin balance_N = mkN "balance" "balances";
lin balance_V = mkV "balance" "balances" "balanced" "balanced" "balancing";
lin balance_V2 = mkV2 (mkV "balance" "balances" "balanced" "balanced" "balancing");
lin balance_sheet_N = mkN "balance - sheet" "balance - sheets";
lin balance_wheel_N = mkN "balance - wheel" "balance - wheels";
lin balconied_A = compoundA (mkA "balconied");
lin balcony_N = mkN "balcony" "balconies";
lin bald_A = mkA "bald" "balder";
lin bald_head_N = mkN "bald - head" "bald - heads";
lin bald_pate_N = mkN "bald - pate" "bald - pates";
lin balderdash_N = mkN "balderdash" ;
lin baldness_N = mkN "baldness" ;
lin baldock_PN = mkPN "Baldock";
lin baldric_N = mkN "baldric" "baldrics";
lin bale_N = mkN "bale" "bales";
lin bale_V2 = mkV2 (mkV "bale" "bales" "baled" "baled" "baling");
lin baleful_A = compoundA (mkA "baleful");
lin balk_N = mkN "balk" "balks";
lin balk_V = mkV "balk" "balks" "balked" "balked" "balking";
lin balk_V2 = mkV2 (mkV "balk" "balks" "balked" "balked" "balking");
lin ball_N = mkN "ball" "balls";
lin ball_V = mkV "ball" "balls" "balled" "balled" "balling";
lin ball_V2 = mkV2 (mkV "ball" "balls" "balled" "balled" "balling");
lin ball_cartridge_N = mkN "ball - cartridge" "ball - cartridges";
lin ball_dress_N = mkN "ball - dress" "ball - dresses";
lin ballad_N = mkN "ballad" "ballads";
lin ballade_N = mkN "ballade" "ballades";
lin ballast_N = mkN "ballast" ;
lin ballast_V2 = mkV2 (mkV "ballast" "ballasts" "ballasted" "ballasted" "ballasting");
lin ballbearing_N = mkN "ballbearing" "ballbearings";
lin ballcock_N = mkN "ballcock" "ballcocks";
lin ballerina_N = mkN "ballerina" "ballerinas";
lin ballet_N = mkN "ballet" "ballets";
lin ballet_dancer_N = mkN "ballet - dancer" "ballet - dancers";
lin ballet_skirt_N = mkN "ballet - skirt" "ballet - skirts";
lin ballistic_A = compoundA (mkA "ballistic");
lin ballistics_N = mkN "ballistics" "ballistics";
lin ballock_N = mkN "ballock" "ballocks";
lin balloon_N = mkN "balloon" "balloons";
lin balloon_V = mkV "balloon" "balloons" "ballooned" "ballooned" "ballooning";
lin balloon_V2 = mkV2 (mkV "balloon" "balloons" "ballooned" "ballooned" "ballooning");
lin balloonist_N = mkN "balloonist" "balloonists";
lin ballot_N = mkN "ballot" "ballots";
lin ballot_V = mkV "ballot" "ballots" "balloted" "balloted" "balloting";
lin ballot_box_N = mkN "ballot - box" "ballot - boxes";
lin ballpen_N = mkN "ballpen" "ballpens";
lin ballpoint_N = mkN "ballpoint" "ballpoints";
lin ballpoint_pen_N = mkN "ballpoint - pen" "ballpoint - pens";
lin ballroom_N = mkN "ballroom" "ballrooms";
lin balls_up_N = mkN "balls - up" "balls - ups";
lin bally_A = compoundA (mkA "bally");
lin bally_Adv = mkAdv "bally";
lin ballyhoo_N = mkN "ballyhoo" ;
lin balm_N = mkN "balm" ;
lin balmy_A = mkA "balmy" "balmier";
lin baloney_N = mkN "baloney" ;
lin balsa_N = mkN "balsa" "balsas";
lin balsam_N = mkN "balsam" "balsams";
lin baltimore_PN = mkPN "Baltimore";
lin baluster_N = mkN "baluster" "balusters";
lin balustrade_N = mkN "balustrade" "balustrades";
lin bambino_N = mkN "bambino" "bambinos";
lin bamboo_N = mkN "bamboo" "bamboos";
lin bamboozle_V2 = mkV2 (mkV "bamboozle" "bamboozles" "bamboozled" "bamboozled" "bamboozling");
lin ban_N = mkN "ban" "bans";
lin ban_V2 = mkV2 (mkV "ban" "bans" "banned" "banned" "banning");
lin banal_A = compoundA (mkA "banal");
lin banality_N = mkN "banality" "banalities";
lin banana_N = mkN "banana" "bananas";
lin banbury_PN = mkPN "Banbury";
lin band_N = mkN "band" "bands";
lin band_V = mkV "band" "bands" "banded" "banded" "banding";
lin band_V2 = mkV2 (mkV "band" "bands" "banded" "banded" "banding");
lin band_saw_N = mkN "band - saw" "band - saws";
lin bandage_N = mkN "bandage" "bandages";
lin bandage_V2 = mkV2 (mkV "bandage" "bandages" "bandaged" "bandaged" "bandaging");
lin bandanna_N = mkN "bandanna" "bandannas";
lin bandbox_N = mkN "bandbox" "bandboxes";
lin bandeau_N = mkN "bandeau" "bandeaux" {- FIXME: guessed plural form -};
lin bandit_N = mkN "bandit" "bandits";
lin banditry_N = mkN "banditry" ;
lin bandleader_N = mkN "bandleader" "bandleaders";
lin bandmaster_N = mkN "bandmaster" "bandmasters";
lin bandoleer_N = mkN "bandoleer" "bandoleers";
lin bandolier_N = mkN "bandolier" "bandoliers";
lin bandsman_N = mkN "bandsman" "bandsmen" {- FIXME: guessed plural form -};
lin bandstand_N = mkN "bandstand" "bandstands";
lin bandung_PN = mkPN "Bandung";
lin bandwagon_N = mkN "bandwagon" "bandwagons";
lin bandy_A = mkA "bandy" "bandier";
lin bandy_V2 = mkV2 (mkV "bandy" "bandies" "bandied" "bandied" "bandying");
lin bandy_legged_A = compoundA (mkA "bandy - legged");
lin bane_N = mkN "bane" ;
lin baneful_A = compoundA (mkA "baneful");
lin bang_Adv = mkAdv "bang";
lin bang_N = mkN "bang" "bangs";
lin bang_V = mkV "bang" "bangs" "banged" "banged" "banging";
lin bang_V2 = mkV2 (mkV "bang" "bangs" "banged" "banged" "banging");
lin bangalore_PN = mkPN "Bangalore";
lin banger_N = mkN "banger" "bangers";
lin bangkok_PN = mkPN "Bangkok";
lin bangladesh_PN = mkPN "Bangladesh";
lin bangladeshi_A = compoundA (mkA "bangladeshi");
lin bangladeshi_N = mkN "bangladeshi" "bangladeshis";
lin bangle_N = mkN "bangle" "bangles";
lin bangor_PN = mkPN "Bangor";
lin banian_N = mkN "banian" "banians";
lin banian_tree_N = mkN "banian - tree" "banian - trees";
lin banish_V2 = mkV2 (mkV "banish" "banishes" "banished" "banished" "banishing");
lin banishment_N = mkN "banishment" ;
lin banister_N = mkN "banister" "banisters";
lin banjo_N = mkN "banjo" "banjos";
lin bank_N = mkN "bank" "banks";
lin bank_V = mkV "bank" "banks" "banked" "banked" "banking";
lin bank_V2 = mkV2 (mkV "bank" "banks" "banked" "banked" "banking");
lin bank_bill_N = mkN "bank - bill" "bank - bills";
lin bank_book_N = mkN "bank - book" "bank - books";
lin bank_draft_N = mkN "bank - draft" "bank - drafts";
lin bank_rate_N = mkN "bank - rate" "bank - rates";
lin banker_N = mkN "banker" "bankers";
lin banking_N = mkN "banking" ;
lin banknote_N = mkN "banknote" "banknotes";
lin bankroll_N = mkN "bankroll" "bankrolls";
lin bankrupt_A = compoundA (mkA "bankrupt");
lin bankrupt_N = mkN "bankrupt" "bankrupts";
lin bankrupt_V2 = mkV2 (mkV "bankrupt" "bankrupts" "bankrupted" "bankrupted" "bankrupting");
lin bankruptcy_N = mkN "bankruptcy" "bankruptcies";
lin banner_N = mkN "banner" "banners";
lin banning_order_N = mkN "banning - order" "banning - orders";
lin bannister_N = mkN "bannister" "bannisters";
lin bannock_N = mkN "bannock" "bannocks";
lin bannockburn_PN = mkPN "Bannockburn";
lin banquet_N = mkN "banquet" "banquets";
lin banquet_V = mkV "banquet" "banquets" "banqueted" "banqueted" "banqueting";
lin banquet_V2 = mkV2 (mkV "banquet" "banquets" "banqueted" "banqueted" "banqueting");
lin banshee_N = mkN "banshee" "banshees";
lin bant_V = mkV "bant" "bants" "banted" "banted" "banting";
lin bantam_N = mkN "bantam" "bantams";
lin banter_N = mkN "banter" ;
lin banter_V = mkV "banter" "banters" "bantered" "bantered" "bantering";
lin banter_V2 = mkV2 (mkV "banter" "banters" "bantered" "bantered" "bantering");
lin bantering_A = compoundA (mkA "bantering");
lin banting_N = mkN "banting" ;
lin bantry_PN = mkPN "Bantry";
lin bantu_A = compoundA (mkA "bantu");
lin bantu_N = mkN "bantu" "bantu";
lin banyan_N = mkN "banyan" "banyans";
lin baobab_N = mkN "baobab" "baobabs";
lin baptism_N = mkN "baptism" "baptisms";
lin baptismal_A = compoundA (mkA "baptismal");
lin baptist_A = compoundA (mkA "baptist");
lin baptist_N = mkN "baptist" "baptists";
lin baptize_V2 = mkV2 (mkV "baptize" "baptizes" "baptized" "baptized" "baptizing");
lin bar_N = mkN "bar" "bars";
lin bar_V2 = mkV2 (mkV "bar" "bars" "barred" "barred" "barring");
lin bar_Prep = mkPrep "bar";
lin baracaldo_PN = mkPN "Baracaldo";
lin barb_N = mkN "barb" "barbs";
lin barbadian_A = compoundA (mkA "barbadian");
lin barbadian_N = mkN "barbadian" "barbadians";
lin barbados_PN = mkPN "Barbados";
lin barbara_PN = mkPN "Barbara";
lin barbarian_A = compoundA (mkA "barbarian");
lin barbarian_N = mkN "barbarian" "barbarians";
lin barbaric_A = compoundA (mkA "barbaric");
lin barbarism_N = mkN "barbarism" "barbarisms";
lin barbarity_N = mkN "barbarity" "barbarities";
lin barbarize_V2 = mkV2 (mkV "barbarize" "barbarizes" "barbarized" "barbarized" "barbarizing");
lin barbarous_A = compoundA (mkA "barbarous");
lin barbecue_N = mkN "barbecue" "barbecues";
lin barbecue_V2 = mkV2 (mkV "barbecue" "barbecues" "barbecued" "barbecued" "barbecuing");
lin barbed_A = compoundA (mkA "barbed");
lin barbel_N = mkN "barbel" "barbels";
lin barber_N = mkN "barber" "barbers";
lin barbican_N = mkN "barbican" "barbicans";
lin barbitone_N = mkN "barbitone" ;
lin barbiturate_N = mkN "barbiturate" "barbiturates";
lin barcarole_N = mkN "barcarole" "barcaroles";
lin barcarolle_N = mkN "barcarolle" "barcarolles";
lin barcelona_PN = mkPN "Barcelona";
lin bard_N = mkN "bard" "bards";
lin bardic_A = compoundA (mkA "bardic");
lin bardolatry_N = mkN "bardolatry" ;
lin bare_A = mkA "bare" "barer";
lin bare_V2 = mkV2 (mkV "bare" "bares" "bared" "bared" "baring");
lin bareback_Adv = mkAdv "bareback";
lin barebacked_A = compoundA (mkA "barebacked");
lin barebacked_Adv = mkAdv "barebacked";
lin barefaced_A = compoundA (mkA "barefaced");
lin barefoot_Adv = mkAdv "barefoot";
lin barefooted_A = compoundA (mkA "barefooted");
lin barefooted_Adv = mkAdv "barefooted";
lin bareheaded_A = compoundA (mkA "bareheaded");
lin barelegged_A = compoundA (mkA "barelegged");
lin bareness_N = mkN "bareness" ;
lin bargain_N = mkN "bargain" "bargains";
lin bargain_V = mkV "bargain" "bargains" "bargained" "bargained" "bargaining";
lin bargain_V2 = mkV2 (mkV "bargain" "bargains" "bargained" "bargained" "bargaining");
lin barge_N = mkN "barge" "barges";
lin barge_V = mkV "barge" "barges" "barged" "barged" "barging";
lin bargee_N = mkN "bargee" "bargees";
lin bargepole_N = mkN "bargepole" "bargepoles";
lin bargoed_PN = mkPN "Bargoed";
lin bari_PN = mkPN "Bari";
lin baritone_N = mkN "baritone" "baritones";
lin barium_N = mkN "barium" ;
lin bark_N = mkN "bark" "barks";
lin bark_V = mkV "bark" "barks" "barked" "barked" "barking";
lin bark_V2 = mkV2 (mkV "bark" "barks" "barked" "barked" "barking");
lin barker_N = mkN "barker" "barkers";
lin barking_PN = mkPN "Barking";
lin barley_N = mkN "barley" ;
lin barley_sugar_N = mkN "barley - sugar" "barley - sugars";
lin barley_water_N = mkN "barley - water" ;
lin barleycorn_N = mkN "barleycorn" "barleycorns";
lin barm_N = mkN "barm" ;
lin barmaid_N = mkN "barmaid" "barmaids";
lin barman_N = mkN "barman" "barmen" {- FIXME: guessed plural form -};
lin barmy_A = compoundA (mkA "barmy");
lin barn_N = mkN "barn" "barns";
lin barn_door_N = mkN "barn - door" "barn - doors";
lin barnacle_N = mkN "barnacle" "barnacles";
lin barnard_castle_PN = mkPN "Barnard castle";
lin barnet_PN = mkPN "Barnet";
lin barnoldswick_PN = mkPN "Barnoldswick";
lin barnsley_PN = mkPN "Barnsley";
lin barnstaple_PN = mkPN "Barnstaple";
lin barnstorm_V = mkV "barnstorm" "barnstorms" "barnstormed" "barnstormed" "barnstorming";
lin barnstormer_N = mkN "barnstormer" "barnstormers";
lin barnyard_N = mkN "barnyard" "barnyards";
lin barometer_N = mkN "barometer" "barometers";
lin barometric_A = compoundA (mkA "barometric");
lin baron_N = mkN "baron" "barons";
lin baronage_N = mkN "baronage" "baronages";
lin baroness_N = mkN "baroness" "baronesses";
lin baronet_N = mkN "baronet" "baronets";
lin baronetcy_N = mkN "baronetcy" "baronetcies";
lin baronial_A = compoundA (mkA "baronial");
lin barony_N = mkN "barony" "baronies";
lin baroque_A = compoundA (mkA "baroque");
lin baroque_N = mkN "baroque" "IRREG";
lin barouche_N = mkN "barouche" "barouches";
lin barque_N = mkN "barque" "barques";
lin barrack_N = mkN "barrack" "barracks";
lin barrack_V = mkV "barrack" "barracks" "barracked" "barracked" "barracking";
lin barrack_V2 = mkV2 (mkV "barrack" "barracks" "barracked" "barracked" "barracking");
lin barracking_N = mkN "barracking" ;
lin barracuda_N = mkN "barracuda" "barracudas";
lin barrage_N = mkN "barrage" "barrages";
lin barranquilla_PN = mkPN "Barranquilla";
lin barrel_N = mkN "barrel" "barrels";
lin barrel_V2 = mkV2 (mkV "barrel" "barrels" "barrelled" "barrelled" "barrelling");
lin barrelled_A = compoundA (mkA "barrelled");
lin barren_A = compoundA (mkA "barren");
lin barrenness_N = mkN "barrenness" ;
lin barrhead_PN = mkPN "Barrhead";
lin barricade_N = mkN "barricade" "barricades";
lin barricade_V2 = mkV2 (mkV "barricade" "barricades" "barricaded" "barricaded" "barricading");
lin barrier_N = mkN "barrier" "barriers";
lin barrister_N = mkN "barrister" "barristers";
lin barrow_N = mkN "barrow" "barrows";
lin barrow_boy_N = mkN "barrow - boy" "barrow - boys";
lin barrow_in_furness_PN = mkPN "Barrow - in - furness";
lin barrow_man_N = mkN "barrow - man" "barrow - men";
lin barry_PN = mkPN "Barry";
lin bart_PN = mkPN "Bart";
lin bartender_N = mkN "bartender" "bartenders";
lin barter_N = mkN "barter" ;
lin barter_V = mkV "barter" "barters" "bartered" "bartered" "bartering";
lin barter_V2 = mkV2 (mkV "barter" "barters" "bartered" "bartered" "bartering");
lin barterer_N = mkN "barterer" "barterers";
lin bartholomew_PN = mkPN "Bartholomew";
lin barton_upon_humber_PN = mkPN "Barton - upon - humber";
lin bas_relief_N = mkN "bas - relief" "bas - reliefs";
lin basal_A = compoundA (mkA "basal");
lin basalt_N = mkN "basalt" ;
lin bascule_N = mkN "bascule" "bascules";
lin base_A = mkA "base" "baser";
lin base_N = mkN "base" "bases";
lin base_V = mkV "base";
lin base_V2 = mkV2 (mkV "base" "bases" "based" "based" "basing");
lin baseball_N = mkN "baseball" "baseballs";
lin baseboard_N = mkN "baseboard" "baseboards";
lin basel_PN = mkPN "Basel";
lin baseless_A = compoundA (mkA "baseless");
lin basement_N = mkN "basement" "basements";
lin bash_N = mkN "bash" "bashes";
lin bash_V2 = mkV2 (mkV "bash" "bashes" "bashed" "bashed" "bashing");
lin bashful_A = compoundA (mkA "bashful");
lin basic_A = compoundA (mkA "basic");
lin basically_Adv = mkAdv "basically";
lin basil_N = mkN "basil" ;
lin basil_PN = mkPN "Basil";
lin basildon_PN = mkPN "Basildon";
lin basilica_N = mkN "basilica" "basilicas";
lin basilisk_N = mkN "basilisk" "basilisks";
lin basin_N = mkN "basin" "basins";
lin basingstoke_PN = mkPN "Basingstoke";
lin basis_N = mkN "basis" "bases" {- FIXME: guessed plural form -};
lin bask_V = mkV "bask" "basks" "basked" "basked" "basking";
lin basket_N = mkN "basket" "baskets";
lin basketball_N = mkN "basketball" "basketballs";
lin basketry_N = mkN "basketry" ;
lin bass_A = compoundA (mkA "bass");
lin bass_N = mkN "bass" ;
lin bassinet_N = mkN "bassinet" "bassinets";
lin bassoon_N = mkN "bassoon" "bassoons";
lin bast_N = mkN "bast" ;
lin bastard_N = mkN "bastard" "bastards";
lin bastardize_V2 = mkV2 (mkV "bastardize" "bastardizes" "bastardized" "bastardized" "bastardizing");
lin bastardy_N = mkN "bastardy" "bastardies";
lin baste_V2 = mkV2 (mkV "baste" "bastes" "basted" "basted" "basting");
lin bastinado_N = mkN "bastinado" "bastinadi" {- FIXME: guessed plural form -};
lin bastinado_V2 = mkV2 (mkV "bastinado" "bastinados" "bastinadoed" "bastinadoed" "bastinadoing");
lin bastion_N = mkN "bastion" "bastions";
lin bat_N = mkN "bat" "bats";
lin bat_V = mkV "bat" "bats" "batted" "batted" "batting";
lin bat_V2 = mkV2 (mkV "bat" "bats" "batted" "batted" "batting");
lin batch_N = mkN "batch" "batches";
lin bate_V2 = mkV2 (mkV "bate" "bates" "bated" "bated" "bating");
lin bath_N = mkN "bath" "baths";
lin bath_PN = mkPN "Bath";
lin bath_V = mkV "bath" "baths" "bathed" "bathed" "bathing";
lin bath_V2 = mkV2 (mkV "bath" "baths" "bathed" "bathed" "bathing");
lin bath_chair_N = mkN "bath - chair" "bath - chairs";
lin bathe_N = mkN "bathe" "bathes";
lin bathe_V = mkV "bathe" "bathes" "bathed" "bathed" "bathing";
lin bathe_V2 = mkV2 (mkV "bathe" "bathes" "bathed" "bathed" "bathing");
lin bather_N = mkN "bather" "bathers";
lin bathgate_PN = mkPN "Bathgate";
lin bathing_N = mkN "bathing" "bathings";
lin bathing_cap_N = mkN "bathing - cap" "bathing - caps";
lin bathing_costume_N = mkN "bathing - costume" "bathing - costumes";
lin bathing_machine_N = mkN "bathing - machine" "bathing - machines";
lin bathing_suit_N = mkN "bathing - suit" "bathing - suits";
lin bathos_N = mkN "bathos" ;
lin bathrobe_N = mkN "bathrobe" "bathrobes";
lin bathroom_N = mkN "bathroom" "bathrooms";
lin bathtub_N = mkN "bathtub" "bathtubs";
lin bathysphere_N = mkN "bathysphere" "bathyspheres";
lin batik_N = mkN "batik" "batiks";
lin batiste_N = mkN "batiste" ;
lin batley_PN = mkPN "Batley";
lin batman_N = mkN "batman" "batmen" {- FIXME: guessed plural form -};
lin baton_N = mkN "baton" "batons";
lin bats_A = compoundA (mkA "bats");
lin batsman_N = mkN "batsman" "batsmen" {- FIXME: guessed plural form -};
lin battalion_N = mkN "battalion" "battalions";
lin batten_N = mkN "batten" "battens";
lin batten_V = mkV "batten" "battens" "battened" "battened" "battening";
lin batten_V2 = mkV2 (mkV "batten" "battens" "battened" "battened" "battening");
lin batter_N = mkN "batter" ;
lin batter_V = mkV "batter" "batters" "battered" "battered" "battering";
lin batter_V2 = mkV2 (mkV "batter" "batters" "battered" "battered" "battering");
lin battery_N = mkN "battery" "batteries";
lin batting_N = mkN "batting" ;
lin battle_N = mkN "battle" "battles";
lin battle_V = mkV "battle" "battles" "battled" "battled" "battling";
lin battle_V2 = mkV2 (mkV "battle" "battles" "battled" "battled" "battling");
lin battle_axe_N = mkN "battle - axe" "battle - axes";
lin battle_cruiser_N = mkN "battle - cruiser" "battle - cruisers";
lin battledore_N = mkN "battledore" "battledores";
lin battledress_N = mkN "battledress";
lin battlefield_N = mkN "battlefield" "battlefields";
lin battleground_N = mkN "battleground" "battlegrounds";
lin battleship_N = mkN "battleship" "battleships";
lin battue_N = mkN "battue" "battues";
lin batty_A = compoundA (mkA "batty");
lin bauble_N = mkN "bauble" "baubles";
lin baulk_N = mkN "baulk" "baulks";
lin baulk_V = mkV "baulk" "baulks" "baulked" "baulked" "baulking";
lin baulk_V2 = mkV2 (mkV "baulk" "baulks" "baulked" "baulked" "baulking");
lin bauxite_N = mkN "bauxite" ;
lin bawbee_N = mkN "bawbee" "bawbees";
lin bawd_N = mkN "bawd" "bawds";
lin bawdily_Adv = mkAdv "bawdily";
lin bawdy_A = mkA "bawdy" "bawdier";
lin bawdy_N = mkN "bawdy" ;
lin bawl_V = mkV "bawl" "bawls" "bawled" "bawled" "bawling";
lin bawl_V2 = mkV2 (mkV "bawl" "bawls" "bawled" "bawled" "bawling");
lin bay_A = compoundA (mkA "bay");
lin bay_N = mkN "bay" "bays";
lin bay_V = mkV "bay" "bays" "bayed" "bayed" "baying";
lin bay_wreath_N = mkN "bay - wreath" "bay - wreaths";
lin bayonet_N = mkN "bayonet" "bayonets";
lin bayonet_V2 = mkV2 (mkV "bayonet" "bayonets" "bayoneted" "bayoneted" "bayoneting");
lin bayou_N = mkN "bayou" "bayous";
lin bazaar_N = mkN "bazaar" "bazaars";
lin bazooka_N = mkN "bazooka" "bazookas";
lin bbc_PN = mkPN "BBC";
lin beach_N = mkN "beach" "beaches";
lin beach_V2 = mkV2 (mkV "beach" "beaches" "beached" "beached" "beaching");
lin beachcomber_N = mkN "beachcomber" "beachcombers";
lin beachhead_N = mkN "beachhead" "beachheads";
lin beachwear_N = mkN "beachwear" ;
lin beacon_N = mkN "beacon" "beacons";
lin beacon_fire_N = mkN "beacon - fire" "beacon - fires";
lin beacon_light_N = mkN "beacon - light" "beacon - lights";
lin beaconsfield_PN = mkPN "Beaconsfield";
lin bead_N = mkN "bead" "beads";
lin beading_N = mkN "beading" ;
lin beadle_N = mkN "beadle" "beadles";
lin beady_A = compoundA (mkA "beady");
lin beagle_N = mkN "beagle" "beagles";
lin beagling_N = mkN "beagling" ;
lin beak_N = mkN "beak" "beaks";
lin beaker_N = mkN "beaker" "beakers";
lin beam_N = mkN "beam" "beams";
lin beam_V = mkV "beam" "beams" "beamed" "beamed" "beaming";
lin beam_V2 = mkV2 (mkV "beam" "beams" "beamed" "beamed" "beaming");
lin bean_N = mkN "bean" "beans";
lin beanfeast_N = mkN "beanfeast" "beanfeasts";
lin beano_N = mkN "beano" "beanos";
lin beanstalk_N = mkN "beanstalk" "beanstalks";
lin bear_N = mkN "bear" "bears";
lin bear_V = IrregEng.bear_V;
lin bear_V2 = mkV2 (IrregEng.bear_V);
lin bearable_A = compoundA (mkA "bearable");
lin beard_N = mkN "beard" "beards";
lin beard_V2 = mkV2 (mkV "beard" "beards" "bearded" "bearded" "bearding");
lin bearded_A = compoundA (mkA "bearded");
lin beardless_A = compoundA (mkA "beardless");
lin bearer_N = mkN "bearer" "bearers";
lin bearing_N = mkN "bearing" "bearings";
lin bearish_A = compoundA (mkA "bearish");
lin bearsden_PN = mkPN "Bearsden";
lin bearskin_N = mkN "bearskin" "bearskins";
lin beast_N = mkN "beast" "beasts";
lin beastliness_N = mkN "beastliness" ;
lin beastly_A = mkA "beastly" "beastlier";
lin beastly_Adv = mkAdv "beastly";
lin beat_A = compoundA (mkA "beat");
lin beat_N = mkN "beat" "beats";
lin beat_V = IrregEng.beat_V;
lin beat_V2 = mkV2 (IrregEng.beat_V);
lin beaten_A = compoundA (mkA "beaten");
lin beater_N = mkN "beater" "beaters";
lin beatific_A = compoundA (mkA "beatific");
lin beatification_N = mkN "beatification" "beatifications";
lin beatify_V2 = mkV2 (mkV "beatify" "beatifies" "beatified" "beatified" "beatifying");
lin beating_N = mkN "beating" "beatings";
lin beatitude_N = mkN "beatitude" "beatitudes";
lin beatnik_N = mkN "beatnik" "beatniks";
lin beatrice_PN = mkPN "Beatrice";
lin beau_N = mkN "beau" "beaux" {- FIXME: guessed plural form -};
lin beaujolais_N = mkN "beaujolais" ;
lin beaumaris_PN = mkPN "Beaumaris";
lin beauteous_A = compoundA (mkA "beauteous");
lin beautician_N = mkN "beautician" "beauticians";
lin beautiful_A = compoundA (mkA "beautiful");
lin beautify_V2 = mkV2 (mkV "beautify" "beautifies" "beautified" "beautified" "beautifying");
lin beauty_N = mkN "beauty" "beauties";
lin beauty_parlour_N = mkN "beauty - parlour" "beauty - parlours";
lin beauty_salon_N = mkN "beauty - salon" "beauty - salons";
lin beauty_sleep_N = mkN "beauty - sleep" ;
lin beauty_spot_N = mkN "beauty - spot" "beauty - spots";
lin beaver_N = mkN "beaver" "beavers";
lin beaver_V = mkV "beaver" "beavers" "beavered" "beavered" "beavering";
lin bebington_PN = mkPN "Bebington";
lin becalmed_A = compoundA (mkA "becalmed");
lin because_Subj = mkSubj "because";
lin beccles_PN = mkPN "Beccles";
lin beck_N = mkN "beck" "becks";
lin beckon_V = mkV "beckon" "beckons" "beckoned" "beckoned" "beckoning";
lin beckon_V2 = mkV2 (mkV "beckon" "beckons" "beckoned" "beckoned" "beckoning");
lin become_V = IrregEng.become_V;
lin become_V2 = mkV2 (IrregEng.become_V);
lin become_VA = mkVA (IrregEng.become_V);
lin become_VS = mkVS (IrregEng.become_V);
lin becoming_A = compoundA (mkA "becoming");
lin bed_N = mkN "bed" "beds";
lin bed_V2 = mkV2 (mkV "bed" "beds" "bedded" "bedded" "bedding");
lin bedaubed_A = compoundA (mkA "bedaubed");
lin bedbug_N = mkN "bedbug" "bedbugs";
lin beddau_PN = mkPN "Beddau";
lin bedded_A = compoundA (mkA "bedded");
lin bedding_N = mkN "bedding" ;
lin bedecked_A = compoundA (mkA "bedecked");
lin bedevil_V2 = mkV2 (mkV "bedevil" "bedevils" "bedevilled" "bedevilled" "bedevilling");
lin bedevilment_N = mkN "bedevilment" "bedevilments";
lin bedewed_A = compoundA (mkA "bedewed");
lin bedfellow_N = mkN "bedfellow" "bedfellows";
lin bedford_PN = mkPN "Bedford";
lin bedfordshire_PN = mkPN "Bedfordshire";
lin bedimmed_A = compoundA (mkA "bedimmed");
lin bedlam_N = mkN "bedlam" "bedlams";
lin bedlington_PN = mkPN "Bedlington";
lin bedouin_N = mkN "bedouin" "bedouin";
lin bedpan_N = mkN "bedpan" "bedpans";
lin bedpost_N = mkN "bedpost" "bedposts";
lin bedraggled_A = compoundA (mkA "bedraggled");
lin bedridden_A = compoundA (mkA "bedridden");
lin bedrock_N = mkN "bedrock" "bedrocks";
lin bedroll_N = mkN "bedroll" "bedrolls";
lin bedroom_N = mkN "bedroom" "bedrooms";
lin bedroomed_A = compoundA (mkA "bedroomed");
lin bedside_N = mkN "bedside" "bedsides";
lin bedsit_N = mkN "bedsit" "bedsits";
lin bedsitter_N = mkN "bedsitter" "bedsitters";
lin bedsitting_room_N = mkN "bedsitting - room" "bedsitting - rooms";
lin bedsore_N = mkN "bedsore" "bedsores";
lin bedspread_N = mkN "bedspread" "bedspreads";
lin bedstead_N = mkN "bedstead" "bedsteads";
lin bedtime_N = mkN "bedtime" "bedtimes";
lin beduin_N = mkN "beduin" "beduin";
lin bedwas_PN = mkPN "Bedwas";
lin bee_N = mkN "bee" "bees";
lin beech_N = mkN "beech" "beeches";
lin beef_N = mkN "beef" "beeves" {- FIXME: guessed plural form -};
lin beef_V = mkV "beef" "beefs" "beefed" "beefed" "beefing";
lin beefeater_N = mkN "beefeater" "beefeaters";
lin beefsteak_N = mkN "beefsteak" "beefsteaks";
lin beefy_A = mkA "beefy" "beefier";
lin beehive_N = mkN "beehive" "beehives";
lin beep_N = mkN "beep" "beeps";
lin beer_N = mkN "beer" "beers";
lin beery_A = mkA "beery" "beerier";
lin beeswax_N = mkN "beeswax" ;
lin beeswax_V2 = mkV2 (mkV "beeswax" "beeswaxes" "beeswaxed" "beeswaxed" "beeswaxing");
lin beet_N = mkN "beet" "beets";
lin beetle_N = mkN "beetle" "beetles";
lin beetle_V = mkV "beetle" "beetles" "beetled" "beetled" "beetling";
lin beetle_browed_A = compoundA (mkA "beetle - browed");
lin beetroot_N = mkN "beetroot" "beetroots";
lin befall_V = mkV "be" IrregEng.fall_V;
lin befall_V2 = mkV2 (mkV "be" IrregEng.fall_V);
lin befit_V2 = mkV2 (mkV "befit" "befits" "befitted" "befitted" "befitting");
lin befitting_A = compoundA (mkA "befitting");
lin befogged_A = compoundA (mkA "befogged");
lin before_Adv = mkAdv "before";
lin before_Prep = mkPrep "before";
lin beforehand_A = compoundA (mkA "beforehand");
lin beforehand_Adv = mkAdv "beforehand";
lin befoul_V2 = mkV2 (mkV "befoul" "befouls" "befouled" "befouled" "befouling");
lin befriend_V2 = mkV2 (mkV "befriend" "befriends" "befriended" "befriended" "befriending");
lin beg_V = mkV "beg" "begs" "begged" "begged" "begging";
lin beg_V2 = mkV2 (mkV "beg" "begs" "begged" "begged" "begging");
lin beget_V2 = mkV2 (mkV "be" IrregEng.get_V);
lin begetter_N = mkN "begetter" "begetters";
lin beggar_N = mkN "beggar" "beggars";
lin beggar_V2 = mkV2 (mkV "beggar" "beggars" "beggared" "beggared" "beggaring");
lin beggarly_A = compoundA (mkA "beggarly");
lin beggarman_N = mkN "beggarman" "beggarmen" {- FIXME: guessed plural form -};
lin beggarwoman_N = mkN "beggarwoman" "beggarwomen" {- FIXME: guessed plural form -};
lin beggary_N = mkN "beggary" ;
lin begin_V = IrregEng.begin_V;
lin begin_V2 = mkV2 (IrregEng.begin_V);
lin begin_VV = ingVV (IrregEng.begin_V);
lin beginner_N = mkN "beginner" "beginners";
lin beginning_N = mkN "beginning" "beginnings";
lin begonia_N = mkN "begonia" "begonias";
lin begrimed_A = compoundA (mkA "begrimed");
lin begrudge_V2 = mkV2 (mkV "begrudge" "begrudges" "begrudged" "begrudged" "begrudging");
lin beguile_V2 = mkV2 (mkV "beguile" "beguiles" "beguiled" "beguiled" "beguiling");
lin begum_N = mkN "begum" "begums";
lin behalf_N = mkN "behalf" "behalves" {- FIXME: guessed plural form -};
lin behave_V = mkV "behave" "behaves" "behaved" "behaved" "behaving";
lin behaved_A = compoundA (mkA "behaved");
lin behaviour_N = mkN "behaviour" ;
lin behaviourism_N = mkN "behaviourism" ;
lin behaviourist_N = mkN "behaviourist" "behaviourists";
lin behead_V2 = mkV2 (mkV "behead" "beheads" "beheaded" "beheaded" "beheading");
lin behest_N = mkN "behest" "behests";
lin behind_Adv = mkAdv "behind";
lin behind_N = mkN "behind" "behinds";
lin behind_Prep = mkPrep "behind";
lin behindhand_A = compoundA (mkA "behindhand");
lin behold_V2 = mkV2 (mkV "be" IrregEng.hold_V);
lin beholden_A = compoundA (mkA "beholden");
lin beholder_N = mkN "beholder" "beholders";
lin behove_V2 = mkV2 (mkV "behove" "behoves" "behoved" "behoved" "behoving");
lin beige_N = mkN "beige" ;
lin being_N = mkN "being" "beings";
lin beirut_PN = mkPN "Beirut";
lin beith_PN = mkPN "Beith";
lin bejewelled_A = compoundA (mkA "bejewelled");
lin belabour_V2 = mkV2 (mkV "belabour" "belabours" "belaboured" "belaboured" "belabouring");
lin belated_A = compoundA (mkA "belated");
lin belay_N = mkN "belay" "belays";
lin belay_V2 = mkV2 (mkV "belay" "belays" "belayed" "belayed" "belaying");
lin belaying_pin_N = mkN "belaying - pin" "belaying - pins";
lin belch_N = mkN "belch" "belches";
lin belch_V = mkV "belch" "belches" "belched" "belched" "belching";
lin belch_V2 = mkV2 (mkV "belch" "belches" "belched" "belched" "belching");
lin beldam_N = mkN "beldam" "beldams";
lin beldame_N = mkN "beldame" "beldames";
lin beleaguer_V2 = mkV2 (mkV "beleaguer" "beleaguers" "beleaguered" "beleaguered" "beleaguering");
lin belem_PN = mkPN "Belem";
lin belfast_PN = mkPN "Belfast";
lin belfry_N = mkN "belfry" "belfries";
lin belgian_A = compoundA (mkA "belgian");
lin belgian_N = mkN "belgian" "belgians";
lin belgium_PN = mkPN "Belgium";
lin belgrade_PN = mkPN "Belgrade";
lin belie_V2 = mkV2 (mkV "be" IrregEng.lie_V);
lin belief_N = mkN "belief" "beliefs";
lin believable_A = compoundA (mkA "believable");
lin believe_V = mkV "believe" "believes" "believed" "believed" "believing";
lin believe_V2 = mkV2 (mkV "believe" "believes" "believed" "believed" "believing");
lin believe_V2V = mkV2V (mkV "believe" "believes" "believed" "believed" "believing") noPrep to_Prep ;
lin believe_VS = mkVS (mkV "believe" "believes" "believed" "believed" "believing");
lin believer_N = mkN "believer" "believers";
lin believing_N = mkN "believing" ;
lin belike_Adv = mkAdv "belike";
lin belinda_PN = mkPN "Belinda";
lin belittle_V2 = mkV2 (mkV "belittle" "belittles" "belittled" "belittled" "belittling");
lin bell_N = mkN "bell" "bells";
lin bell_V2 = mkV2 (mkV "bell" "bells" "belled" "belled" "belling");
lin bell_bottomed_A = compoundA (mkA "bell - bottomed");
lin bell_buoy_N = mkN "bell - buoy" "bell - buoys";
lin bell_flower_N = mkN "bell - flower" "bell - flowers";
lin bell_founder_N = mkN "bell - founder" "bell - founders";
lin bell_foundry_N = mkN "bell - foundry" "bell - foundries";
lin bell_metal_N = mkN "bell - metal" ;
lin bell_push_N = mkN "bell - push" "bell - pushes";
lin bell_ringer_N = mkN "bell - ringer" "bell - ringers";
lin bell_tent_N = mkN "bell - tent" "bell - tents";
lin bella_PN = mkPN "Bella";
lin belladonna_N = mkN "belladonna" "belladonnas";
lin bellboy_N = mkN "bellboy" "bellboys";
lin belle_N = mkN "belle" "belles";
lin belle_PN = mkPN "Belle";
lin bellhop_N = mkN "bellhop" "bellhops";
lin bellicose_A = compoundA (mkA "bellicose");
lin bellied_A = compoundA (mkA "bellied");
lin belligerency_N = mkN "belligerency" ;
lin belligerent_A = compoundA (mkA "belligerent");
lin belligerent_N = mkN "belligerent" "belligerents";
lin bellow_V = mkV "bellow" "bellows" "bellowed" "bellowed" "bellowing";
lin bellow_V2 = mkV2 (mkV "bellow" "bellows" "bellowed" "bellowed" "bellowing");
lin bellshill_PN = mkPN "Bellshill";
lin bellwether_N = mkN "bellwether" "bellwethers";
lin belly_N = mkN "belly" "bellies";
lin belly_V = mkV "belly" "bellies" "bellied" "bellied" "bellying";
lin belly_V2 = mkV2 (mkV "belly" "bellies" "bellied" "bellied" "bellying");
lin bellyache_N = mkN "bellyache" "bellyaches";
lin bellyache_V = mkV "bellyache" "bellyaches" "bellyached" "bellyached" "bellyaching";
lin bellyflop_N = mkN "bellyflop" "bellyflops";
lin bellyful_N = mkN "bellyful" "bellyfuls";
lin bellyland_V = mkV "bellyland" "bellylands" "bellylanded" "bellylanded" "bellylanding";
lin bellylaugh_N = mkN "bellylaugh" "bellylaughs";
lin bellylaugh_V = mkV "bellylaugh" "bellylaughs" "bellylaughed" "bellylaughed" "bellylaughing";
lin belo_horizonte_PN = mkPN "Belo Horizonte";
lin belong_V = mkV "belong" "belongs" "belonged" "belonged" "belonging";
lin beloved_A = compoundA (mkA "beloved");
lin beloved_N = mkN "beloved" "beloveds";
lin below_Adv = mkAdv "below";
lin below_Prep = mkPrep "below";
lin belper_PN = mkPN "Belper";
lin belt_N = mkN "belt" "belts";
lin belt_V2 = mkV2 (mkV "belt" "belts" "belted" "belted" "belting");
lin belting_N = mkN "belting" "beltings";
lin bemoan_V2 = mkV2 (mkV "bemoan" "bemoans" "bemoaned" "bemoaned" "bemoaning");
lin bemused_A = compoundA (mkA "bemused");
lin ben_N = mkN "ben" "bens";
lin ben_PN = mkPN "Ben";
lin bench_N = mkN "bench" "benches";
lin bend_N = mkN "bend" "bends";
lin bend_V = mkV "bend" "bends" "bended" "bended" "bending";
lin bend_V2 = mkV2 (mkV "bend" "bends" "bended" "bended" "bending");
lin beneath_Adv = mkAdv "beneath";
lin beneath_Prep = mkPrep "beneath";
lin benedick_N = mkN "benedick" "benedicks";
lin benedictine_A = compoundA (mkA "benedictine");
lin benedictine_N = mkN "benedictine" "benedictines";
lin benediction_N = mkN "benediction" "benedictions";
lin benefaction_N = mkN "benefaction" "benefactions";
lin benefactor_N = mkN "benefactor" "benefactors";
lin benefactress_N = mkN "benefactress" "benefactresses";
lin benefice_N = mkN "benefice" "benefices";
lin beneficed_A = compoundA (mkA "beneficed");
lin beneficence_N = mkN "beneficence" ;
lin beneficent_A = compoundA (mkA "beneficent");
lin beneficial_A = compoundA (mkA "beneficial");
lin beneficiary_N = mkN "beneficiary" "beneficiaries";
lin benefit_N = mkN "benefit" "benefits";
lin benefit_V = mkV "benefit" "benefits" "benefited" "benefited" "benefiting";
lin benefit_V2 = mkV2 (mkV "benefit" "benefits" "benefited" "benefited" "benefiting");
lin benevolence_N = mkN "benevolence" ;
lin benevolent_A = compoundA (mkA "benevolent");
lin bengali_A = compoundA (mkA "bengali");
lin bengali_N = mkN "bengali" "bengalis";
lin benighted_A = compoundA (mkA "benighted");
lin benign_A = compoundA (mkA "benign");
lin benignant_A = compoundA (mkA "benignant");
lin benignity_N = mkN "benignity" "benignities";
lin benin_PN = mkPN "Benin";
lin beninese_A = compoundA (mkA "beninese");
lin beninese_N = mkN "beninese" "beninese";
lin benison_N = mkN "benison" "benisons";
lin benjamin_PN = mkPN "Benjamin";
lin benny_PN = mkPN "Benny";
lin bent_A = compoundA (mkA "bent");
lin bent_N = mkN "bent" "bents";
lin benumbed_A = compoundA (mkA "benumbed");
lin benzedrine_N = mkN "benzedrine" "benzedrines";
lin benzene_N = mkN "benzene" ;
lin benzine_N = mkN "benzine" ;
lin benzol_N = mkN "benzol" ;
lin beograd_PN = mkPN "Beograd";
lin bequeath_V2 = mkV2 (mkV "bequeath" "bequeaths" "bequeathed" "bequeathed" "bequeathing");
lin bequest_N = mkN "bequest" "bequests";
lin berate_V2 = mkV2 (mkV "berate" "berates" "berated" "berated" "berating");
lin bereave_V2 = mkV2 (mkV "bereave" "bereaves" "bereaved" "bereaved" "bereaving");
lin bereavement_N = mkN "bereavement" "bereavements";
lin beret_N = mkN "beret" "berets";
lin berg_N = mkN "berg" "bergs";
lin bergamo_PN = mkPN "Bergamo";
lin bergen_PN = mkPN "Bergen";
lin beri_beri_N = mkN "beri - beri" ;
lin berkhamsted_PN = mkPN "Berkhamsted";
lin berkshire_PN = mkPN "Berkshire";
lin berlin_PN = mkPN "Berlin";
lin bermuda_PN = mkPN "Bermuda";
lin bermudan_A = compoundA (mkA "bermudan");
lin bermudan_N = mkN "bermudan" "bermudans";
lin bern_PN = mkPN "Bern";
lin bernard_PN = mkPN "Bernard";
lin bernie_PN = mkPN "Bernie";
lin berry_N = mkN "berry" "berries";
lin berserk_A = compoundA (mkA "berserk");
lin bert_PN = mkPN "Bert";
lin berth_N = mkN "berth" "berths";
lin berth_V = mkV "berth" "berths" "berthed" "berthed" "berthing";
lin berth_V2 = mkV2 (mkV "berth" "berths" "berthed" "berthed" "berthing");
lin bertha_PN = mkPN "Bertha";
lin bertie_PN = mkPN "Bertie";
lin berwick_upon_tweed_PN = mkPN "Berwick - upon - tweed";
lin beryl_N = mkN "beryl" "beryls";
lin beryl_PN = mkPN "Beryl";
lin beseech_V2 = mkV2 (mkV "beseech" "beseeches" "beseeched" "beseeched" "beseeching");
lin beseeching_A = compoundA (mkA "beseeching");
lin beseem_V2 = mkV2 (mkV "beseem" "beseems" "beseemed" "beseemed" "beseeming");
lin beset_V2 = mkV2 (IrregEng.beset_V);
lin beshrew_V2 = mkV2 (mkV "beshrew" "beshrews" "beshrewed" "beshrewed" "beshrewing");
lin beside_Prep = mkPrep "beside";
lin besides_Adv = mkAdv "besides";
lin besides_Prep = mkPrep "besides";
lin besiege_V2 = mkV2 (mkV "besiege" "besieges" "besieged" "besieged" "besieging");
lin besieger_N = mkN "besieger" "besiegers";
lin besmear_V2 = mkV2 (mkV "besmear" "besmears" "besmeared" "besmeared" "besmearing");
lin besmirch_V2 = mkV2 (mkV "besmirch" "besmirches" "besmirched" "besmirched" "besmirching");
lin besom_N = mkN "besom" "besoms";
lin besotted_A = compoundA (mkA "besotted");
lin bespangled_A = compoundA (mkA "bespangled");
lin bespattered_A = compoundA (mkA "bespattered");
lin bespeak_V2 = mkV2 (mkV "be" IrregEng.speak_V);
lin bespectacled_A = compoundA (mkA "bespectacled");
lin bess_PN = mkPN "Bess";
lin bessie_PN = mkPN "Bessie";
lin best_Adv = mkAdv "best";
lin best_V2 = mkV2 (mkV "best" "bests" "bested" "bested" "besting");
lin best_seller_N = mkN "best - seller" "best - sellers";
lin bestial_A = compoundA (mkA "bestial");
lin bestiality_N = mkN "bestiality" "bestialities";
lin bestiary_N = mkN "bestiary" "bestiaries";
lin bestir_V2 = mkV2 (mkV "bestir" "bestirs" "bestirred" "bestirred" "bestirring");
lin bestow_V2 = mkV2 (mkV "bestow" "bestows" "bestowed" "bestowed" "bestowing");
lin bestowal_N = mkN "bestowal" "bestowals";
lin bestrew_V2 = mkV2 (mkV "bestrew" "bestrews" "bestrewed" "bestrewed" "bestrewing");
lin bestride_V2 = mkV2 (mkV "be" IrregEng.stride_V);
lin bet_N = mkN "bet" "bets";
lin bet_V = mkV "bet" "bets" "betted" "betted" "betting";
lin bet_V2 = mkV2 (mkV "bet" "bets" "betted" "betted" "betting");
lin bet_VS = mkVS (mkV "bet" "bets" "betted" "betted" "betting");
lin beta_N = mkN "beta" "betas";
lin betake_V2 = mkV2 (mkV "be" IrregEng.take_V);
lin bete_noire_N = mkN "bête noire" "IRREG";
lin betel_N = mkN "betel" "betels";
lin betel_nut_N = mkN "betel - nut" "betel - nuts";
lin bethel_N = mkN "bethel" "bethels";
lin bethink_V2 = mkV2 (mkV "be" IrregEng.think_V);
lin bethune_PN = mkPN "Bethune";
lin betide_V2 = mkV2 (mkV "betide" "betides" "betided" "betided" "betiding");
lin betimes_Adv = mkAdv "betimes";
lin betoken_V2 = mkV2 (mkV "betoken" "betokens" "betokened" "betokened" "betokening");
lin betray_V2 = mkV2 (mkV "betray" "betrays" "betrayed" "betrayed" "betraying");
lin betrayal_N = mkN "betrayal" "betrayals";
lin betrayer_N = mkN "betrayer" "betrayers";
lin betroth_V2 = mkV2 (mkV "betroth" "betroths" "betrothed" "betrothed" "betrothing");
lin betrothal_N = mkN "betrothal" "betrothals";
lin betrothed_N = mkN "betrothed" "betrotheds";
lin betsy_PN = mkPN "Betsy";
lin better_Adv = mkAdv "better";
lin better_N = mkN "better" "betters";
lin better_V2 = mkV2 (mkV "better" "betters" "bettered" "bettered" "bettering");
lin betterment_N = mkN "betterment" ;
lin bettor_N = mkN "bettor" "bettors";
lin betty_PN = mkPN "Betty";
lin between_Adv = mkAdv "between";
lin between_Prep = mkPrep "between";
lin betwixt_Prep = mkPrep "betwixt";
lin bevel_N = mkN "bevel" "bevels";
lin bevel_V2 = mkV2 (mkV "bevel" "bevels" "bevelled" "bevelled" "bevelling");
lin beverage_N = mkN "beverage" "beverages";
lin beverley_PN = mkPN "Beverley";
lin bevy_N = mkN "bevy" "bevies";
lin bewail_V2 = mkV2 (mkV "bewail" "bewails" "bewailed" "bewailed" "bewailing");
lin beware_V = mkV "beware" "IRREG" "IRREG" "IRREG" "IRREG";
lin beware_V2 = mkV2 (mkV "beware" "IRREG" "IRREG" "IRREG" "IRREG");
lin bewdley_PN = mkPN "Bewdley";
lin bewilder_V2 = mkV2 (mkV "bewilder" "bewilders" "bewildered" "bewildered" "bewildering");
lin bewildering_A = compoundA (mkA "bewildering");
lin bewilderment_N = mkN "bewilderment" ;
lin bewitch_V2 = mkV2 (mkV "bewitch" "bewitches" "bewitched" "bewitched" "bewitching");
lin bewitching_A = compoundA (mkA "bewitching");
lin bexhill_PN = mkPN "Bexhill";
lin bexley_PN = mkPN "Bexley";
lin bey_N = mkN "bey" "beys";
lin beyond_Adv = mkAdv "beyond";
lin beyond_Prep = mkPrep "beyond";
lin bezique_N = mkN "bezique" ;
lin bhang_N = mkN "bhang" "bhangs";
lin bhutan_PN = mkPN "Bhutan";
lin bhutani_A = compoundA (mkA "bhutani");
lin bhutani_N = mkN "bhutani" "bhutanis";
lin bias_N = mkN "bias" "biases";
lin bias_V2 = mkV2 (mkV "bias" "biases" "biased" "biased" "biasing");
lin bib_N = mkN "bib" "bibs";
lin bib_V = mkV "bib" "bibs" "bibbed" "bibbed" "bibbing";
lin bible_N = mkN "bible" "bibles";
lin biblical_A = compoundA (mkA "biblical");
lin bibliographer_N = mkN "bibliographer" "bibliographers";
lin bibliography_N = mkN "bibliography" "bibliographies";
lin bibliophile_N = mkN "bibliophile" "bibliophiles";
lin bibulous_A = compoundA (mkA "bibulous");
lin bicameral_A = compoundA (mkA "bicameral");
lin bicarbonate_N = mkN "bicarbonate" ;
lin bicentenary_N = mkN "bicentenary" "bicentenaries";
lin bicentennial_A = compoundA (mkA "bicentennial");
lin bicentennial_N = mkN "bicentennial" "bicentennials";
lin biceps_N = mkN "biceps" "biceps";
lin bicester_PN = mkPN "Bicester";
lin bicker_V = mkV "bicker" "bickers" "bickered" "bickered" "bickering";
lin bicycle_N = mkN "bicycle" "bicycles";
lin bicycle_V = mkV "bicycle" "bicycles" "bicycled" "bicycled" "bicycling";
lin bid_N = mkN "bid" "bids";
lin bid_V = IrregEng.bid_V;
lin bid_V2 = mkV2 (IrregEng.bid_V);
lin biddable_A = compoundA (mkA "biddable");
lin bidder_N = mkN "bidder" "bidders";
lin bidding_N = mkN "bidding" ;
lin biddulph_PN = mkPN "Biddulph";
lin bide_V2 = mkV2 (mkV "bide" "bides" "bided" "bided" "biding");
lin bideford_PN = mkPN "Bideford";
lin bidet_N = mkN "bidet" "bidets";
lin bielefeld_PN = mkPN "Bielefeld";
lin biennial_A = compoundA (mkA "biennial");
lin biennial_N = mkN "biennial" "biennials";
lin bier_N = mkN "bier" "biers";
lin biff_N = mkN "biff" "biffs";
lin biff_V2 = mkV2 (mkV "biff" "biffs" "biffed" "biffed" "biffing");
lin bifocal_A = compoundA (mkA "bifocal");
lin bifurcate_A = compoundA (mkA "bifurcate");
lin bifurcate_V = mkV "bifurcate" "bifurcates" "bifurcated" "bifurcated" "bifurcating";
lin bifurcate_V2 = mkV2 (mkV "bifurcate" "bifurcates" "bifurcated" "bifurcated" "bifurcating");
lin bifurcated_A = compoundA (mkA "bifurcated");
lin bifurcation_N = mkN "bifurcation" "bifurcations";
lin big_A = mkA "big" "bigger*";
lin big_boned_A = compoundA (mkA "big - boned");
lin bigamist_N = mkN "bigamist" "bigamists";
lin bigamous_A = compoundA (mkA "bigamous");
lin bigamy_N = mkN "bigamy" ;
lin biggleswade_PN = mkPN "Biggleswade";
lin bight_N = mkN "bight" "bights";
lin bigot_N = mkN "bigot" "bigots";
lin bigoted_A = compoundA (mkA "bigoted");
lin bigotry_N = mkN "bigotry" "bigotries";
lin bigwig_N = mkN "bigwig" "bigwigs";
lin bijou_A = compoundA (mkA "bijou");
lin bijou_N = mkN "bijou";
lin bike_N = mkN "bike" "bikes";
lin bike_V = mkV "bike" "bikes" "biked" "biked" "biking";
lin bikini_N = mkN "bikini" "bikinis";
lin bilabial_A = compoundA (mkA "bilabial");
lin bilabial_N = mkN "bilabial" "bilabials";
lin bilateral_A = compoundA (mkA "bilateral");
lin bilateralism_N = mkN "bilateralism" "bilateralisms";
lin bilbao_PN = mkPN "Bilbao";
lin bilberry_N = mkN "bilberry" "bilberries";
lin bile_N = mkN "bile" ;
lin bile_duct_N = mkN "bile - duct" "bile - ducts";
lin bilge_N = mkN "bilge" ;
lin bilge_water_N = mkN "bilge - water" ;
lin bilharzia_N = mkN "bilharzia" ;
lin bilingual_A = compoundA (mkA "bilingual");
lin bilingual_N = mkN "bilingual" "bilinguals";
lin bilious_A = compoundA (mkA "bilious");
lin biliousness_N = mkN "biliousness" ;
lin bilk_V2 = mkV2 (mkV "bilk" "bilks" "bilked" "bilked" "bilking");
lin bill_N = mkN "bill" "bills";
lin bill_PN = mkPN "Bill";
lin bill_V = mkV "bill" "bills" "billed" "billed" "billing";
lin bill_V2 = mkV2 (mkV "bill" "bills" "billed" "billed" "billing");
lin bill_poster_N = mkN "bill - poster" "bill - posters";
lin bill_sticker_N = mkN "bill - sticker" "bill - stickers";
lin billboard_N = mkN "billboard" "billboards";
lin billericay_PN = mkPN "Billericay";
lin billet_N = mkN "billet" "billets";
lin billet_V2 = mkV2 (mkV "billet" "billets" "billeted" "billeted" "billeting");
lin billet_doux_N = mkN "billet - doux" "billets - doux";
lin billfold_N = mkN "billfold" "billfolds";
lin billhook_N = mkN "billhook" "billhooks";
lin billiard_marker_N = mkN "billiard - marker" "billiard - markers";
lin billiard_player_N = mkN "billiard - player" "billiard - players";
lin billiard_room_N = mkN "billiard - room" "billiard - rooms";
lin billiard_table_N = mkN "billiard - table" "billiard - tables";
lin billiards_N = mkN "billiards" "billiards";
lin billingsgate_N = mkN "billingsgate" ;
lin billington_PN = mkPN "Billington";
lin billion_A = compoundA (mkA "billion");
lin billion_N = mkN "billion" "billions";
lin billionth_A = compoundA (mkA "billionth");
lin billionth_N = mkN "billionth" "billionths";
lin billow_N = mkN "billow" "billows";
lin billow_V = mkV "billow" "billows" "billowed" "billowed" "billowing";
lin billowy_A = compoundA (mkA "billowy");
lin billy_N = mkN "billy" "billies";
lin billy_PN = mkPN "Billy";
lin billy_goat_N = mkN "billy - goat" "billy - goats";
lin billy_ho_N = mkN "billy - ho" "billy - hi" {- FIXME: guessed plural form -};
lin billy_o_N = mkN "billy - o" ;
lin biltong_N = mkN "biltong" ;
lin bimetallic_A = compoundA (mkA "bimetallic");
lin bimetallism_N = mkN "bimetallism" ;
lin bin_N = mkN "bin" "bins";
lin binary_A = compoundA (mkA "binary");
lin bind_N = mkN "bind" "binds";
lin bind_V = IrregEng.bind_V;
lin bind_V2 = mkV2 (IrregEng.bind_V);
lin binder_N = mkN "binder" "binders";
lin bindery_N = mkN "bindery" "binderies";
lin binding_A = compoundA (mkA "binding");
lin bindweed_N = mkN "bindweed" ;
lin bine_N = mkN "bine" "bines";
lin binge_N = mkN "binge" "binges";
lin bingley_PN = mkPN "Bingley";
lin bingo_N = mkN "bingo" ;
lin binnacle_N = mkN "binnacle" "binnacles";
lin binomial_A = compoundA (mkA "binomial");
lin biochemistry_N = mkN "biochemistry" ;
lin biodegradable_A = compoundA (mkA "biodegradable");
lin biograph_N = mkN "biograph" "biographs";
lin biographer_N = mkN "biographer" "biographers";
lin biographic_A = compoundA (mkA "biographic");
lin biographical_A = compoundA (mkA "biographical");
lin biography_N = mkN "biography" "biographies";
lin biological_A = compoundA (mkA "biological");
lin biologist_N = mkN "biologist" "biologists";
lin biology_N = mkN "biology" ;
lin bioscope_N = mkN "bioscope" "bioscopes";
lin bipartisan_A = compoundA (mkA "bipartisan");
lin biped_N = mkN "biped" "bipeds";
lin biplane_N = mkN "biplane" "biplanes";
lin birch_N = mkN "birch" "birches";
lin birch_V2 = mkV2 (mkV "birch" "birches" "birched" "birched" "birching");
lin birch_rod_N = mkN "birch - rod" "birch - rods";
lin bird's_eye_A = compoundA (mkA "bird's - eye");
lin bird_N = mkN "bird" "birds";
lin bird_fancier_N = mkN "bird - fancier" "bird - fanciers";
lin birdcage_N = mkN "birdcage" "birdcages";
lin birdlime_N = mkN "birdlime" "birdlimes";
lin birdnesting_N = mkN "birdnesting" ;
lin birdwatcher_N = mkN "birdwatcher" "birdwatchers";
lin biretta_N = mkN "biretta" "birettas";
lin birkenhead_PN = mkPN "Birkenhead";
lin biro_N = mkN "biro" "biros";
lin birstall_PN = mkPN "Birstall";
lin birth_N = mkN "birth" "births";
lin birth_control_N = mkN "birth - control" ;
lin birthday_N = mkN "birthday" "birthdays";
lin birthmark_N = mkN "birthmark" "birthmarks";
lin birthplace_N = mkN "birthplace" "birthplaces";
lin birthrate_N = mkN "birthrate" "birthrates";
lin birthright_N = mkN "birthright" "birthrights";
lin birtley_PN = mkPN "Birtley";
lin biscuit_N = mkN "biscuit" "biscuits";
lin bisect_V2 = mkV2 (mkV "bisect" "bisects" "bisected" "bisected" "bisecting");
lin bisection_N = mkN "bisection" ;
lin bisexual_A = compoundA (mkA "bisexual");
lin bisexual_N = mkN "bisexual" "bisexuals";
lin bisexuality_N = mkN "bisexuality" ;
lin bishop's_cleeve_PN = mkPN "Bishop's cleeve";
lin bishop's_stortford_PN = mkPN "Bishop's stortford";
lin bishop_N = mkN "bishop" "bishops";
lin bishop_auckland_PN = mkPN "Bishop auckland";
lin bishopbriggs_PN = mkPN "Bishopbriggs";
lin bishopric_N = mkN "bishopric" "bishoprics";
lin bismuth_N = mkN "bismuth" ;
lin bison_N = mkN "bison" "bison";
lin bistro_N = mkN "bistro" "bistros";
lin bit_N = mkN "bit" "bits";
lin bitch_N = mkN "bitch" "bitches";
lin bitch_V = mkV "bitch" "bitches" "bitched" "bitched" "bitching";
lin bitchy_A = mkA "bitchy" "bitchier";
lin bite_N = mkN "bite" "bites";
lin bite_V = IrregEng.bite_V;
lin bite_V2 = mkV2 (IrregEng.bite_V);
lin biting_A = compoundA (mkA "biting");
lin bitter_A = compoundA (mkA "bitter");
lin bitter_N = mkN "bitter" "bitters";
lin bitter_sweet_A = compoundA (mkA "bitter - sweet");
lin bittern_N = mkN "bittern" "bitterns";
lin bitterness_N = mkN "bitterness" ;
lin bitumen_N = mkN "bitumen" ;
lin bituminous_A = compoundA (mkA "bituminous");
lin bivalve_N = mkN "bivalve" "bivalves";
lin bivouac_N = mkN "bivouac" "bivouacs";
lin bivouac_V = mkV "bivouac" (variants {"bivouacs"; "bivouacks"})  "bivouacked" "bivouacked" "bivouacking";
lin biz_N = mkN "biz" ;
lin bizarre_A = compoundA (mkA "bizarre");
lin bizonal_A = compoundA (mkA "bizonal");
lin blab_V = mkV "blab" "blabs" "blabbed" "blabbed" "blabbing";
lin blab_V2 = mkV2 (mkV "blab" "blabs" "blabbed" "blabbed" "blabbing");
lin blabber_V = mkV "blabber" "blabbers" "blabbered" "blabbered" "blabbering";
lin blabber_V2 = mkV2 (mkV "blabber" "blabbers" "blabbered" "blabbered" "blabbering");
lin blabbermouth_N = mkN "blabbermouth" "blabbermouths";
lin black_A = mkA "black" "blacker";
lin black_N = mkN "black" "blacks";
lin black_V2 = mkV2 (mkV "black" "blacks" "blacked" "blacked" "blacking");
lin black_beetle_N = mkN "black - beetle" "black - beetles";
lin black_lead_N = mkN "black - lead" ;
lin black_lead_V2 = mkV2 (mkV "black - lead" "black - leads" "black - leaded" "black - leaded" "black - leading");
lin blackamoor_N = mkN "blackamoor" "blackamoors";
lin blackball_V2 = mkV2 (mkV "blackball" "blackballs" "blackballed" "blackballed" "blackballing");
lin blackberry_N = mkN "blackberry" "blackberries";
lin blackbird_N = mkN "blackbird" "blackbirds";
lin blackboard_N = mkN "blackboard" "blackboards";
lin blackburn_PN = mkPN "Blackburn";
lin blackcurrant_N = mkN "blackcurrant" "blackcurrants";
lin blacken_V = mkV "blacken" "blackens" "blackened" "blackened" "blackening";
lin blacken_V2 = mkV2 (mkV "blacken" "blackens" "blackened" "blackened" "blackening");
lin blackguard_N = mkN "blackguard" "blackguards";
lin blackguard_V2 = mkV2 (mkV "blackguard" "blackguards" "blackguarded" "blackguarded" "blackguarding");
lin blackguardly_A = compoundA (mkA "blackguardly");
lin blackhall_PN = mkPN "Blackhall";
lin blackhead_N = mkN "blackhead" "blackheads";
lin blacking_N = mkN "blacking" ;
lin blackish_A = compoundA (mkA "blackish");
lin blackleg_N = mkN "blackleg" "blacklegs";
lin blackleg_V = mkV "blackleg" "blacklegs" "blacklegged" "blacklegged" "blacklegging";
lin blackleg_V2 = mkV2 (mkV "blackleg" "blacklegs" "blacklegged" "blacklegged" "blacklegging");
lin blacklist_N = mkN "blacklist" "blacklists";
lin blacklist_V2 = mkV2 (mkV "blacklist" "blacklists" "blacklisted" "blacklisted" "blacklisting");
lin blackmail_N = mkN "blackmail" ;
lin blackmail_V2 = mkV2 (mkV "blackmail" "blackmails" "blackmailed" "blackmailed" "blackmailing");
lin blackmailer_N = mkN "blackmailer" "blackmailers";
lin blackness_N = mkN "blackness" ;
lin blackout_N = mkN "blackout" "blackouts";
lin blackpool_PN = mkPN "Blackpool";
lin blackshirt_N = mkN "blackshirt" "blackshirts";
lin blacksmith_N = mkN "blacksmith" "blacksmiths";
lin blackthorn_N = mkN "blackthorn" "blackthorns";
lin blackwater_A = compoundA (mkA "blackwater");
lin blackwood_PN = mkPN "Blackwood";
lin bladder_N = mkN "bladder" "bladders";
lin blade_N = mkN "blade" "blades";
lin blaeberry_N = mkN "blaeberry" "blaeberries";
lin blaenau_ffestiniog_PN = mkPN "Blaenau - ffestiniog";
lin blaenavon_PN = mkPN "Blaenavon";
lin blaengwrach_PN = mkPN "Blaengwrach";
lin blah_N = mkN "blah" ;
lin blaina_PN = mkPN "Blaina";
lin blairgowrie_PN = mkPN "Blairgowrie";
lin blame_N = mkN "blame" ;
lin blame_V = mkV "blame";
lin blame_V2 = mkV2 (mkV "blame" "blames" "blamed" "blamed" "blaming");
lin blameless_A = compoundA (mkA "blameless");
lin blameworthy_A = compoundA (mkA "blameworthy");
lin blanch_V = mkV "blanch" "blanches" "blanched" "blanched" "blanching";
lin blanch_V2 = mkV2 (mkV "blanch" "blanches" "blanched" "blanched" "blanching");
lin blancmange_N = mkN "blancmange" "blancmanges";
lin bland_A = mkA "bland" "blander";
lin blandishment_N = mkN "blandishment" "blandishments";
lin blandness_N = mkN "blandness" ;
lin blank_A = compoundA (mkA "blank");
lin blank_N = mkN "blank" "blanks";
lin blanket_N = mkN "blanket" "blankets";
lin blanket_V2 = mkV2 (mkV "blanket" "blankets" "blanketed" "blanketed" "blanketing");
lin blantyre_PN = mkPN "Blantyre";
lin blare_N = mkN "blare" ;
lin blare_V = mkV "blare" "blares" "blared" "blared" "blaring";
lin blare_V2 = mkV2 (mkV "blare" "blares" "blared" "blared" "blaring");
lin blarney_N = mkN "blarney" ;
lin blase_A = compoundA (mkA "blasé");
lin blaspheme_V = mkV "blaspheme" "blasphemes" "blasphemed" "blasphemed" "blaspheming";
lin blaspheme_V2 = mkV2 (mkV "blaspheme" "blasphemes" "blasphemed" "blasphemed" "blaspheming");
lin blasphemer_N = mkN "blasphemer" "blasphemers";
lin blasphemous_A = compoundA (mkA "blasphemous");
lin blasphemy_N = mkN "blasphemy" "blasphemies";
lin blast_N = mkN "blast" "blasts";
lin blast_V = mkV "blast";
lin blast_V2 = mkV2 (mkV "blast" "blasts" "blasted" "blasted" "blasting");
lin blast_furnace_N = mkN "blast - furnace" "blast - furnaces";
lin blast_off_N = mkN "blast - off" "blast - offs";
lin blasted_A = compoundA (mkA "blasted");
lin blatant_A = compoundA (mkA "blatant");
lin blather_N = mkN "blather" "blathers";
lin blather_V = mkV "blather" "blathers" "blathered" "blathered" "blathering";
lin blaze_N = mkN "blaze" "blazes";
lin blaze_V = mkV "blaze" "blazes" "blazed" "blazed" "blazing";
lin blaze_V2 = mkV2 (mkV "blaze" "blazes" "blazed" "blazed" "blazing");
lin blazer_N = mkN "blazer" "blazers";
lin blazing_A = compoundA (mkA "blazing");
lin blazon_N = mkN "blazon" "blazons";
lin blazon_V2 = mkV2 (mkV "blazon" "blazons" "blazoned" "blazoned" "blazoning");
lin blazonry_N = mkN "blazonry" "blazonries";
lin bldg_PN = mkPN "Bldg";
lin bldgs_PN = mkPN "Bldgs";
lin bleach_N = mkN "bleach" "bleaches";
lin bleach_V = mkV "bleach" "bleaches" "bleached" "bleached" "bleaching";
lin bleach_V2 = mkV2 (mkV "bleach" "bleaches" "bleached" "bleached" "bleaching");
lin bleaching_powder_N = mkN "bleaching - powder" "bleaching - powders";
lin bleak_A = mkA "bleak" "bleaker";
lin bleary_A = compoundA (mkA "bleary");
lin bleary_eyed_A = compoundA (mkA "bleary - eyed");
lin bleat_N = mkN "bleat" "bleats";
lin bleat_V = mkV "bleat" "bleats" "bleated" "bleated" "bleating";
lin bleat_V2 = mkV2 (mkV "bleat" "bleats" "bleated" "bleated" "bleating");
lin bleed_V = IrregEng.bleed_V;
lin bleed_V2 = mkV2 (IrregEng.bleed_V);
lin bleed_VS = mkVS (IrregEng.bleed_V);
lin bleep_N = mkN "bleep" "bleeps";
lin bleep_V = mkV "bleep" "bleeps" "bleeped" "bleeped" "bleeping";
lin blemish_N = mkN "blemish" "blemishes";
lin blemish_V2 = mkV2 (mkV "blemish" "blemishes" "blemished" "blemished" "blemishing");
lin blench_V = mkV "blench" "blenches" "blenched" "blenched" "blenching";
lin blend_N = mkN "blend" "blends";
lin blend_V = mkV "blend" "blends" "blended" "blended" "blending";
lin blend_V2 = mkV2 (mkV "blend" "blends" "blended" "blended" "blending");
lin bless_V2 = mkV2 (mkV "bless" "blesses" "blessed" "blessed" "blessing");
lin blessed_A = compoundA (mkA "blessed");
lin blessedness_N = mkN "blessedness" ;
lin blessing_N = mkN "blessing" "blessings";
lin bletchley_PN = mkPN "Bletchley";
lin blether_N = mkN "blether" ;
lin blether_V = mkV "blether" "blethers" "blethered" "blethered" "blethering";
lin blidworth_PN = mkPN "Blidworth";
lin blight_N = mkN "blight" "blights";
lin blight_V2 = mkV2 (mkV "blight" "blights" "blighted" "blighted" "blighting");
lin blighter_N = mkN "blighter" "blighters";
lin blighty_N = mkN "blighty";
lin blimp_N = mkN "blimp" "blimps";
lin blind_A = compoundA (mkA "blind");
lin blind_N = mkN "blind" "blinds";
lin blind_V2 = mkV2 (mkV "blind" "blinds" "blinded" "blinded" "blinding");
lin blindfold_A = compoundA (mkA "blindfold");
lin blindfold_N = mkN "blindfold" "blindfolds";
lin blindfold_V2 = mkV2 (mkV "blindfold" "blindfolds" "blindfolded" "blindfolded" "blindfolding");
lin blindman's_buff_N = mkN "blindman's buff" ;
lin blindness_N = mkN "blindness" ;
lin blink_N = mkN "blink" "blinks";
lin blink_V = mkV "blink" "blinks" "blinked" "blinked" "blinking";
lin blink_V2 = mkV2 (mkV "blink" "blinks" "blinked" "blinked" "blinking");
lin blinking_A = compoundA (mkA "blinking");
lin blip_N = mkN "blip" "blips";
lin bliss_N = mkN "bliss" ;
lin blissful_A = compoundA (mkA "blissful");
lin blister_N = mkN "blister" "blisters";
lin blister_V = mkV "blister" "blisters" "blistered" "blistered" "blistering";
lin blister_V2 = mkV2 (mkV "blister" "blisters" "blistered" "blistered" "blistering");
lin blithe_A = compoundA (mkA "blithe");
lin blithering_A = compoundA (mkA "blithering");
lin blithesome_A = compoundA (mkA "blithesome");
lin blitz_N = mkN "blitz" "blitzes";
lin blitz_V2 = mkV2 (mkV "blitz" "blitzes" "blitzed" "blitzed" "blitzing");
lin blizzard_N = mkN "blizzard" "blizzards";
lin bloated_A = compoundA (mkA "bloated");
lin bloater_N = mkN "bloater" "bloaters";
lin blob_N = mkN "blob" "blobs";
lin bloc_N = mkN "bloc" "blocs";
lin block_N = mkN "block" "blocks";
lin block_V2 = mkV2 (mkV "block" "blocks" "blocked" "blocked" "blocking");
lin blockade_N = mkN "blockade" "blockades";
lin blockade_V2 = mkV2 (mkV "blockade" "blockades" "blockaded" "blockaded" "blockading");
lin blockade_runner_N = mkN "blockade - runner" "blockade - runners";
lin blockage_N = mkN "blockage" "blockages";
lin blockbuster_N = mkN "blockbuster" "blockbusters";
lin blockhead_N = mkN "blockhead" "blockheads";
lin blockhouse_N = mkN "blockhouse" "blockhouses";
lin bloke_N = mkN "bloke" "blokes";
lin blond_A = mkA "blond" "blonder";
lin blond_N = mkN "blond" "blonds";
lin blonde_A = compoundA (mkA "blonde");
lin blonde_N = mkN "blonde" "blondes";
lin blood_N = mkN "blood" "bloods";
lin blood_V2 = mkV2 (mkV "blood" "bloods" "blooded" "blooded" "blooding");
lin blood_bath_N = mkN "blood - bath" "blood - baths";
lin blood_donor_N = mkN "blood - donor" "blood - donors";
lin blood_group_N = mkN "blood - group" "blood - groups";
lin blood_heat_N = mkN "blood - heat" ;
lin blood_letting_N = mkN "blood - letting" "blood - lettings";
lin blood_money_N = mkN "blood - money" ;
lin blood_poisoning_N = mkN "blood - poisoning" ;
lin blood_pressure_N = mkN "blood - pressure" "blood - pressures";
lin blood_relation_N = mkN "blood - relation" "blood - relations";
lin blood_transfusion_N = mkN "blood - transfusion" "blood - transfusions";
lin blood_type_N = mkN "blood - type" "blood - types";
lin blood_vessel_N = mkN "blood - vessel" "blood - vessels";
lin bloodcurdling_A = compoundA (mkA "bloodcurdling");
lin bloodhound_N = mkN "bloodhound" "bloodhounds";
lin bloodless_A = compoundA (mkA "bloodless");
lin bloodlust_N = mkN "bloodlust" ;
lin bloodshed_N = mkN "bloodshed" "bloodsheds";
lin bloodshot_A = compoundA (mkA "bloodshot");
lin bloodstain_N = mkN "bloodstain" "bloodstains";
lin bloodstained_A = compoundA (mkA "bloodstained");
lin bloodstock_N = mkN "bloodstock" "bloodstocks";
lin bloodsucker_N = mkN "bloodsucker" "bloodsuckers";
lin bloodthirstiness_N = mkN "bloodthirstiness" ;
lin bloodthirsty_A = compoundA (mkA "bloodthirsty");
lin bloody_A = mkA "bloody" "bloodier";
lin bloody_Adv = mkAdv "bloody";
lin bloody_minded_A = compoundA (mkA "bloody - minded");
lin bloom_N = mkN "bloom" "blooms";
lin bloom_V = mkV "bloom" "blooms" "bloomed" "bloomed" "blooming";
lin bloomer_N = mkN "bloomer" "bloomers";
lin blooming_A = compoundA (mkA "blooming");
lin blossom_N = mkN "blossom" "blossoms";
lin blossom_V = mkV "blossom" "blossoms" "blossomed" "blossomed" "blossoming";
lin blot_N = mkN "blot" "blots";
lin blot_V2 = mkV2 (mkV "blot" "blots" "blotted" "blotted" "blotting");
lin blotch_N = mkN "blotch" "blotches";
lin blotter_N = mkN "blotter" "blotters";
lin blotting_paper_N = mkN "blotting - paper" "blotting - papers";
lin blotto_A = compoundA (mkA "blotto");
lin blouse_N = mkN "blouse" "blouses";
lin blow_N = mkN "blow" "blows";
lin blow_V = IrregEng.blow_V;
lin blow_V2 = mkV2 (IrregEng.blow_V);
lin blow_dry_V2 = mkV2 (mkV "blow - dry" "blow - dries" "blow - dried" "blow - dried" "blow - drying");
lin blow_up_N = mkN "blow - up" "blow - ups";
lin blowback_N = mkN "blowback" "blowbacks";
lin blower_N = mkN "blower" "blowers";
lin blowfly_N = mkN "blowfly" "blowflies";
lin blowhole_N = mkN "blowhole" "blowholes";
lin blowing_up_N = mkN "blowing - up" "blowing - ups";
lin blowlamp_N = mkN "blowlamp" "blowlamps";
lin blowout_N = mkN "blowout" "blowouts";
lin blowpipe_N = mkN "blowpipe" "blowpipes";
lin blowtorch_N = mkN "blowtorch" "blowtorches";
lin blowzy_A = compoundA (mkA "blowzy");
lin blubber_N = mkN "blubber" ;
lin blubber_V = mkV "blubber" "blubbers" "blubbered" "blubbered" "blubbering";
lin blubber_V2 = mkV2 (mkV "blubber" "blubbers" "blubbered" "blubbered" "blubbering");
lin bludgeon_N = mkN "bludgeon" "bludgeons";
lin bludgeon_V2 = mkV2 (mkV "bludgeon" "bludgeons" "bludgeoned" "bludgeoned" "bludgeoning");
lin blue_A = mkA "blue" "bluer";
lin blue_N = mkN "blue" "blues";
lin blue_V2 = mkV2 (mkV "blue" "blues" "blued" "blued" "bluing");
lin blue_collar_A = compoundA (mkA "blue - collar");
lin blue_jacket_N = mkN "blue - jacket" "blue - jackets";
lin blue_pencil_V2 = mkV2 (mkV "blue - pencil" "blue - pencils" "blue - pencilled" "blue - pencilled" "blue - pencilling");
lin bluebell_N = mkN "bluebell" "bluebells";
lin bluebottle_N = mkN "bluebottle" "bluebottles";
lin blueprint_N = mkN "blueprint" "blueprints";
lin bluestocking_N = mkN "bluestocking" "bluestockings";
lin bluff_A = compoundA (mkA "bluff");
lin bluff_N = mkN "bluff" "bluffs";
lin bluff_V = mkV "bluff" "bluffs" "bluffed" "bluffed" "bluffing";
lin bluff_V2 = mkV2 (mkV "bluff" "bluffs" "bluffed" "bluffed" "bluffing");
lin bluffer_N = mkN "bluffer" "bluffers";
lin bluffness_N = mkN "bluffness" ;
lin bluish_A = compoundA (mkA "bluish");
lin blunder_N = mkN "blunder" "blunders";
lin blunder_V = mkV "blunder" "blunders" "blundered" "blundered" "blundering";
lin blunder_V2 = mkV2 (mkV "blunder" "blunders" "blundered" "blundered" "blundering");
lin blunderbuss_N = mkN "blunderbuss" "blunderbusses";
lin blunderer_N = mkN "blunderer" "blunderers";
lin blunt_A = mkA "blunt" "blunter";
lin blunt_V2 = mkV2 (mkV "blunt" "blunts" "blunted" "blunted" "blunting");
lin bluntness_N = mkN "bluntness" ;
lin blur_N = mkN "blur" "blurs";
lin blur_V = mkV "blur" "blurs" "blurred" "blurred" "blurring";
lin blur_V2 = mkV2 (mkV "blur" "blurs" "blurred" "blurred" "blurring");
lin blurb_N = mkN "blurb" "blurbs";
lin blurt_V2 = mkV2 (mkV "blurt" "blurts" "blurted" "blurted" "blurting");
lin blush_N = mkN "blush" "blushes";
lin blush_V = mkV "blush" "blushes" "blushed" "blushed" "blushing";
lin blushing_A = compoundA (mkA "blushing");
lin bluster_N = mkN "bluster" "blusters";
lin bluster_V = mkV "bluster" "blusters" "blustered" "blustered" "blustering";
lin bluster_V2 = mkV2 (mkV "bluster" "blusters" "blustered" "blustered" "blustering");
lin blustery_A = compoundA (mkA "blustery");
lin blvd_N = mkN "blvd" ;
lin blyth_PN = mkPN "Blyth";
lin bma_N = mkN "bma" ;
lin bmus_N = mkN "bmus" ;
lin bo'ness_PN = mkPN "Bo'ness";
lin bo'sn_N = mkN "bo'sn" "bo'sns";
lin bo'sun_N = mkN "bo'sun" "bo'suns";
lin boa_N = mkN "boa" "boas";
lin boa_constrictor_N = mkN "boa - constrictor" "boa - constrictors";
lin boar_N = mkN "boar" "boars";
lin board_N = mkN "board" "boards";
lin board_V = mkV "board" "boards" "boarded" "boarded" "boarding";
lin board_V2 = mkV2 (mkV "board" "boards" "boarded" "boarded" "boarding");
lin boarder_N = mkN "boarder" "boarders";
lin boarding_N = mkN "boarding" ;
lin boarding_card_N = mkN "boarding - card" "boarding - cards";
lin boarding_house_N = mkN "boarding - house" "boarding - houses";
lin boarding_school_N = mkN "boarding - school" "boarding - schools";
lin boardroom_N = mkN "boardroom" "boardrooms";
lin boardwalk_N = mkN "boardwalk" "boardwalks";
lin boast_N = mkN "boast" "boasts";
lin boast_V = mkV "boast" "boasts" "boasted" "boasted" "boasting";
lin boast_V2 = mkV2 (mkV "boast" "boasts" "boasted" "boasted" "boasting");
lin boast_VS = mkVS (mkV "boast" "boasts" "boasted" "boasted" "boasting");
lin boaster_N = mkN "boaster" "boasters";
lin boastful_A = compoundA (mkA "boastful");
lin boat_N = mkN "boat" "boats";
lin boat_V = mkV "boat" "boats" "boated" "boated" "boating";
lin boat_hook_N = mkN "boat - hook" "boat - hooks";
lin boat_house_N = mkN "boat - house" "boat - houses";
lin boat_race_N = mkN "boat - race" "boat - races";
lin boat_train_N = mkN "boat - train" "boat - trains";
lin boater_N = mkN "boater" "boaters";
lin boatman_N = mkN "boatman" "boatmen" {- FIXME: guessed plural form -};
lin boatswain_N = mkN "boatswain" "boatswains";
lin bob_N = mkN "bob" "bob";
lin bob_PN = mkPN "Bob";
lin bob_V = mkV "bob" "bobs" "bobbed" "bobbed" "bobbing";
lin bob_V2 = mkV2 (mkV "bob" "bobs" "bobbed" "bobbed" "bobbing");
lin bobbin_N = mkN "bobbin" "bobbins";
lin bobby_N = mkN "bobby" "bobbies";
lin bobby_PN = mkPN "Bobby";
lin bobby_soxer_N = mkN "bobby - soxer" "bobby - soxers";
lin bobolink_N = mkN "bobolink" "bobolinks";
lin bobsled_N = mkN "bobsled" "bobsleds";
lin bobsleigh_N = mkN "bobsleigh" "bobsleighs";
lin bobtail_N = mkN "bobtail" "bobtails";
lin boche_A = compoundA (mkA "boche");
lin bochum_PN = mkPN "Bochum";
lin bode_V = mkV "bode" "bodes" "boded" "boded" "boding";
lin bode_V2 = mkV2 (mkV "bode" "bodes" "boded" "boded" "boding");
lin bodice_N = mkN "bodice" "bodices";
lin bodied_A = compoundA (mkA "bodied");
lin bodily_A = compoundA (mkA "bodily");
lin bodily_Adv = mkAdv "bodily";
lin boding_N = mkN "boding" ;
lin bodkin_N = mkN "bodkin" "bodkins";
lin bodmin_PN = mkPN "Bodmin";
lin body_N = mkN "body" "bodies";
lin body_servant_N = mkN "body - servant" "body - servants";
lin body_snatcher_N = mkN "body - snatcher" "body - snatchers";
lin bodyguard_N = mkN "bodyguard" "bodyguards";
lin bodywork_N = mkN "bodywork" "bodyworks";
lin boer_A = compoundA (mkA "boer");
lin boer_N = mkN "boer" "boers";
lin boffin_N = mkN "boffin" "boffins";
lin bog_N = mkN "bog" "bogs";
lin bog_V = mkV "bog" "bogs" "bogged" "bogged" "bogging";
lin bog_V2 = mkV2 (mkV "bog" "bogs" "bogged" "bogged" "bogging");
lin bogey_N = mkN "bogey" "bogeys";
lin bogeyman_N = mkN "bogeyman" "bogeymen" {- FIXME: guessed plural form -};
lin boggle_V = mkV "boggle" "boggles" "boggled" "boggled" "boggling";
lin boggy_A = mkA "boggy" "boggier";
lin bogie_N = mkN "bogie" "bogies";
lin bognor_PN = mkPN "Bognor";
lin bognor_regis_PN = mkPN "Bognor regis";
lin bogota_PN = mkPN "Bogota";
lin bogus_A = compoundA (mkA "bogus");
lin bogy_N = mkN "bogy" "bogies";
lin bohemian_A = compoundA (mkA "bohemian");
lin bohemian_N = mkN "bohemian" "bohemians";
lin boil_N = mkN "boil" "boils";
lin boil_V = mkV "boil" "boils" "boiled" "boiled" "boiling";
lin boil_V2 = mkV2 (mkV "boil" "boils" "boiled" "boiled" "boiling");
lin boiler_N = mkN "boiler" "boilers";
lin boilersuit_N = mkN "boilersuit" "boilersuits";
lin boiling_point_N = mkN "boiling - point" "boiling - points";
lin boisterous_A = compoundA (mkA "boisterous");
lin boisterousness_N = mkN "boisterousness" ;
lin bold_A = mkA "bold" "bolder";
lin boldness_N = mkN "boldness" ;
lin boldon_PN = mkPN "Boldon";
lin bole_N = mkN "bole" "boles";
lin bolero_N = mkN "bolero" "boleros";
lin bolivia_PN = mkPN "Bolivia";
lin bolivian_A = compoundA (mkA "bolivian");
lin bolivian_N = mkN "bolivian" "bolivians";
lin boll_N = mkN "boll" "bolls";
lin bollard_N = mkN "bollard" "bollards";
lin bollington_PN = mkPN "Bollington";
lin bollock_N = mkN "bollock" "bollocks";
lin bologna_PN = mkPN "Bologna";
lin boloney_N = mkN "boloney" ;
lin bolshevik_N = mkN "bolshevik" "bolsheviks";
lin bolshy_A = compoundA (mkA "bolshy");
lin bolsover_PN = mkPN "Bolsover";
lin bolster_N = mkN "bolster" "bolsters";
lin bolster_V = mkV "bolster";
lin bolster_V2 = mkV2 (mkV "bolster" "bolsters" "bolstered" "bolstered" "bolstering");
lin bolt_Adv = mkAdv "bolt";
lin bolt_N = mkN "bolt" "bolts";
lin bolt_V = mkV "bolt" "bolts" "bolted" "bolted" "bolting";
lin bolt_V2 = mkV2 (mkV "bolt" "bolts" "bolted" "bolted" "bolting");
lin bolt_hole_N = mkN "bolt - hole" "bolt - holes";
lin bolton_PN = mkPN "Bolton";
lin bolton_le_sands_PN = mkPN "Bolton - le - sands";
lin bolzano_PN = mkPN "Bolzano";
lin bomb_N = mkN "bomb" "bombs";
lin bomb_V = mkV "bomb" "bombs" "bombed" "bombed" "bombing";
lin bomb_V2 = mkV2 (mkV "bomb" "bombs" "bombed" "bombed" "bombing");
lin bomb_proof_A = compoundA (mkA "bomb - proof");
lin bomb_sight_N = mkN "bomb - sight" "bomb - sights";
lin bomb_site_N = mkN "bomb - site" "bomb - sites";
lin bombard_V2 = mkV2 (mkV "bombard" "bombards" "bombarded" "bombarded" "bombarding");
lin bombardier_N = mkN "bombardier" "bombardiers";
lin bombardment_N = mkN "bombardment" "bombardments";
lin bombast_N = mkN "bombast" ;
lin bombastic_A = compoundA (mkA "bombastic");
lin bombastically_Adv = mkAdv "bombastically";
lin bombay_PN = mkPN "Bombay";
lin bomber_N = mkN "bomber" "bombers";
lin bombshell_N = mkN "bombshell" "bombshells";
lin bon_mot_N = mkN "bon mot" "IRREG";
lin bona_fide_A = compoundA (mkA "bona fide");
lin bona_fide_Adv = mkAdv "bona fide";
lin bonanza_N = mkN "bonanza" "bonanzas";
lin bonbon_N = mkN "bonbon" "bonbons";
lin bond_N = mkN "bond" "bonds";
lin bond_V2 = mkV2 (mkV "bond" "bonds" "bonded" "bonded" "bonding");
lin bond_holder_N = mkN "bond - holder" "bond - holders";
lin bondage_N = mkN "bondage" ;
lin bone_N = mkN "bone" "bones";
lin bone_V2 = mkV2 (mkV "bone" "bones" "boned" "boned" "boning");
lin bone_dry_A = compoundA (mkA "bone - dry");
lin bone_head_N = mkN "bone - head" "bone - heads";
lin bone_idle_A = compoundA (mkA "bone - idle");
lin bone_lazy_A = compoundA (mkA "bone - lazy");
lin bone_setter_N = mkN "bone - setter" "bone - setters";
lin boneless_A = compoundA (mkA "boneless");
lin bonemeal_N = mkN "bonemeal" "bonemeals";
lin boner_N = mkN "boner" "boners";
lin boneshaker_N = mkN "boneshaker" "boneshakers";
lin bonfire_N = mkN "bonfire" "bonfires";
lin bongo_N = mkN "bongo" "bongos";
lin bonhomie_N = mkN "bonhomie" ;
lin bonito_N = mkN "bonito" "bonitos";
lin bonkers_A = compoundA (mkA "bonkers");
lin bonn_PN = mkPN "Bonn";
lin bonnet_N = mkN "bonnet" "bonnets";
lin bonnily_Adv = mkAdv "bonnily";
lin bonny_A = mkA "bonny" "bonnier";
lin bonnybridge_PN = mkPN "Bonnybridge";
lin bonnyrigg_PN = mkPN "Bonnyrigg";
lin bonus_N = mkN "bonus" "bonuses";
lin bony_A = mkA "bony" "bonier";
lin boo_N = mkN "boo" "boos";
lin boo_V = mkV "boo" "boos" "booed" "booed" "booing";
lin boo_V2 = mkV2 (mkV "boo" "boos" "booed" "booed" "booing");
lin boob_N = mkN "boob" "boobs";
lin boob_V = mkV "boob" "boobs" "boobed" "boobed" "boobing";
lin booby_N = mkN "booby" "boobies";
lin booby_trap_N = mkN "booby - trap" "booby - traps";
lin boogie_N = mkN "boogie" "boogies";
lin boogie_woogie_N = mkN "boogie - woogie" "boogie - woogies";
lin book_N = mkN "book" "books";
lin book_V2 = mkV2 (mkV "book" "books" "booked" "booked" "booking");
lin book_end_N = mkN "book - end" "book - ends";
lin book_keeper_N = mkN "book - keeper" "book - keepers";
lin bookable_A = compoundA (mkA "bookable");
lin bookcase_N = mkN "bookcase" "bookcases";
lin bookclub_N = mkN "bookclub" "bookclubs";
lin bookie_N = mkN "bookie" "bookies";
lin booking_N = mkN "booking" "bookings";
lin bookish_A = compoundA (mkA "bookish");
lin bookishness_N = mkN "bookishness" ;
lin bookkeeper_N = mkN "bookkeeper" "bookkeepers";
lin bookkeeping_N = mkN "bookkeeping" ;
lin booklet_N = mkN "booklet" "booklets";
lin bookmaker_N = mkN "bookmaker" "bookmakers";
lin bookmark_N = mkN "bookmark" "bookmarks";
lin bookmarker_N = mkN "bookmarker" "bookmarkers";
lin bookmobile_N = mkN "bookmobile" "bookmobiles";
lin bookseller_N = mkN "bookseller" "booksellers";
lin bookshop_N = mkN "bookshop" "bookshops";
lin bookstall_N = mkN "bookstall" "bookstalls";
lin bookworm_N = mkN "bookworm" "bookworms";
lin boom_N = mkN "boom" "booms";
lin boom_V = mkV "boom" "booms" "boomed" "boomed" "booming";
lin boom_V2 = mkV2 (mkV "boom" "booms" "boomed" "boomed" "booming");
lin boomerang_N = mkN "boomerang" "boomerangs";
lin boon_A = compoundA (mkA "boon");
lin boon_N = mkN "boon" "boons";
lin boor_N = mkN "boor" "boors";
lin boorish_A = compoundA (mkA "boorish");
lin boorishness_N = mkN "boorishness" ;
lin boost_N = mkN "boost" "boosts";
lin boost_V2 = mkV2 (mkV "boost" "boosts" "boosted" "boosted" "boosting");
lin booster_N = mkN "booster" "boosters";
lin boot_N = mkN "boot" "boots";
lin boot_V2 = mkV2 (mkV "boot" "boots" "booted" "booted" "booting");
lin booted_A = compoundA (mkA "booted");
lin bootee_N = mkN "bootee" "bootees";
lin booth_N = mkN "booth" "booths";
lin bootlace_N = mkN "bootlace" "bootlaces";
lin bootle_PN = mkPN "Bootle";
lin bootleg_V2 = mkV2 (mkV "bootleg" "bootlegs" "bootlegged" "bootlegged" "bootlegging");
lin bootlegger_N = mkN "bootlegger" "bootleggers";
lin bootless_A = compoundA (mkA "bootless");
lin booty_N = mkN "booty" ;
lin booze_N = mkN "booze" ;
lin booze_V = mkV "booze" "boozes" "boozed" "boozed" "boozing";
lin booze_up_N = mkN "booze - up" "booze - ups";
lin boozer_N = mkN "boozer" "boozers";
lin boozy_A = mkA "boozy" "boozier";
lin bopeep_N = mkN "bopeep" ;
lin boracic_A = compoundA (mkA "boracic");
lin borage_N = mkN "borage" ;
lin borax_N = mkN "borax" ;
lin bordeaux_N = mkN "bordeaux" ;
lin bordeaux_PN = mkPN "Bordeaux";
lin border_N = mkN "border" "borders";
lin border_V = mkV "border" "borders" "bordered" "bordered" "bordering";
lin border_V2 = mkV2 (mkV "border" "borders" "bordered" "bordered" "bordering");
lin borderer_N = mkN "borderer" "borderers";
lin borderland_N = mkN "borderland" "borderlands";
lin borderline_N = mkN "borderline" "borderlines";
lin borders_PN = mkPN "Borders";
lin bordon_PN = mkPN "Bordon";
lin bore_N = mkN "bore" "bores";
lin bore_V = mkV "bore" "bores" "bored" "bored" "boring";
lin bore_V2 = mkV2 (mkV "bore" "bores" "bored" "bored" "boring");
lin bore_hole_N = mkN "bore - hole" "bore - holes";
lin boredom_N = mkN "boredom" ;
lin borer_N = mkN "borer" "borers";
lin boric_A = compoundA (mkA "boric");
lin boring_A = compoundA (mkA "boring");
lin boris_PN = mkPN "Boris";
lin boron_N = mkN "boron" ;
lin borough_N = mkN "borough" "boroughs";
lin borrow_V = mkV "borrow";
lin borrow_V2 = mkV2 (mkV "borrow" "borrows" "borrowed" "borrowed" "borrowing");
lin borrow_VV = mkVV (mkV "borrow" "borrows" "borrowed" "borrowed" "borrowing");
lin borrower_N = mkN "borrower" "borrowers";
lin borsch_N = mkN "borsch" ;
lin borstal_N = mkN "borstal" "borstals";
lin bortsch_N = mkN "bortsch" ;
lin borzoi_N = mkN "borzoi" "borzois";
lin bosh_N = mkN "bosh" ;
lin bosky_A = compoundA (mkA "bosky");
lin bosom_N = mkN "bosom" "bosoms";
lin boss_N = mkN "boss" "bosses";
lin boss_V2 = mkV2 (mkV "boss" "bosses" "bossed" "bossed" "bossing");
lin boss_eyed_A = compoundA (mkA "boss - eyed");
lin bossy_A = mkA "bossy" "bossier";
lin boston_PN = mkPN "Boston";
lin botanical_A = compoundA (mkA "botanical");
lin botanist_N = mkN "botanist" "botanists";
lin botanize_V = mkV "botanize" "botanizes" "botanized" "botanized" "botanizing";
lin botany_N = mkN "botany" ;
lin botch_N = mkN "botch" "botches";
lin botch_V2 = mkV2 (mkV "botch" "botches" "botched" "botched" "botching");
lin botcher_N = mkN "botcher" "botchers";
lin both7and_DConj = mkConj "both" "and";
lin both_Adv = mkAdv "both";
lin both_Det = mkDeterminer plural "both";
lin bother_N = mkN "bother" ;
lin bother_V = mkV "bother" "bothers" "bothered" "bothered" "bothering";
lin bother_V2 = mkV2 (mkV "bother" "bothers" "bothered" "bothered" "bothering");
lin bother_V2V = mkV2V (mkV "bother" "bothers" "bothered" "bothered" "bothering") noPrep to_Prep ;
lin bothersome_A = compoundA (mkA "bothersome");
lin botswana_PN = mkPN "Botswana";
lin bottle_N = mkN "bottle" "bottles";
lin bottle_V2 = mkV2 (mkV "bottle" "bottles" "bottled" "bottled" "bottling");
lin bottle_fed_A = compoundA (mkA "bottle - fed");
lin bottle_green_A = compoundA (mkA "bottle - green");
lin bottleneck_N = mkN "bottleneck" "bottlenecks";
lin bottom_N = mkN "bottom" "bottoms";
lin bottom_V = mkV "bottom" "bottoms" "bottomed" "bottomed" "bottoming";
lin bottomless_A = compoundA (mkA "bottomless");
lin bottrop_PN = mkPN "Bottrop";
lin botulism_N = mkN "botulism" ;
lin boudoir_N = mkN "boudoir" "boudoirs";
lin bougainvillea_N = mkN "bougainvillea" "bougainvilleas";
lin bough_N = mkN "bough" "boughs";
lin bouillon_N = mkN "bouillon" ;
lin boulder_N = mkN "boulder" "boulders";
lin boulevard_N = mkN "boulevard" "boulevards";
lin bounce_N = mkN "bounce" "bounces";
lin bounce_V = mkV "bounce" "bounces" "bounced" "bounced" "bouncing";
lin bounce_V2 = mkV2 (mkV "bounce" "bounces" "bounced" "bounced" "bouncing");
lin bouncing_A = compoundA (mkA "bouncing");
lin bouncy_A = mkA "bouncy" "bouncier";
lin bound_A = compoundA (mkA "bound");
lin bound_N = mkN "bound" "bounds";
lin bound_V = mkV "bound" "bounds" "bounded" "bounded" "bounding";
lin bound_V2 = mkV2 (mkV "bound" "bounds" "bounded" "bounded" "bounding");
lin bound_V2V = mkV2V (mkV "bound" "bounds" "bounded" "bounded" "bounding") noPrep to_Prep ;
lin boundary_N = mkN "boundary" "boundaries";
lin bounden_A = compoundA (mkA "bounden");
lin bounder_N = mkN "bounder" "bounders";
lin boundless_A = compoundA (mkA "boundless");
lin bounteous_A = compoundA (mkA "bounteous");
lin bountiful_A = compoundA (mkA "bountiful");
lin bounty_N = mkN "bounty" "bounties";
lin bouquet_N = mkN "bouquet" "bouquets";
lin bourbon_N = mkN "bourbon" "bourbons";
lin bourgeois_A = compoundA (mkA "bourgeois");
lin bourgeois_N = mkN "bourgeois" "bourgeois";
lin bourgeoisie_N = mkN "bourgeoisie" "bourgeoisies";
lin bourn_N = mkN "bourn" "bourns";
lin bourne_N = mkN "bourne" "bournes";
lin bourne_PN = mkPN "Bourne";
lin bournemouth_PN = mkPN "Bournemouth";
lin bourse_N = mkN "bourse" "bourses";
lin bout_N = mkN "bout" "bouts";
lin boutique_N = mkN "boutique" "boutiques";
lin bovine_A = compoundA (mkA "bovine");
lin bovril_N = mkN "bovril" ;
lin bow_N = mkN "bow" "bows";
lin bow_V = mkV "bow" "bows" "bowed" "bowed" "bowing";
lin bow_V2 = mkV2 (mkV "bow" "bows" "bowed" "bowed" "bowing");
lin bow_wow_N = mkN "bow - wow" "bow - wows";
lin bowburn_PN = mkPN "Bowburn";
lin bowdlerize_V2 = mkV2 (mkV "bowdlerize" "bowdlerizes" "bowdlerized" "bowdlerized" "bowdlerizing");
lin bowel_N = mkN "bowel" "bowels";
lin bower_N = mkN "bower" "bowers";
lin bowie_knife_N = mkN "bowie knife" "bowie knives";
lin bowing_N = mkN "bowing" ;
lin bowl_N = mkN "bowl" "bowls";
lin bowl_V = mkV "bowl" "bowls" "bowled" "bowled" "bowling";
lin bowl_V2 = mkV2 (mkV "bowl" "bowls" "bowled" "bowled" "bowling");
lin bowler_N = mkN "bowler" "bowlers";
lin bowline_N = mkN "bowline" "bowlines";
lin bowling_green_N = mkN "bowling - green" "bowling - greens";
lin bowls_N = mkN "bowls" "bowls";
lin bowman_N = mkN "bowman" "bowmen" {- FIXME: guessed plural form -};
lin bowsprit_N = mkN "bowsprit" "bowsprits";
lin box_N = mkN "box" "boxes";
lin box_V = mkV "box" "boxes" "boxed" "boxed" "boxing";
lin box_V2 = mkV2 (mkV "box" "boxes" "boxed" "boxed" "boxing");
lin box_kite_N = mkN "box - kite" "box - kites";
lin box_number_N = mkN "box - number" "box - numbers";
lin box_office_N = mkN "box - office" "box - offices";
lin boxer_N = mkN "boxer" "boxers";
lin boxful_N = mkN "boxful" "boxfuls";
lin boxing_N = mkN "boxing" ;
lin boxing_day_N = mkN "boxing day" "boxing days";
lin boxing_day_PN = mkPN "Boxing day";
lin boxing_glove_N = mkN "boxing - glove" "boxing - gloves";
lin boxing_match_N = mkN "boxing - match" "boxing - matches";
lin boxwood_N = mkN "boxwood" ;
lin boy_N = mkN "boy" "boys";
lin boycott_N = mkN "boycott" "boycotts";
lin boycott_V2 = mkV2 (mkV "boycott" "boycotts" "boycotted" "boycotted" "boycotting");
lin boyfriend_N = mkN "boyfriend" "boyfriends";
lin boyhood_N = mkN "boyhood" ;
lin boyish_A = compoundA (mkA "boyish");
lin bra_N = mkN "bra" "bras";
lin brace_N = mkN "brace" "brace";
lin brace_V = mkV "brace" "braces" "braced" "braced" "bracing";
lin brace_V2 = mkV2 (mkV "brace" "braces" "braced" "braced" "bracing");
lin bracelet_N = mkN "bracelet" "bracelets";
lin bracken_N = mkN "bracken" ;
lin bracket_N = mkN "bracket" "brackets";
lin bracket_V2 = mkV2 (mkV "bracket" "brackets" "bracketed" "bracketed" "bracketing");
lin brackish_A = compoundA (mkA "brackish");
lin bracknell_PN = mkPN "Bracknell";
lin bract_N = mkN "bract" "bracts";
lin brad_N = mkN "brad" "brads";
lin bradawl_N = mkN "bradawl" "bradawls";
lin bradford_PN = mkPN "Bradford";
lin bradford_on_avon_PN = mkPN "Bradford - on - avon";
lin brae_N = mkN "brae" "braes";
lin brag_V = mkV "brag" "brags" "bragged" "bragged" "bragging";
lin braggart_N = mkN "braggart" "braggarts";
lin bragging_N = mkN "bragging" ;
lin brahmin_N = mkN "brahmin" "brahmins";
lin braid_N = mkN "braid" "braids";
lin braid_V2 = mkV2 (mkV "braid" "braids" "braided" "braided" "braiding");
lin braille_N = mkN "braille" ;
lin brain_N = mkN "brain" "brains";
lin brain_V2 = mkV2 (mkV "brain" "brains" "brained" "brained" "braining");
lin brain_fag_N = mkN "brain - fag" ;
lin brain_teaser_N = mkN "brain - teaser" "brain - teasers";
lin brainchild_N = mkN "brainchild" "brainchildren" {- FIXME: guessed plural form -};
lin brainless_A = compoundA (mkA "brainless");
lin brainstorm_N = mkN "brainstorm" "brainstorms";
lin braintree_PN = mkPN "Braintree";
lin brainwash_V2 = mkV2 (mkV "brainwash" "brainwashes" "brainwashed" "brainwashed" "brainwashing");
lin brainwashed_A = compoundA (mkA "brainwashed");
lin brainwashing_N = mkN "brainwashing" ;
lin brainwave_N = mkN "brainwave" "brainwaves";
lin brainy_A = mkA "brainy" "brainier";
lin braise_V2 = mkV2 (mkV "braise" "braises" "braised" "braised" "braising");
lin brake_N = mkN "brake" "brakes";
lin brake_V = mkV "brake" "brakes" "braked" "braked" "braking";
lin brake_V2 = mkV2 (mkV "brake" "brakes" "braked" "braked" "braking");
lin brakeman_N = mkN "brakeman" "brakemen" {- FIXME: guessed plural form -};
lin bramble_N = mkN "bramble" "brambles";
lin bran_N = mkN "bran" ;
lin bran_new_A = compoundA (mkA "bran - new");
lin branch_N = mkN "branch" "branches";
lin branch_V = mkV "branch" "branches" "branched" "branched" "branching";
lin branchy_A = mkA "branchy" "branchier";
lin brand_N = mkN "brand" "brands";
lin brand_V2 = mkV2 (mkV "brand" "brands" "branded" "branded" "branding");
lin brand_new_A = compoundA (mkA "brand - new");
lin branderburgh_PN = mkPN "Branderburgh";
lin branding_iron_N = mkN "branding - iron" "branding - irons";
lin brandish_V2 = mkV2 (mkV "brandish" "brandishes" "brandished" "brandished" "brandishing");
lin brandy_N = mkN "brandy" "brandies";
lin brandy_ball_N = mkN "brandy - ball" "brandy - balls";
lin brandy_snap_N = mkN "brandy - snap" "brandy - snaps";
lin brash_A = mkA "brash" "brasher";
lin brasilia_PN = mkPN "Brasilia";
lin brass_N = mkN "brass" "brasses";
lin brassard_N = mkN "brassard" "brassards";
lin brasserie_N = mkN "brasserie" "brasseries";
lin brassiere_1_N = mkN "brassiere" "brassieres";
lin brassiere_2_N = mkN "brassière" "brassières";
lin brassy_A = mkA "brassy" "brassier";
lin brat_N = mkN "brat" "brats";
lin bratislava_PN = mkPN "Bratislava";
lin braunschweig_PN = mkPN "Braunschweig";
lin braunton_PN = mkPN "Braunton";
lin bravado_N = mkN "bravado" "bravados";
lin brave_A = mkA "brave" "braver";
lin brave_N = mkN "brave" "braves";
lin brave_V2 = mkV2 (mkV "brave" "braves" "braved" "braved" "braving");
lin bravery_N = mkN "bravery" ;
lin bravo_N = mkN "bravo" "bravos";
lin brawl_N = mkN "brawl" "brawls";
lin brawl_V = mkV "brawl" "brawls" "brawled" "brawled" "brawling";
lin brawler_N = mkN "brawler" "brawlers";
lin brawn_N = mkN "brawn" ;
lin brawny_A = mkA "brawny" "brawnier";
lin bray_N = mkN "bray" "brays";
lin bray_V2 = mkV2 (mkV "bray" "brays" "brayed" "brayed" "braying");
lin braze_V2 = mkV2 (mkV "braze" "brazes" "brazed" "brazed" "brazing");
lin brazen_A = compoundA (mkA "brazen");
lin brazen_V2 = mkV2 (mkV "brazen" "brazens" "brazened" "brazened" "brazening");
lin brazen_faced_A = compoundA (mkA "brazen - faced");
lin brazier_N = mkN "brazier" "braziers";
lin brazil_PN = mkPN "Brazil";
lin brazilian_A = compoundA (mkA "brazilian");
lin brazilian_N = mkN "brazilian" "brazilians";
lin breach_N = mkN "breach" "breaches";
lin breach_V2 = mkV2 (mkV "breach" "breaches" "breached" "breached" "breaching");
lin bread_N = mkN "bread" ;
lin breadcrumb_N = mkN "breadcrumb" "breadcrumbs";
lin breadfruit_N = mkN "breadfruit" "breadfruit";
lin breadline_N = mkN "breadline" "breadlines";
lin breadth_N = mkN "breadth" "breadths";
lin breadthways_Adv = mkAdv "breadthways";
lin breadthwise_Adv = mkAdv "breadthwise";
lin breadwinner_N = mkN "breadwinner" "breadwinners";
lin break_N = mkN "break" "breaks";
lin break_V = IrregEng.break_V;
lin break_V2 = mkV2 (IrregEng.break_V);
lin break_in_N = mkN "break - in" "break - ins";
lin break_up_N = mkN "break - up" "break - ups";
lin breakable_A = compoundA (mkA "breakable");
lin breakage_N = mkN "breakage" "breakages";
lin breakaway_N = mkN "breakaway" "breakaways";
lin breakaways_N = mkN "breakaways" "breakawayss";
lin breakdown_N = mkN "breakdown" "breakdowns";
lin breaker_N = mkN "breaker" "breakers";
lin breakfast_N = mkN "breakfast" "breakfasts";
lin breakfast_V = mkV "breakfast" "breakfasts" "breakfasted" "breakfasted" "breakfasting";
lin breakneck_A = compoundA (mkA "breakneck");
lin breakthrough_N = mkN "breakthrough" "breakthroughs";
lin breakwater_N = mkN "breakwater" "breakwaters";
lin bream_N = mkN "bream" "bream";
lin breast_N = mkN "breast" "breasts";
lin breast_V2 = mkV2 (mkV "breast" "breasts" "breasted" "breasted" "breasting");
lin breast_deep_Adv = mkAdv "breast - deep";
lin breast_fed_A = compoundA (mkA "breast - fed");
lin breast_high_Adv = mkAdv "breast - high";
lin breast_plate_N = mkN "breast - plate" "breast - plates";
lin breastfeed_V = mkV "breast" IrregEng.feed_V;
lin breastfeed_V2 = mkV2 (mkV "breast" IrregEng.feed_V);
lin breaston_PN = mkPN "Breaston";
lin breaststroke_N = mkN "breaststroke" ;
lin breastwork_N = mkN "breastwork" "breastworks";
lin breath_N = mkN "breath" "breaths";
lin breathalyser_N = mkN "breathalyser" "breathalysers";
lin breathe_V = mkV "breathe" "breathes" "breathed" "breathed" "breathing";
lin breathe_V2 = mkV2 (mkV "breathe" "breathes" "breathed" "breathed" "breathing");
lin breather_N = mkN "breather" "breathers";
lin breathing_N = mkN "breathing" ;
lin breathing_space_N = mkN "breathing - space" "breathing - spaces";
lin breathless_A = compoundA (mkA "breathless");
lin breathtaking_A = compoundA (mkA "breathtaking");
lin brecknock_PN = mkPN "Brecknock";
lin breda_PN = mkPN "Breda";
lin breech_N = mkN "breech" "breeches";
lin breech_block_N = mkN "breech - block" "breech - blocks";
lin breeches_buoy_N = mkN "breeches - buoy" "breeches - buoys";
lin breed_N = mkN "breed" "breeds";
lin breed_V = IrregEng.breed_V;
lin breed_V2 = mkV2 (IrregEng.breed_V);
lin breeder_N = mkN "breeder" "breeders";
lin breeding_N = mkN "breeding" ;
lin breedsall_PN = mkPN "Breedsall";
lin breeze_N = mkN "breeze" "breezes";
lin breeze_V = mkV "breeze" "breezes" "breezed" "breezed" "breezing";
lin breezily_Adv = mkAdv "breezily";
lin breeziness_N = mkN "breeziness" ;
lin breezy_A = mkA "breezy" "breezier";
lin bremen_PN = mkPN "Bremen";
lin bremerhaven_PN = mkPN "Bremerhaven";
lin bren_N = mkN "bren" "brens";
lin bren_gun_N = mkN "bren - gun" "bren - guns";
lin brenda_PN = mkPN "Brenda";
lin brent_PN = mkPN "Brent";
lin brentwood_PN = mkPN "Brentwood";
lin brescia_PN = mkPN "Brescia";
lin brest_PN = mkPN "Brest";
lin breve_N = mkN "breve" "breves";
lin brevet_N = mkN "brevet" "brevets";
lin breviary_N = mkN "breviary" "breviaries";
lin brevity_N = mkN "brevity" ;
lin brew_N = mkN "brew" "brews";
lin brew_V = mkV "brew" "brews" "brewed" "brewed" "brewing";
lin brew_V2 = mkV2 (mkV "brew" "brews" "brewed" "brewed" "brewing");
lin brewer_N = mkN "brewer" "brewers";
lin brewery_N = mkN "brewery" "breweries";
lin brian_PN = mkPN "Brian";
lin briar_N = mkN "briar" "briars";
lin bribable_A = compoundA (mkA "bribable");
lin bribe_N = mkN "bribe" "bribes";
lin bribe_V = mkV "bribe";
lin bribe_V2 = mkV2 (mkV "bribe" "bribes" "bribed" "bribed" "bribing");
lin bribery_N = mkN "bribery" ;
lin bric_a_brac_N = mkN "bric - a - brac" ;
lin brick_N = mkN "brick" "bricks";
lin brick_V2 = mkV2 (mkV "brick" "bricks" "bricked" "bricked" "bricking");
lin brick_field_N = mkN "brick - field" "brick - fields";
lin brickbat_N = mkN "brickbat" "brickbats";
lin bricket_wood_PN = mkPN "Bricket Wood";
lin brickkiln_N = mkN "brickkiln" "brickkilns";
lin bricklayer_N = mkN "bricklayer" "bricklayers";
lin brickwork_N = mkN "brickwork" "brickworks";
lin bridal_A = compoundA (mkA "bridal");
lin bridal_N = mkN "bridal" "bridals";
lin bride_N = mkN "bride" "brides";
lin bridecake_N = mkN "bridecake" "bridecakes";
lin bridegroom_N = mkN "bridegroom" "bridegrooms";
lin bridesmaid_N = mkN "bridesmaid" "bridesmaids";
lin bridge_N = mkN "bridge" "bridges";
lin bridge_V2 = mkV2 (mkV "bridge" "bridges" "bridged" "bridged" "bridging");
lin bridgehead_N = mkN "bridgehead" "bridgeheads";
lin bridgend_PN = mkPN "Bridgend";
lin bridget_PN = mkPN "Bridget";
lin bridgnorth_PN = mkPN "Bridgnorth";
lin bridgwater_PN = mkPN "Bridgwater";
lin bridle_N = mkN "bridle" "bridles";
lin bridle_V = mkV "bridle" "bridles" "bridled" "bridled" "bridling";
lin bridle_V2 = mkV2 (mkV "bridle" "bridles" "bridled" "bridled" "bridling");
lin bridle_path_N = mkN "bridle - path" "bridle - paths";
lin bridle_road_N = mkN "bridle - road" "bridle - roads";
lin bridlington_PN = mkPN "Bridlington";
lin bridport_PN = mkPN "Bridport";
lin brief_A = mkA "brief" "briefer";
lin brief_N = mkN "brief" "briefs";
lin brief_V2 = mkV2 (mkV "brief" "briefs" "briefed" "briefed" "briefing");
lin briefcase_N = mkN "briefcase" "briefcases";
lin briefing_N = mkN "briefing" "briefings";
lin brier_N = mkN "brier" "briers";
lin brig_N = mkN "brig" "brigs";
lin brig_PN = mkPN "Brig";
lin brigade_N = mkN "brigade" "brigades";
lin brigadier_N = mkN "brigadier" "brigadiers";
lin brigand_N = mkN "brigand" "brigands";
lin brigantine_N = mkN "brigantine" "brigantines";
lin brighouse_PN = mkPN "Brighouse";
lin bright_A = mkA "bright" "brighter";
lin bright_Adv = mkAdv "bright";
lin brighten_V = mkV "brighten" "brightens" "brightened" "brightened" "brightening";
lin brighten_V2 = mkV2 (mkV "brighten" "brightens" "brightened" "brightened" "brightening");
lin brightlingsea_PN = mkPN "Brightlingsea";
lin brightness_N = mkN "brightness" ;
lin brighton_PN = mkPN "Brighton";
lin brill_N = mkN "brill" "brill";
lin brilliance_N = mkN "brilliance" ;
lin brilliancy_N = mkN "brilliancy" ;
lin brilliant_A = compoundA (mkA "brilliant");
lin brilliantine_N = mkN "brilliantine" ;
lin brim_N = mkN "brim" "brims";
lin brim_V = mkV "brim" "brims" "brimmed" "brimmed" "brimming";
lin brimful_A = compoundA (mkA "brimful");
lin brimfull_A = compoundA (mkA "brimfull");
lin brimstone_N = mkN "brimstone" ;
lin brindled_A = compoundA (mkA "brindled");
lin brine_N = mkN "brine" "brines";
lin bring_V2 = mkV2 (IrregEng.bring_V);
lin bring_V2V = mkV2V (mkV "bring") noPrep to_Prep ;
lin brink_N = mkN "brink" "brinks";
lin brinkmanship_N = mkN "brinkmanship" ;
lin briny_A = mkA "briny" "brinier";
lin brioche_N = mkN "brioche" "brioches";
lin briquet_N = mkN "briquet" "briquets";
lin briquette_N = mkN "briquette" "briquettes";
lin brisbane_PN = mkPN "Brisbane";
lin brisk_A = mkA "brisk" "brisker";
lin brisket_N = mkN "brisket" ;
lin bristle_N = mkN "bristle" "bristles";
lin bristle_V = mkV "bristle" "bristles" "bristled" "bristled" "bristling";
lin bristly_A = mkA "bristly" "bristlier";
lin bristol_PN = mkPN "Bristol";
lin brit_N = mkN "brit" "brits";
lin britain_PN = mkPN "Britain";
lin britannic_A = compoundA (mkA "britannic");
lin british_A = compoundA (mkA "British");
lin britisher_N = mkN "britisher" "britishers";
lin briton_A = compoundA (mkA "briton");
lin briton_N = mkN "briton" "britons";
lin brittle_A = compoundA (mkA "brittle");
lin brixham_PN = mkPN "Brixham";
lin brno_PN = mkPN "Brno";
lin broach_V = mkV "broach" "broaches" "broached" "broached" "broaching";
lin broach_V2 = mkV2 (mkV "broach" "broaches" "broached" "broached" "broaching");
lin broad_A = mkA "broad" "broader";
lin broad_N = mkN "broad" "broads";
lin broad_minded_A = compoundA (mkA "broad - minded");
lin broad_mindedness_N = mkN "broad - mindedness" ;
lin broadcast_Adv = mkAdv "broadcast";
lin broadcast_N = mkN "broadcast" "broadcasts";
lin broadcast_V = mkV "broadcast" "broadcasts" "broadcasted" "broadcasted" "broadcasting";
lin broadcast_V2 = mkV2 (mkV "broadcast" "broadcasts" "broadcasted" "broadcasted" "broadcasting");
lin broadcasting_A = compoundA (mkA "broadcasting");
lin broadcasting_N = mkN "broadcasting" ;
lin broadcloth_N = mkN "broadcloth" ;
lin broaden_V = mkV "broaden" "broadens" "broadened" "broadened" "broadening";
lin broaden_V2 = mkV2 (mkV "broaden" "broadens" "broadened" "broadened" "broadening");
lin broadness_N = mkN "broadness" ;
lin broadsheet_N = mkN "broadsheet" "broadsheets";
lin broadside_N = mkN "broadside" "broadsides";
lin broadways_Adv = mkAdv "broadways";
lin broadwise_Adv = mkAdv "broadwise";
lin brocade_N = mkN "brocade" "brocades";
lin brocade_V2 = mkV2 (mkV "brocade" "brocades" "brocaded" "brocaded" "brocading");
lin broccoli_N = mkN "broccoli" ;
lin brochure_N = mkN "brochure" "brochures";
lin brogue_N = mkN "brogue" "brogues";
lin broil_V = mkV "broil" "broils" "broiled" "broiled" "broiling";
lin broil_V2 = mkV2 (mkV "broil" "broils" "broiled" "broiled" "broiling");
lin broiler_N = mkN "broiler" "broilers";
lin broke_A = compoundA (mkA "broke");
lin broke_VA = mkVA (mkV "broke");
lin broke_VS = mkVS (mkV "broke");
lin broken_hearted_A = compoundA (mkA "broken - hearted");
lin broker_N = mkN "broker" "brokers";
lin brokerage_N = mkN "brokerage" ;
lin brolly_N = mkN "brolly" "brollies";
lin bromide_N = mkN "bromide" "bromides";
lin bromine_N = mkN "bromine" ;
lin bromley_PN = mkPN "Bromley";
lin bromsgrove_PN = mkPN "Bromsgrove";
lin bronchial_A = compoundA (mkA "bronchial");
lin bronchitic_A = compoundA (mkA "bronchitic");
lin bronchitis_N = mkN "bronchitis" ;
lin bronchus_N = mkN "bronchus" "bronchi" {- FIXME: guessed plural form -};
lin bronco_N = mkN "bronco" "broncos";
lin bronze_N = mkN "bronze" "bronzes";
lin bronze_V = mkV "bronze" "bronzes" "bronzed" "bronzed" "bronzing";
lin bronze_V2 = mkV2 (mkV "bronze" "bronzes" "bronzed" "bronzed" "bronzing");
lin brooch_N = mkN "brooch" "brooches";
lin brood_N = mkN "brood" "broods";
lin brood_V = mkV "brood" "broods" "brooded" "brooded" "brooding";
lin brood_hen_N = mkN "brood - hen" "brood - hens";
lin brood_mare_N = mkN "brood - mare" "brood - mares";
lin broody_A = mkA "broody" "broodier";
lin brook_N = mkN "brook" "brooks";
lin brook_V2 = mkV2 (mkV "brook" "brooks" "brooked" "brooked" "brooking");
lin broom_N = mkN "broom" "brooms";
lin broomstick_N = mkN "broomstick" "broomsticks";
lin bros_PN = mkPN "Bros";
lin broth_N = mkN "broth" ;
lin brothel_N = mkN "brothel" "brothels";
lin brother_N = mkN "brother" "brothers";
lin brother_in_law_N = mkN "brother - in - law" "brothers - in - law";
lin brotherhood_N = mkN "brotherhood" "brotherhoods";
lin brotherly_A = compoundA (mkA "brotherly");
lin brougham_N = mkN "brougham" "broughams";
lin brought_V = mkV "brought";
lin brought_VS = mkVS (mkV "brought");
lin broughton_PN = mkPN "Broughton";
lin brouhaha_N = mkN "brouhaha" "brouhahas";
lin brow_N = mkN "brow" "brows";
lin browbeat_V2 = mkV2 (mkV "brow" IrregEng.beat_V);
lin brown_A = mkA "brown" "browner";
lin brown_V = mkV "brown" "browns" "browned" "browned" "browning";
lin brown_V2 = mkV2 (mkV "brown" "browns" "browned" "browned" "browning");
lin brownie_N = mkN "brownie" "brownies";
lin brownish_A = compoundA (mkA "brownish");
lin brownstone_N = mkN "brownstone" "brownstones";
lin browse_N = mkN "browse" "browses";
lin browse_V = mkV "browse" "browses" "browsed" "browsed" "browsing";
lin broxburn_PN = mkPN "Broxburn";
lin bruce_PN = mkPN "Bruce";
lin bruges_PN = mkPN "Bruges";
lin bruin_N = mkN "bruin" "bruins";
lin bruise_N = mkN "bruise" "bruises";
lin bruise_V = mkV "bruise" "bruises" "bruised" "bruised" "bruising";
lin bruise_V2 = mkV2 (mkV "bruise" "bruises" "bruised" "bruised" "bruising");
lin bruiser_N = mkN "bruiser" "bruisers";
lin bruit_V2 = mkV2 (mkV "bruit" "bruits" "bruited" "bruited" "bruiting");
lin brunch_N = mkN "brunch" "brunches";
lin brunei_PN = mkPN "Brunei";
lin bruneian_A = compoundA (mkA "bruneian");
lin bruneian_N = mkN "bruneian" "bruneians";
lin brunette_N = mkN "brunette" "brunettes";
lin brunswick_PN = mkPN "Brunswick";
lin brunt_N = mkN "brunt" "brunts";
lin brush_N = mkN "brush" "brushes";
lin brush_V = mkV "brush" "brushes" "brushed" "brushed" "brushing";
lin brush_V2 = mkV2 (mkV "brush" "brushes" "brushed" "brushed" "brushing");
lin brush_off_N = mkN "brush - off" "brush - offs";
lin brush_up_N = mkN "brush - up" "brush - ups";
lin brushwood_N = mkN "brushwood" ;
lin brushwork_N = mkN "brushwork" "brushworks";
lin brusque_A = compoundA (mkA "brusque");
lin brusqueness_N = mkN "brusqueness" ;
lin brussels_PN = mkPN "Brussels";
lin brutal_A = compoundA (mkA "brutal");
lin brutality_N = mkN "brutality" "brutalities";
lin brutalize_V2 = mkV2 (mkV "brutalize" "brutalizes" "brutalized" "brutalized" "brutalizing");
lin brute_N = mkN "brute" "brutes";
lin brutish_A = compoundA (mkA "brutish");
lin bryan_PN = mkPN "Bryan";
lin bsc_N = mkN "bsc" ;
lin bst_PN = mkPN "BST";
lin bt_PN = mkPN "BT";
lin bubble_N = mkN "bubble" "bubbles";
lin bubble_V = mkV "bubble" "bubbles" "bubbled" "bubbled" "bubbling";
lin bubbly_A = mkA "bubbly" "bubblier";
lin bubbly_N = mkN "bubbly" ;
lin bubonic_A = compoundA (mkA "bubonic");
lin bucarest_PN = mkPN "Bucarest";
lin buccaneer_N = mkN "buccaneer" "buccaneers";
lin buck_N = mkN "buck" "bucks";
lin buck_V = mkV "buck" "bucks" "bucked" "bucked" "bucking";
lin buck_V2 = mkV2 (mkV "buck" "bucks" "bucked" "bucked" "bucking");
lin bucket_N = mkN "bucket" "buckets";
lin bucket_V = mkV "bucket" "buckets" "bucketed" "bucketed" "bucketing";
lin bucketful_N = mkN "bucketful" "bucketfuls";
lin buckhaven_PN = mkPN "Buckhaven";
lin buckie_PN = mkPN "Buckie";
lin buckingham_PN = mkPN "Buckingham";
lin buckinghamshire_PN = mkPN "Buckinghamshire";
lin buckle_N = mkN "buckle" "buckles";
lin buckle_V = mkV "buckle" "buckles" "buckled" "buckled" "buckling";
lin buckle_V2 = mkV2 (mkV "buckle" "buckles" "buckled" "buckled" "buckling");
lin buckler_N = mkN "buckler" "bucklers";
lin buckley_PN = mkPN "Buckley";
lin buckram_N = mkN "buckram" ;
lin bucksburn_PN = mkPN "Bucksburn";
lin buckshot_N = mkN "buckshot" ;
lin buckskin_N = mkN "buckskin" ;
lin bucktooth_N = mkN "bucktooth" "buckteeth" {- FIXME: guessed plural form -};
lin buckwheat_N = mkN "buckwheat" ;
lin bucolic_A = compoundA (mkA "bucolic");
lin bucolics_N = mkN "bucolics" "bucolics";
lin bud_N = mkN "bud" "buds";
lin bud_V = mkV "bud" "buds" "budded" "budded" "budding";
lin budapest_PN = mkPN "Budapest";
lin buddhism_N = mkN "buddhism" ;
lin buddhist_N = mkN "buddhist" "buddhists";
lin budding_A = compoundA (mkA "budding");
lin buddy_N = mkN "buddy" "buddies";
lin budge_V = mkV "budge" "budges" "budged" "budged" "budging";
lin budge_V2 = mkV2 (mkV "budge" "budges" "budged" "budged" "budging");
lin budgerigar_N = mkN "budgerigar" "budgerigars";
lin budget_N = mkN "budget" "budgets";
lin budget_V = mkV "budget" "budgets" "budgeted" "budgeted" "budgeting";
lin budget_V2 = mkV2 (mkV "budget" "budgets" "budgeted" "budgeted" "budgeting");
lin budgetary_A = compoundA (mkA "budgetary");
lin budgie_N = mkN "budgie" "budgies";
lin buenos_aires_PN = mkPN "Buenos aires";
lin buff_N = mkN "buff" "buffs";
lin buff_V2 = mkV2 (mkV "buff" "buffs" "buffed" "buffed" "buffing");
lin buffalo_N = mkN "buffalo" "buffalo";
lin buffalo_PN = mkPN "Buffalo";
lin buffer_N = mkN "buffer" "buffers";
lin buffer_V2 = mkV2 (mkV "buffer");
lin buffet_N = mkN "buffet" "buffets";
lin buffet_V = mkV "buffet" "buffets" "buffeted" "buffeted" "buffeting";
lin buffet_V2 = mkV2 (mkV "buffet" "buffets" "buffeted" "buffeted" "buffeting");
lin buffoon_N = mkN "buffoon" "buffoons";
lin buffoonery_N = mkN "buffoonery" ;
lin bug_N = mkN "bug" "bugs";
lin bug_V2 = mkV2 (mkV "bug" "bugs" "bugged" "bugged" "bugging");
lin bug_hunter_N = mkN "bug - hunter" "bug - hunters";
lin bugaboo_N = mkN "bugaboo" "bugaboos";
lin bugbear_N = mkN "bugbear" "bugbears";
lin bugger_N = mkN "bugger" "buggers";
lin bugger_V = mkV "bugger" "buggers" "buggered" "buggered" "buggering";
lin bugger_V2 = mkV2 (mkV "bugger" "buggers" "buggered" "buggered" "buggering");
lin bugger_all_N = mkN "bugger - all" ;
lin buggery_N = mkN "buggery" ;
lin buggy_N = mkN "buggy" "buggies";
lin bugle_N = mkN "bugle" "bugles";
lin bugler_N = mkN "bugler" "buglers";
lin buhl_N = mkN "buhl" ;
lin build_N = mkN "build" ;
lin build_V = IrregEng.build_V;
lin build_V2 = mkV2 (IrregEng.build_V);
lin build_up_N = mkN "build - up" "build - ups";
lin builder_N = mkN "builder" "builders";
lin building_N = mkN "building" "buildings";
lin building_society_N = mkN "building - society" "building - societies";
lin built_in_A = compoundA (mkA "built - in");
lin built_up_A = compoundA (mkA "built - up");
lin bulb_N = mkN "bulb" "bulbs";
lin bulbous_A = compoundA (mkA "bulbous");
lin bulbul_N = mkN "bulbul" "bulbuls";
lin bulgaria_PN = mkPN "Bulgaria";
lin bulgarian_A = compoundA (mkA "Bulgarian");
lin bulgarian_N = mkN "Bulgarian" "Bulgarians";
lin bulge_N = mkN "bulge" "bulges";
lin bulge_V = mkV "bulge" "bulges" "bulged" "bulged" "bulging";
lin bulge_V2 = mkV2 (mkV "bulge" "bulges" "bulged" "bulged" "bulging");
lin bulk_N = mkN "bulk" ;
lin bulk_V = mkV "bulk" "bulks" "bulked" "bulked" "bulking";
lin bulkhead_N = mkN "bulkhead" "bulkheads";
lin bulkington_PN = mkPN "Bulkington";
lin bulky_A = mkA "bulky" "bulkier";
lin bull's_eye_N = mkN "bull's - eye" "bull's - eyes";
lin bull_N = mkN "bull" "bulls";
lin bull_headed_A = compoundA (mkA "bull - headed");
lin bull_neck_N = mkN "bull - neck" "bull - necks";
lin bull_terrier_N = mkN "bull - terrier" "bull - terriers";
lin bulldog_N = mkN "bulldog" "bulldogs";
lin bulldoze_V2 = mkV2 (mkV "bulldoze" "bulldozes" "bulldozed" "bulldozed" "bulldozing");
lin bulldozer_N = mkN "bulldozer" "bulldozers";
lin bullet_N = mkN "bullet" "bullets";
lin bullet_headed_A = compoundA (mkA "bullet - headed");
lin bulletin_N = mkN "bulletin" "bulletins";
lin bulletproof_A = compoundA (mkA "bulletproof");
lin bullfight_N = mkN "bullfight" "bullfights";
lin bullfighter_N = mkN "bullfighter" "bullfighters";
lin bullfinch_N = mkN "bullfinch" "bullfinches";
lin bullfrog_N = mkN "bullfrog" "bullfrogs";
lin bullion_N = mkN "bullion" ;
lin bullock_N = mkN "bullock" "bullocks";
lin bullring_N = mkN "bullring" "bullrings";
lin bullshit_N = mkN "bullshit" ;
lin bullshit_V = mkV "bullshit" "bullshits" "bullshitted" "bullshitted" "bullshitting";
lin bully_A = compoundA (mkA "bully");
lin bully_N = mkN "bully" "bullies";
lin bully_V = mkV "bully" "bullies" "bullied" "bullied" "bullying";
lin bully_V2 = mkV2 (mkV "bully" "bullies" "bullied" "bullied" "bullying");
lin bulrush_N = mkN "bulrush" "bulrushes";
lin bulwark_N = mkN "bulwark" "bulwarks";
lin bum_A = compoundA (mkA "bum");
lin bum_N = mkN "bum" "bums";
lin bum_V = mkV "bum" "bums" "bummed" "bummed" "bumming";
lin bum_V2 = mkV2 (mkV "bum" "bums" "bummed" "bummed" "bumming");
lin bumblebee_N = mkN "bumblebee" "bumblebees";
lin bumboat_N = mkN "bumboat" "bumboats";
lin bump_Adv = mkAdv "bump";
lin bump_N = mkN "bump" "bumps";
lin bump_V = mkV "bump" "bumps" "bumped" "bumped" "bumping";
lin bump_V2 = mkV2 (mkV "bump" "bumps" "bumped" "bumped" "bumping");
lin bumper_N = mkN "bumper" "bumpers";
lin bumpkin_N = mkN "bumpkin" "bumpkins";
lin bumptious_A = compoundA (mkA "bumptious");
lin bumptiousness_N = mkN "bumptiousness" ;
lin bumpy_A = mkA "bumpy" "bumpier";
lin bun_N = mkN "bun" "buns";
lin buna_N = mkN "buna" ;
lin bunch_N = mkN "bunch" "bunches";
lin bunch_V = mkV "bunch" "bunches" "bunched" "bunched" "bunching";
lin bunch_V2 = mkV2 (mkV "bunch" "bunches" "bunched" "bunched" "bunching");
lin bundle_N = mkN "bundle" "bundles";
lin bundle_V = mkV "bundle" "bundles" "bundled" "bundled" "bundling";
lin bundle_V2 = mkV2 (mkV "bundle" "bundles" "bundled" "bundled" "bundling");
lin bung_N = mkN "bung" "bungs";
lin bung_V2 = mkV2 (mkV "bung" "bungs" "bunged" "bunged" "bunging");
lin bung_hole_N = mkN "bung - hole" "bung - holes";
lin bungaloid_A = compoundA (mkA "bungaloid");
lin bungalow_N = mkN "bungalow" "bungalows";
lin bungle_N = mkN "bungle" "bungles";
lin bungle_V = mkV "bungle" "bungles" "bungled" "bungled" "bungling";
lin bungle_V2 = mkV2 (mkV "bungle" "bungles" "bungled" "bungled" "bungling");
lin bungler_N = mkN "bungler" "bunglers";
lin bunion_N = mkN "bunion" "bunions";
lin bunk_N = mkN "bunk" "bunks";
lin bunk_V = mkV "bunk" "bunks" "bunked" "bunked" "bunking";
lin bunker_N = mkN "bunker" "bunkers";
lin bunker_V = mkV "bunker" "bunkers" "bunkered" "bunkered" "bunkering";
lin bunker_V2 = mkV2 (mkV "bunker" "bunkers" "bunkered" "bunkered" "bunkering");
lin bunkum_N = mkN "bunkum" ;
lin bunny_N = mkN "bunny" "bunnies";
lin bunsen_N = mkN "bunsen" "bunsens";
lin bunting_N = mkN "bunting" ;
lin buoy_N = mkN "buoy" "buoys";
lin buoy_V = mkV "buoy" "buoys" "buoyed" "buoyed" "buoying";
lin buoy_V2 = mkV2 (mkV "buoy" "buoys" "buoyed" "buoyed" "buoying");
lin buoyancy_N = mkN "buoyancy" ;
lin buoyant_A = compoundA (mkA "buoyant");
lin bur_N = mkN "bur" "burs";
lin burberry_N = mkN "burberry" "burberries";
lin burble_V = mkV "burble" "burbles" "burbled" "burbled" "burbling";
lin burble_VS = mkVS (mkV "burble");
lin burden_N = mkN "burden" "burdens";
lin burden_V2 = mkV2 (mkV "burden" "burdens" "burdened" "burdened" "burdening");
lin burdensome_A = compoundA (mkA "burdensome");
lin burdock_N = mkN "burdock" "burdocks";
lin bureau_N = mkN "bureau" "bureaux" {- FIXME: guessed plural form -};
lin bureaucracy_N = mkN "bureaucracy" "bureaucracies";
lin bureaucrat_N = mkN "bureaucrat" "bureaucrats";
lin bureaucratic_A = compoundA (mkA "bureaucratic");
lin bureaucratically_Adv = mkAdv "bureaucratically";
lin burette_N = mkN "burette" "burettes";
lin burg_N = mkN "burg" "burgs";
lin burgeon_V = mkV "burgeon" "burgeons" "burgeoned" "burgeoned" "burgeoning";
lin burgess_N = mkN "burgess" "burgesses";
lin burgess_PN = mkPN "Burgess";
lin burgh_N = mkN "burgh" "burghs";
lin burgher_N = mkN "burgher" "burghers";
lin burglar_N = mkN "burglar" "burglars";
lin burglar_alarm_N = mkN "burglar - alarm" "burglar - alarms";
lin burglar_proof_A = compoundA (mkA "burglar - proof");
lin burglarious_A = compoundA (mkA "burglarious");
lin burglary_N = mkN "burglary" "burglaries";
lin burgle_V = mkV "burgle" "burgles" "burgled" "burgled" "burgling";
lin burgle_V2 = mkV2 (mkV "burgle" "burgles" "burgled" "burgled" "burgling");
lin burgomaster_N = mkN "burgomaster" "burgomasters";
lin burgos_PN = mkPN "Burgos";
lin burgundy_N = mkN "burgundy" ;
lin burial_N = mkN "burial" "burials";
lin burial_ground_N = mkN "burial - ground" "burial - grounds";
lin burke_V2 = mkV2 (mkV "burke" "burkes" "burked" "burked" "burking");
lin burlap_N = mkN "burlap" ;
lin burlesque_N = mkN "burlesque" "burlesques";
lin burlesque_V2 = mkV2 (mkV "burlesque" "burlesques" "burlesqued" "burlesqued" "burlesquing");
lin burley_PN = mkPN "Burley";
lin burly_A = mkA "burly" "burlier";
lin burma_PN = mkPN "Burma";
lin burmese_A = compoundA (mkA "burmese");
lin burmese_N = mkN "burmese" "burmese";
lin burn_N = mkN "burn" "burns";
lin burn_V = mkV "burn" "burns" "burned" "burned" "burning";
lin burn_V2 = mkV2 (mkV "burn" "burns" "burned" "burned" "burning");
lin burn_up_N = mkN "burn - up" "burn - ups";
lin burner_N = mkN "burner" "burners";
lin burnham_on_sea_PN = mkPN "Burnham - on - sea";
lin burning_A = compoundA (mkA "burning");
lin burnish_V = mkV "burnish" "burnishes" "burnished" "burnished" "burnishing";
lin burnish_V2 = mkV2 (mkV "burnish" "burnishes" "burnished" "burnished" "burnishing");
lin burnley_PN = mkPN "Burnley";
lin burnouse_N = mkN "burnouse" "burnouses";
lin burntisland_PN = mkPN "Burntisland";
lin burntwood_PN = mkPN "Burntwood";
lin burp_N = mkN "burp" "burps";
lin burp_V = mkV "burp" "burps" "burped" "burped" "burping";
lin burp_V2 = mkV2 (mkV "burp" "burps" "burped" "burped" "burping");
lin burr_N = mkN "burr" "burrs";
lin burr_drill_N = mkN "burr - drill" "burr - drills";
lin burrow_N = mkN "burrow" "burrows";
lin burrow_V = mkV "burrow" "burrows" "burrowed" "burrowed" "burrowing";
lin burrow_V2 = mkV2 (mkV "burrow" "burrows" "burrowed" "burrowed" "burrowing");
lin burry_port_PN = mkPN "Burry port";
lin bursar_N = mkN "bursar" "bursars";
lin bursary_N = mkN "bursary" "bursaries";
lin burscough_PN = mkPN "Burscough";
lin burst_N = mkN "burst" "bursts";
lin burst_V = IrregEng.burst_V;
lin burst_V2 = mkV2 (IrregEng.burst_V);
lin burthen_N = mkN "burthen" "burthens";
lin burthen_V2 = mkV2 (mkV "burthen" "burthens" "burthened" "burthened" "burthening");
lin burton_N = mkN "burton" "burtons";
lin burton_upon_trent_PN = mkPN "Burton - upon - trent";
lin burundi_PN = mkPN "Burundi";
lin burundian_A = compoundA (mkA "burundian");
lin burundian_N = mkN "burundian" "burundians";
lin bury_PN = mkPN "Bury";
lin bury_V = mkV "bury";
lin bury_V2 = mkV2 (mkV "bury" "buries" "buried" "buried" "burying");
lin bury_st__edmunds_PN = mkPN "Bury st. edmunds";
lin burying_ground_N = mkN "burying - ground" "burying - grounds";
lin bus_N = mkN "bus" "buses";
lin bus_V = mkV "bus" "buses" "bused" "bused" "busing";
lin bus_V2 = mkV2 (mkV "bus" "buses" "bused" "bused" "busing");
lin busby_N = mkN "busby" "busbies";
lin bush_N = mkN "bush" "bushes";
lin bushel_N = mkN "bushel" "bushels";
lin bushman_N = mkN "bushman" "bushmen" {- FIXME: guessed plural form -};
lin bushy_A = compoundA (mkA "bushy");
lin busily_Adv = mkAdv "busily";
lin business_N = mkN "business" "businesses";
lin businesslike_A = compoundA (mkA "businesslike");
lin businessman_N = mkN "businessman" "businessmen" {- FIXME: guessed plural form -};
lin busker_N = mkN "busker" "buskers";
lin busman_N = mkN "busman" "busmen" {- FIXME: guessed plural form -};
lin bust_N = mkN "bust" "busts";
lin bust_V = mkV "bust" "busts" "busted" "busted" "busting";
lin bust_V2 = mkV2 (mkV "bust" "busts" "busted" "busted" "busting");
lin bust_up_N = mkN "bust - up" "bust - ups";
lin bustard_N = mkN "bustard" "bustards";
lin buster_N = mkN "buster" "busters";
lin bustle_N = mkN "bustle" "bustles";
lin bustle_V = mkV "bustle" "bustles" "bustled" "bustled" "bustling";
lin bustle_V2 = mkV2 (mkV "bustle" "bustles" "bustled" "bustled" "bustling");
lin busy_A = mkA "busy" "busier";
lin busy_V2 = mkV2 (mkV "busy" "busies" "busied" "busied" "busying");
lin busybody_N = mkN "busybody" "busybodies";
lin but_Adv = mkAdv "but";
lin but_Prep = mkPrep "but";
lin butane_N = mkN "butane" ;
lin butch_A = compoundA (mkA "butch");
lin butcher_N = mkN "butcher" "butchers";
lin butcher_V2 = mkV2 (mkV "butcher" "butchers" "butchered" "butchered" "butchering");
lin butchery_N = mkN "butchery" ;
lin butler_N = mkN "butler" "butlers";
lin butt_N = mkN "butt" "butts";
lin butt_V = mkV "butt" "butts" "butted" "butted" "butting";
lin butt_V2 = mkV2 (mkV "butt" "butts" "butted" "butted" "butting");
lin butter_N = mkN "butter" ;
lin butter_V2 = mkV2 (mkV "butter" "butters" "buttered" "buttered" "buttering");
lin butterbean_N = mkN "butterbean" "butterbeans";
lin buttercup_N = mkN "buttercup" "buttercups";
lin butterfingers_N = mkN "butterfingers" "butterfingers";
lin butterfly_N = mkN "butterfly" "butterflies";
lin buttermilk_N = mkN "buttermilk" ;
lin butterscotch_N = mkN "butterscotch" ;
lin buttery_N = mkN "buttery" "butteries";
lin buttock_N = mkN "buttock" "buttocks";
lin button_N = mkN "button" "buttons";
lin button_V = mkV "button" "buttons" "buttoned" "buttoned" "buttoning";
lin button_V2 = mkV2 (mkV "button" "buttons" "buttoned" "buttoned" "buttoning");
lin buttoned_up_A = compoundA (mkA "buttoned - up");
lin buttonhole_N = mkN "buttonhole" "buttonholes";
lin buttonhole_V2 = mkV2 (mkV "buttonhole" "buttonholes" "buttonholed" "buttonholed" "buttonholing");
lin buttonhook_N = mkN "buttonhook" "buttonhooks";
lin buttonwood_N = mkN "buttonwood" "buttonwoods";
lin buttress_N = mkN "buttress" "buttresses";
lin buttress_V2 = mkV2 (mkV "buttress" "buttresses" "buttressed" "buttressed" "buttressing");
lin buxom_A = compoundA (mkA "buxom");
lin buxton_PN = mkPN "Buxton";
lin buy_N = mkN "buy" "buys";
lin buy_V = IrregEng.buy_V;
lin buy_V2 = mkV2 (IrregEng.buy_V);
lin buyer_N = mkN "buyer" "buyers";
lin buzz_N = mkN "buzz" "buzzes";
lin buzz_V = mkV "buzz" "buzzes" "buzzed" "buzzed" "buzzing";
lin buzz_V2 = mkV2 (mkV "buzz" "buzzes" "buzzed" "buzzed" "buzzing");
lin buzzard_N = mkN "buzzard" "buzzards";
lin buzzer_N = mkN "buzzer" "buzzers";
lin bvm_N = mkN "bvm" ;
lin by_Adv = mkAdv "by";
lin by_Prep = mkPrep "by";
lin by_election_N = mkN "by - election" "by - elections";
lin bye_N = mkN "bye" "byes";
lin bye_bye_N = mkN "bye - bye" "bye - byes";
lin bye_law_N = mkN "bye - law" "bye - laws";
lin bygone_A = compoundA (mkA "bygone");
lin bylaw_N = mkN "bylaw" "bylaws";
lin bypass_N = mkN "bypass" "bypasses";
lin bypass_V2 = mkV2 (mkV "bypass" "bypasses" "bypassed" "bypassed" "bypassing");
lin bypath_N = mkN "bypath" "bypaths";
lin byplay_N = mkN "byplay" ;
lin byproduct_N = mkN "byproduct" "byproducts";
lin byroad_N = mkN "byroad" "byroads";
lin bystander_N = mkN "bystander" "bystanders";
lin byway_N = mkN "byway" "byways";
lin byword_N = mkN "byword" "bywords";
lin c_in_c_PN = mkPN "C - in - c";
lin c_of_e_N = mkN "c of e" ;
lin ca'canny_N = mkN "ca'canny" "IRREG";
lin cab_N = mkN "cab" "cabs";
lin cab_rank_N = mkN "cab - rank" "cab - ranks";
lin cabal_N = mkN "cabal" "cabals";
lin cabaret_N = mkN "cabaret" "cabarets";
lin cabbage_N = mkN "cabbage" "cabbages";
lin cabby_N = mkN "cabby" "cabbies";
lin caber_N = mkN "caber" "cabers";
lin cabin_N = mkN "cabin" "cabins";
lin cabinet_N = mkN "cabinet" "cabinets";
lin cabinet_maker_N = mkN "cabinet - maker" "cabinet - makers";
lin cable's_length_N = mkN "cable's - length" "cable's - lengths";
lin cable_N = mkN "cable" "cables";
lin cable_V = mkV "cable" "cables" "cabled" "cabled" "cabling";
lin cable_V2 = mkV2 (mkV "cable" "cables" "cabled" "cabled" "cabling");
lin cable_car_N = mkN "cable - car" "cable - cars";
lin cable_length_N = mkN "cable - length" "cable - lengths";
lin cable_railway_N = mkN "cable - railway" "cable - railways";
lin cablegram_N = mkN "cablegram" "cablegrams";
lin cabman_N = mkN "cabman" "cabmen" {- FIXME: guessed plural form -};
lin caboodle_N = mkN "caboodle" "caboodles";
lin caboose_N = mkN "caboose" "cabooses";
lin cabstand_N = mkN "cabstand" "cabstands";
lin cacao_N = mkN "cacao" "cacaos";
lin cacao_bean_N = mkN "cacao - bean" "cacao - beans";
lin cacao_tree_N = mkN "cacao - tree" "cacao - trees";
lin cache_N = mkN "cache" "caches";
lin cache_V2 = mkV2 (mkV "cache" "caches" "cached" "cached" "caching");
lin cachet_N = mkN "cachet" "cachets";
lin cachou_N = mkN "cachou" "cachous";
lin cackle_N = mkN "cackle" "cackles";
lin cackle_V = mkV "cackle" "cackles" "cackled" "cackled" "cackling";
lin cackler_N = mkN "cackler" "cacklers";
lin cacophonous_A = compoundA (mkA "cacophonous");
lin cacophony_N = mkN "cacophony" "cacophonies";
lin cactus_N = mkN "cactus" "cactuses";
lin cad_N = mkN "cad" "cads";
lin cadaver_N = mkN "cadaver" "cadavers";
lin cadaverous_A = compoundA (mkA "cadaverous");
lin caddie_N = mkN "caddie" "caddies";
lin caddish_A = compoundA (mkA "caddish");
lin caddy_N = mkN "caddy" "caddies";
lin cadence_N = mkN "cadence" "cadences";
lin cadenza_N = mkN "cadenza" "cadenzas";
lin cadet_N = mkN "cadet" "cadets";
lin cadge_V = mkV "cadge" "cadges" "cadged" "cadged" "cadging";
lin cadge_V2 = mkV2 (mkV "cadge" "cadges" "cadged" "cadged" "cadging");
lin cadger_N = mkN "cadger" "cadgers";
lin cadiz_PN = mkPN "Cadiz";
lin cadmium_N = mkN "cadmium" ;
lin cadre_N = mkN "cadre" "cadres";
lin caen_PN = mkPN "Caen";
lin caerleon_PN = mkPN "Caerleon";
lin caernarfon_PN = mkPN "Caernarfon";
lin caerphilly_PN = mkPN "Caerphilly";
lin caesar_N = mkN "caesar" "caesars";
lin caesarian_A = compoundA (mkA "caesarian");
lin caesura_N = mkN "caesura" "caesuras";
lin cafe_N = mkN "café" "cafés";
lin cafe_au_lait_N = mkN "cafe - au - lait" "cafe - au - laits";
lin cafeteria_N = mkN "cafeteria" "cafeterias";
lin caff_N = mkN "caff" "caffs";
lin caffeine_N = mkN "caffeine" ;
lin caftan_N = mkN "caftan" "caftans";
lin cage_N = mkN "cage" "cages";
lin cage_V2 = mkV2 (mkV "cage" "cages" "caged" "caged" "caging");
lin cagey_A = compoundA (mkA "cagey");
lin cagily_Adv = mkAdv "cagily";
lin cagliari_PN = mkPN "Cagliari";
lin cagoule_N = mkN "cagoule" "cagoules";
lin caiman_N = mkN "caiman" "caimans";
lin cairn_N = mkN "cairn" "cairns";
lin cairo_PN = mkPN "Cairo";
lin caisson_N = mkN "caisson" "caissons";
lin caitiff_N = mkN "caitiff" "caitiffs";
lin cajole_V2 = mkV2 (mkV "cajole" "cajoles" "cajoled" "cajoled" "cajoling");
lin cajolery_N = mkN "cajolery" ;
lin cake_N = mkN "cake" "cakes";
lin cake_V = mkV "cake" "cakes" "caked" "caked" "caking";
lin cake_V2 = mkV2 (mkV "cake" "cakes" "caked" "caked" "caking");
lin calabash_N = mkN "calabash" "calabashes";
lin calamitous_A = compoundA (mkA "calamitous");
lin calamity_N = mkN "calamity" "calamities";
lin calcify_V = mkV "calcify" "calcifies" "calcified" "calcified" "calcifying";
lin calcify_V2 = mkV2 (mkV "calcify" "calcifies" "calcified" "calcified" "calcifying");
lin calcination_N = mkN "calcination" "calcinations";
lin calcine_V = mkV "calcine" "calcines" "calcined" "calcined" "calcining";
lin calcine_V2 = mkV2 (mkV "calcine" "calcines" "calcined" "calcined" "calcining");
lin calcium_N = mkN "calcium" ;
lin calculable_A = compoundA (mkA "calculable");
lin calculate_V = mkV "calculate" "calculates" "calculated" "calculated" "calculating";
lin calculate_V2 = mkV2 (mkV "calculate" "calculates" "calculated" "calculated" "calculating");
lin calculate_VS = mkVS (mkV "calculate" "calculates" "calculated" "calculated" "calculating");
lin calculating_A = compoundA (mkA "calculating");
lin calculation_N = mkN "calculation" "calculations";
lin calculator_N = mkN "calculator" "calculators";
lin calculus_N = mkN "calculus" "calculuses";
lin calcutta_PN = mkPN "Calcutta";
lin caldicot_PN = mkPN "Caldicot";
lin caldron_N = mkN "caldron" "caldrons";
lin calendar_N = mkN "calendar" "calendars";
lin calender_N = mkN "calender" "calenders";
lin calender_V2 = mkV2 (mkV "calender" "calenders" "calendered" "calendered" "calendering");
lin calf_N = mkN "calf" "calves" {- FIXME: guessed plural form -};
lin calf_love_N = mkN "calf - love" ;
lin cali_PN = mkPN "Cali";
lin calibrate_V2 = mkV2 (mkV "calibrate" "calibrates" "calibrated" "calibrated" "calibrating");
lin calibration_N = mkN "calibration" "calibrations";
lin calibre_N = mkN "calibre" "calibres";
lin calico_N = mkN "calico" ;
lin calif_N = mkN "calif" "califs";
lin california_PN = mkPN "California";
lin californian_A = compoundA (mkA "californian");
lin californian_N = mkN "californian" "californians";
lin caliph_N = mkN "caliph" "caliphs";
lin caliphate_N = mkN "caliphate" "caliphates";
lin calisthenics_N = mkN "calisthenics" "calisthenics";
lin calk_N = mkN "calk" "calks";
lin calk_V2 = mkV2 (mkV "calk" "calks" "calked" "calked" "calking");
lin call_N = mkN "call" "calls";
lin call_V = mkV "call" "calls" "called" "called" "calling";
lin call_V2 = mkV2 (mkV "call" "calls" "called" "called" "calling");
lin call_V2V = mkV2V (mkV "call" "calls" "called" "called" "calling") noPrep to_Prep ;
lin call_VS = mkVS (mkV "call" "calls" "called" "called" "calling");
lin call_box_N = mkN "call - box" "call - boxes";
lin call_girl_N = mkN "call - girl" "call - girls";
lin call_over_N = mkN "call - over" "call - overs";
lin call_up_N = mkN "call - up" "call - ups";
lin caller_N = mkN "caller" "callers";
lin calligraphy_N = mkN "calligraphy" ;
lin calling_N = mkN "calling" "callings";
lin calliope_N = mkN "calliope" "calliopes";
lin callisthenics_N = mkN "callisthenics" "callisthenics";
lin callosity_N = mkN "callosity" "callosities";
lin callous_A = compoundA (mkA "callous");
lin callousness_N = mkN "callousness" ;
lin callow_A = compoundA (mkA "callow");
lin callowness_N = mkN "callowness" ;
lin callus_N = mkN "callus" "calluses";
lin calm_A = mkA "calm" "calmer";
lin calm_N = mkN "calm" "calms";
lin calm_V = mkV "calm" "calms" "calmed" "calmed" "calming";
lin calm_V2 = mkV2 (mkV "calm" "calms" "calmed" "calmed" "calming");
lin calmness_N = mkN "calmness" ;
lin calne_PN = mkPN "Calne";
lin calomel_N = mkN "calomel" ;
lin calor_PN = mkPN "Calor";
lin calorie_N = mkN "calorie" "calories";
lin calorific_A = compoundA (mkA "calorific");
lin calumniate_V2 = mkV2 (mkV "calumniate" "calumniates" "calumniated" "calumniated" "calumniating");
lin calumny_N = mkN "calumny" "calumnies";
lin calvary_N = mkN "calvary" "calvaries";
lin calve_V = mkV "calve" "calves" "calved" "calved" "calving";
lin calverton_PN = mkPN "Calverton";
lin calvinism_N = mkN "calvinism" ;
lin calvinist_N = mkN "calvinist" "calvinists";
lin calypso_N = mkN "calypso" "calypsos";
lin calyx_N = mkN "calyx" "calyxes";
lin cam_N = mkN "cam" "cams";
lin camaraderie_N = mkN "camaraderie" ;
lin camber_N = mkN "camber" "cambers";
lin camber_V = mkV "camber" "cambers" "cambered" "cambered" "cambering";
lin camber_V2 = mkV2 (mkV "camber" "cambers" "cambered" "cambered" "cambering");
lin cambodia_PN = mkPN "Cambodia";
lin cambodian_A = compoundA (mkA "cambodian");
lin cambodian_N = mkN "cambodian" "cambodians";
lin cambourne_PN = mkPN "Cambourne";
lin cambric_N = mkN "cambric" ;
lin cambridge_PN = mkPN "Cambridge";
lin cambridgeshire_PN = mkPN "Cambridgeshire";
lin cambuslang_PN = mkPN "Cambuslang";
lin camden_PN = mkPN "Camden";
lin camel_N = mkN "camel" "camels";
lin camel_hair_N = mkN "camel - hair" ;
lin camellia_N = mkN "camellia" "camellias";
lin camembert_N = mkN "camembert" "camemberts";
lin cameo_N = mkN "cameo" "cameos";
lin camera_N = mkN "camera" "cameras";
lin cameraman_N = mkN "cameraman" "cameramen" {- FIXME: guessed plural form -};
lin cameroon_PN = mkPN "Cameroon";
lin cameroonian_A = compoundA (mkA "cameroonian");
lin cameroonian_N = mkN "cameroonian" "cameroonians";
lin camion_N = mkN "camion" "camions";
lin camomile_N = mkN "camomile" ;
lin camouflage_N = mkN "camouflage" ;
lin camouflage_V2 = mkV2 (mkV "camouflage" "camouflages" "camouflaged" "camouflaged" "camouflaging");
lin camp_A = compoundA (mkA "camp");
lin camp_N = mkN "camp" "camps";
lin camp_V = mkV "camp" "camps" "camped" "camped" "camping";
lin camp_V2 = mkV2 (mkV "camp" "camps" "camped" "camped" "camping");
lin camp_bed_N = mkN "camp - bed" "camp - beds";
lin camp_chair_N = mkN "camp - chair" "camp - chairs";
lin camp_fire_N = mkN "camp - fire" "camp - fires";
lin camp_follower_N = mkN "camp - follower" "camp - followers";
lin camp_stool_N = mkN "camp - stool" "camp - stools";
lin campaign_N = mkN "campaign" "campaigns";
lin campaign_V = mkV "campaign" "campaigns" "campaigned" "campaigned" "campaigning";
lin campaigner_N = mkN "campaigner" "campaigners";
lin campanile_N = mkN "campanile" "campaniles";
lin campanula_N = mkN "campanula" "campanulas";
lin campbeltown_PN = mkPN "Campbeltown";
lin camper_N = mkN "camper" "campers";
lin camphor_N = mkN "camphor" ;
lin camphorated_A = compoundA (mkA "camphorated");
lin camping_N = mkN "camping" ;
lin campion_N = mkN "campion" ;
lin campus_N = mkN "campus" "campuses";
lin camshaft_N = mkN "camshaft" "camshafts";
lin can_N = mkN "can" "cans";
lin can_V2 = mkV2 (mkV "can" "cans" "canned" "canned" "canning");
lin can_VV = {
    s = table { 
      VVF VInf => ["be able to"] ;
      VVF VPres => "can" ;
      VVF VPPart => ["been able to"] ;
      VVF VPresPart => ["being able to"] ;
      VVF VPast => "could" ;
      VVPastNeg => "couldn't" ;
      VVPresNeg => "can't"
      } ;
    typ = VVAux
    } ;
lin canada_PN = mkPN "Canada";
lin canadian_A = compoundA (mkA "Canadian");
lin canadian_N = mkN "Canadian" "Canadians";
lin canal_N = mkN "canal" "canals";
lin canalization_N = mkN "canalization" "canalizations";
lin canalize_V2 = mkV2 (mkV "canalize" "canalizes" "canalized" "canalized" "canalizing");
lin canape_N = mkN "canapé" "canapés";
lin canard_N = mkN "canard" "canards";
lin canary_N = mkN "canary" "canaries";
lin canary_bird_N = mkN "canary - bird" "canary - birds";
lin canary_wine_N = mkN "canary - wine" "canary - wines";
lin canasta_N = mkN "canasta" "canastas";
lin canberra_PN = mkPN "Canberra";
lin cancan_N = mkN "cancan" "cancans";
lin cancel_V = variants {mkV "cancel" "cancels" "canceled" "canceled" "canceling";
                         mkV "cancel" "cancels" "cancelled" "cancelled" "cancelling"};
lin cancel_V2 = mkV2 (variants {mkV "cancel" "cancels" "canceled" "canceled" "canceling";
                                mkV "cancel" "cancels" "cancelled" "cancelled" "cancelling"});
lin cancellation_N = mkN "cancellation" "cancellations";
lin cancer_N = mkN "cancer" "cancers";
lin cancer_PN = mkPN "Cancer";
lin cancerous_A = compoundA (mkA "cancerous");
lin candelabrum_N = mkN "candelabrum" "candelabra" {- FIXME: guessed plural form -};
lin candid_A = compoundA (mkA "candid");
lin candidate_N = mkN "candidate" "candidates";
lin candidature_N = mkN "candidature" "candidatures";
lin candied_A = compoundA (mkA "candied");
lin candle_N = mkN "candle" "candles";
lin candle_power_N = mkN "candle - power" ;
lin candlelight_N = mkN "candlelight" ;
lin candlestick_N = mkN "candlestick" "candlesticks";
lin candlewick_N = mkN "candlewick" ;
lin candour_N = mkN "candour" ;
lin candy_N = mkN "candy" "candies";
lin candy_V = mkV "candy" "candies" "candied" "candied" "candying";
lin candy_V2 = mkV2 (mkV "candy" "candies" "candied" "candied" "candying");
lin candy_floss_N = mkN "candy - floss" ;
lin candytuft_N = mkN "candytuft" "candytufts";
lin cane_N = mkN "cane" "canes";
lin cane_V2 = mkV2 (mkV "cane" "canes" "caned" "caned" "caning");
lin canine_A = compoundA (mkA "canine");
lin canister_N = mkN "canister" "canisters";
lin canker_N = mkN "canker" ;
lin canker_V2 = mkV2 (mkV "canker" "cankers" "cankered" "cankered" "cankering");
lin cankerous_A = compoundA (mkA "cankerous");
lin canna_N = mkN "canna" "cannas";
lin cannabis_N = mkN "cannabis" ;
lin canned_A = compoundA (mkA "canned");
lin cannery_N = mkN "cannery" "canneries";
lin cannes_PN = mkPN "Cannes";
lin cannibal_N = mkN "cannibal" "cannibals";
lin cannibalism_N = mkN "cannibalism" ;
lin cannibalistic_A = compoundA (mkA "cannibalistic");
lin cannibalize_V2 = mkV2 (mkV "cannibalize" "cannibalizes" "cannibalized" "cannibalized" "cannibalizing");
lin cannily_Adv = mkAdv "cannily";
lin cannock_PN = mkPN "Cannock";
lin cannon_N = mkN "cannon" "cannons";
lin cannon_fodder_N = mkN "cannon - fodder" ;
lin cannonade_N = mkN "cannonade" "cannonades";
lin canny_A = mkA "canny" "cannier";
lin canoe_N = mkN "canoe" "canoes";
lin canoe_V2 = mkV2 (mkV "canoe" "canoes" "canoed" "canoed" "canoeing");
lin canoeist_N = mkN "canoeist" "canoeists";
lin canon_1_N = mkN "canon" "canons";
lin canon_2_N = mkN "cañon" "cañons";
lin canonical_A = compoundA (mkA "canonical");
lin canonization_N = mkN "canonization" "canonizations";
lin canonize_V2 = mkV2 (mkV "canonize" "canonizes" "canonized" "canonized" "canonizing");
lin canopied_A = compoundA (mkA "canopied");
lin canopy_N = mkN "canopy" "canopies";
lin cant_N = mkN "cant" "cants";
lin cant_V = mkV "cant" "cants" "canted" "canted" "canting";
lin cant_V2 = mkV2 (mkV "cant" "cants" "canted" "canted" "canting");
lin cantab_PN = mkPN "Cantab";
lin cantaloup_N = mkN "cantaloup" "cantaloups";
lin cantaloupe_N = mkN "cantaloupe" "cantaloupes";
lin cantankerous_A = compoundA (mkA "cantankerous");
lin cantata_N = mkN "cantata" "cantatas";
lin canteen_N = mkN "canteen" "canteens";
lin canter_N = mkN "canter" "canters";
lin canter_V = mkV "canter" "canters" "cantered" "cantered" "cantering";
lin canter_V2 = mkV2 (mkV "canter" "canters" "cantered" "cantered" "cantering");
lin canterbury_PN = mkPN "Canterbury";
lin canticle_N = mkN "canticle" "canticles";
lin cantilever_N = mkN "cantilever" "cantilevers";
lin canto_N = mkN "canto" "cantos";
lin canton_N = mkN "canton" "cantons";
lin canton_PN = mkPN "Canton";
lin cantonment_N = mkN "cantonment" "cantonments";
lin cantor_N = mkN "cantor" "cantors";
lin canuck_N = mkN "canuck" "canucks";
lin canvas_N = mkN "canvas" "canvases";
lin canvass_N = mkN "canvass" "canvasses";
lin canvass_V = mkV "canvass" "canvasses" "canvassed" "canvassed" "canvassing";
lin canvass_V2 = mkV2 (mkV "canvass" "canvasses" "canvassed" "canvassed" "canvassing");
lin canvey_PN = mkPN "Canvey";
lin canvey_island_PN = mkPN "Canvey island";
lin canyon_N = mkN "canyon" "canyons";
lin cap_N = mkN "cap" "caps";
lin cap_V2 = mkV2 (mkV "cap" "caps" "capped" "capped" "capping");
lin cap_a_pie_Adv = mkAdv "cap - à - pie";
lin capability_N = mkN "capability" "capabilities";
lin capable_A = compoundA (mkA "capable");
lin capacious_A = compoundA (mkA "capacious");
lin capacity_N = mkN "capacity" "capacities";
lin caparison_N = mkN "caparison" "caparisons";
lin caparison_V2 = mkV2 (mkV "caparison" "caparisons" "caparisoned" "caparisoned" "caparisoning");
lin cape_N = mkN "cape" "capes";
lin cape_town_PN = mkPN "Cape town";
lin caper_N = mkN "caper" "capers";
lin caper_V = mkV "caper" "capers" "capered" "capered" "capering";
lin capillary_N = mkN "capillary" "capillaries";
lin capital_A = compoundA (mkA "capital");
lin capital_N = mkN "capital" "capitals";
lin capitalism_A = compoundA (mkA "capitalism");
lin capitalism_N = mkN "capitalism" ;
lin capitalist_N = mkN "capitalist" "capitalists";
lin capitalistic_A = compoundA (mkA "capitalistic");
lin capitalization_N = mkN "capitalization" "capitalizations";
lin capitalize_V = mkV "capitalize" "capitalizes" "capitalized" "capitalized" "capitalizing";
lin capitalize_V2 = mkV2 (mkV "capitalize" "capitalizes" "capitalized" "capitalized" "capitalizing");
lin capitation_N = mkN "capitation" "capitations";
lin capitol_N = mkN "capitol" "capitols";
lin capitulate_V = mkV "capitulate";
lin capitulate_V2 = mkV2 (mkV "capitulate" "capitulates" "capitulated" "capitulated" "capitulating");
lin capitulation_N = mkN "capitulation" ;
lin capon_N = mkN "capon" "capons";
lin caprice_N = mkN "caprice" "caprices";
lin capricious_A = compoundA (mkA "capricious");
lin capriciousness_N = mkN "capriciousness" ;
lin capricorn_PN = mkPN "Capricorn";
lin capsicum_N = mkN "capsicum" "capsicums";
lin capsize_V = mkV "capsize" "capsizes" "capsized" "capsized" "capsizing";
lin capsize_V2 = mkV2 (mkV "capsize" "capsizes" "capsized" "capsized" "capsizing");
lin capstan_N = mkN "capstan" "capstans";
lin capsule_N = mkN "capsule" "capsules";
lin capt_PN = mkPN "Capt";
lin captain_N = mkN "captain" "captains";
lin captain_V2 = mkV2 (mkV "captain" "captains" "captained" "captained" "captaining");
lin caption_N = mkN "caption" "captions";
lin captious_A = compoundA (mkA "captious");
lin captivate_V2 = mkV2 (mkV "captivate" "captivates" "captivated" "captivated" "captivating");
lin captive_A = compoundA (mkA "captive");
lin captive_N = mkN "captive" "captives";
lin captivity_N = mkN "captivity" ;
lin captor_N = mkN "captor" "captors";
lin capture_N = mkN "capture" "captures";
lin capture_V2 = mkV2 (mkV "capture" "captures" "captured" "captured" "capturing");
lin car_N = mkN "car" "cars";
lin car_ferry_N = mkN "car - ferry" "car - ferries";
lin caracas_PN = mkPN "Caracas";
lin carafe_N = mkN "carafe" "carafes";
lin caramel_N = mkN "caramel" "caramels";
lin carapace_N = mkN "carapace" "carapaces";
lin carat_N = mkN "carat" "carats";
lin caravan_N = mkN "caravan" "caravans";
lin caravanning_N = mkN "caravanning" ;
lin caravansary_N = mkN "caravansary" "caravansaries";
lin caravanserai_N = mkN "caravanserai" "caravanserais";
lin caraway_N = mkN "caraway" "caraways";
lin carbide_N = mkN "carbide" "carbides";
lin carbine_N = mkN "carbine" "carbines";
lin carbohydrate_N = mkN "carbohydrate" "carbohydrates";
lin carbolic_A = compoundA (mkA "carbolic");
lin carbon_N = mkN "carbon" "carbons";
lin carbon_paper_N = mkN "carbon - paper" ;
lin carbonated_A = compoundA (mkA "carbonated");
lin carbonic_A = compoundA (mkA "carbonic");
lin carboniferous_A = compoundA (mkA "carboniferous");
lin carbonization_N = mkN "carbonization" "carbonizations";
lin carbonize_V2 = mkV2 (mkV "carbonize" "carbonizes" "carbonized" "carbonized" "carbonizing");
lin carborundum_N = mkN "carborundum" ;
lin carboy_N = mkN "carboy" "carboys";
lin carbuncle_N = mkN "carbuncle" "carbuncles";
lin carburettor_N = mkN "carburettor" "carburettors";
lin carcase_N = mkN "carcase" "carcases";
lin carcass_N = mkN "carcass" "carcasses";
lin card_N = mkN "card" "cards";
lin card_V2 = mkV2 (mkV "card" "cards" "carded" "carded" "carding");
lin card_sharper_N = mkN "card - sharper" "card - sharpers";
lin cardamom_N = mkN "cardamom" ;
lin cardboard_N = mkN "cardboard" ;
lin cardenden_PN = mkPN "Cardenden";
lin cardiac_A = compoundA (mkA "cardiac");
lin cardiff_PN = mkPN "Cardiff";
lin cardigan_N = mkN "cardigan" "cardigans";
lin cardigan_PN = mkPN "Cardigan";
lin cardinal_A = compoundA (mkA "cardinal");
lin cardinal_N = mkN "cardinal" "cardinals";
lin care_N = mkN "care" "cares";
lin care_V = mkV "care" "cares" "cared" "cared" "caring";
lin careen_V = mkV "careen" "careens" "careened" "careened" "careening";
lin careen_V2 = mkV2 (mkV "careen" "careens" "careened" "careened" "careening");
lin career_N = mkN "career" "careers";
lin career_V = mkV "career" "careers" "careered" "careered" "careering";
lin careerist_N = mkN "careerist" "careerists";
lin carefree_A = compoundA (mkA "carefree");
lin careful_A = compoundA (mkA "careful");
lin carefulness_N = mkN "carefulness" ;
lin careladen_A = compoundA (mkA "careladen");
lin careless_A = compoundA (mkA "careless");
lin carelessness_N = mkN "carelessness" ;
lin caress_N = mkN "caress" "caresses";
lin caress_V2 = mkV2 (mkV "caress" "caresses" "caressed" "caressed" "caressing");
lin caressing_A = compoundA (mkA "caressing");
lin caret_N = mkN "caret" "carets";
lin caretaker_N = mkN "caretaker" "caretakers";
lin careworn_A = compoundA (mkA "careworn");
lin cargo_N = mkN "cargo" "cargoes";
lin caribou_N = mkN "caribou" "caribou";
lin caricature_N = mkN "caricature" "caricatures";
lin caricature_V2 = mkV2 (mkV "caricature" "caricatures" "caricatured" "caricatured" "caricaturing");
lin caricaturist_N = mkN "caricaturist" "caricaturists";
lin caries_N = mkN "caries" ;
lin carillon_N = mkN "carillon" "carillons";
lin carious_A = compoundA (mkA "carious");
lin carl_PN = mkPN "Carl";
lin carlisle_PN = mkPN "Carlisle";
lin carlow_PN = mkPN "Carlow";
lin carluke_PN = mkPN "Carluke";
lin carmarthen_PN = mkPN "Carmarthen";
lin carmelite_A = compoundA (mkA "carmelite");
lin carmelite_N = mkN "carmelite" "carmelites";
lin carmine_A = compoundA (mkA "carmine");
lin carmine_N = mkN "carmine" "carmines";
lin carnage_N = mkN "carnage" ;
lin carnal_A = compoundA (mkA "carnal");
lin carnation_N = mkN "carnation" "carnations";
lin carnforth_PN = mkPN "Carnforth";
lin carnival_N = mkN "carnival" "carnivals";
lin carnivore_N = mkN "carnivore" "carnivores";
lin carnivorous_A = compoundA (mkA "carnivorous");
lin carnoustie_PN = mkPN "Carnoustie";
lin carol_N = mkN "carol" "carols";
lin carol_PN = mkPN "Carol";
lin carol_V2 = mkV2 (mkV "carol" "carols" "carolled" "carolled" "carolling");
lin carole_PN = mkPN "Carole";
lin carolina_PN = mkPN "Carolina";
lin caroline_PN = mkPN "Caroline";
lin caroller_N = mkN "caroller" "carollers";
lin carolyn_PN = mkPN "Carolyn";
lin carousal_N = mkN "carousal" "carousals";
lin carouse_V2 = mkV2 (mkV "carouse" "carouses" "caroused" "caroused" "carousing");
lin carousel_N = mkN "carousel" "carousels";
lin carp_N = mkN "carp" "carp";
lin carp_V = mkV "carp";
lin carp_V2 = mkV2 (mkV "carp" "carps" "carped" "carped" "carping");
lin carpal_A = compoundA (mkA "carpal");
lin carpal_N = mkN "carpal" "carpals";
lin carpenter_N = mkN "carpenter" "carpenters";
lin carpentry_N = mkN "carpentry" ;
lin carpet_N = mkN "carpet" "carpets";
lin carpet_V2 = mkV2 (mkV "carpet" "carpets" "carpeted" "carpeted" "carpeting");
lin carpet_beater_N = mkN "carpet - beater" "carpet - beaters";
lin carpet_knight_N = mkN "carpet - knight" "carpet - knights";
lin carpet_sweeper_N = mkN "carpet - sweeper" "carpet - sweepers";
lin carpetbag_N = mkN "carpetbag" "carpetbags";
lin carpetbagger_N = mkN "carpetbagger" "carpetbaggers";
lin carport_N = mkN "carport" "carports";
lin carriage_N = mkN "carriage" "carriages";
lin carriageway_N = mkN "carriageway" "carriageways";
lin carrie_PN = mkPN "Carrie";
lin carrier_N = mkN "carrier" "carriers";
lin carrier_bag_N = mkN "carrier - bag" "carrier - bags";
lin carrier_pigeon_N = mkN "carrier - pigeon" "carrier - pigeons";
lin carrion_N = mkN "carrion" ;
lin carrion_crow_N = mkN "carrion - crow" "carrion - crows";
lin carron_PN = mkPN "Carron";
lin carrot_N = mkN "carrot" "carrots";
lin carroty_A = compoundA (mkA "carroty");
lin carry_N = mkN "carry" "carries";
lin carry_V = mkV "carry" "carries" "carried" "carried" "carrying";
lin carry_V2 = mkV2 (mkV "carry" "carries" "carried" "carried" "carrying");
lin carry_out_V2 = mkV2 (mkV "carry out" "carries out" "carried out" "carried out" "carrying out");
lin carrycot_N = mkN "carrycot" "carrycots";
lin carsick_A = compoundA (mkA "carsick");
lin carsickness_N = mkN "carsickness" ;
lin cart_N = mkN "cart" "carts";
lin cart_V2 = mkV2 (mkV "cart" "carts" "carted" "carted" "carting");
lin cart_track_N = mkN "cart - track" "cart - tracks";
lin cartage_N = mkN "cartage" ;
lin cartagena_PN = mkPN "Cartagena";
lin carte_blanche_N = mkN "carte blanche" "cartes blanches";
lin cartel_N = mkN "cartel" "cartels";
lin carter_N = mkN "carter" "carters";
lin carthorse_N = mkN "carthorse" "carthorses";
lin cartilage_N = mkN "cartilage" "cartilages";
lin cartilaginous_A = compoundA (mkA "cartilaginous");
lin cartload_N = mkN "cartload" "cartloads";
lin cartographer_N = mkN "cartographer" "cartographers";
lin cartography_N = mkN "cartography" ;
lin carton_N = mkN "carton" "cartons";
lin cartoon_N = mkN "cartoon" "cartoons";
lin cartoon_V2 = mkV2 (mkV "cartoon" "cartoons" "cartooned" "cartooned" "cartooning");
lin cartoonist_N = mkN "cartoonist" "cartoonists";
lin cartridge_N = mkN "cartridge" "cartridges";
lin cartridge_belt_N = mkN "cartridge - belt" "cartridge - belts";
lin cartridge_paper_N = mkN "cartridge - paper" "cartridge - papers";
lin cartroad_N = mkN "cartroad" "cartroads";
lin cartwheel_N = mkN "cartwheel" "cartwheels";
lin carve_V = mkV "carve" "carves" "carved" "carved" "carving";
lin carve_V2 = mkV2 (mkV "carve" "carves" "carved" "carved" "carving");
lin carver_N = mkN "carver" "carvers";
lin carving_N = mkN "carving" "carvings";
lin carving_fork_N = mkN "carving - fork" "carving - forks";
lin carving_knife_N = mkN "carving - knife" "carving - knives";
lin caryatid_N = mkN "caryatid" "caryatids";
lin casablanca_PN = mkPN "Casablanca";
lin cascade_N = mkN "cascade" "cascades";
lin cascade_V = mkV "cascade" "cascades" "cascaded" "cascaded" "cascading";
lin case_N = mkN "case" "cases";
lin case_V2 = mkV2 (mkV "case" "cases" "cased" "cased" "casing");
lin case_hardened_A = compoundA (mkA "case - hardened");
lin case_history_N = mkN "case - history" "case - histories";
lin case_law_N = mkN "case - law" "case - laws";
lin casebook_N = mkN "casebook" "casebooks";
lin casein_N = mkN "casein" ;
lin casement_N = mkN "casement" "casements";
lin casework_N = mkN "casework" "caseworks";
lin cash_N = mkN "cash" ;
lin cash_V = mkV "cash" "cashes" "cashed" "cashed" "cashing";
lin cash_V2 = mkV2 (mkV "cash" "cashes" "cashed" "cashed" "cashing");
lin cashable_A = compoundA (mkA "cashable");
lin cashew_N = mkN "cashew" "cashews";
lin cashier_N = mkN "cashier" "cashiers";
lin cashier_V2 = mkV2 (mkV "cashier" "cashiers" "cashiered" "cashiered" "cashiering");
lin cashmere_N = mkN "cashmere" ;
lin casing_N = mkN "casing" "casings";
lin casino_N = mkN "casino" "casinos";
lin cask_N = mkN "cask" "casks";
lin casket_N = mkN "casket" "caskets";
lin cassava_N = mkN "cassava" ;
lin casserole_N = mkN "casserole" "casseroles";
lin cassette_N = mkN "cassette" "cassettes";
lin cassock_N = mkN "cassock" "cassocks";
lin cassowary_N = mkN "cassowary" "cassowaries";
lin cast_N = mkN "cast" "casts";
lin cast_V = IrregEng.cast_V;
lin cast_V2 = mkV2 (IrregEng.cast_V);
lin cast_iron_A = compoundA (mkA "cast - iron");
lin cast_off_A = compoundA (mkA "cast - off");
lin castaway_N = mkN "castaway" "castaways";
lin caste_N = mkN "caste" "castes";
lin castellated_A = compoundA (mkA "castellated");
lin caster_N = mkN "caster" "casters";
lin castigate_V2 = mkV2 (mkV "castigate" "castigates" "castigated" "castigated" "castigating");
lin castigation_N = mkN "castigation" "castigations";
lin casting_N = mkN "casting" "castings";
lin castle_N = mkN "castle" "castles";
lin castle_V = mkV "castle" "castles" "castled" "castled" "castling";
lin castleford_PN = mkPN "Castleford";
lin castor_N = mkN "castor" "castors";
lin castor_oil_N = mkN "castor oil" ;
lin castrate_V2 = mkV2 (mkV "castrate" "castrates" "castrated" "castrated" "castrating");
lin castration_N = mkN "castration" "castrations";
lin casual_A = compoundA (mkA "casual");
lin casualty_N = mkN "casualty" "casualties";
lin casuist_N = mkN "casuist" "casuists";
lin casuistic_A = compoundA (mkA "casuistic");
lin casuistical_A = compoundA (mkA "casuistical");
lin casuistry_N = mkN "casuistry" "casuistries";
lin casus_belli_N = mkN "casus belli" "casus belli";
lin cat_N = mkN "cat" "cats";
lin cat_nap_N = mkN "cat - nap" "cat - naps";
lin cat_o'_nine_tails_N = mkN "cat - o'-nine - tails" "IRREG";
lin cat_sleep_N = mkN "cat - sleep" "cat - sleeps";
lin cataclysm_N = mkN "cataclysm" "cataclysms";
lin cataclysmic_A = compoundA (mkA "cataclysmic");
lin catafalque_N = mkN "catafalque" "catafalques";
lin catalan_A = compoundA (mkA "catalan");
lin catalan_N = mkN "catalan" ;
lin catalepsy_N = mkN "catalepsy" ;
lin cataleptic_A = compoundA (mkA "cataleptic");
lin cataleptic_N = mkN "cataleptic" "cataleptics";
lin catalog_V2 = mkV2 (mkV "catalog");
lin catalogue_N = mkN "catalogue" "catalogues";
lin catalogue_V2 = mkV2 (mkV "catalogue" "catalogues" "catalogued" "catalogued" "cataloguing");
lin catalpa_N = mkN "catalpa" "catalpas";
lin catalysis_N = mkN "catalysis" ;
lin catalyst_N = mkN "catalyst" "catalysts";
lin catalytic_A = compoundA (mkA "catalytic");
lin catamaran_N = mkN "catamaran" "catamarans";
lin catania_PN = mkPN "Catania";
lin catapult_N = mkN "catapult" "catapults";
lin catapult_V2 = mkV2 (mkV "catapult" "catapults" "catapulted" "catapulted" "catapulting");
lin cataract_N = mkN "cataract" "cataracts";
lin catarrh_N = mkN "catarrh" ;
lin catastrophe_N = mkN "catastrophe" "catastrophes";
lin catastrophic_A = compoundA (mkA "catastrophic");
lin catastrophically_Adv = mkAdv "catastrophically";
lin catcall_N = mkN "catcall" "catcalls";
lin catcall_V = mkV "catcall" "catcalls" "catcalled" "catcalled" "catcalling";
lin catch_N = mkN "catch" "catches";
lin catch_V = IrregEng.catch_V;
lin catch_V2 = mkV2 (IrregEng.catch_V);
lin catch_VS = mkVS (IrregEng.catch_V);
lin catch_crop_N = mkN "catch - crop" "catch - crops";
lin catcher_N = mkN "catcher" "catchers";
lin catching_A = compoundA (mkA "catching");
lin catchment_N = mkN "catchment" "catchments";
lin catchment_area_N = mkN "catchment - area" "catchment - areas";
lin catchment_basin_N = mkN "catchment - basin" "catchment - basins";
lin catchpenny_A = compoundA (mkA "catchpenny");
lin catchup_N = mkN "catchup" "catchups";
lin catchword_N = mkN "catchword" "catchwords";
lin catchy_A = mkA "catchy" "catchier";
lin catechism_N = mkN "catechism" "catechisms";
lin catechize_V2 = mkV2 (mkV "catechize" "catechizes" "catechized" "catechized" "catechizing");
lin categorical_A = compoundA (mkA "categorical");
lin categorize_V2 = mkV2 (mkV "categorize" "categorizes" "categorized" "categorized" "categorizing");
lin category_N = mkN "category" "categories";
lin cater_V = mkV "cater" "caters" "catered" "catered" "catering";
lin caterer_N = mkN "caterer" "caterers";
lin caterpillar_N = mkN "caterpillar" "caterpillars";
lin caterwaul_N = mkN "caterwaul" "caterwauls";
lin caterwaul_V = mkV "caterwaul" "caterwauls" "caterwauled" "caterwauled" "caterwauling";
lin catfish_N = mkN "catfish" "catfish";
lin catgut_N = mkN "catgut" ;
lin cath_PN = mkPN "Cath";
lin catharsis_N = mkN "catharsis" "catharses" {- FIXME: guessed plural form -};
lin cathartic_N = mkN "cathartic" "cathartics";
lin cathedral_N = mkN "cathedral" "cathedrals";
lin catherine_PN = mkPN "Catherine";
lin cathode_N = mkN "cathode" "cathodes";
lin catholic_A = compoundA (mkA "catholic");
lin catholic_N = mkN "catholic" "catholics";
lin catholicism_N = mkN "catholicism" ;
lin catholicity_N = mkN "catholicity" ;
lin cathy_PN = mkPN "Cathy";
lin catkin_N = mkN "catkin" "catkins";
lin catsup_N = mkN "catsup" "catsups";
lin cattiness_N = mkN "cattiness" ;
lin cattish_A = compoundA (mkA "cattish");
lin cattle_cake_N = mkN "cattle - cake" ;
lin cattleman_N = mkN "cattleman" "cattlemen" {- FIXME: guessed plural form -};
lin catty_A = mkA "catty" "cattier";
lin catwalk_N = mkN "catwalk" "catwalks";
lin caucasian_A = compoundA (mkA "caucasian");
lin caucasian_N = mkN "caucasian" "caucasians";
lin caucus_N = mkN "caucus" "caucuses";
lin caul_N = mkN "caul" "cauls";
lin cauldron_N = mkN "cauldron" "cauldrons";
lin cauliflower_N = mkN "cauliflower" "cauliflowers";
lin caulk_V2 = mkV2 (mkV "caulk" "caulks" "caulked" "caulked" "caulking");
lin causal_A = compoundA (mkA "causal");
lin causality_N = mkN "causality" ;
lin causation_N = mkN "causation" ;
lin causative_A = compoundA (mkA "causative");
lin cause_N = mkN "cause" "causes";
lin cause_V2 = mkV2 (mkV "cause" "causes" "caused" "caused" "causing");
lin cause_V2V = mkV2V (mkV "cause") noPrep to_Prep ;
lin cause_VS = mkVS (mkV "cause");
lin causeless_A = compoundA (mkA "causeless");
lin causerie_N = mkN "causerie" "causeries";
lin causeway_N = mkN "causeway" "causeways";
lin caustic_A = compoundA (mkA "caustic");
lin caustically_Adv = mkAdv "caustically";
lin cauterize_V2 = mkV2 (mkV "cauterize" "cauterizes" "cauterized" "cauterized" "cauterizing");
lin caution_N = mkN "caution" "cautions";
lin caution_V = mkV "caution" "cautions" "cautioned" "cautioned" "cautioning";
lin caution_V2 = mkV2 (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning");
lin caution_V2V = mkV2V (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning") noPrep to_Prep ;
lin caution_VS = mkVS (mkV "caution" "cautions" "cautioned" "cautioned" "cautioning");
lin cautionary_A = compoundA (mkA "cautionary");
lin cautious_A = compoundA (mkA "cautious");
lin cavalcade_N = mkN "cavalcade" "cavalcades";
lin cavalier_A = compoundA (mkA "cavalier");
lin cavalier_N = mkN "cavalier" "cavaliers";
lin cavalry_N = mkN "cavalry" "cavalries";
lin cavalryman_N = mkN "cavalryman" "cavalrymen" {- FIXME: guessed plural form -};
lin cavan_PN = mkPN "Cavan";
lin cave_N = mkN "cave" "caves";
lin cave_V = mkV "cave" "caves" "caved" "caved" "caving";
lin cave_V2 = mkV2 (mkV "cave" "caves" "caved" "caved" "caving");
lin cave_dweller_N = mkN "cave - dweller" "cave - dwellers";
lin cave_in_N = mkN "cave - in" "cave - ins";
lin caveat_N = mkN "caveat" "caveats";
lin caveman_N = mkN "caveman" "cavemen" {- FIXME: guessed plural form -};
lin cavern_N = mkN "cavern" "caverns";
lin cavernous_A = compoundA (mkA "cavernous");
lin caviar_N = mkN "caviar" ;
lin caviare_N = mkN "caviare" ;
lin cavil_V = mkV "cavil" "cavils" "cavilled" "cavilled" "cavilling";
lin cavity_N = mkN "cavity" "cavities";
lin cavort_V = mkV "cavort" "cavorts" "cavorted" "cavorted" "cavorting";
lin caw_N = mkN "caw" "caws";
lin caw_V = mkV "caw" "caws" "cawed" "cawed" "cawing";
lin caw_V2 = mkV2 (mkV "caw" "caws" "cawed" "cawed" "cawing");
lin cayenne_N = mkN "cayenne" ;
lin cayenne_pepper_N = mkN "cayenne pepper" ;
lin cayman_N = mkN "cayman" "caymans";
lin cbi_N = mkN "cbi" ;
lin cc_N = mkN "cc" "cc";
lin cd_N = mkN "cd" ;
lin cdr_PN = mkPN "Cdr";
lin cdre_PN = mkPN "Cdre";
lin cease_N = mkN "cease" "ceases";
lin cease_V = mkV "cease" "ceases" "ceased" "ceased" "ceasing";
lin cease_V2 = mkV2 (mkV "cease" "ceases" "ceased" "ceased" "ceasing");
lin cease_V2V = mkV2V (mkV "cease" "ceases" "ceased" "ceased" "ceasing") noPrep to_Prep ;
lin cease_VS = mkVS (mkV "cease" "ceases" "ceased" "ceased" "ceasing");
lin cease_fire_N = mkN "cease - fire" "cease - fires";
lin ceaseless_A = compoundA (mkA "ceaseless");
lin cecil_PN = mkPN "Cecil";
lin cecilia_PN = mkPN "Cecilia";
lin cecily_PN = mkPN "Cecily";
lin cedar_N = mkN "cedar" "cedars";
lin cede_V2 = mkV2 (mkV "cede" "cedes" "ceded" "ceded" "ceding");
lin cedilla_N = mkN "cedilla" "cedillas";
lin cedric_PN = mkPN "Cedric";
lin cefn_mawr_PN = mkPN "Cefn - mawr";
lin ceiling_N = mkN "ceiling" "ceilings";
lin celandine_N = mkN "celandine" "celandines";
lin celebrant_N = mkN "celebrant" "celebrants";
lin celebrate_V2 = mkV2 (mkV "celebrate" "celebrates" "celebrated" "celebrated" "celebrating");
lin celebrated_A = compoundA (mkA "celebrated");
lin celebration_N = mkN "celebration" "celebrations";
lin celebrity_N = mkN "celebrity" "celebrities";
lin celerity_N = mkN "celerity" ;
lin celery_N = mkN "celery" ;
lin celestial_A = compoundA (mkA "celestial");
lin celia_PN = mkPN "Celia";
lin celibacy_N = mkN "celibacy" ;
lin celibate_N = mkN "celibate" "celibates";
lin cell_N = mkN "cell" "cells";
lin cellar_N = mkN "cellar" "cellars";
lin cellarage_N = mkN "cellarage" "cellarages";
lin cellist_N = mkN "cellist" "cellists";
lin cello_N = mkN "cello" "cellos";
lin cellophane_N = mkN "cellophane" ;
lin cellular_A = compoundA (mkA "cellular");
lin celluloid_N = mkN "celluloid" ;
lin cellulose_N = mkN "cellulose" ;
lin celt_N = mkN "celt" "celts";
lin celtic_A = compoundA (mkA "celtic");
lin celtic_N = mkN "celtic" "celtics";
lin cement_N = mkN "cement" ;
lin cement_V2 = mkV2 (mkV "cement" "cements" "cemented" "cemented" "cementing");
lin cement_mixer_N = mkN "cement - mixer" "cement - mixers";
lin cemetery_N = mkN "cemetery" "cemeteries";
lin cenotaph_N = mkN "cenotaph" "cenotaphs";
lin censer_N = mkN "censer" "censers";
lin censor_N = mkN "censor" "censors";
lin censor_V2 = mkV2 (mkV "censor" "censors" "censored" "censored" "censoring");
lin censorious_A = compoundA (mkA "censorious");
lin censorship_N = mkN "censorship" "censorships";
lin censure_N = mkN "censure" "censures";
lin censure_V2 = mkV2 (mkV "censure" "censures" "censured" "censured" "censuring");
lin census_N = mkN "census" "censuses";
lin cent_N = mkN "cent" "cents";
lin centaur_N = mkN "centaur" "centaurs";
lin centenarian_A = compoundA (mkA "centenarian");
lin centenarian_N = mkN "centenarian" "centenarians";
lin centenary_A = compoundA (mkA "centenary");
lin centenary_N = mkN "centenary" "centenaries";
lin centennial_A = compoundA (mkA "centennial");
lin centennial_N = mkN "centennial" "centennials";
lin center_V = mkV "center";
lin center_V2 = mkV2 (mkV "center");
lin centigrade_A = compoundA (mkA "centigrade");
lin centime_N = mkN "centime" "centimes";
lin centimetre_N = mkN "centimetre" "centimetres";
lin centipede_N = mkN "centipede" "centipedes";
lin central_A = compoundA (mkA "central");
lin central_N = mkN "central" "centrals";
lin centralization_N = mkN "centralization" "centralizations";
lin centralize_V = mkV "centralize" "centralizes" "centralized" "centralized" "centralizing";
lin centralize_V2 = mkV2 (mkV "centralize" "centralizes" "centralized" "centralized" "centralizing");
lin centre_N = mkN "centre" "centres";
lin centre_V = mkV "centre" "centres" "centred" "centred" "centring";
lin centre_V2 = mkV2 (mkV "centre" "centres" "centred" "centred" "centring");
lin centre_bit_N = mkN "centre - bit" "centre - bits";
lin centre_board_N = mkN "centre - board" "centre - boards";
lin centrepiece_N = mkN "centrepiece" "centrepieces";
lin centrifugal_A = compoundA (mkA "centrifugal");
lin centrifuge_N = mkN "centrifuge" "centrifuges";
lin centripetal_A = compoundA (mkA "centripetal");
lin centurion_N = mkN "centurion" "centurions";
lin century_N = mkN "century" "centuries";
lin ceramic_A = compoundA (mkA "ceramic");
lin ceramics_N = mkN "ceramics" "ceramics";
lin cereal_N = mkN "cereal" "cereals";
lin cerebral_A = compoundA (mkA "cerebral");
lin cerebration_N = mkN "cerebration" ;
lin ceremonial_A = compoundA (mkA "ceremonial");
lin ceremonial_N = mkN "ceremonial" "ceremonials";
lin ceremonious_A = compoundA (mkA "ceremonious");
lin ceremony_N = mkN "ceremony" "ceremonies";
lin cerise_A = compoundA (mkA "cerise");
lin cerise_N = mkN "cerise" "cerises";
lin cert_N = mkN "cert" "certs";
lin certain_A = compoundA (mkA "certain");
lin certainty_N = mkN "certainty" "certainties";
lin certifiable_A = compoundA (mkA "certifiable");
lin certificate_N = mkN "certificate" "certificates";
lin certificate_V2 = mkV2 (mkV "certificate" "certificates" "certificated" "certificated" "certificating");
lin certificated_A = compoundA (mkA "certificated");
lin certification_N = mkN "certification" "certifications";
lin certify_V = mkV "certify" "certifies" "certified" "certified" "certifying";
lin certify_V2 = mkV2 (mkV "certify" "certifies" "certified" "certified" "certifying");
lin certitude_N = mkN "certitude" ;
lin cerulean_A = compoundA (mkA "cerulean");
lin cervical_A = compoundA (mkA "cervical");
lin cervix_N = mkN "cervix" "cervixes";
lin cesarean_A = compoundA (mkA "cesarean");
lin cessation_N = mkN "cessation" ;
lin cession_N = mkN "cession" "cessions";
lin cesspit_N = mkN "cesspit" "cesspits";
lin cesspool_N = mkN "cesspool" "cesspools";
lin ceylon_PN = mkPN "Ceylon";
lin cf_PN = mkPN "Cf";
lin chad_PN = mkPN "Chad";
lin chadian_A = compoundA (mkA "chadian");
lin chadian_N = mkN "chadian" "chadians";
lin chafe_N = mkN "chafe" "chafes";
lin chafe_V = mkV "chafe" "chafes" "chafed" "chafed" "chafing";
lin chafe_V2 = mkV2 (mkV "chafe" "chafes" "chafed" "chafed" "chafing");
lin chaff_N = mkN "chaff" ;
lin chaff_V2 = mkV2 (mkV "chaff" "chaffs" "chaffed" "chaffed" "chaffing");
lin chaffinch_N = mkN "chaffinch" "chaffinches";
lin chafing_dish_N = mkN "chafing dish" "chafing dishes";
lin chagrin_N = mkN "chagrin" ;
lin chagrin_V2 = mkV2 (mkV "chagrin" "chagrins" "chagrined" "chagrined" "chagrining");
lin chain_N = mkN "chain" "chains";
lin chain_V2 = mkV2 (mkV "chain" "chains" "chained" "chained" "chaining");
lin chain_armour_N = mkN "chain - armour" ;
lin chain_gang_N = mkN "chain - gang" "chain - gangs";
lin chain_letter_N = mkN "chain - letter" "chain - letters";
lin chain_mail_N = mkN "chain - mail" ;
lin chain_smoker_N = mkN "chain - smoker" "chain - smokers";
lin chain_stitch_N = mkN "chain - stitch" "chain - stitches";
lin chain_store_N = mkN "chain - store" "chain - stores";
lin chair_N = mkN "chair" "chairs";
lin chair_V2 = mkV2 (mkV "chair" "chairs" "chaired" "chaired" "chairing");
lin chair_lift_N = mkN "chair - lift" "chair - lifts";
lin chairman_N = mkN "chairman" "chairmen" {- FIXME: guessed plural form -};
lin chairmanship_N = mkN "chairmanship" ;
lin chaise_N = mkN "chaise" "chaises";
lin chaise_longue_N = mkN "chaise longue" "chaise longues";
lin chalet_N = mkN "chalet" "chalets";
lin chalfont_PN = mkPN "Chalfont";
lin chalfont_st_giles_PN = mkPN "Chalfont st giles";
lin chalfont_st_peter_PN = mkPN "Chalfont st peter";
lin chalice_N = mkN "chalice" "chalices";
lin chalk_N = mkN "chalk" "chalks";
lin chalk_V2 = mkV2 (mkV "chalk" "chalks" "chalked" "chalked" "chalking");
lin chalkpit_N = mkN "chalkpit" "chalkpits";
lin chalky_A = mkA "chalky" "chalkier";
lin challenge_N = mkN "challenge" "challenges";
lin challenge_V = mkV "challenge";
lin challenge_V2 = mkV2 (mkV "challenge" "challenges" "challenged" "challenged" "challenging");
lin challenger_N = mkN "challenger" "challengers";
lin chamber_N = mkN "chamber" "chambers";
lin chamberlain_N = mkN "chamberlain" "chamberlains";
lin chambermaid_N = mkN "chambermaid" "chambermaids";
lin chamberpot_N = mkN "chamberpot" "chamberpots";
lin chameleon_N = mkN "chameleon" "chameleons";
lin chammy_leather_N = mkN "chammy - leather" "chammy - leathers";
lin chamois_N = mkN "chamois" "chamoises";
lin chamois_leather_N = mkN "chamois - leather" "chamois - leathers";
lin champ_N = mkN "champ" "champs";
lin champ_V = mkV "champ" "champs" "champed" "champed" "champing";
lin champ_V2 = mkV2 (mkV "champ" "champs" "champed" "champed" "champing");
lin champagne_N = mkN "champagne" "champagnes";
lin champion_A = compoundA (mkA "champion");
lin champion_Adv = mkAdv "champion";
lin champion_N = mkN "champion" "champions";
lin champion_V2 = mkV2 (mkV "champion" "champions" "championed" "championed" "championing");
lin championship_N = mkN "championship" "championships";
lin chance_N = mkN "chance" "chances";
lin chance_V = mkV "chance" "chances" "chanced" "chanced" "chancing";
lin chance_V2 = mkV2 (mkV "chance" "chances" "chanced" "chanced" "chancing");
lin chance_VS = mkVS (mkV "chance" "chances" "chanced" "chanced" "chancing");
lin chancel_N = mkN "chancel" "chancels";
lin chancellery_N = mkN "chancellery" "chancelleries";
lin chancellor_N = mkN "chancellor" "chancellors";
lin chancery_N = mkN "chancery" "chanceries";
lin chancy_A = compoundA (mkA "chancy");
lin chandelier_N = mkN "chandelier" "chandeliers";
lin chandler_N = mkN "chandler" "chandlers";
lin changchun_PN = mkPN "Changchun";
lin change_N = mkN "change" "changes";
lin change_V = mkV "change" "changes" "changed" "changed" "changing";
lin change_V2 = mkV2 (mkV "change" "changes" "changed" "changed" "changing");
lin changeable_A = compoundA (mkA "changeable");
lin changeableness_N = mkN "changeableness" ;
lin changeful_A = compoundA (mkA "changeful");
lin changeless_A = compoundA (mkA "changeless");
lin changeling_N = mkN "changeling" "changelings";
lin changeover_N = mkN "changeover" "changeovers";
lin changsha_PN = mkPN "Changsha";
lin channel_N = mkN "channel" "channels";
lin channel_V2 = mkV2 (mkV "channel" "channels" "channelled" "channelled" "channelling");
lin chant_N = mkN "chant" "chants";
lin chant_V = mkV "chant" "chants" "chanted" "chanted" "chanting";
lin chant_V2 = mkV2 (mkV "chant" "chants" "chanted" "chanted" "chanting");
lin chaos_N = mkN "chaos" ;
lin chaotic_A = compoundA (mkA "chaotic");
lin chaotically_Adv = mkAdv "chaotically";
lin chap_N = mkN "chap" "chaps";
lin chap_V = mkV "chap" "chaps" "chapped" "chapped" "chapping";
lin chap_V2 = mkV2 (mkV "chap" "chaps" "chapped" "chapped" "chapping");
lin chapel_N = mkN "chapel" "chapels";
lin chapelgoer_N = mkN "chapelgoer" "chapelgoers";
lin chaperon_N = mkN "chaperon" "chaperons";
lin chaperon_V2 = mkV2 (mkV "chaperon" "chaperons" "chaperoned" "chaperoned" "chaperoning");
lin chapfallen_A = compoundA (mkA "chapfallen");
lin chaplain_N = mkN "chaplain" "chaplains";
lin chaplaincy_N = mkN "chaplaincy" "chaplaincies";
lin chaplet_N = mkN "chaplet" "chaplets";
lin chapman_N = mkN "chapman" "chapmen" {- FIXME: guessed plural form -};
lin chapter_N = mkN "chapter" "chapters";
lin chapterhouse_N = mkN "chapterhouse" "chapterhouses";
lin char_N = mkN "char" "chars";
lin char_V = mkV "char" "chars" "charred" "charred" "charring";
lin char_V2 = mkV2 (mkV "char" "chars" "charred" "charred" "charring");
lin charabanc_1_N = mkN "charabanc" "charabancs";
lin charabanc_2_N = mkN "charàbanc" "charàbancs";
lin character_N = mkN "character" "characters";
lin characteristic_A = compoundA (mkA "characteristic");
lin characteristic_N = mkN "characteristic" "characteristics";
lin characteristically_Adv = mkAdv "characteristically";
lin characterization_N = mkN "characterization" ;
lin characterize_V2 = mkV2 (mkV "characterize" "characterizes" "characterized" "characterized" "characterizing");
lin characterless_A = compoundA (mkA "characterless");
lin charade_N = mkN "charade" "charades";
lin charcoal_N = mkN "charcoal" ;
lin charcoal_burner_N = mkN "charcoal - burner" "charcoal - burners";
lin chard_N = mkN "chard" "chards";
lin chard_PN = mkPN "Chard";
lin charge_N = mkN "charge" "charges";
lin charge_V = mkV "charge" "charges" "charged" "charged" "charging";
lin charge_V2 = mkV2 (mkV "charge" "charges" "charged" "charged" "charging");
lin charge_VS = mkVS (mkV "charge" "charges" "charged" "charged" "charging");
lin charge_account_N = mkN "charge - account" "charge - accounts";
lin charge_d'affaires_N = mkN "chargé d'affaires" "IRREG";
lin charge_sheet_N = mkN "charge - sheet" "charge - sheets";
lin chargeable_A = compoundA (mkA "chargeable");
lin charger_N = mkN "charger" "chargers";
lin chariot_N = mkN "chariot" "chariots";
lin charioteer_N = mkN "charioteer" "charioteers";
lin charisma_N = mkN "charisma" "charismas";
lin charismatic_A = compoundA (mkA "charismatic");
lin charitable_A = compoundA (mkA "charitable");
lin charity_N = mkN "charity" "charities";
lin charivari_N = mkN "charivari" ;
lin charlady_N = mkN "charlady" "charladies";
lin charlatan_N = mkN "charlatan" "charlatans";
lin charles_PN = mkPN "Charles";
lin charleston_N = mkN "charleston" "charlestons";
lin charlie_PN = mkPN "Charlie";
lin charlock_N = mkN "charlock" ;
lin charlotte_PN = mkPN "Charlotte";
lin charm_N = mkN "charm" "charms";
lin charm_V = mkV "charm" "charms" "charmed" "charmed" "charming";
lin charm_V2 = mkV2 (mkV "charm" "charms" "charmed" "charmed" "charming");
lin charmer_N = mkN "charmer" "charmers";
lin charming_A = compoundA (mkA "charming");
lin charnel_house_N = mkN "charnel house" "charnel houses";
lin chart_N = mkN "chart" "charts";
lin chart_V2 = mkV2 (mkV "chart" "charts" "charted" "charted" "charting");
lin charter_N = mkN "charter" "charters";
lin charter_V2 = mkV2 (mkV "charter" "charters" "chartered" "chartered" "chartering");
lin charter_party_N = mkN "charter - party" "charter - parties";
lin chartism_N = mkN "chartism" ;
lin chartist_N = mkN "chartist" "chartists";
lin chartreuse_N = mkN "chartreuse" ;
lin charwoman_N = mkN "charwoman" "charwomen" {- FIXME: guessed plural form -};
lin chary_A = compoundA (mkA "chary");
lin charybdis_PN = mkPN "Charybdis";
lin chas_PN = mkPN "Chas";
lin chase_N = mkN "chase" "chases";
lin chase_V = mkV "chase" "chases" "chased" "chased" "chasing";
lin chase_V2 = mkV2 (mkV "chase" "chases" "chased" "chased" "chasing");
lin chaser_N = mkN "chaser" "chasers";
lin chasm_N = mkN "chasm" "chasms";
lin chassis_N = mkN "chassis" "chassis";
lin chaste_A = compoundA (mkA "chaste");
lin chasten_V2 = mkV2 (mkV "chasten" "chastens" "chastened" "chastened" "chastening");
lin chastise_V2 = mkV2 (mkV "chastise" "chastises" "chastised" "chastised" "chastising");
lin chastisement_N = mkN "chastisement" ;
lin chastity_N = mkN "chastity" ;
lin chasuble_N = mkN "chasuble" "chasubles";
lin chat_N = mkN "chat" "chats";
lin chat_V = mkV "chat" "chats" "chatted" "chatted" "chatting";
lin chat_V2 = mkV2 (mkV "chat" "chats" "chatted" "chatted" "chatting");
lin chateau_N = mkN "château" "châteaux" {- FIXME: guessed plural form -};
lin chatelaine_N = mkN "chatelaine" "chatelaines";
lin chatham_PN = mkPN "Chatham";
lin chattel_N = mkN "chattel" "chattels";
lin chatter_N = mkN "chatter" ;
lin chatter_V = mkV "chatter" "chatters" "chattered" "chattered" "chattering";
lin chatterbox_N = mkN "chatterbox" "chatterboxes";
lin chattily_Adv = mkAdv "chattily";
lin chatty_A = mkA "chatty" "chattier";
lin chauffeur_N = mkN "chauffeur" "chauffeurs";
lin chauffeur_V2 = mkV2 (mkV "chauffeur");
lin chauffeuse_N = mkN "chauffeuse" "IRREG";
lin chauvinism_N = mkN "chauvinism" ;
lin chauvinist_N = mkN "chauvinist" "chauvinists";
lin chauvinistic_A = compoundA (mkA "chauvinistic");
lin chaw_N = mkN "chaw" "chaws";
lin chaw_V2 = mkV2 (mkV "chaw" "chaws" "chawed" "chawed" "chawing");
lin chaw_bacon_N = mkN "chaw - bacon" "chaw - bacons";
lin cheadle_PN = mkPN "Cheadle";
lin cheap_A = mkA "cheap" "cheaper";
lin cheapen_V = mkV "cheapen" "cheapens" "cheapened" "cheapened" "cheapening";
lin cheapen_V2 = mkV2 (mkV "cheapen" "cheapens" "cheapened" "cheapened" "cheapening");
lin cheapjack_A = compoundA (mkA "cheapjack");
lin cheapness_N = mkN "cheapness" ;
lin cheat_N = mkN "cheat" "cheats";
lin cheat_V = mkV "cheat" "cheats" "cheated" "cheated" "cheating";
lin cheat_V2 = mkV2 (mkV "cheat" "cheats" "cheated" "cheated" "cheating");
lin check_N = mkN "check" "checks";
lin check_V = mkV "check" "checks" "checked" "checked" "checking";
lin check_V2 = mkV2 (mkV "check" "checks" "checked" "checked" "checking");
lin checkbook_N = mkN "checkbook" "checkbooks";
lin checked_A = compoundA (mkA "checked");
lin checker_N = mkN "checker" "checkers";
lin checker_V2 = mkV2 (mkV "checker" "checkers" "checkered" "checkered" "checkering");
lin checkers_N = mkN "checkers" "checkers";
lin checklist_N = mkN "checklist" "checklists";
lin checkmate_N = mkN "checkmate" "checkmates";
lin checkmate_V2 = mkV2 (mkV "checkmate" "checkmates" "checkmated" "checkmated" "checkmating");
lin checkout_N = mkN "checkout" "checkouts";
lin checkpoint_N = mkN "checkpoint" "checkpoints";
lin checkroom_N = mkN "checkroom" "checkrooms";
lin checkup_N = mkN "checkup" "checkups";
lin cheddar_N = mkN "cheddar" ;
lin cheek_N = mkN "cheek" "cheeks";
lin cheek_V2 = mkV2 (mkV "cheek" "cheeks" "cheeked" "cheeked" "cheeking");
lin cheekbone_N = mkN "cheekbone" "cheekbones";
lin cheeked_A = compoundA (mkA "cheeked");
lin cheekily_Adv = mkAdv "cheekily";
lin cheeky_A = mkA "cheeky" "cheekier";
lin cheep_N = mkN "cheep" "cheeps";
lin cheep_V = mkV "cheep" "cheeps" "cheeped" "cheeped" "cheeping";
lin cheer_N = mkN "cheer" "cheers";
lin cheer_V = mkV "cheer" "cheers" "cheered" "cheered" "cheering";
lin cheer_V2 = mkV2 (mkV "cheer" "cheers" "cheered" "cheered" "cheering");
lin cheerful_A = compoundA (mkA "cheerful");
lin cheerfulness_N = mkN "cheerfulness" ;
lin cheering_A = compoundA (mkA "cheering");
lin cheering_N = mkN "cheering" ;
lin cheerleader_N = mkN "cheerleader" "cheerleaders";
lin cheerless_A = compoundA (mkA "cheerless");
lin cheerlessness_N = mkN "cheerlessness" ;
lin cheery_A = compoundA (mkA "cheery");
lin cheese_N = mkN "cheese" "cheeses";
lin cheesecake_N = mkN "cheesecake" "cheesecakes";
lin cheesecloth_N = mkN "cheesecloth" "cheesecloths";
lin cheeseparing_A = compoundA (mkA "cheeseparing");
lin cheetah_N = mkN "cheetah" "cheetahs";
lin chef_N = mkN "chef" "chefs";
lin chef_d'oeuvre_N = mkN "chef - d'oeuvre" "chefs - d'oeuvre";
lin chelmsford_PN = mkPN "Chelmsford";
lin chelsea_PN = mkPN "Chelsea";
lin cheltenham_PN = mkPN "Cheltenham";
lin chelyabinsk_PN = mkPN "Chelyabinsk";
lin chemical_A = compoundA (mkA "chemical");
lin chemical_N = mkN "chemical" "chemicals";
lin chemise_N = mkN "chemise" "chemises";
lin chemist_N = mkN "chemist" "chemists";
lin chemistry_N = mkN "chemistry" ;
lin chemotherapy_N = mkN "chemotherapy" ;
lin chengchow_PN = mkPN "Chengchow";
lin chengtu_PN = mkPN "Chengtu";
lin chenille_N = mkN "chenille" ;
lin chepstow_PN = mkPN "Chepstow";
lin cheque_N = mkN "cheque" "cheques";
lin chequebook_N = mkN "chequebook" "chequebooks";
lin chequer_V2 = mkV2 (mkV "chequer" "chequers" "chequered" "chequered" "chequering");
lin cherish_V2 = mkV2 (mkV "cherish" "cherishes" "cherished" "cherished" "cherishing");
lin cheroot_N = mkN "cheroot" "cheroots";
lin cherry_A = compoundA (mkA "cherry");
lin cherry_N = mkN "cherry" "cherries";
lin cherub_N = mkN "cherub" "cherubs";
lin cherubic_A = compoundA (mkA "cherubic");
lin chervil_N = mkN "chervil" ;
lin chesham_PN = mkPN "Chesham";
lin cheshire_PN = mkPN "Cheshire";
lin chess_N = mkN "chess" ;
lin chessboard_N = mkN "chessboard" "chessboards";
lin chessman_N = mkN "chessman" "chessmen" {- FIXME: guessed plural form -};
lin chest_N = mkN "chest" "chests";
lin chester_PN = mkPN "Chester";
lin chester_le_street_PN = mkPN "Chester - le - street";
lin chesterfield_N = mkN "chesterfield" "chesterfields";
lin chesterfield_PN = mkPN "Chesterfield";
lin chestnut_N = mkN "chestnut" "chestnuts";
lin cheval_glass_N = mkN "cheval glass" "cheval glasses";
lin chevron_N = mkN "chevron" "chevrons";
lin chew_N = mkN "chew" "chews";
lin chew_V = mkV "chew" "chews" "chewed" "chewed" "chewing";
lin chew_V2 = mkV2 (mkV "chew" "chews" "chewed" "chewed" "chewing");
lin chewing_gum_N = mkN "chewing - gum" ;
lin chianti_N = mkN "chianti" ;
lin chiaroscuro_N = mkN "chiaroscuro" ;
lin chic_A = compoundA (mkA "chic");
lin chic_N = mkN "chic" ;
lin chicago_PN = mkPN "Chicago";
lin chicanery_N = mkN "chicanery" "chicaneries";
lin chichester_PN = mkPN "Chichester";
lin chichi_A = compoundA (mkA "chichi");
lin chick_N = mkN "chick" "chicks";
lin chicken_N = mkN "chicken" "chickens";
lin chicken_hearted_A = compoundA (mkA "chicken - hearted");
lin chicken_run_N = mkN "chicken - run" "chicken - runs";
lin chickenfeed_N = mkN "chickenfeed" ;
lin chickenpox_N = mkN "chickenpox" ;
lin chickpea_N = mkN "chickpea" "chickpeas";
lin chickweed_N = mkN "chickweed" ;
lin chicle_N = mkN "chicle" ;
lin chicory_N = mkN "chicory" ;
lin chide_V = mkV "chide" "chides" "chided" "chided" "chiding";
lin chide_V2 = mkV2 (mkV "chide" "chides" "chided" "chided" "chiding");
lin chief_A = compoundA (mkA "chief");
lin chief_N = mkN "chief" "chiefs";
lin chieftain_N = mkN "chieftain" "chieftains";
lin chieftaincy_N = mkN "chieftaincy" "chieftaincies";
lin chiffon_N = mkN "chiffon" ;
lin chiffonier_N = mkN "chiffonier" "chiffoniers";
lin chignon_N = mkN "chignon" "chignons";
lin chilblain_N = mkN "chilblain" "chilblains";
lin chilblained_A = compoundA (mkA "chilblained");
lin child's_play_N = mkN "child's - play" ;
lin child_N = mkN "child" "children" {- FIXME: guessed plural form -};
lin child_bearing_N = mkN "child - bearing" ;
lin childbirth_N = mkN "childbirth" ;
lin childhood_N = mkN "childhood" ;
lin childish_A = compoundA (mkA "childish");
lin childless_A = compoundA (mkA "childless");
lin childlike_A = compoundA (mkA "childlike");
lin chile_PN = mkPN "Chile";
lin chilean_A = compoundA (mkA "chilean");
lin chilean_N = mkN "chilean" "chileans";
lin chill_A = compoundA (mkA "chill");
lin chill_N = mkN "chill" "chills";
lin chill_V = mkV "chill" "chills" "chilled" "chilled" "chilling";
lin chill_V2 = mkV2 (mkV "chill" "chills" "chilled" "chilled" "chilling");
lin chilli_N = mkN "chilli" "chillies";
lin chilly_A = mkA "chilly" "chillier";
lin chilly_N = mkN "chilly" "chillies";
lin chimaera_N = mkN "chimaera" "chimaeras";
lin chime_N = mkN "chime" "chimes";
lin chime_V = mkV "chime" "chimes" "chimed" "chimed" "chiming";
lin chime_V2 = mkV2 (mkV "chime" "chimes" "chimed" "chimed" "chiming");
lin chimera_N = mkN "chimera" "chimeras";
lin chimerical_A = compoundA (mkA "chimerical");
lin chimney_N = mkN "chimney" "chimneys";
lin chimney_sweep_N = mkN "chimney - sweep" "chimney - sweeps";
lin chimneybreast_N = mkN "chimneybreast" "chimneybreasts";
lin chimneypiece_N = mkN "chimneypiece" "chimneypieces";
lin chimneypot_N = mkN "chimneypot" "chimneypots";
lin chimneystack_N = mkN "chimneystack" "chimneystacks";
lin chimneysweep_N = mkN "chimneysweep" "chimneysweeps";
lin chimneysweeper_N = mkN "chimneysweeper" "chimneysweepers";
lin chimp_N = mkN "chimp" "chimps";
lin chimpanzee_N = mkN "chimpanzee" "chimpanzees";
lin chin_N = mkN "chin" "chins";
lin chin_strap_N = mkN "chin - strap" "chin - straps";
lin chin_wagging_N = mkN "chin - wagging" ;
lin china_N = mkN "china" ;
lin china_PN = mkPN "China";
lin china_closet_N = mkN "china - closet" "china - closets";
lin chinaware_N = mkN "chinaware" ;
lin chinchilla_N = mkN "chinchilla" "chinchillas";
lin chinchow_PN = mkPN "Chinchow";
lin chine_N = mkN "chine" "chines";
lin chinese_A = compoundA (mkA "Chinese");
lin chinese_N = mkN "Chinese" "Chinese";
lin chink_N = mkN "chink" "chinks";
lin chink_V = mkV "chink" "chinks" "chinked" "chinked" "chinking";
lin chink_V2 = mkV2 (mkV "chink" "chinks" "chinked" "chinked" "chinking");
lin chintz_N = mkN "chintz" ;
lin chip_N = mkN "chip" "chips";
lin chip_V = mkV "chip" "chips" "chipped" "chipped" "chipping";
lin chip_V2 = mkV2 (mkV "chip" "chips" "chipped" "chipped" "chipping");
lin chipboard_N = mkN "chipboard" ;
lin chipmunk_N = mkN "chipmunk" "chipmunks";
lin chippendale_N = mkN "chippendale" "chippendales";
lin chippenham_PN = mkPN "Chippenham";
lin chiropodist_N = mkN "chiropodist" "chiropodists";
lin chiropody_N = mkN "chiropody" ;
lin chiropractor_N = mkN "chiropractor" "chiropractors";
lin chirp_N = mkN "chirp" "chirps";
lin chirp_V = mkV "chirp" "chirps" "chirped" "chirped" "chirping";
lin chirp_V2 = mkV2 (mkV "chirp" "chirps" "chirped" "chirped" "chirping");
lin chirpiness_N = mkN "chirpiness" ;
lin chirpy_A = compoundA (mkA "chirpy");
lin chirrup_N = mkN "chirrup" "chirrups";
lin chirrup_V = mkV "chirrup" "chirrups" "chirruped" "chirruped" "chirruping";
lin chirrup_V2 = mkV2 (mkV "chirrup" "chirrups" "chirruped" "chirruped" "chirruping");
lin chisel_N = mkN "chisel" "chisels";
lin chisel_V2 = mkV2 (mkV "chisel" "chisels" "chiselled" "chiselled" "chiselling");
lin chiseller_N = mkN "chiseller" "chisellers";
lin chit_N = mkN "chit" "chits";
lin chit_chat_N = mkN "chit - chat" ;
lin chivalrous_A = compoundA (mkA "chivalrous");
lin chivalry_N = mkN "chivalry" ;
lin chive_N = mkN "chive" "chives";
lin chivvy_V2 = mkV2 (mkV "chivvy" "chivvies" "chivvied" "chivvied" "chivvying");
lin chivy_V2 = mkV2 (mkV "chivy" "chivies" "chivied" "chivied" "chivying");
lin chloe_PN = mkPN "Chloe";
lin chloride_N = mkN "chloride" ;
lin chlorinate_V2 = mkV2 (mkV "chlorinate" "chlorinates" "chlorinated" "chlorinated" "chlorinating");
lin chlorination_N = mkN "chlorination" ;
lin chlorine_N = mkN "chlorine" ;
lin chloroform_N = mkN "chloroform" ;
lin chlorophyll_N = mkN "chlorophyll" ;
lin choc_N = mkN "choc" "chocs";
lin choc_ice_N = mkN "choc - ice" "choc - ices";
lin chock_N = mkN "chock" "chocks";
lin chock_V2 = mkV2 (mkV "chock" "chocks" "chocked" "chocked" "chocking");
lin chock_a_block_A = compoundA (mkA "chock - a - block");
lin chock_a_block_Adv = mkAdv "chock - a - block";
lin chock_full_A = compoundA (mkA "chock - full");
lin chocolate_N = mkN "chocolate" "chocolates";
lin choice_A = compoundA (mkA "choice");
lin choice_N = mkN "choice" "choices";
lin choir_N = mkN "choir" "choirs";
lin choir_school_N = mkN "choir - school" "choir - schools";
lin choirboy_N = mkN "choirboy" "choirboys";
lin choke_N = mkN "choke" "chokes";
lin choke_V = mkV "choke" "chokes" "choked" "choked" "choking";
lin choke_V2 = mkV2 (mkV "choke" "chokes" "choked" "choked" "choking");
lin choke_damp_N = mkN "choke - damp" ;
lin choker_N = mkN "choker" "chokers";
lin chokey_N = mkN "chokey" "chokeys";
lin choky_N = mkN "choky" "chokies";
lin choler_N = mkN "choler" "cholers";
lin cholera_N = mkN "cholera" ;
lin choleric_A = compoundA (mkA "choleric");
lin choose_V = IrregEng.choose_V;
lin choose_V2 = mkV2 (IrregEng.choose_V);
lin choose_V2V = mkV2V (IrregEng.choose_V) noPrep to_Prep ;
lin choose_VS = mkVS (IrregEng.choose_V);
lin choose_VV = mkVV (IrregEng.choose_V) ;
lin choosey_A = compoundA (mkA "choosey");
lin choosy_A = mkA "choosy" "choosier";
lin chop_N = mkN "chop" "chops";
lin chop_V = mkV "chop" "chops" "chopped" "chopped" "chopping";
lin chop_V2 = mkV2 (mkV "chop" "chops" "chopped" "chopped" "chopping");
lin chop_chop_Adv = mkAdv "chop - chop";
lin chop_house_N = mkN "chop - house" "chop - houses";
lin chop_suey_N = mkN "chop suey" ;
lin chopper_N = mkN "chopper" "choppers";
lin choppy_A = mkA "choppy" "choppier";
lin chopwell_PN = mkPN "Chopwell";
lin choral_A = compoundA (mkA "choral");
lin chorale_N = mkN "chorale" "chorales";
lin chord_N = mkN "chord" "chords";
lin chore_N = mkN "chore" "chores";
lin choreographer_N = mkN "choreographer" "choreographers";
lin choreography_N = mkN "choreography" ;
lin chorister_N = mkN "chorister" "choristers";
lin chorley_PN = mkPN "Chorley";
lin chortle_N = mkN "chortle" "chortles";
lin chortle_V = mkV "chortle" "chortles" "chortled" "chortled" "chortling";
lin chorus_N = mkN "chorus" "choruses";
lin chorus_V2 = mkV2 (mkV "chorus" "choruses" "chorused" "chorused" "chorusing");
lin chorus_girl_N = mkN "chorus - girl" "chorus - girls";
lin chow_N = mkN "chow" "chows";
lin chowder_N = mkN "chowder" "chowders";
lin chris_PN = mkPN "Chris";
lin chrissie_PN = mkPN "Chrissie";
lin chrissy_PN = mkPN "Chrissy";
lin christ_PN = mkPN "Christ";
lin christchurch_PN = mkPN "Christchurch";
lin christen_V2 = mkV2 (mkV "christen" "christens" "christened" "christened" "christening");
lin christendom_N = mkN "christendom" "christendoms";
lin christening_N = mkN "christening" "christenings";
lin christian_A = compoundA (mkA "christian");
lin christian_N = mkN "christian" "christians";
lin christian_PN = mkPN "Christian";
lin christianity_N = mkN "christianity" ;
lin christina_PN = mkPN "Christina";
lin christine_PN = mkPN "Christine";
lin christlike_A = compoundA (mkA "christlike");
lin christmas_N = mkN "christmas" "christmases";
lin christmas_PN = mkPN "Christmas";
lin christmas_box_N = mkN "christmas - box" "christmas - boxes";
lin christmas_tree_N = mkN "christmas - tree" "christmas - trees";
lin christmastide_N = mkN "christmastide" "christmastides";
lin christmastime_N = mkN "christmastime" "christmastimes";
lin christopher_PN = mkPN "Christopher";
lin chromatic_A = compoundA (mkA "chromatic");
lin chrome_N = mkN "chrome" ;
lin chromium_N = mkN "chromium" ;
lin chromosome_N = mkN "chromosome" "chromosomes";
lin chronic_A = compoundA (mkA "chronic");
lin chronically_Adv = mkAdv "chronically";
lin chronicle_N = mkN "chronicle" "chronicles";
lin chronicle_V2 = mkV2 (mkV "chronicle" "chronicles" "chronicled" "chronicled" "chronicling");
lin chronicler_N = mkN "chronicler" "chroniclers";
lin chronological_A = compoundA (mkA "chronological");
lin chronology_N = mkN "chronology" "chronologies";
lin chronometer_N = mkN "chronometer" "chronometers";
lin chrysalis_N = mkN "chrysalis" "chrysalises";
lin chrysanthemum_N = mkN "chrysanthemum" "chrysanthemums";
lin chubby_A = mkA "chubby" "chubbier";
lin chuck_N = mkN "chuck" "chucks";
lin chuck_V2 = mkV2 (mkV "chuck" "chucks" "chucked" "chucked" "chucking");
lin chucker_out_N = mkN "chucker - out" "IRREG";
lin chuckle_N = mkN "chuckle" "chuckles";
lin chuckle_V = mkV "chuckle" "chuckles" "chuckled" "chuckled" "chuckling";
lin chuckle_VS = mkVS (mkV "chuckle" "chuckles" "chuckled" "chuckled" "chuckling");
lin chug_N = mkN "chug" "chugs";
lin chug_V = mkV "chug" "chugs" "chugged" "chugged" "chugging";
lin chukker_N = mkN "chukker" "chukkers";
lin chum_N = mkN "chum" "chums";
lin chum_V = mkV "chum" "chums" "chummed" "chummed" "chumming";
lin chummy_A = mkA "chummy" "chummier";
lin chump_N = mkN "chump" "chumps";
lin chungking_PN = mkPN "Chungking";
lin chunk_N = mkN "chunk" "chunks";
lin chunky_A = mkA "chunky" "chunkier";
lin church_N = mkN "church" "churches";
lin churchgoer_N = mkN "churchgoer" "churchgoers";
lin churchman_N = mkN "churchman" "churchmen" {- FIXME: guessed plural form -};
lin churchwarden_N = mkN "churchwarden" "churchwardens";
lin churchyard_N = mkN "churchyard" "churchyards";
lin churl_N = mkN "churl" "churls";
lin churlish_A = compoundA (mkA "churlish");
lin churn_N = mkN "churn" "churns";
lin churn_V = mkV "churn" "churns" "churned" "churned" "churning";
lin churn_V2 = mkV2 (mkV "churn" "churns" "churned" "churned" "churning");
lin chute_N = mkN "chute" "chutes";
lin chutney_N = mkN "chutney" "chutneys";
lin cia_N = mkN "cia" ;
lin cicada_N = mkN "cicada" "cicadas";
lin cicala_N = mkN "cicala" "cicalas";
lin cicatrice_N = mkN "cicatrice" "cicatrices";
lin cicatrix_N = mkN "cicatrix" "cicatrices" {- FIXME: guessed plural form -};
lin cicerone_N = mkN "cicerone" "ciceroni";
lin cid_N = mkN "cid" ;
lin cider_N = mkN "cider" "ciders";
lin ciderpress_N = mkN "ciderpress" "ciderpresses";
lin cif_PN = mkPN "Cif";
lin cigar_N = mkN "cigar" "cigars";
lin cigar_shaped_A = compoundA (mkA "cigar - shaped");
lin cigarette_N = mkN "cigarette" "cigarettes";
lin cigarette_case_N = mkN "cigarette - case" "cigarette - cases";
lin cigarette_holder_N = mkN "cigarette - holder" "cigarette - holders";
lin cigarette_paper_N = mkN "cigarette - paper" "cigarette - papers";
lin cinch_N = mkN "cinch" "cinches";
lin cinch_V2 = mkV2 (mkV "cinch");
lin cinchona_N = mkN "cinchona" "cinchonas";
lin cincinnati_PN = mkPN "Cincinnati";
lin cincture_N = mkN "cincture" "cinctures";
lin cinder_N = mkN "cinder" "cinders";
lin cinder_track_N = mkN "cinder - track" "cinder - tracks";
lin cinderella_N = mkN "cinderella" "cinderellas";
lin cinderford_PN = mkPN "Cinderford";
lin cine_camera_N = mkN "cine - camera" "cine - cameras";
lin cine_film_N = mkN "cine - film" "cine - films";
lin cine_projector_N = mkN "cine - projector" "cine - projectors";
lin cinema_N = mkN "cinema" "cinemas";
lin cinematic_A = compoundA (mkA "cinematic");
lin cinematography_N = mkN "cinematography" ;
lin cinnamon_N = mkN "cinnamon" ;
lin cinquefoil_N = mkN "cinquefoil" "cinquefoils";
lin cipher_N = mkN "cipher" "ciphers";
lin cipher_V = mkV "cipher" "ciphers" "ciphered" "ciphered" "ciphering";
lin cipher_V2 = mkV2 (mkV "cipher" "ciphers" "ciphered" "ciphered" "ciphering");
lin circa_Prep = mkPrep "circa";
lin circle_N = mkN "circle" "circles";
lin circle_V = mkV "circle" "circles" "circled" "circled" "circling";
lin circle_V2 = mkV2 (mkV "circle" "circles" "circled" "circled" "circling");
lin circlet_N = mkN "circlet" "circlets";
lin circuit_N = mkN "circuit" "circuits";
lin circuitous_A = compoundA (mkA "circuitous");
lin circular_A = compoundA (mkA "circular");
lin circular_N = mkN "circular" "circulars";
lin circularity_N = mkN "circularity" ;
lin circularize_V2 = mkV2 (mkV "circularize" "circularizes" "circularized" "circularized" "circularizing");
lin circulate_V = mkV "circulate" "circulates" "circulated" "circulated" "circulating";
lin circulate_V2 = mkV2 (mkV "circulate" "circulates" "circulated" "circulated" "circulating");
lin circulation_N = mkN "circulation" "circulations";
lin circumcise_V2 = mkV2 (mkV "circumcise" "circumcises" "circumcised" "circumcised" "circumcising");
lin circumcision_N = mkN "circumcision" "circumcisions";
lin circumference_N = mkN "circumference" "circumferences";
lin circumflex_N = mkN "circumflex" "circumflexes";
lin circumlocution_N = mkN "circumlocution" "circumlocutions";
lin circumnavigate_V2 = mkV2 (mkV "circumnavigate" "circumnavigates" "circumnavigated" "circumnavigated" "circumnavigating");
lin circumnavigation_N = mkN "circumnavigation" "circumnavigations";
lin circumscribe_V2 = mkV2 (mkV "circumscribe" "circumscribes" "circumscribed" "circumscribed" "circumscribing");
lin circumscription_N = mkN "circumscription" "circumscriptions";
lin circumspect_A = compoundA (mkA "circumspect");
lin circumspection_N = mkN "circumspection" ;
lin circumstance_N = mkN "circumstance" "circumstances";
lin circumstantial_A = compoundA (mkA "circumstantial");
lin circumvent_V2 = mkV2 (mkV "circumvent" "circumvents" "circumvented" "circumvented" "circumventing");
lin circumvention_N = mkN "circumvention" "circumventions";
lin circus_N = mkN "circus" "circuses";
lin cirencester_PN = mkPN "Cirencester";
lin cirrhosis_N = mkN "cirrhosis" ;
lin cirrus_N = mkN "cirrus" ;
lin cissy_A = compoundA (mkA "cissy");
lin cissy_N = mkN "cissy" "cissies";
lin cistern_N = mkN "cistern" "cisterns";
lin citadel_N = mkN "citadel" "citadels";
lin citation_N = mkN "citation" "citations";
lin cite_V2 = mkV2 (mkV "cite" "cites" "cited" "cited" "citing");
lin citizen_N = mkN "citizen" "citizens";
lin citizenship_N = mkN "citizenship" "citizenships";
lin citric_A = compoundA (mkA "citric");
lin citron_N = mkN "citron" "citrons";
lin citrous_A = compoundA (mkA "citrous");
lin citrus_N = mkN "citrus" "citruses";
lin city_N = mkN "city" "cities";
lin civet_N = mkN "civet" "civets";
lin civet_cat_N = mkN "civet - cat" "civet - cats";
lin civic_A = compoundA (mkA "civic");
lin civics_N = mkN "civics" "civics";
lin civil_A = compoundA (mkA "civil");
lin civilian_A = compoundA (mkA "civilian");
lin civilian_N = mkN "civilian" "civilians";
lin civility_N = mkN "civility" "civilities";
lin civilization_N = mkN "civilization" "civilizations";
lin civilize_V2 = mkV2 (mkV "civilize" "civilizes" "civilized" "civilized" "civilizing");
lin civvy_street_PN = mkPN "Civvy street";
lin clack_N = mkN "clack" "clacks";
lin clack_V = mkV "clack" "clacks" "clacked" "clacked" "clacking";
lin clackmannon_PN = mkPN "Clackmannon";
lin clacton_PN = mkPN "Clacton";
lin clad_V = mkV "clad" "clads" "clad" "clad" "cladding";
lin clad_V2 = mkV2 (mkV "clad" "clads" "clad" "clad" "cladding");
lin claim_N = mkN "claim" "claims";
lin claim_V = mkV "claim" "claims" "claimed" "claimed" "claiming";
lin claim_V2 = mkV2 (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claim_VV = mkVV (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claim_VS = mkVS (mkV "claim" "claims" "claimed" "claimed" "claiming");
lin claimant_N = mkN "claimant" "claimants";
lin clairvoyance_N = mkN "clairvoyance" ;
lin clairvoyant_N = mkN "clairvoyant" "clairvoyants";
lin clam_N = mkN "clam" "clams";
lin clam_V = mkV "clam" "clams" "clammed" "clammed" "clamming";
lin clambake_N = mkN "clambake" "clambakes";
lin clamber_N = mkN "clamber" "clambers";
lin clamber_V = mkV "clamber" "clambers" "clambered" "clambered" "clambering";
lin clammily_Adv = mkAdv "clammily";
lin clammy_A = mkA "clammy" "clammier";
lin clamorous_A = compoundA (mkA "clamorous");
lin clamour_N = mkN "clamour" "clamours";
lin clamour_V = mkV "clamour" "clamours" "clamoured" "clamoured" "clamouring";
lin clamour_V2 = mkV2 (mkV "clamour" "clamours" "clamoured" "clamoured" "clamouring");
lin clamp_N = mkN "clamp" "clamps";
lin clamp_V = mkV "clamp" "clamps" "clamped" "clamped" "clamping";
lin clamp_V2 = mkV2 (mkV "clamp" "clamps" "clamped" "clamped" "clamping");
lin clamp_down_N = mkN "clamp - down" "clamp - downs";
lin clan_N = mkN "clan" "clans";
lin clandestine_A = compoundA (mkA "clandestine");
lin clang_N = mkN "clang" "clangs";
lin clang_V = mkV "clang" "clangs" "clanged" "clanged" "clanging";
lin clang_V2 = mkV2 (mkV "clang" "clangs" "clanged" "clanged" "clanging");
lin clanger_N = mkN "clanger" "clangers";
lin clangorous_A = compoundA (mkA "clangorous");
lin clangour_N = mkN "clangour" ;
lin clank_N = mkN "clank" "clanks";
lin clank_V = mkV "clank" "clanks" "clanked" "clanked" "clanking";
lin clank_V2 = mkV2 (mkV "clank" "clanks" "clanked" "clanked" "clanking");
lin clannish_A = compoundA (mkA "clannish");
lin clansman_N = mkN "clansman" "clansmen" {- FIXME: guessed plural form -};
lin clap_N = mkN "clap" "claps";
lin clap_V = mkV "clap" "claps" "clapped" "clapped" "clapping";
lin clap_V2 = mkV2 (mkV "clap" "claps" "clapped" "clapped" "clapping");
lin clapboard_N = mkN "clapboard" "clapboards";
lin clapper_N = mkN "clapper" "clappers";
lin clapperboard_N = mkN "clapperboard" "clapperboards";
lin claptrap_N = mkN "claptrap" ;
lin claque_N = mkN "claque" "claques";
lin clare_PN = mkPN "Clare";
lin claret_N = mkN "claret" "clarets";
lin clarification_N = mkN "clarification" ;
lin clarify_V = mkV "clarify" "clarifies" "clarified" "clarified" "clarifying";
lin clarify_V2 = mkV2 (mkV "clarify" "clarifies" "clarified" "clarified" "clarifying");
lin clarinet_N = mkN "clarinet" "clarinets";
lin clarinetist_N = mkN "clarinetist" "clarinetists";
lin clarinettist_N = mkN "clarinettist" "clarinettists";
lin clarion_N = mkN "clarion" "clarions";
lin clarity_N = mkN "clarity" ;
lin clarkston_PN = mkPN "Clarkston";
lin clarrie_PN = mkPN "Clarrie";
lin clash_N = mkN "clash" "clashes";
lin clash_V = mkV "clash" "clashes" "clashed" "clashed" "clashing";
lin clash_V2 = mkV2 (mkV "clash" "clashes" "clashed" "clashed" "clashing");
lin clasp_N = mkN "clasp" "clasps";
lin clasp_V = mkV "clasp" "clasps" "clasped" "clasped" "clasping";
lin clasp_V2 = mkV2 (mkV "clasp" "clasps" "clasped" "clasped" "clasping");
lin clasp_knife_N = mkN "clasp - knife" "clasp - knives";
lin class_N = mkN "class" "classes";
lin class_V2 = mkV2 (mkV "class" "classes" "classed" "classed" "classing");
lin class_conscious_A = compoundA (mkA "class - conscious");
lin class_feeling_N = mkN "class - feeling" ;
lin class_fellow_N = mkN "class - fellow" "class - fellows";
lin class_list_N = mkN "class - list" "class - lists";
lin class_warfare_N = mkN "class - warfare" ;
lin classic_A = compoundA (mkA "classic");
lin classic_N = mkN "classic" "classics";
lin classical_A = compoundA (mkA "classical");
lin classicism_N = mkN "classicism" ;
lin classicist_N = mkN "classicist" "classicists";
lin classics_N = mkN "classics" "classics";
lin classifiable_A = compoundA (mkA "classifiable");
lin classification_N = mkN "classification" "classifications";
lin classified_A = compoundA (mkA "classified");
lin classify_V2 = mkV2 (mkV "classify" "classifies" "classified" "classified" "classifying");
lin classless_A = compoundA (mkA "classless");
lin classmate_N = mkN "classmate" "classmates";
lin classroom_N = mkN "classroom" "classrooms";
lin classy_A = mkA "classy" "classier";
lin clatter_N = mkN "clatter" "clatters";
lin clatter_V = mkV "clatter" "clatters" "clattered" "clattered" "clattering";
lin clatter_V2 = mkV2 (mkV "clatter" "clatters" "clattered" "clattered" "clattering");
lin claud_PN = mkPN "Claud";
lin claude_PN = mkPN "Claude";
lin clause_N = mkN "clause" "clauses";
lin claustrophobia_N = mkN "claustrophobia" ;
lin claustrophobic_A = compoundA (mkA "claustrophobic");
lin clavichord_N = mkN "clavichord" "clavichords";
lin clavicle_N = mkN "clavicle" "clavicles";
lin claw_N = mkN "claw" "claws";
lin claw_V2 = mkV2 (mkV "claw" "claws" "clawed" "clawed" "clawing");
lin clawback_N = mkN "clawback" ;
lin clawhammer_N = mkN "clawhammer" "clawhammers";
lin clay_N = mkN "clay" ;
lin clay_cross_PN = mkPN "Clay cross";
lin clayey_A = compoundA (mkA "clayey");
lin clean_A = mkA "clean" "cleaner";
lin clean_Adv = mkAdv "clean";
lin clean_N = mkN "clean" "cleans";
lin clean_V = mkV "clean" "cleans" "cleaned" "cleaned" "cleaning";
lin clean_V2 = mkV2 (mkV "clean" "cleans" "cleaned" "cleaned" "cleaning");
lin clean_bowled_A = compoundA (mkA "clean - bowled");
lin clean_cut_A = compoundA (mkA "clean - cut");
lin clean_limbed_A = compoundA (mkA "clean - limbed");
lin clean_living_A = compoundA (mkA "clean - living");
lin clean_shaven_A = compoundA (mkA "clean - shaven");
lin clean_up_N = mkN "clean - up" "clean - ups";
lin cleaner_N = mkN "cleaner" "cleaners";
lin cleanliness_N = mkN "cleanliness" ;
lin cleanly_A = mkA "cleanly" "cleanlier";
lin cleanse_V2 = mkV2 (mkV "cleanse" "cleanses" "cleansed" "cleansed" "cleansing");
lin cleanser_N = mkN "cleanser" "cleansers";
lin clear_A = mkA "clear" "clearer";
lin clear_Adv = mkAdv "clear";
lin clear_N = mkN "clear" "clears";
lin clear_V = mkV "clear" "clears" "cleared" "cleared" "clearing";
lin clear_V2 = mkV2 (mkV "clear" "clears" "cleared" "cleared" "clearing");
lin clear_V2V = mkV2V (mkV "clear" "clears" "cleared" "cleared" "clearing") noPrep to_Prep ;
lin clear_cut_Adv = mkAdv "clear - cut";
lin clear_headed_A = compoundA (mkA "clear - headed");
lin clear_sighted_A = compoundA (mkA "clear - sighted");
lin clearance_N = mkN "clearance" "clearances";
lin clearing_N = mkN "clearing" "clearings";
lin clearing_house_N = mkN "clearing - house" "clearing - houses";
lin clearness_N = mkN "clearness" ;
lin clearway_N = mkN "clearway" "clearways";
lin cleat_N = mkN "cleat" "cleats";
lin cleator_moor_PN = mkPN "Cleator moor";
lin cleavage_N = mkN "cleavage" "cleavages";
lin cleave_V = mkV "cleave" "cleaves" "cleaved" "cleaved" "cleaving";
lin cleave_V2 = mkV2 (mkV "cleave" "cleaves" "cleaved" "cleaved" "cleaving");
lin cleaver_N = mkN "cleaver" "cleavers";
lin cleethorpes_PN = mkPN "Cleethorpes";
lin clef_N = mkN "clef" "clefs";
lin cleft_N = mkN "cleft" "clefts";
lin clem_PN = mkPN "Clem";
lin clematis_N = mkN "clematis" ;
lin clemency_N = mkN "clemency" ;
lin clement_A = compoundA (mkA "clement");
lin clement_PN = mkPN "Clement";
lin clench_V2 = mkV2 (mkV "clench" "clenches" "clenched" "clenched" "clenching");
lin clerestory_N = mkN "clerestory" "clerestories";
lin clergy_N = mkN "clergy" "clergies";
lin clergyman_N = mkN "clergyman" "clergymen" {- FIXME: guessed plural form -};
lin cleric_N = mkN "cleric" "clerics";
lin clerical_A = compoundA (mkA "clerical");
lin clerihew_N = mkN "clerihew" "clerihews";
lin clerk_N = mkN "clerk" "clerks";
lin clerk_V = mkV "clerk" "clerks" "clerked" "clerked" "clerking";
lin clermont_ferrand_PN = mkPN "Clermont - ferrand";
lin clevedon_PN = mkPN "Clevedon";
lin cleveland_PN = mkPN "Cleveland";
lin clever_A = mkA "clever" "cleverer";
lin cleverness_N = mkN "cleverness" ;
lin clew_N = mkN "clew" "clews";
lin clew_V2 = mkV2 (mkV "clew" "clews" "clewed" "clewed" "clewing");
lin cliche_N = mkN "cliché" "clichés";
lin click_N = mkN "click" "clicks";
lin click_V = mkV "click" "clicks" "clicked" "clicked" "clicking";
lin client_N = mkN "client" "clients";
lin clientele_N = mkN "clientele" "clienteles";
lin cliff_N = mkN "cliff" "cliffs";
lin cliff_PN = mkPN "Cliff";
lin cliff_hanger_N = mkN "cliff - hanger" "cliff - hangers";
lin clifford_PN = mkPN "Clifford";
lin climacteric_N = mkN "climacteric" "climacterics";
lin climactic_A = compoundA (mkA "climactic");
lin climate_N = mkN "climate" "climates";
lin climatic_A = compoundA (mkA "climatic");
lin climatically_Adv = mkAdv "climatically";
lin climatology_N = mkN "climatology" ;
lin climax_N = mkN "climax" "climaxes";
lin climax_V = mkV "climax" "climaxes" "climaxed" "climaxed" "climaxing";
lin climax_V2 = mkV2 (mkV "climax" "climaxes" "climaxed" "climaxed" "climaxing");
lin climb_N = mkN "climb" "climbs";
lin climb_V = mkV "climb" "climbs" "climbed" "climbed" "climbing";
lin climb_V2 = mkV2 (mkV "climb" "climbs" "climbed" "climbed" "climbing");
lin climb_down_N = mkN "climb - down" "climb - downs";
lin climber_N = mkN "climber" "climbers";
lin clime_N = mkN "clime" "climes";
lin clinch_N = mkN "clinch" "clinches";
lin clinch_V = mkV "clinch" "clinches" "clinched" "clinched" "clinching";
lin clinch_V2 = mkV2 (mkV "clinch" "clinches" "clinched" "clinched" "clinching");
lin clincher_N = mkN "clincher" "clinchers";
lin cling_V = IrregEng.cling_V;
lin clinic_N = mkN "clinic" "clinics";
lin clinical_A = compoundA (mkA "clinical");
lin clink_N = mkN "clink" "clinks";
lin clink_V = mkV "clink" "clinks" "clinked" "clinked" "clinking";
lin clink_V2 = mkV2 (mkV "clink" "clinks" "clinked" "clinked" "clinking");
lin clinker_N = mkN "clinker" "clinkers";
lin clinker_built_A = compoundA (mkA "clinker - built");
lin clip_N = mkN "clip" "clips";
lin clip_V2 = mkV2 (mkV "clip" "clips" "clipped" "clipped" "clipping");
lin clip_joint_N = mkN "clip - joint" "clip - joints";
lin clip_on_A = compoundA (mkA "clip - on");
lin clipper_N = mkN "clipper" "clippers";
lin clipping_N = mkN "clipping" "clippings";
lin clique_N = mkN "clique" "cliques";
lin cliquish_A = compoundA (mkA "cliquish");
lin clitheroe_PN = mkPN "Clitheroe";
lin clitoris_N = mkN "clitoris" "clitorises";
lin clive_PN = mkPN "Clive";
lin cloak_N = mkN "cloak" "cloaks";
lin cloak_V2 = mkV2 (mkV "cloak" "cloaks" "cloaked" "cloaked" "cloaking");
lin cloakroom_N = mkN "cloakroom" "cloakrooms";
lin clobber_N = mkN "clobber" "clobbers";
lin clobber_V2 = mkV2 (mkV "clobber" "clobbers" "clobbered" "clobbered" "clobbering");
lin cloche_N = mkN "cloche" "cloches";
lin clock_N = mkN "clock" "clocks";
lin clock_V = mkV "clock" "clocks" "clocked" "clocked" "clocking";
lin clock_V2 = mkV2 (mkV "clock" "clocks" "clocked" "clocked" "clocking");
lin clock_dial_N = mkN "clock - dial" "clock - dials";
lin clock_face_N = mkN "clock - face" "clock - faces";
lin clock_golf_N = mkN "clock - golf" ;
lin clock_tower_N = mkN "clock - tower" "clock - towers";
lin clock_watching_N = mkN "clock - watching" ;
lin clockwise_Adv = mkAdv "clockwise";
lin clockwork_N = mkN "clockwork" "clockworks";
lin clod_N = mkN "clod" "clods";
lin clodhopper_N = mkN "clodhopper" "clodhoppers";
lin clog_N = mkN "clog" "clogs";
lin clog_V = mkV "clog" "clogs" "clogged" "clogged" "clogging";
lin clog_V2 = mkV2 (mkV "clog" "clogs" "clogged" "clogged" "clogging");
lin clog_dance_N = mkN "clog - dance" "clog - dances";
lin cloggy_A = mkA "cloggy" "cloggier";
lin cloisonne_N = mkN "cloisonné" ;
lin cloister_N = mkN "cloister" "cloisters";
lin cloister_V2 = mkV2 (mkV "cloister" "cloisters" "cloistered" "cloistered" "cloistering");
lin clone_N = mkN "clone" "clones";
lin clone_V2 = mkV2 (mkV "clone");
lin close_A = mkA "close" "closer";
lin close_Adv = mkAdv "close";
lin close_N = mkN "close" "closes";
lin close_V = mkV "close" "closes" "closed" "closed" "closing";
lin close_V2 = mkV2 (mkV "close" "closes" "closed" "closed" "closing");
lin close_V2V = mkV2V (mkV "close" "closes" "closed" "closed" "closing") noPrep to_Prep ;
lin close_VA = mkVA (mkV "close" "closes" "closed" "closed" "closing");
lin close_VS = mkVS (mkV "close" "closes" "closed" "closed" "closing");
lin close_cropped_A = compoundA (mkA "close - cropped");
lin close_cut_A = compoundA (mkA "close - cut");
lin close_down_N = mkN "close - down" "close - downs";
lin close_fisted_A = compoundA (mkA "close - fisted");
lin close_fitting_A = compoundA (mkA "close - fitting");
lin close_grained_A = compoundA (mkA "close - grained");
lin close_hauled_A = compoundA (mkA "close - hauled");
lin close_set_A = compoundA (mkA "close - set");
lin close_up_N = mkN "close - up" "close - ups";
lin closeness_N = mkN "closeness" ;
lin closet_A = compoundA (mkA "closet");
lin closet_N = mkN "closet" "closets";
lin closet_V2 = mkV2 (mkV "closet" "closets" "closeted" "closeted" "closeting");
lin closure_N = mkN "closure" "closures";
lin clot_N = mkN "clot" "clots";
lin clot_V = mkV "clot" "clots" "clotted" "clotted" "clotting";
lin clot_V2 = mkV2 (mkV "clot" "clots" "clotted" "clotted" "clotting");
lin cloth_N = mkN "cloth" "cloths";
lin clothe_V2 = mkV2 (mkV "clothe" "clothes" "clothed" "clothed" "clothing");
lin clothes_basket_N = mkN "clothes - basket" "clothes - baskets";
lin clothes_hanger_N = mkN "clothes - hanger" "clothes - hangers";
lin clothes_moth_N = mkN "clothes - moth" "clothes - moths";
lin clothes_peg_N = mkN "clothes - peg" "clothes - pegs";
lin clothes_pin_N = mkN "clothes - pin" "clothes - pins";
lin clotheshorse_N = mkN "clotheshorse" "clotheshorses";
lin clothesline_N = mkN "clothesline" "clotheslines";
lin clothier_N = mkN "clothier" "clothiers";
lin clothing_N = mkN "clothing" ;
lin cloud_N = mkN "cloud" "clouds";
lin cloud_V = mkV "cloud" "clouds" "clouded" "clouded" "clouding";
lin cloud_V2 = mkV2 (mkV "cloud" "clouds" "clouded" "clouded" "clouding");
lin cloud_bank_N = mkN "cloud - bank" "cloud - banks";
lin cloud_capped_A = compoundA (mkA "cloud - capped");
lin cloud_cuckoo_land_N = mkN "cloud - cuckoo - land" "cloud - cuckoo - lands";
lin cloudburst_N = mkN "cloudburst" "cloudbursts";
lin cloudless_A = compoundA (mkA "cloudless");
lin cloudy_A = mkA "cloudy" "cloudier";
lin clout_N = mkN "clout" "clouts";
lin clout_V2 = mkV2 (mkV "clout" "clouts" "clouted" "clouted" "clouting");
lin clove_N = mkN "clove" "cloves";
lin clove_hitch_N = mkN "clove hitch" "clove hitches";
lin clover_N = mkN "clover" ;
lin cloverleaf_N = mkN "cloverleaf" "cloverleaves" {- FIXME: guessed plural form -};
lin clown_N = mkN "clown" "clowns";
lin clown_V = mkV "clown" "clowns" "clowned" "clowned" "clowning";
lin clowne_PN = mkPN "Clowne";
lin clownish_A = compoundA (mkA "clownish");
lin cloy_V = mkV "cloy" "cloys" "cloyed" "cloyed" "cloying";
lin cloy_V2 = mkV2 (mkV "cloy" "cloys" "cloyed" "cloyed" "cloying");
lin club_N = mkN "club" "clubs";
lin club_V = mkV "club" "clubs" "clubbed" "clubbed" "clubbing";
lin club_V2 = mkV2 (mkV "club" "clubs" "clubbed" "clubbed" "clubbing");
lin club_footed_A = compoundA (mkA "club - footed");
lin clubbable_A = compoundA (mkA "clubbable");
lin clubfoot_N = mkN "clubfoot" "clubfeet" {- FIXME: guessed plural form -};
lin clubhouse_N = mkN "clubhouse" "clubhouses";
lin cluck_N = mkN "cluck" "clucks";
lin cluck_V = mkV "cluck" "clucks" "clucked" "clucked" "clucking";
lin clue_N = mkN "clue" "clues";
lin clump_N = mkN "clump" "clumps";
lin clump_V = mkV "clump" "clumps" "clumped" "clumped" "clumping";
lin clump_V2 = mkV2 (mkV "clump" "clumps" "clumped" "clumped" "clumping");
lin clumsily_Adv = mkAdv "clumsily";
lin clumsiness_N = mkN "clumsiness" ;
lin clumsy_A = mkA "clumsy" "clumsier";
lin clunk_N = mkN "clunk" "clunks";
lin clunk_V = mkV "clunk" "clunks" "clunked" "clunked" "clunking";
lin cluster_N = mkN "cluster" "clusters";
lin cluster_V = mkV "cluster" "clusters" "clustered" "clustered" "clustering";
lin cluster_V2 = mkV2 (mkV "cluster" "clusters" "clustered" "clustered" "clustering");
lin clutch_N = mkN "clutch" "clutches";
lin clutch_V = mkV "clutch" "clutches" "clutched" "clutched" "clutching";
lin clutch_V2 = mkV2 (mkV "clutch" "clutches" "clutched" "clutched" "clutching");
lin clutter_N = mkN "clutter" "clutters";
lin clutter_V2 = mkV2 (mkV "clutter" "clutters" "cluttered" "cluttered" "cluttering");
lin clwyd_PN = mkPN "Clwyd";
lin clydach_PN = mkPN "Clydach";
lin clydebank_PN = mkPN "Clydebank";
lin cm_N = mkN "cm" "cm";
lin co_N = mkN "co" ;
lin co_author_V2 = mkV2 (mkV "co - author");
lin co_ed_N = mkN "co - ed" "co - eds";
lin co_edit_V2 = mkV2 (mkV "co - edit");
lin co_exist_V = mkV "co - exist";
lin co_found_V2 = mkV2 (mkV "co - found");
lin co_manage_V2 = mkV2 (mkV "co - manage");
lin co_op_N = mkN "co - op" ;
lin co_opt_V2 = mkV2 (mkV "co - opt" "co - opts" "co - opted" "co - opted" "co - opting");
lin co_respondent_N = mkN "co - respondent" "co - respondents";
lin co_sponsor_V2 = mkV2 (mkV "co - sponsor");
lin co_star_N = mkN "co - star" "co - stars";
lin co_star_V = mkV "co - star" "co - stars" "co - starred" "co - starred" "co - starring";
lin co_star_V2 = mkV2 (mkV "co - star" "co - stars" "co - starred" "co - starred" "co - starring");
lin coach_N = mkN "coach" "coaches";
lin coach_V = mkV "coach" "coaches" "coached" "coached" "coaching";
lin coach_V2 = mkV2 (mkV "coach" "coaches" "coached" "coached" "coaching");
lin coach_builder_N = mkN "coach - builder" "coach - builders";
lin coachman_N = mkN "coachman" "coachmen" {- FIXME: guessed plural form -};
lin coagulate_V = mkV "coagulate" "coagulates" "coagulated" "coagulated" "coagulating";
lin coagulate_V2 = mkV2 (mkV "coagulate" "coagulates" "coagulated" "coagulated" "coagulating");
lin coagulation_N = mkN "coagulation" "coagulations";
lin coal_N = mkN "coal" "coals";
lin coal_V = mkV "coal" "coals" "coaled" "coaled" "coaling";
lin coal_V2 = mkV2 (mkV "coal" "coals" "coaled" "coaled" "coaling");
lin coal_gas_N = mkN "coal - gas" ;
lin coal_hole_N = mkN "coal - hole" "coal - holes";
lin coal_house_N = mkN "coal - house" "coal - houses";
lin coal_scuttle_N = mkN "coal - scuttle" "coal - scuttles";
lin coal_seam_N = mkN "coal - seam" "coal - seams";
lin coal_tar_N = mkN "coal - tar" ;
lin coalesce_V = mkV "coalesce" "coalesces" "coalesced" "coalesced" "coalescing";
lin coalescence_N = mkN "coalescence" "coalescences";
lin coalface_N = mkN "coalface" "coalfaces";
lin coalfield_N = mkN "coalfield" "coalfields";
lin coaling_station_N = mkN "coaling - station" "coaling - stations";
lin coalition_N = mkN "coalition" "coalitions";
lin coalman_N = mkN "coalman" "coalmen" {- FIXME: guessed plural form -};
lin coalmine_N = mkN "coalmine" "coalmines";
lin coalpit_N = mkN "coalpit" "coalpits";
lin coalville_PN = mkPN "Coalville";
lin coaming_N = mkN "coaming" "coamings";
lin coarse_A = mkA "coarse" "coarser";
lin coarsen_V = mkV "coarsen" "coarsens" "coarsened" "coarsened" "coarsening";
lin coarsen_V2 = mkV2 (mkV "coarsen" "coarsens" "coarsened" "coarsened" "coarsening");
lin coarseness_N = mkN "coarseness" ;
lin coast_N = mkN "coast" "coasts";
lin coast_V = mkV "coast" "coasts" "coasted" "coasted" "coasting";
lin coast_V2 = mkV2 (mkV "coast" "coasts" "coasted" "coasted" "coasting");
lin coastal_A = compoundA (mkA "coastal");
lin coaster_N = mkN "coaster" "coasters";
lin coastguard_N = mkN "coastguard" "coastguards";
lin coastline_N = mkN "coastline" "coastlines";
lin coastwise_A = compoundA (mkA "coastwise");
lin coastwise_Adv = mkAdv "coastwise";
lin coat_N = mkN "coat" "coats";
lin coat_V2 = mkV2 (mkV "coat" "coats" "coated" "coated" "coating");
lin coat_hanger_N = mkN "coat - hanger" "coat - hangers";
lin coatbridge_PN = mkPN "Coatbridge";
lin coatee_N = mkN "coatee" "coatees";
lin coating_N = mkN "coating" "coatings";
lin coax_V = mkV "coax" "coaxes" "coaxed" "coaxed" "coaxing";
lin coax_V2 = mkV2 (mkV "coax" "coaxes" "coaxed" "coaxed" "coaxing");
lin coaxing_N = mkN "coaxing" "coaxings";
lin coaxingly_Adv = mkAdv "coaxingly";
lin cob_N = mkN "cob" "cobs";
lin cob_nut_N = mkN "cob - nut" "cob - nuts";
lin cobalt_N = mkN "cobalt" ;
lin cobber_N = mkN "cobber" "cobbers";
lin cobble_N = mkN "cobble" "cobbles";
lin cobble_V2 = mkV2 (mkV "cobble" "cobbles" "cobbled" "cobbled" "cobbling");
lin cobbler_N = mkN "cobbler" "cobblers";
lin cobblestone_N = mkN "cobblestone" "cobblestones";
lin cobham_PN = mkPN "Cobham";
lin cobra_N = mkN "cobra" "cobras";
lin cobweb_N = mkN "cobweb" "cobwebs";
lin coca_cola_N = mkN "coca - cola" "coca - colas";
lin cocaine_N = mkN "cocaine" ;
lin cochineal_N = mkN "cochineal" ;
lin cochlea_N = mkN "cochlea" "cochleas";
lin cock_N = mkN "cock" "cocks";
lin cock_V2 = mkV2 (mkV "cock" "cocks" "cocked" "cocked" "cocking");
lin cock_a_doodle_doo_N = mkN "cock - a - doodle - doo" "cock - a - doodle - doos";
lin cock_a_hoop_A = compoundA (mkA "cock - a - hoop");
lin cock_a_hoop_Adv = mkAdv "cock - a - hoop";
lin cock_crow_N = mkN "cock - crow" "cock - crows";
lin cockade_N = mkN "cockade" "cockades";
lin cockatoo_N = mkN "cockatoo" "cockatoos";
lin cockchafer_N = mkN "cockchafer" "cockchafers";
lin cocker_N = mkN "cocker" "cockers";
lin cockerel_N = mkN "cockerel" "cockerels";
lin cockermouth_PN = mkPN "Cockermouth";
lin cockeyed_A = compoundA (mkA "cockeyed");
lin cockfighting_N = mkN "cockfighting" ;
lin cockhorse_N = mkN "cockhorse" "cockhorses";
lin cockle_N = mkN "cockle" "cockles";
lin cockleshell_N = mkN "cockleshell" "cockleshells";
lin cockney_A = compoundA (mkA "cockney");
lin cockney_N = mkN "cockney" "cockneys";
lin cockpit_N = mkN "cockpit" "cockpits";
lin cockroach_N = mkN "cockroach" "cockroaches";
lin cockscomb_N = mkN "cockscomb" "cockscombs";
lin cocksure_A = compoundA (mkA "cocksure");
lin cocktail_N = mkN "cocktail" "cocktails";
lin cockup_N = mkN "cockup" "cockups";
lin cocky_A = mkA "cocky" "cockier";
lin coco_N = mkN "coco" "cocos";
lin cocoa_N = mkN "cocoa" ;
lin coconut_N = mkN "coconut" "coconuts";
lin cocoon_N = mkN "cocoon" "cocoons";
lin cocoon_V2 = mkV2 (mkV "cocoon" "cocoons" "cocooned" "cocooned" "cocooning");
lin cocotte_N = mkN "cocotte" "cocottes";
lin cod_N = mkN "cod" "cods";
lin cod_PN = mkPN "Cod";
lin cod_V = mkV "cod" "cods" "codded" "codded" "codding";
lin cod_V2 = mkV2 (mkV "cod" "cods" "codded" "codded" "codding");
lin cod_liver_oil_N = mkN "cod - liver oil" ;
lin coda_N = mkN "coda" "codas";
lin coddle_V2 = mkV2 (mkV "coddle" "coddles" "coddled" "coddled" "coddling");
lin code_N = mkN "code" "codes";
lin code_V2 = mkV2 (mkV "code" "codes" "coded" "coded" "coding");
lin codeine_N = mkN "codeine" ;
lin codex_N = mkN "codex" "codices" {- FIXME: guessed plural form -};
lin codfish_N = mkN "codfish" "codfish";
lin codger_N = mkN "codger" "codgers";
lin codicil_N = mkN "codicil" "codicils";
lin codification_N = mkN "codification" "codifications";
lin codify_V2 = mkV2 (mkV "codify" "codifies" "codified" "codified" "codifying");
lin codling_N = mkN "codling" "codlings";
lin codpiece_N = mkN "codpiece" "codpieces";
lin codsall_PN = mkPN "Codsall";
lin coeducation_N = mkN "coeducation" ;
lin coeducational_A = compoundA (mkA "coeducational");
lin coefficient_N = mkN "coefficient" "coefficients";
lin coerce_V2 = mkV2 (mkV "coerce" "coerces" "coerced" "coerced" "coercing");
lin coercion_N = mkN "coercion" ;
lin coercive_A = compoundA (mkA "coercive");
lin coeval_A = compoundA (mkA "coeval");
lin coeval_N = mkN "coeval" "coevals";
lin coexist_V = mkV "coexist" "coexists" "coexisted" "coexisted" "coexisting";
lin coexistence_N = mkN "coexistence" ;
lin coextrude_V2 = mkV2 (mkV "coextrude");
lin coffee_N = mkN "coffee" "coffees";
lin coffee_house_N = mkN "coffee - house" "coffee - houses";
lin coffee_mill_N = mkN "coffee - mill" "coffee - mills";
lin coffee_stall_N = mkN "coffee - stall" "coffee - stalls";
lin coffer_N = mkN "coffer" "coffers";
lin coffer_dam_N = mkN "coffer - dam" "coffer - dams";
lin coffin_N = mkN "coffin" "coffins";
lin cog_N = mkN "cog" "cogs";
lin cogency_N = mkN "cogency" ;
lin cogent_A = compoundA (mkA "cogent");
lin cogitate_V = mkV "cogitate" "cogitates" "cogitated" "cogitated" "cogitating";
lin cogitate_V2 = mkV2 (mkV "cogitate" "cogitates" "cogitated" "cogitated" "cogitating");
lin cogitation_N = mkN "cogitation" ;
lin cognac_N = mkN "cognac" ;
lin cognate_A = compoundA (mkA "cognate");
lin cognate_N = mkN "cognate" "cognates";
lin cognition_N = mkN "cognition" ;
lin cognizance_N = mkN "cognizance" ;
lin cognizant_A = compoundA (mkA "cognizant");
lin cognomen_N = mkN "cognomen" "cognomens";
lin cogwheel_N = mkN "cogwheel" "cogwheels";
lin cohabit_V = mkV "cohabit" "cohabits" "cohabited" "cohabited" "cohabiting";
lin cohabitation_N = mkN "cohabitation" "cohabitations";
lin cohere_V = mkV "cohere" "coheres" "cohered" "cohered" "cohering";
lin coherence_N = mkN "coherence" ;
lin coherency_N = mkN "coherency" ;
lin coherent_A = compoundA (mkA "coherent");
lin cohesion_N = mkN "cohesion" ;
lin cohesive_A = compoundA (mkA "cohesive");
lin cohort_N = mkN "cohort" "cohorts";
lin coif_N = mkN "coif" "coifs";
lin coiffeur_N = mkN "coiffeur" "coiffeurs";
lin coiffure_N = mkN "coiffure" "coiffures";
lin coign_N = mkN "coign" "coigns";
lin coil_N = mkN "coil" "coils";
lin coil_V = mkV "coil" "coils" "coiled" "coiled" "coiling";
lin coil_V2 = mkV2 (mkV "coil" "coils" "coiled" "coiled" "coiling");
lin coimbatore_PN = mkPN "Coimbatore";
lin coin_N = mkN "coin" "coins";
lin coin_V2 = mkV2 (mkV "coin" "coins" "coined" "coined" "coining");
lin coinage_N = mkN "coinage" "coinages";
lin coincide_V = mkV "coincide" "coincides" "coincided" "coincided" "coinciding";
lin coincidence_N = mkN "coincidence" "coincidences";
lin coincident_A = compoundA (mkA "coincident");
lin coincidental_A = compoundA (mkA "coincidental");
lin coiner_N = mkN "coiner" "coiners";
lin coir_N = mkN "coir" ;
lin coition_N = mkN "coition" ;
lin coitus_N = mkN "coitus" ;
lin coke_N = mkN "coke" "cokes";
lin coke_V2 = mkV2 (mkV "coke" "cokes" "coked" "coked" "coking");
lin col_N = mkN "col" "cols";
lin col_PN = mkPN "Col";
lin cola_N = mkN "cola" "colas";
lin colander_N = mkN "colander" "colanders";
lin colchester_PN = mkPN "Colchester";
lin cold_A = mkA "cold" "colder";
lin cold_N = mkN "cold" "colds";
lin cold_blooded_A = compoundA (mkA "cold - blooded");
lin cold_hearted_A = compoundA (mkA "cold - hearted");
lin cold_shoulder_V2 = mkV2 (mkV "cold - shoulder" "cold - shoulders" "cold - shouldered" "cold - shouldered" "cold - shouldering");
lin coldness_N = mkN "coldness" ;
lin coleshill_PN = mkPN "Coleshill";
lin coleslaw_N = mkN "coleslaw" ;
lin colic_N = mkN "colic" ;
lin colin_PN = mkPN "Colin";
lin colitis_N = mkN "colitis" ;
lin coll_PN = mkPN "Coll";
lin collaborate_V = mkV "collaborate" "collaborates" "collaborated" "collaborated" "collaborating";
lin collaboration_N = mkN "collaboration" ;
lin collaborationist_N = mkN "collaborationist" "collaborationists";
lin collaborator_N = mkN "collaborator" "collaborators";
lin collage_N = mkN "collage" "collages";
lin collapsable_A = compoundA (mkA "collapsable");
lin collapse_N = mkN "collapse" "collapses";
lin collapse_V = mkV "collapse" "collapses" "collapsed" "collapsed" "collapsing";
lin collapse_V2 = mkV2 (mkV "collapse" "collapses" "collapsed" "collapsed" "collapsing");
lin collapsible_A = compoundA (mkA "collapsible");
lin collar_N = mkN "collar" "collars";
lin collar_V2 = mkV2 (mkV "collar" "collars" "collared" "collared" "collaring");
lin collarbone_N = mkN "collarbone" "collarbones";
lin collate_V2 = mkV2 (mkV "collate" "collates" "collated" "collated" "collating");
lin collateral_A = compoundA (mkA "collateral");
lin collateral_N = mkN "collateral" ;
lin collation_N = mkN "collation" "collations";
lin colleague_N = mkN "colleague" "colleagues";
lin collect_A = compoundA (mkA "collect");
lin collect_Adv = mkAdv "collect";
lin collect_N = mkN "collect" "collects";
lin collect_V = mkV "collect" "collects" "collected" "collected" "collecting";
lin collect_V2 = mkV2 (mkV "collect" "collects" "collected" "collected" "collecting");
lin collected_A = compoundA (mkA "collected");
lin collection_N = mkN "collection" "collections";
lin collective_A = compoundA (mkA "collective");
lin collectivization_N = mkN "collectivization" "collectivizations";
lin collectivize_V2 = mkV2 (mkV "collectivize" "collectivizes" "collectivized" "collectivized" "collectivizing");
lin collector_N = mkN "collector" "collectors";
lin colleen_N = mkN "colleen" "colleens";
lin college_N = mkN "college" "colleges";
lin collegiate_A = compoundA (mkA "collegiate");
lin collide_V = mkV "collide" "collides" "collided" "collided" "colliding";
lin collie_N = mkN "collie" "collies";
lin collier_N = mkN "collier" "colliers";
lin colliery_N = mkN "colliery" "collieries";
lin collision_N = mkN "collision" "collisions";
lin collocate_V = mkV "collocate" "collocates" "collocated" "collocated" "collocating";
lin collocation_N = mkN "collocation" "collocations";
lin colloquial_A = compoundA (mkA "colloquial");
lin colloquialism_N = mkN "colloquialism" "colloquialisms";
lin colloquy_N = mkN "colloquy" "colloquies";
lin collusion_N = mkN "collusion" ;
lin collusive_A = compoundA (mkA "collusive");
lin colne_PN = mkPN "Colne";
lin cologne_PN = mkPN "Cologne";
lin colombia_PN = mkPN "Colombia";
lin colombian_A = compoundA (mkA "colombian");
lin colombian_N = mkN "colombian" "colombians";
lin colombo_PN = mkPN "Colombo";
lin colon_N = mkN "colon" "colons";
lin colonel_N = mkN "colonel" "colonels";
lin colonial_A = compoundA (mkA "colonial");
lin colonial_N = mkN "colonial" "colonials";
lin colonialism_N = mkN "colonialism" ;
lin colonialist_N = mkN "colonialist" "colonialists";
lin colonist_N = mkN "colonist" "colonists";
lin colonization_N = mkN "colonization" ;
lin colonize_V2 = mkV2 (mkV "colonize" "colonizes" "colonized" "colonized" "colonizing");
lin colonizer_N = mkN "colonizer" "colonizers";
lin colonnade_N = mkN "colonnade" "colonnades";
lin colonnaded_A = compoundA (mkA "colonnaded");
lin colony_N = mkN "colony" "colonies";
lin color_V2 = mkV2 (mkV "color");
lin color_code_V2 = mkV2 (mkV "color - code");
lin colorado_PN = mkPN "Colorado";
lin coloratura_N = mkN "coloratura" ;
lin colossal_A = compoundA (mkA "colossal");
lin colossus_N = mkN "colossus" "colossi" {- FIXME: guessed plural form -};
lin colour_N = mkN "colour" "colours";
lin colour_V = mkV "colour" "colours" "coloured" "coloured" "colouring";
lin colour_V2 = mkV2 (mkV "colour" "colours" "coloured" "coloured" "colouring");
lin colour_bar_N = mkN "colour - bar" "colour - bars";
lin colour_blind_A = compoundA (mkA "colour - blind");
lin colour_wash_N = mkN "colour - wash" "colour - washes";
lin coloured_A = compoundA (mkA "coloured");
lin colourful_A = compoundA (mkA "colourful");
lin colouring_N = mkN "colouring" ;
lin colourless_A = compoundA (mkA "colourless");
lin colt_N = mkN "colt" "colts";
lin coltish_A = compoundA (mkA "coltish");
lin columbia_PN = mkPN "Columbia";
lin columbine_N = mkN "columbine" "columbines";
lin columbus_PN = mkPN "Columbus";
lin column_N = mkN "column" "columns";
lin columnist_N = mkN "columnist" "columnists";
lin colwyn_bay_PN = mkPN "Colwyn bay";
lin coma_N = mkN "coma" "comas";
lin comatose_A = compoundA (mkA "comatose");
lin comb_N = mkN "comb" "combs";
lin comb_V = mkV "comb" "combs" "combed" "combed" "combing";
lin comb_V2 = mkV2 (mkV "comb" "combs" "combed" "combed" "combing");
lin comb_out_N = mkN "comb - out" "comb - outs";
lin combat_N = mkN "combat" "combats";
lin combat_V = mkV "combat" "combats" "combated" "combated" "combating";
lin combat_V2 = mkV2 (mkV "combat" "combats" "combated" "combated" "combating");
lin combatant_A = compoundA (mkA "combatant");
lin combatant_N = mkN "combatant" "combatants";
lin combative_A = compoundA (mkA "combative");
lin combination_N = mkN "combination" "combinations";
lin combination_lock_N = mkN "combination - lock" "combination - locks";
lin combine_N = mkN "combine" "combines";
lin combine_V = mkV "combine" "combines" "combined" "combined" "combining";
lin combine_V2 = mkV2 (mkV "combine" "combines" "combined" "combined" "combining");
lin combine_V2V = mkV2V (mkV "combine" "combines" "combined" "combined" "combining") noPrep to_Prep ;
lin combine_VV = mkVV (mkV "combine" "combines" "combined" "combined" "combining");
lin combustible_A = compoundA (mkA "combustible");
lin combustible_N = mkN "combustible" "combustibles";
lin combustion_N = mkN "combustion" ;
lin come_V = IrregEng.come_V;
lin come_V2 = mkV2 (IrregEng.come_V);
lin come_VV = mkVV (IrregEng.come_V);
lin come_VA = mkVA (IrregEng.come_V);
lin come_VS = mkVS (IrregEng.come_V);
lin come_at_able_A = compoundA (mkA "come - at - able");
lin come_on_N = mkN "come - on" "come - ons";
lin comeback_N = mkN "comeback" "comebacks";
lin comedian_N = mkN "comedian" "comedians";
lin comedienne_N = mkN "comedienne" "comediennes";
lin comedown_N = mkN "comedown" "comedowns";
lin comedy_N = mkN "comedy" "comedies";
lin comeliness_N = mkN "comeliness" ;
lin comely_A = mkA "comely" "comelier";
lin comer_N = mkN "comer" "comers";
lin comestible_N = mkN "comestible" "comestibles";
lin comet_N = mkN "comet" "comets";
lin comfit_N = mkN "comfit" "comfits";
lin comfort_N = mkN "comfort" "comforts";
lin comfort_V2 = mkV2 (mkV "comfort" "comforts" "comforted" "comforted" "comforting");
lin comfortable_A = compoundA (mkA "comfortable");
lin comforter_N = mkN "comforter" "comforters";
lin comfortingly_Adv = mkAdv "comfortingly";
lin comfortless_A = compoundA (mkA "comfortless");
lin comfrey_N = mkN "comfrey" ;
lin comfy_A = mkA "comfy" "comfier";
lin comic_A = compoundA (mkA "comic");
lin comic_N = mkN "comic" "comics";
lin comical_A = compoundA (mkA "comical");
lin coming_A = compoundA (mkA "coming");
lin coming_N = mkN "coming" "comings";
lin comity_N = mkN "comity" ;
lin comma_N = mkN "comma" "commas";
lin command_N = mkN "command" "commands";
lin command_V = mkV "command" "commands" "commanded" "commanded" "commanding";
lin command_V2 = mkV2 (mkV "command" "commands" "commanded" "commanded" "commanding");
lin commandant_N = mkN "commandant" "commandants";
lin commandeer_V2 = mkV2 (mkV "commandeer" "commandeers" "commandeered" "commandeered" "commandeering");
lin commander_N = mkN "commander" "commanders";
lin commanding_A = compoundA (mkA "commanding");
lin commandment_N = mkN "commandment" "commandments";
lin commando_N = mkN "commando" "commandos";
lin commemorate_V2 = mkV2 (mkV "commemorate" "commemorates" "commemorated" "commemorated" "commemorating");
lin commemoration_N = mkN "commemoration" "commemorations";
lin commemorative_A = compoundA (mkA "commemorative");
lin commence_V = mkV "commence" "commences" "commenced" "commenced" "commencing";
lin commence_V2 = mkV2 (mkV "commence" "commences" "commenced" "commenced" "commencing");
lin commencement_N = mkN "commencement" "commencements";
lin commend_V2 = mkV2 (mkV "commend" "commends" "commended" "commended" "commending");
lin commendable_A = compoundA (mkA "commendable");
lin commendation_N = mkN "commendation" "commendations";
lin commensurable_A = compoundA (mkA "commensurable");
lin commensurate_A = compoundA (mkA "commensurate");
lin comment_N = mkN "comment" "comments";
lin comment_V = mkV "comment" "comments" "commented" "commented" "commenting";
lin comment_V2 = mkV2 (mkV "comment" "comments" "commented" "commented" "commenting");
lin comment_VS = mkVS (mkV "comment" "comments" "commented" "commented" "commenting");
lin commentary_N = mkN "commentary" "commentaries";
lin commentate_V = mkV "commentate" "commentates" "commentated" "commentated" "commentating";
lin commentator_N = mkN "commentator" "commentators";
lin commerce_N = mkN "commerce" ;
lin commercial_A = compoundA (mkA "commercial");
lin commercial_N = mkN "commercial" "commercials";
lin commercialism_N = mkN "commercialism" ;
lin commercialize_V2 = mkV2 (mkV "commercialize" "commercializes" "commercialized" "commercialized" "commercializing");
lin commination_N = mkN "commination" "comminations";
lin comminatory_A = compoundA (mkA "comminatory");
lin commingle_V = mkV "commingle" "commingles" "commingled" "commingled" "commingling";
lin commingle_V2 = mkV2 (mkV "commingle" "commingles" "commingled" "commingled" "commingling");
lin commiserate_V = mkV "commiserate" "commiserates" "commiserated" "commiserated" "commiserating";
lin commiseration_N = mkN "commiseration" "commiserations";
lin commissar_N = mkN "commissar" "commissars";
lin commissariat_N = mkN "commissariat" "commissariats";
lin commissary_N = mkN "commissary" "commissaries";
lin commission_N = mkN "commission" "commissions";
lin commission_V2 = mkV2 (mkV "commission" "commissions" "commissioned" "commissioned" "commissioning");
lin commission_V2V = mkV2V (mkV "commission") noPrep to_Prep ;
lin commissionaire_N = mkN "commissionaire" "commissionaires";
lin commissioned_A = compoundA (mkA "commissioned");
lin commissioner_N = mkN "commissioner" "commissioners";
lin commit_V2 = mkV2 (mkV "commit" "commits" "committed" "committed" "committing");
lin commit_V2V = mkV2V (mkV "commit") noPrep to_Prep ;
lin commital_N = mkN "commital" "commitals";
lin commitment_N = mkN "commitment" "commitments";
lin committee_N = mkN "committee" "committees";
lin commode_N = mkN "commode" "commodes";
lin commodious_A = compoundA (mkA "commodious");
lin commodity_N = mkN "commodity" "commodities";
lin commodore_N = mkN "commodore" "commodores";
lin common_A = mkA "common" "commoner";
lin common_N = mkN "common" "commons";
lin common_room_N = mkN "common - room" "common - rooms";
lin commonalty_N = mkN "commonalty" "commonalties";
lin commoner_N = mkN "commoner" "commoners";
lin commonplace_A = compoundA (mkA "commonplace");
lin commonplace_N = mkN "commonplace" "commonplaces";
lin commonwealth_N = mkN "commonwealth" "commonwealths";
lin commotion_N = mkN "commotion" "commotions";
lin communal_A = compoundA (mkA "communal");
lin commune_N = mkN "commune" "communes";
lin commune_V = mkV "commune" "communes" "communed" "communed" "communing";
lin communicable_A = compoundA (mkA "communicable");
lin communicant_N = mkN "communicant" "communicants";
lin communicate_V = mkV "communicate" "communicates" "communicated" "communicated" "communicating";
lin communicate_V2 = mkV2 (mkV "communicate" "communicates" "communicated" "communicated" "communicating");
lin communication_N = mkN "communication" "communications";
lin communicative_A = compoundA (mkA "communicative");
lin communion_N = mkN "communion" "communions";
lin communique_N = mkN "communiqué" "communiqués";
lin communism_N = mkN "communism" ;
lin communist_A = compoundA (mkA "communist");
lin communist_N = mkN "communist" "communists";
lin community_N = mkN "community" "communities";
lin commutable_A = compoundA (mkA "commutable");
lin commutation_N = mkN "commutation" "commutations";
lin commutator_N = mkN "commutator" "commutators";
lin commute_V = mkV "commute" "commutes" "commuted" "commuted" "commuting";
lin commute_V2 = mkV2 (mkV "commute" "commutes" "commuted" "commuted" "commuting");
lin commuter_N = mkN "commuter" "commuters";
lin compact_A = compoundA (mkA "compact");
lin compact_N = mkN "compact" "compacts";
lin compact_V2 = mkV2 (mkV "compact" "compacts" "compacted" "compacted" "compacting");
lin compactness_N = mkN "compactness" ;
lin companion_N = mkN "companion" "companions";
lin companionable_A = compoundA (mkA "companionable");
lin companionship_N = mkN "companionship" ;
lin companionway_N = mkN "companionway" "companionways";
lin company_N = mkN "company" "companies";
lin comparability_N = mkN "comparability" ;
lin comparable_A = compoundA (mkA "comparable");
lin comparative_A = compoundA (mkA "comparative");
lin comparative_N = mkN "comparative" "comparatives";
lin compare_N = mkN "compare" "compares";
lin compare_V = mkV "compare" "compares" "compared" "compared" "comparing";
lin compare_V2 = mkV2 (mkV "compare" "compares" "compared" "compared" "comparing");
lin comparison_N = mkN "comparison" "comparisons";
lin compartment_N = mkN "compartment" "compartments";
lin compartmentalize_V2 = mkV2 (mkV "compartmentalize" "compartmentalizes" "compartmentalized" "compartmentalized" "compartmentalizing");
lin compass_N = mkN "compass" "compasses";
lin compass_V2 = mkV2 (mkV "compass" "compasses" "compassed" "compassed" "compassing");
lin compassion_N = mkN "compassion" ;
lin compassionate_A = compoundA (mkA "compassionate");
lin compatibility_N = mkN "compatibility" ;
lin compatible_A = compoundA (mkA "compatible");
lin compatriot_N = mkN "compatriot" "compatriots";
lin compeer_N = mkN "compeer" "compeers";
lin compel_V2 = mkV2 (mkV "compel" "compels" "compelled" "compelled" "compelling");
lin compel_VV = mkVV (mkV "compel" "compels" "compelled" "compelled" "compelling");
lin compendious_A = compoundA (mkA "compendious");
lin compendium_N = mkN "compendium" "compendiums";
lin compensate_V = mkV "compensate" "compensates" "compensated" "compensated" "compensating";
lin compensate_V2 = mkV2 (mkV "compensate" "compensates" "compensated" "compensated" "compensating");
lin compensation_N = mkN "compensation" "compensations";
lin compensatory_A = compoundA (mkA "compensatory");
lin compere_N = mkN "compère" "compères";
lin compere_V2 = mkV2 (mkV "compère" "compères" "compèred" "compèred" "compèring");
lin compete_V = mkV "compete" "competes" "competed" "competed" "competing";
lin competence_N = mkN "competence" ;
lin competent_A = compoundA (mkA "competent");
lin competition_N = mkN "competition" "competitions";
lin competitive_A = compoundA (mkA "competitive");
lin competitiveness_N = mkN "competitiveness" ;
lin competitor_N = mkN "competitor" "competitors";
lin compilation_N = mkN "compilation" "compilations";
lin compile_V2 = mkV2 (mkV "compile" "compiles" "compiled" "compiled" "compiling");
lin compiler_N = mkN "compiler" "compilers";
lin complacence_N = mkN "complacence" ;
lin complacency_N = mkN "complacency" ;
lin complacent_A = compoundA (mkA "complacent");
lin complain_V = mkV "complain" "complains" "complained" "complained" "complaining";
lin complain_VS = mkVS (mkV "complain" "complains" "complained" "complained" "complaining");
lin complainant_N = mkN "complainant" "complainants";
lin complainingly_Adv = mkAdv "complainingly";
lin complaint_N = mkN "complaint" "complaints";
lin complaisance_N = mkN "complaisance" ;
lin complaisant_A = compoundA (mkA "complaisant");
lin complement_N = mkN "complement" "complements";
lin complement_V2 = mkV2 (mkV "complement" "complements" "complemented" "complemented" "complementing");
lin complementary_A = compoundA (mkA "complementary");
lin complete_A = compoundA (mkA "complete");
lin complete_V = mkV "complete";
lin complete_V2 = mkV2 (mkV "complete" "completes" "completed" "completed" "completing");
lin completeness_N = mkN "completeness" ;
lin completion_N = mkN "completion" ;
lin complex_A = compoundA (mkA "complex");
lin complex_N = mkN "complex" "complexes";
lin complexion_N = mkN "complexion" "complexions";
lin complexity_N = mkN "complexity" "complexities";
lin compliance_N = mkN "compliance" ;
lin compliant_A = compoundA (mkA "compliant");
lin complicate_V2 = mkV2 (mkV "complicate" "complicates" "complicated" "complicated" "complicating");
lin complicated_A = compoundA (mkA "complicated");
lin complication_N = mkN "complication" "complications";
lin complicity_N = mkN "complicity" ;
lin compliment_N = mkN "compliment" "compliments";
lin compliment_V2 = mkV2 (mkV "compliment" "compliments" "complimented" "complimented" "complimenting");
lin complimentary_A = compoundA (mkA "complimentary");
lin complin_N = mkN "complin" "complins";
lin compline_N = mkN "compline" "complines";
lin comply_V = mkV "comply";
lin comply_V2 = mkV2 (mkV "comply" "complies" "complied" "complied" "complying");
lin component_A = compoundA (mkA "component");
lin component_N = mkN "component" "components";
lin comport_V = mkV "comport" "comports" "comported" "comported" "comporting";
lin comport_V2 = mkV2 (mkV "comport" "comports" "comported" "comported" "comporting");
lin comportment_N = mkN "comportment" "comportments";
lin compos_mentis_A = compoundA (mkA "compos mentis");
lin compose_V = mkV "compose" "composes" "composed" "composed" "composing";
lin compose_V2 = mkV2 (mkV "compose" "composes" "composed" "composed" "composing");
lin composed_A = compoundA (mkA "composed");
lin composer_N = mkN "composer" "composers";
lin composite_A = compoundA (mkA "composite");
lin composition_N = mkN "composition" "compositions";
lin compositor_N = mkN "compositor" "compositors";
lin compost_N = mkN "compost" ;
lin compost_V2 = mkV2 (mkV "compost" "composts" "composted" "composted" "composting");
lin composure_N = mkN "composure" ;
lin compote_N = mkN "compote" "compotes";
lin compound_A = compoundA (mkA "compound");
lin compound_N = mkN "compound" "compounds";
lin compound_V = mkV "compound" "compounds" "compounded" "compounded" "compounding";
lin compound_V2 = mkV2 (mkV "compound" "compounds" "compounded" "compounded" "compounding");
lin comprehend_V2 = mkV2 (mkV "comprehend" "comprehends" "comprehended" "comprehended" "comprehending");
lin comprehensibility_N = mkN "comprehensibility" ;
lin comprehensible_A = compoundA (mkA "comprehensible");
lin comprehension_N = mkN "comprehension" "comprehensions";
lin comprehensive_A = compoundA (mkA "comprehensive");
lin comprehensiveness_N = mkN "comprehensiveness" ;
lin compress_N = mkN "compress" "compresses";
lin compress_V2 = mkV2 (mkV "compress" "compresses" "compressed" "compressed" "compressing");
lin compression_N = mkN "compression" ;
lin compressor_N = mkN "compressor" "compressors";
lin comprise_V2 = mkV2 (mkV "comprise" "comprises" "comprised" "comprised" "comprising");
lin compromise_N = mkN "compromise" "compromises";
lin compromise_V = mkV "compromise" "compromises" "compromised" "compromised" "compromising";
lin compromise_V2 = mkV2 (mkV "compromise" "compromises" "compromised" "compromised" "compromising");
lin comptroller_N = mkN "comptroller" "comptrollers";
lin compulsion_N = mkN "compulsion" ;
lin compulsive_A = compoundA (mkA "compulsive");
lin compulsory_A = compoundA (mkA "compulsory");
lin compunction_N = mkN "compunction" ;
lin computation_N = mkN "computation" "computations";
lin computational_A = compoundA (mkA "computational");
lin compute_V = mkV "compute" "computes" "computed" "computed" "computing";
lin compute_V2 = mkV2 (mkV "compute" "computes" "computed" "computed" "computing");
lin computer_N = mkN "computer" "computers";
lin computerize_V2 = mkV2 (mkV "computerize" "computerizes" "computerized" "computerized" "computerizing");
lin comrade_N = mkN "comrade" "comrades";
lin comradely_Adv = mkAdv "comradely";
lin comradeship_N = mkN "comradeship" "comradeships";
lin con_Adv = mkAdv "con";
lin con_N = mkN "con" "cons";
lin con_V2 = mkV2 (mkV "con" "cons" "conned" "conned" "conning");
lin con_man_N = mkN "con - man" "con - men";
lin concatenation_N = mkN "concatenation" "concatenations";
lin concave_A = compoundA (mkA "concave");
lin concavity_N = mkN "concavity" "concavities";
lin conceal_V2 = mkV2 (mkV "conceal" "conceals" "concealed" "concealed" "concealing");
lin conceale_V = mkV "conceale";
lin concealment_N = mkN "concealment" ;
lin concede_V = mkV "concede";
lin concede_V2 = mkV2 (mkV "concede" "concedes" "conceded" "conceded" "conceding");
lin concede_VS = mkVS (mkV "concede");
lin conceit_N = mkN "conceit" "conceits";
lin conceited_A = compoundA (mkA "conceited");
lin conceivable_A = compoundA (mkA "conceivable");
lin conceive_V = mkV "conceive" "conceives" "conceived" "conceived" "conceiving";
lin conceive_V2 = mkV2 (mkV "conceive" "conceives" "conceived" "conceived" "conceiving");
lin concentrate_N = mkN "concentrate" "concentrates";
lin concentrate_V = mkV "concentrate" "concentrates" "concentrated" "concentrated" "concentrating";
lin concentrate_V2 = mkV2 (mkV "concentrate" "concentrates" "concentrated" "concentrated" "concentrating");
lin concentrated_A = compoundA (mkA "concentrated");
lin concentration_N = mkN "concentration" "concentrations";
lin concentric_A = compoundA (mkA "concentric");
lin concept_N = mkN "concept" "concepts";
lin conception_N = mkN "conception" "conceptions";
lin conceptual_A = compoundA (mkA "conceptual");
lin concern_N = mkN "concern" "concerns";
lin concern_V = mkV "concern";
lin concern_V2 = mkV2 (mkV "concern" "concerns" "concerned" "concerned" "concerning");
lin concern_VS = mkVS (mkV "concern");
lin concerned_A = compoundA (mkA "concerned");
lin concert_N = mkN "concert" "concerts";
lin concert_V2 = mkV2 (mkV "concert" "concerts" "concerted" "concerted" "concerting");
lin concert_hall_N = mkN "concert - hall" "concert - halls";
lin concerted_A = compoundA (mkA "concerted");
lin concertina_N = mkN "concertina" "concertinas";
lin concerto_N = mkN "concerto" "concertos";
lin concession_N = mkN "concession" "concessions";
lin concessionaire_N = mkN "concessionaire" "concessionaires";
lin concessive_A = compoundA (mkA "concessive");
lin conch_N = mkN "conch" "conches";
lin conchology_N = mkN "conchology" ;
lin concierge_N = mkN "concierge" "concierges";
lin conciliate_V2 = mkV2 (mkV "conciliate" "conciliates" "conciliated" "conciliated" "conciliating");
lin conciliation_N = mkN "conciliation" ;
lin conciliatory_A = compoundA (mkA "conciliatory");
lin concise_A = compoundA (mkA "concise");
lin conciseness_N = mkN "conciseness" ;
lin conclave_N = mkN "conclave" "conclaves";
lin conclude_V = mkV "conclude" "concludes" "concluded" "concluded" "concluding";
lin conclude_V2 = mkV2 (mkV "conclude" "concludes" "concluded" "concluded" "concluding");
lin conclude_VS = mkVS (mkV "conclude" "concludes" "concluded" "concluded" "concluding");
lin conclusion_N = mkN "conclusion" "conclusions";
lin conclusive_A = compoundA (mkA "conclusive");
lin concoct_V2 = mkV2 (mkV "concoct" "concocts" "concocted" "concocted" "concocting");
lin concoction_N = mkN "concoction" "concoctions";
lin concomitant_A = compoundA (mkA "concomitant");
lin concomitant_N = mkN "concomitant" "concomitants";
lin concord_N = mkN "concord" "concords";
lin concordance_N = mkN "concordance" "concordances";
lin concordant_A = compoundA (mkA "concordant");
lin concordat_N = mkN "concordat" "concordats";
lin concourse_N = mkN "concourse" "concourses";
lin concrete_A = compoundA (mkA "concrete");
lin concrete_N = mkN "concrete" ;
lin concrete_V = mkV "concrete" "concretes" "concreted" "concreted" "concreting";
lin concrete_V2 = mkV2 (mkV "concrete" "concretes" "concreted" "concreted" "concreting");
lin concretion_N = mkN "concretion" "concretions";
lin concubine_N = mkN "concubine" "concubines";
lin concupiscence_N = mkN "concupiscence" ;
lin concur_V = mkV "concur" "concurs" "concurred" "concurred" "concurring";
lin concurrence_N = mkN "concurrence" "concurrences";
lin concurrent_A = compoundA (mkA "concurrent");
lin concuss_V2 = mkV2 (mkV "concuss" "concusses" "concussed" "concussed" "concussing");
lin concussion_N = mkN "concussion" "concussions";
lin condemn_V2 = mkV2 (mkV "condemn" "condemns" "condemned" "condemned" "condemning");
lin condemnation_N = mkN "condemnation" "condemnations";
lin condensation_N = mkN "condensation" "condensations";
lin condense_V = mkV "condense" "condenses" "condensed" "condensed" "condensing";
lin condense_V2 = mkV2 (mkV "condense" "condenses" "condensed" "condensed" "condensing");
lin condenser_N = mkN "condenser" "condensers";
lin condescend_V = mkV "condescend" "condescends" "condescended" "condescended" "condescending";
lin condescending_A = compoundA (mkA "condescending");
lin condescension_N = mkN "condescension" "condescensions";
lin condign_A = compoundA (mkA "condign");
lin condiment_N = mkN "condiment" "condiments";
lin condition_N = mkN "condition" "conditions";
lin condition_V2 = mkV2 (mkV "condition" "conditions" "conditioned" "conditioned" "conditioning");
lin conditional_A = compoundA (mkA "conditional");
lin conditioned_A = compoundA (mkA "conditioned");
lin conditioner_N = mkN "conditioner" "conditioners";
lin condole_V = mkV "condole" "condoles" "condoled" "condoled" "condoling";
lin condolence_N = mkN "condolence" "condolences";
lin condominium_N = mkN "condominium" "condominiums";
lin condonation_N = mkN "condonation" "condonations";
lin condone_V2 = mkV2 (mkV "condone" "condones" "condoned" "condoned" "condoning");
lin condor_N = mkN "condor" "condors";
lin conduce_V = mkV "conduce" "conduces" "conduced" "conduced" "conducing";
lin conducive_A = compoundA (mkA "conducive");
lin conduct_N = mkN "conduct" ;
lin conduct_V = mkV "conduct" "conducts" "conducted" "conducted" "conducting";
lin conduct_V2 = mkV2 (mkV "conduct" "conducts" "conducted" "conducted" "conducting");
lin conduction_N = mkN "conduction" ;
lin conductive_A = compoundA (mkA "conductive");
lin conductivity_N = mkN "conductivity" "conductivities";
lin conductor_N = mkN "conductor" "conductors";
lin conductress_N = mkN "conductress" "conductresses";
lin conduit_N = mkN "conduit" "conduits";
lin cone_N = mkN "cone" "cones";
lin cone_V2 = mkV2 (mkV "cone" "cones" "coned" "coned" "coning");
lin coney_N = mkN "coney" "coneys";
lin confab_N = mkN "confab" "confabs";
lin confab_V = mkV "confab" "confabs" "confabbed" "confabbed" "confabbing";
lin confabulate_V = mkV "confabulate" "confabulates" "confabulated" "confabulated" "confabulating";
lin confabulation_N = mkN "confabulation" "confabulations";
lin confection_N = mkN "confection" "confections";
lin confectioner_N = mkN "confectioner" "confectioners";
lin confectionery_N = mkN "confectionery" "confectioneries";
lin confederacy_N = mkN "confederacy" "confederacies";
lin confederate_A = compoundA (mkA "confederate");
lin confederate_N = mkN "confederate" "confederates";
lin confederate_V = mkV "confederate" "confederates" "confederated" "confederated" "confederating";
lin confederate_V2 = mkV2 (mkV "confederate" "confederates" "confederated" "confederated" "confederating");
lin confederation_N = mkN "confederation" "confederations";
lin confer_V = mkV "confer" "confers" "conferred" "conferred" "conferring";
lin confer_V2 = mkV2 (mkV "confer" "confers" "conferred" "conferred" "conferring");
lin conference_N = mkN "conference" "conferences";
lin conferment_N = mkN "conferment" "conferments";
lin confess_V = mkV "confess" "confesses" "confessed" "confessed" "confessing";
lin confess_V2 = mkV2 (mkV "confess" "confesses" "confessed" "confessed" "confessing");
lin confess_VS = mkVS (mkV "confess" "confesses" "confessed" "confessed" "confessing");
lin confessedly_Adv = mkAdv "confessedly";
lin confession_N = mkN "confession" "confessions";
lin confessional_N = mkN "confessional" "confessionals";
lin confessor_N = mkN "confessor" "confessors";
lin confetti_N = mkN "confetti" "confetti";
lin confidant_N = mkN "confidant" "confidants";
lin confide_V = mkV "confide" "confides" "confided" "confided" "confiding";
lin confide_V2 = mkV2 (mkV "confide" "confides" "confided" "confided" "confiding");
lin confide_VS = mkVS (mkV "confide" "confides" "confided" "confided" "confiding");
lin confidence_N = mkN "confidence" "confidences";
lin confident_A = compoundA (mkA "confident");
lin confidential_A = compoundA (mkA "confidential");
lin confidentiality_N = mkN "confidentiality" "confidentialities";
lin confiding_A = compoundA (mkA "confiding");
lin configuration_N = mkN "configuration" "configurations";
lin configure_V2 = mkV2 (mkV "configure" "configures" "configured" "configured" "configuring");
lin configured_A = compoundA (mkA "configured");
lin confine_V2 = mkV2 (mkV "confine" "confines" "confined" "confined" "confining");
lin confined_A = compoundA (mkA "confined");
lin confinement_N = mkN "confinement" "confinements";
lin confirm_V2 = mkV2 (mkV "confirm" "confirms" "confirmed" "confirmed" "confirming");
lin confirm_VS = mkVS (mkV "confirm");
lin confirmation_N = mkN "confirmation" "confirmations";
lin confirmed_A = compoundA (mkA "confirmed");
lin confiscate_V2 = mkV2 (mkV "confiscate" "confiscates" "confiscated" "confiscated" "confiscating");
lin confiscation_N = mkN "confiscation" "confiscations";
lin conflagration_N = mkN "conflagration" "conflagrations";
lin conflict_N = mkN "conflict" "conflicts";
lin conflict_V = mkV "conflict" "conflicts" "conflicted" "conflicted" "conflicting";
lin conflicting_A = compoundA (mkA "conflicting");
lin confluence_N = mkN "confluence" "confluences";
lin confluent_A = compoundA (mkA "confluent");
lin conform_V = mkV "conform" "conforms" "conformed" "conformed" "conforming";
lin conform_V2 = mkV2 (mkV "conform" "conforms" "conformed" "conformed" "conforming");
lin conformable_A = compoundA (mkA "conformable");
lin conformation_N = mkN "conformation" "conformations";
lin conformist_N = mkN "conformist" "conformists";
lin conformity_N = mkN "conformity" ;
lin confound_V2 = mkV2 (mkV "confound" "confounds" "confounded" "confounded" "confounding");
lin confounded_A = compoundA (mkA "confounded");
lin confrere_N = mkN "confrère" "confrères";
lin confront_V2 = mkV2 (mkV "confront" "confronts" "confronted" "confronted" "confronting");
lin confrontation_N = mkN "confrontation" "confrontations";
lin confucian_A = compoundA (mkA "confucian");
lin confucian_N = mkN "confucian" "confucians";
lin confuse_V2 = mkV2 (mkV "confuse" "confuses" "confused" "confused" "confusing");
lin confusedly_Adv = mkAdv "confusedly";
lin confusion_N = mkN "confusion" ;
lin confutation_N = mkN "confutation" "confutations";
lin confute_V2 = mkV2 (mkV "confute" "confutes" "confuted" "confuted" "confuting");
lin conge_N = mkN "congé" "congés";
lin congeal_V = mkV "congeal" "congeals" "congealed" "congealed" "congealing";
lin congeal_V2 = mkV2 (mkV "congeal" "congeals" "congealed" "congealed" "congealing");
lin congenial_A = compoundA (mkA "congenial");
lin congenital_A = compoundA (mkA "congenital");
lin conger_N = mkN "conger" "congers";
lin conger_eel_N = mkN "conger - eel" "conger - eels";
lin congested_A = compoundA (mkA "congested");
lin congestion_N = mkN "congestion" ;
lin congleton_PN = mkPN "Congleton";
lin conglomerate_A = compoundA (mkA "conglomerate");
lin conglomerate_N = mkN "conglomerate" "conglomerates";
lin conglomerate_V = mkV "conglomerate" "conglomerates" "conglomerated" "conglomerated" "conglomerating";
lin conglomerate_V2 = mkV2 (mkV "conglomerate" "conglomerates" "conglomerated" "conglomerated" "conglomerating");
lin conglomeration_N = mkN "conglomeration" "conglomerations";
lin congo_PN = mkPN "Congo";
lin congolese_A = compoundA (mkA "congolese");
lin congolese_N = mkN "congolese" "congolese";
lin congratulate_V2 = mkV2 (mkV "congratulate" "congratulates" "congratulated" "congratulated" "congratulating");
lin congratulation_N = mkN "congratulation" "congratulations";
lin congratulatory_A = compoundA (mkA "congratulatory");
lin congregate_V = mkV "congregate" "congregates" "congregated" "congregated" "congregating";
lin congregate_V2 = mkV2 (mkV "congregate" "congregates" "congregated" "congregated" "congregating");
lin congregation_N = mkN "congregation" "congregations";
lin congregational_A = compoundA (mkA "congregational");
lin congress_N = mkN "congress" "congresses";
lin congressional_A = compoundA (mkA "congressional");
lin congressman_N = mkN "congressman" "congressmen" {- FIXME: guessed plural form -};
lin congresswoman_N = mkN "congresswoman" "congresswomen" {- FIXME: guessed plural form -};
lin congruent_A = compoundA (mkA "congruent");
lin congruous_A = compoundA (mkA "congruous");
lin conic_A = compoundA (mkA "conic");
lin conical_A = compoundA (mkA "conical");
lin conifer_N = mkN "conifer" "conifers";
lin coniferous_A = compoundA (mkA "coniferous");
lin conjectural_A = compoundA (mkA "conjectural");
lin conjecture_N = mkN "conjecture" "conjectures";
lin conjecture_V = mkV "conjecture" "conjectures" "conjectured" "conjectured" "conjecturing";
lin conjecture_V2 = mkV2 (mkV "conjecture" "conjectures" "conjectured" "conjectured" "conjecturing");
lin conjoin_V = mkV "conjoin" "conjoins" "conjoined" "conjoined" "conjoining";
lin conjoin_V2 = mkV2 (mkV "conjoin" "conjoins" "conjoined" "conjoined" "conjoining");
lin conjoint_A = compoundA (mkA "conjoint");
lin conjugal_A = compoundA (mkA "conjugal");
lin conjugate_V = mkV "conjugate" "conjugates" "conjugated" "conjugated" "conjugating";
lin conjugate_V2 = mkV2 (mkV "conjugate" "conjugates" "conjugated" "conjugated" "conjugating");
lin conjugation_N = mkN "conjugation" "conjugations";
lin conjunction_N = mkN "conjunction" "conjunctions";
lin conjunctive_A = compoundA (mkA "conjunctive");
lin conjunctive_N = mkN "conjunctive" "conjunctives";
lin conjuncture_N = mkN "conjuncture" "conjunctures";
lin conjuration_N = mkN "conjuration" "conjurations";
lin conjure_V = mkV "conjure" "conjures" "conjured" "conjured" "conjuring";
lin conjure_V2 = mkV2 (mkV "conjure" "conjures" "conjured" "conjured" "conjuring");
lin conjurer_N = mkN "conjurer" "conjurers";
lin conjuror_N = mkN "conjuror" "conjurors";
lin conk_N = mkN "conk" "conks";
lin conk_V = mkV "conk" "conks" "conked" "conked" "conking";
lin conker_N = mkN "conker" "conkers";
lin connah's_quay_PN = mkPN "Connah's quay";
lin connaught_PN = mkPN "Connaught";
lin connect_V = mkV "connect" "connects" "connected" "connected" "connecting";
lin connect_V2 = mkV2 (mkV "connect" "connects" "connected" "connected" "connecting");
lin connecticut_PN = mkPN "Connecticut";
lin connection_N = mkN "connection" "connections";
lin connective_A = compoundA (mkA "connective");
lin connective_N = mkN "connective" "connectives";
lin connexion_N = mkN "connexion" "connexions";
lin connie_PN = mkPN "Connie";
lin conning_A = compoundA (mkA "conning");
lin connivance_N = mkN "connivance" ;
lin connive_V = mkV "connive" "connives" "connived" "connived" "conniving";
lin connoisseur_N = mkN "connoisseur" "connoisseurs";
lin connotation_N = mkN "connotation" "connotations";
lin connote_V2 = mkV2 (mkV "connote" "connotes" "connoted" "connoted" "connoting");
lin connubial_A = compoundA (mkA "connubial");
lin conquer_V2 = mkV2 (mkV "conquer" "conquers" "conquered" "conquered" "conquering");
lin conqueror_N = mkN "conqueror" "conquerors";
lin conquest_N = mkN "conquest" "conquests";
lin conquistador_N = mkN "conquistador" "conquistadors";
lin cons_PN = mkPN "Cons";
lin consanguinity_N = mkN "consanguinity" ;
lin conscience_N = mkN "conscience" "consciences";
lin conscience_smitten_A = compoundA (mkA "conscience - smitten");
lin conscientious_A = compoundA (mkA "conscientious");
lin conscientiousness_N = mkN "conscientiousness" ;
lin conscious_A = compoundA (mkA "conscious");
lin consciousness_N = mkN "consciousness" ;
lin conscript_N = mkN "conscript" "conscripts";
lin conscript_V2 = mkV2 (mkV "conscript" "conscripts" "conscripted" "conscripted" "conscripting");
lin conscription_N = mkN "conscription" ;
lin consecrate_V2 = mkV2 (mkV "consecrate" "consecrates" "consecrated" "consecrated" "consecrating");
lin consecration_N = mkN "consecration" "consecrations";
lin consecutive_A = compoundA (mkA "consecutive");
lin consensus_N = mkN "consensus" "consensi" {- FIXME: guessed plural form -};
lin consent_N = mkN "consent" ;
lin consent_V = mkV "consent" "consents" "consented" "consented" "consenting";
lin consent_V2V = mkV2V (mkV "consent" "consents" "consented" "consented" "consenting") noPrep to_Prep ;
lin consequence_N = mkN "consequence" "consequences";
lin consequent_A = compoundA (mkA "consequent");
lin consequential_A = compoundA (mkA "consequential");
lin conservancy_N = mkN "conservancy" "conservancies";
lin conservation_N = mkN "conservation" ;
lin conservatism_N = mkN "conservatism" ;
lin conservative_A = compoundA (mkA "conservative");
lin conservative_N = mkN "conservative" "conservatives";
lin conservatoire_N = mkN "conservatoire" "conservatoires";
lin conservatory_N = mkN "conservatory" "conservatories";
lin conserve_N = mkN "conserve" "conserves";
lin conserve_V2 = mkV2 (mkV "conserve" "conserves" "conserved" "conserved" "conserving");
lin consett_PN = mkPN "Consett";
lin consider_V = mkV "consider" "considers" "considered" "considered" "considering";
lin consider_V2 = mkV2 (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_V2V = mkV2V (mkV "consider" "considers" "considered" "considered" "considering") noPrep to_Prep ;
lin consider_VA = mkVA (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_VV = mkVV (mkV "consider" "considers" "considered" "considered" "considering");
lin consider_VS = mkVS (mkV "consider" "considers" "considered" "considered" "considering");
lin considerable_A = compoundA (mkA "considerable");
lin considerate_A = compoundA (mkA "considerate");
lin considerateness_N = mkN "considerateness" ;
lin consideration_N = mkN "consideration" "considerations";
lin consign_V2 = mkV2 (mkV "consign" "consigns" "consigned" "consigned" "consigning");
lin consignee_N = mkN "consignee" "consignees";
lin consigner_N = mkN "consigner" "consigners";
lin consignment_N = mkN "consignment" "consignments";
lin consignor_N = mkN "consignor" "consignors";
lin consist_V = mkV "consist" "consists" "consisted" "consisted" "consisting";
lin consistence_N = mkN "consistence" ;
lin consistency_N = mkN "consistency" "consistencies";
lin consistent_A = compoundA (mkA "consistent");
lin consistory_N = mkN "consistory" "consistories";
lin consolable_A = compoundA (mkA "consolable");
lin consolation_N = mkN "consolation" "consolations";
lin consolatory_A = compoundA (mkA "consolatory");
lin console_N = mkN "console" "consoles";
lin console_V2 = mkV2 (mkV "console" "consoles" "consoled" "consoled" "consoling");
lin consolidate_V = mkV "consolidate" "consolidates" "consolidated" "consolidated" "consolidating";
lin consolidate_V2 = mkV2 (mkV "consolidate" "consolidates" "consolidated" "consolidated" "consolidating");
lin consolidation_N = mkN "consolidation" "consolidations";
lin consomme_N = mkN "consommé" "consommés";
lin consonance_N = mkN "consonance" ;
lin consonant_A = compoundA (mkA "consonant");
lin consonant_N = mkN "consonant" "consonants";
lin consort_N = mkN "consort" "consorts";
lin consort_V = mkV "consort" "consorts" "consorted" "consorted" "consorting";
lin consortium_N = mkN "consortium" "consortia" {- FIXME: guessed plural form -};
lin conspectus_N = mkN "conspectus" "conspectuses";
lin conspicuous_A = compoundA (mkA "conspicuous");
lin conspicuousness_N = mkN "conspicuousness" ;
lin conspiracy_N = mkN "conspiracy" "conspiracies";
lin conspirator_N = mkN "conspirator" "conspirators";
lin conspiratorial_A = compoundA (mkA "conspiratorial");
lin conspire_V = mkV "conspire" "conspires" "conspired" "conspired" "conspiring";
lin conspire_V2 = mkV2 (mkV "conspire" "conspires" "conspired" "conspired" "conspiring");
lin conspire_V2V = mkV2V (mkV "conspire" "conspires" "conspired" "conspired" "conspiring") noPrep to_Prep ;
lin constable_N = mkN "constable" "constables";
lin constabulary_N = mkN "constabulary" "constabularies";
lin constance_PN = mkPN "Constance";
lin constancy_N = mkN "constancy" ;
lin constant_A = compoundA (mkA "constant");
lin constant_N = mkN "constant" "constants";
lin constellation_N = mkN "constellation" "constellations";
lin consternation_N = mkN "consternation" ;
lin constipate_V2 = mkV2 (mkV "constipate" "constipates" "constipated" "constipated" "constipating");
lin constipated_A = compoundA (mkA "constipated");
lin constipation_N = mkN "constipation" ;
lin constituency_N = mkN "constituency" "constituencies";
lin constituent_A = compoundA (mkA "constituent");
lin constituent_N = mkN "constituent" "constituents";
lin constitute_V2 = mkV2 (mkV "constitute" "constitutes" "constituted" "constituted" "constituting");
lin constitution_N = mkN "constitution" "constitutions";
lin constitutional_A = compoundA (mkA "constitutional");
lin constitutional_N = mkN "constitutional" "constitutionals";
lin constitutionalism_N = mkN "constitutionalism" ;
lin constitutionalist_N = mkN "constitutionalist" "constitutionalists";
lin constitutionalize_V2 = mkV2 (mkV "constitutionalize" "constitutionalizes" "constitutionalized" "constitutionalized" "constitutionalizing");
lin constitutive_A = compoundA (mkA "constitutive");
lin constrain_V2 = mkV2 (mkV "constrain" "constrains" "constrained" "constrained" "constraining");
lin constrained_A = compoundA (mkA "constrained");
lin constraint_N = mkN "constraint" "constraints";
lin constrict_V2 = mkV2 (mkV "constrict" "constricts" "constricted" "constricted" "constricting");
lin constriction_N = mkN "constriction" "constrictions";
lin construct_V2 = mkV2 (mkV "construct" "constructs" "constructed" "constructed" "constructing");
lin construction_N = mkN "construction" "constructions";
lin constructional_A = compoundA (mkA "constructional");
lin constructive_A = compoundA (mkA "constructive");
lin constructor_N = mkN "constructor" "constructors";
lin construe_V = mkV "construe" "construes" "construed" "construed" "construing";
lin construe_V2 = mkV2 (mkV "construe" "construes" "construed" "construed" "construing");
lin construe_V2V = mkV2V (mkV "construe" "construes" "construed" "construed" "construing") noPrep to_Prep ;
lin consubstantiation_N = mkN "consubstantiation" ;
lin consul_N = mkN "consul" "consuls";
lin consular_A = compoundA (mkA "consular");
lin consulate_N = mkN "consulate" "consulates";
lin consulship_N = mkN "consulship" "consulships";
lin consult_V = mkV "consult" "consults" "consulted" "consulted" "consulting";
lin consult_V2 = mkV2 (mkV "consult" "consults" "consulted" "consulted" "consulting");
lin consultant_N = mkN "consultant" "consultants";
lin consultation_N = mkN "consultation" "consultations";
lin consultative_A = compoundA (mkA "consultative");
lin consume_V = mkV "consume" "consumes" "consumed" "consumed" "consuming";
lin consume_V2 = mkV2 (mkV "consume" "consumes" "consumed" "consumed" "consuming");
lin consumer_N = mkN "consumer" "consumers";
lin consuming_A = compoundA (mkA "consuming");
lin consummate_A = compoundA (mkA "consummate");
lin consummate_V2 = mkV2 (mkV "consummate" "consummates" "consummated" "consummated" "consummating");
lin consummation_N = mkN "consummation" "consummations";
lin consumption_N = mkN "consumption" ;
lin consumptive_A = compoundA (mkA "consumptive");
lin consumptive_N = mkN "consumptive" "consumptives";
lin cont_PN = mkPN "Cont";
lin contact_N = mkN "contact" "contacts";
lin contact_V2 = mkV2 (mkV "contact" "contacts" "contacted" "contacted" "contacting");
lin contagion_N = mkN "contagion" "contagions";
lin contagious_A = compoundA (mkA "contagious");
lin contain_V2 = mkV2 (mkV "contain" "contains" "contained" "contained" "containing");
lin container_N = mkN "container" "containers";
lin containment_N = mkN "containment" ;
lin contaminant_N = mkN "contaminant" "contaminants";
lin contaminate_V2 = mkV2 (mkV "contaminate" "contaminates" "contaminated" "contaminated" "contaminating");
lin contamination_N = mkN "contamination" "contaminations";
lin contemn_V2 = mkV2 (mkV "contemn" "contemns" "contemned" "contemned" "contemning");
lin contemplate_V = mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating";
lin contemplate_V2 = mkV2 (mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating");
lin contemplate_VS = mkVS (mkV "contemplate" "contemplates" "contemplated" "contemplated" "contemplating");
lin contemplation_N = mkN "contemplation" ;
lin contemplative_A = compoundA (mkA "contemplative");
lin contemporaneous_A = compoundA (mkA "contemporaneous");
lin contemporary_A = compoundA (mkA "contemporary");
lin contemporary_N = mkN "contemporary" "contemporaries";
lin contempt_N = mkN "contempt" ;
lin contemptible_A = compoundA (mkA "contemptible");
lin contemptuous_A = compoundA (mkA "contemptuous");
lin contend_V = mkV "contend" "contends" "contended" "contended" "contending";
lin contend_VS = mkVS (mkV "contend" "contends" "contended" "contended" "contending");
lin contender_N = mkN "contender" "contenders";
lin content_A = compoundA (mkA "content");
lin content_N = mkN "content" "contents";
lin content_V2 = mkV2 (mkV "content" "contents" "contented" "contented" "contenting");
lin contented_A = compoundA (mkA "contented");
lin contention_N = mkN "contention" "contentions";
lin contentious_A = compoundA (mkA "contentious");
lin contentment_N = mkN "contentment" ;
lin conterminous_A = compoundA (mkA "conterminous");
lin contest_N = mkN "contest" "contests";
lin contest_V = mkV "contest" "contests" "contested" "contested" "contesting";
lin contest_V2 = mkV2 (mkV "contest" "contests" "contested" "contested" "contesting");
lin contestant_N = mkN "contestant" "contestants";
lin context_N = mkN "context" "contexts";
lin contextual_A = compoundA (mkA "contextual");
lin contiguity_N = mkN "contiguity" ;
lin contiguous_A = compoundA (mkA "contiguous");
lin continence_N = mkN "continence" ;
lin continent_A = compoundA (mkA "continent");
lin continent_N = mkN "continent" "continents";
lin continental_A = compoundA (mkA "continental");
lin contingency_N = mkN "contingency" "contingencies";
lin contingent_A = compoundA (mkA "contingent");
lin contingent_N = mkN "contingent" "contingents";
lin continual_A = compoundA (mkA "continual");
lin continuance_N = mkN "continuance" "IRREG";
lin continuation_N = mkN "continuation" "continuations";
lin continue_V = mkV "continue" "continues" "continued" "continued" "continuing";
lin continue_V2 = mkV2 (mkV "continue" "continues" "continued" "continued" "continuing");
lin continue_VV = mkVV (mkV "continue" "continues" "continued" "continued" "continuing");
lin continue_VS = mkVS (mkV "continue" "continues" "continued" "continued" "continuing");
lin continuity_N = mkN "continuity" ;
lin continuous_A = compoundA (mkA "continuous");
lin contort_V2 = mkV2 (mkV "contort" "contorts" "contorted" "contorted" "contorting");
lin contortion_N = mkN "contortion" "contortions";
lin contortionist_N = mkN "contortionist" "contortionists";
lin contour_N = mkN "contour" "contours";
lin contour_V2 = mkV2 (mkV "contour" "contours" "contoured" "contoured" "contouring");
lin contraband_N = mkN "contraband" ;
lin contrabass_N = mkN "contrabass" "contrabasses";
lin contraception_N = mkN "contraception" ;
lin contraceptive_A = compoundA (mkA "contraceptive");
lin contraceptive_N = mkN "contraceptive" "contraceptives";
lin contract_N = mkN "contract" "contracts";
lin contract_V = mkV "contract" "contracts" "contracted" "contracted" "contracting";
lin contract_V2 = mkV2 (mkV "contract" "contracts" "contracted" "contracted" "contracting");
lin contract_V2V = mkV2V (mkV "contract" "contracts" "contracted" "contracted" "contracting") noPrep to_Prep ;
lin contractible_A = compoundA (mkA "contractible");
lin contractile_A = compoundA (mkA "contractile");
lin contraction_N = mkN "contraction" "contractions";
lin contractor_N = mkN "contractor" "contractors";
lin contractual_A = compoundA (mkA "contractual");
lin contradict_V2 = mkV2 (mkV "contradict" "contradicts" "contradicted" "contradicted" "contradicting");
lin contradiction_N = mkN "contradiction" "contradictions";
lin contradictory_A = compoundA (mkA "contradictory");
lin contradistinction_N = mkN "contradistinction" "contradistinctions";
lin contradistinguish_V2 = mkV2 (mkV "contradistinguish" "contradistinguishes" "contradistinguished" "contradistinguished" "contradistinguishing");
lin contralto_N = mkN "contralto" "contraltos";
lin contraption_N = mkN "contraption" "contraptions";
lin contrapuntal_A = compoundA (mkA "contrapuntal");
lin contrariety_N = mkN "contrariety" "contrarieties";
lin contrariness_N = mkN "contrariness" ;
lin contrariwise_Adv = mkAdv "contrariwise";
lin contrary_A = compoundA (mkA "contrary");
lin contrary_N = mkN "contrary" "contraries";
lin contrast_N = mkN "contrast" "contrasts";
lin contrast_V = mkV "contrast" "contrasts" "contrasted" "contrasted" "contrasting";
lin contrast_V2 = mkV2 (mkV "contrast" "contrasts" "contrasted" "contrasted" "contrasting");
lin contrastingly_Adv = mkAdv "contrastingly";
lin contravene_V2 = mkV2 (mkV "contravene" "contravenes" "contravened" "contravened" "contravening");
lin contravention_N = mkN "contravention" "contraventions";
lin contretemps_N = mkN "contretemps" "contretemps";
lin contribute_V = mkV "contribute" "contributes" "contributed" "contributed" "contributing";
lin contribute_V2 = mkV2 (mkV "contribute" "contributes" "contributed" "contributed" "contributing");
lin contribute_V2V = mkV2V (mkV "contribute" "contributes" "contributed" "contributed" "contributing") noPrep to_Prep ;
lin contribution_N = mkN "contribution" "contributions";
lin contributor_N = mkN "contributor" "contributors";
lin contributory_A = compoundA (mkA "contributory");
lin contrite_A = compoundA (mkA "contrite");
lin contrition_N = mkN "contrition" ;
lin contrivance_N = mkN "contrivance" "contrivances";
lin contrive_V = mkV "contrive" "contrives" "contrived" "contrived" "contriving";
lin contrive_V2 = mkV2 (mkV "contrive" "contrives" "contrived" "contrived" "contriving");
lin contriver_N = mkN "contriver" "contrivers";
lin control_N = mkN "control" "controls";
lin control_V = mkV "control";
lin control_V2 = mkV2 (mkV "control" "controls" "controlled" "controlled" "controlling");
lin controllable_A = compoundA (mkA "controllable");
lin controller_N = mkN "controller" "controllers";
lin controversial_A = compoundA (mkA "controversial");
lin controversialist_N = mkN "controversialist" "controversialists";
lin controversy_N = mkN "controversy" "controversies";
lin controvert_V2 = mkV2 (mkV "controvert" "controverts" "controverted" "controverted" "controverting");
lin contumacious_A = compoundA (mkA "contumacious");
lin contumacy_N = mkN "contumacy" "contumacies";
lin contumelious_A = compoundA (mkA "contumelious");
lin contumely_N = mkN "contumely" "contumelies";
lin contuse_V2 = mkV2 (mkV "contuse" "contuses" "contused" "contused" "contusing");
lin contusion_N = mkN "contusion" "contusions";
lin conundrum_N = mkN "conundrum" "conundrums";
lin conurbation_N = mkN "conurbation" "conurbations";
lin convalesce_V = mkV "convalesce" "convalesces" "convalesced" "convalesced" "convalescing";
lin convalescence_N = mkN "convalescence" ;
lin convalescent_A = compoundA (mkA "convalescent");
lin convalescent_N = mkN "convalescent" "convalescents";
lin convection_N = mkN "convection" ;
lin convector_N = mkN "convector" "convectors";
lin convene_V = mkV "convene" "convenes" "convened" "convened" "convening";
lin convene_V2 = mkV2 (mkV "convene" "convenes" "convened" "convened" "convening");
lin convener_N = mkN "convener" "conveners";
lin convenience_N = mkN "convenience" "conveniences";
lin convenient_A = compoundA (mkA "convenient");
lin convent_N = mkN "convent" "convents";
lin conventicle_N = mkN "conventicle" "conventicles";
lin convention_N = mkN "convention" "conventions";
lin conventional_A = compoundA (mkA "conventional");
lin conventionality_N = mkN "conventionality" "conventionalities";
lin converge_V = mkV "converge" "converges" "converged" "converged" "converging";
lin convergence_N = mkN "convergence" "convergences";
lin convergent_A = compoundA (mkA "convergent");
lin conversant_A = compoundA (mkA "conversant");
lin conversation_N = mkN "conversation" "conversations";
lin conversational_A = compoundA (mkA "conversational");
lin conversationalist_N = mkN "conversationalist" "conversationalists";
lin converse_A = compoundA (mkA "converse");
lin converse_N = mkN "converse" "converses";
lin converse_V = mkV "converse" "converses" "conversed" "conversed" "conversing";
lin conversion_N = mkN "conversion" "conversions";
lin convert_N = mkN "convert" "converts";
lin convert_V = mkV "convert";
lin convert_V2 = mkV2 (mkV "convert" "converts" "converted" "converted" "converting");
lin converted_A = compoundA (mkA "converted");
lin converter_N = mkN "converter" "converters";
lin convertibility_N = mkN "convertibility" ;
lin convertible_A = compoundA (mkA "convertible");
lin convertible_N = mkN "convertible" "convertibles";
lin convex_A = compoundA (mkA "convex");
lin convexity_N = mkN "convexity" ;
lin convey_V2 = mkV2 (mkV "convey" "conveys" "conveyed" "conveyed" "conveying");
lin conveyance_N = mkN "conveyance" "conveyances";
lin conveyancer_N = mkN "conveyancer" "conveyancers";
lin conveyer_N = mkN "conveyer" "conveyers";
lin conveyer_belt_N = mkN "conveyer - belt" "conveyer - belts";
lin conveyor_N = mkN "conveyor" "conveyors";
lin convict_N = mkN "convict" "convicts";
lin convict_V2 = mkV2 (mkV "convict" "convicts" "convicted" "convicted" "convicting");
lin conviction_N = mkN "conviction" "convictions";
lin convince_V2 = mkV2 (mkV "convince" "convinces" "convinced" "convinced" "convincing");
lin convince_V2V = mkV2V (mkV "convince") noPrep to_Prep ;
lin convincible_A = compoundA (mkA "convincible");
lin convincing_A = compoundA (mkA "convincing");
lin convivial_A = compoundA (mkA "convivial");
lin conviviality_N = mkN "conviviality" "convivialities";
lin convocation_N = mkN "convocation" "convocations";
lin convoke_V2 = mkV2 (mkV "convoke" "convokes" "convoked" "convoked" "convoking");
lin convoluted_A = compoundA (mkA "convoluted");
lin convolution_N = mkN "convolution" "convolutions";
lin convolvulus_N = mkN "convolvulus" "convolvuluses";
lin convoy_N = mkN "convoy" "convoys";
lin convoy_V2 = mkV2 (mkV "convoy" "convoys" "convoyed" "convoyed" "convoying");
lin convulse_V2 = mkV2 (mkV "convulse" "convulses" "convulsed" "convulsed" "convulsing");
lin convulsion_N = mkN "convulsion" "convulsions";
lin convulsive_A = compoundA (mkA "convulsive");
lin conwy_PN = mkPN "Conwy";
lin cony_N = mkN "cony" "conies";
lin coo_N = mkN "coo" "coos";
lin coo_V = mkV "coo" "coos" "cooed" "cooed" "cooing";
lin coo_V2 = mkV2 (mkV "coo" "coos" "cooed" "cooed" "cooing");
lin cook_N = mkN "cook" "cooks";
lin cook_V = mkV "cook" "cooks" "cooked" "cooked" "cooking";
lin cook_V2 = mkV2 (mkV "cook" "cooks" "cooked" "cooked" "cooking");
lin cookbook_N = mkN "cookbook" "cookbooks";
lin cooker_N = mkN "cooker" "cookers";
lin cookery_N = mkN "cookery" ;
lin cookery_book_N = mkN "cookery - book" "cookery - books";
lin cookham_PN = mkPN "Cookham";
lin cookhouse_N = mkN "cookhouse" "cookhouses";
lin cookie_N = mkN "cookie" "cookies";
lin cooking_N = mkN "cooking" ;
lin cooky_N = mkN "cooky" "cookies";
lin cool_A = mkA "cool" "cooler";
lin cool_N = mkN "cool" ;
lin cool_V = mkV "cool" "cools" "cooled" "cooled" "cooling";
lin cool_V2 = mkV2 (mkV "cool" "cools" "cooled" "cooled" "cooling");
lin cool_headed_A = compoundA (mkA "cool - headed");
lin coolant_N = mkN "coolant" "coolants";
lin cooler_N = mkN "cooler" "coolers";
lin coolie_N = mkN "coolie" "coolies";
lin cooling_tower_N = mkN "cooling - tower" "cooling - towers";
lin coolness_N = mkN "coolness" ;
lin coon_N = mkN "coon" "coons";
lin coop_N = mkN "coop" "coops";
lin coop_V2 = mkV2 (mkV "coop" "coops" "cooped" "cooped" "cooping");
lin cooper_N = mkN "cooper" "coopers";
lin cooperate_V = mkV "cooperate" "cooperates" "cooperated" "cooperated" "cooperating";
lin cooperation_N = mkN "cooperation" ;
lin cooperative_A = compoundA (mkA "cooperative");
lin cooperative_N = mkN "cooperative" "cooperatives";
lin cooperator_N = mkN "cooperator" "cooperators";
lin coordinate_A = compoundA (mkA "coordinate");
lin coordinate_N = mkN "coordinate" "coordinates";
lin coordinate_V = mkV "coordinate";
lin coordinate_V2 = mkV2 (mkV "coordinate" "coordinates" "coordinated" "coordinated" "coordinating");
lin coordination_N = mkN "coordination" "coordinations";
lin coordinator_N = mkN "coordinator" "coordinators";
lin coot_N = mkN "coot" "coots";
lin cop_N = mkN "cop" "cops";
lin cop_V = mkV "cop" "cops" "copped" "copped" "copping";
lin cop_V2 = mkV2 (mkV "cop" "cops" "copped" "copped" "copping");
lin cop_out_N = mkN "cop - out" "cop - outs";
lin copartner_N = mkN "copartner" "copartners";
lin copartnership_N = mkN "copartnership" "copartnerships";
lin cope_N = mkN "cope" "copes";
lin cope_V = mkV "cope" "copes" "coped" "coped" "coping";
lin copeck_N = mkN "copeck" "copecks";
lin copenhagen_PN = mkPN "Copenhagen";
lin copernican_A = compoundA (mkA "copernican");
lin coping_N = mkN "coping" "copings";
lin coping_stone_N = mkN "coping - stone" "coping - stones";
lin copious_A = compoundA (mkA "copious");
lin copper_N = mkN "copper" "coppers";
lin copper_V2 = mkV2 (mkV "copper" "coppers" "coppered" "coppered" "coppering");
lin copper_bottom_V2 = mkV2 (mkV "copper - bottom" "copper - bottoms" "copper - bottomed" "copper - bottomed" "copper - bottoming");
lin copper_bottomed_A = compoundA (mkA "copper - bottomed");
lin copperhead_N = mkN "copperhead" "copperheads";
lin copperplate_N = mkN "copperplate" ;
lin coppersmith_N = mkN "coppersmith" "coppersmiths";
lin coppice_N = mkN "coppice" "coppices";
lin coppull_PN = mkPN "Coppull";
lin copra_N = mkN "copra" ;
lin copse_N = mkN "copse" "copses";
lin copt_A = compoundA (mkA "copt");
lin copt_N = mkN "copt" "copts";
lin coptic_N = mkN "coptic" "coptics";
lin copula_N = mkN "copula" "copulas";
lin copulate_V = mkV "copulate" "copulates" "copulated" "copulated" "copulating";
lin copulation_N = mkN "copulation" "copulations";
lin copulative_A = compoundA (mkA "copulative");
lin copulative_N = mkN "copulative" "copulatives";
lin copy_N = mkN "copy" "copies";
lin copy_V = mkV "copy" "copies" "copied" "copied" "copying";
lin copy_V2 = mkV2 (mkV "copy" "copies" "copied" "copied" "copying");
lin copybook_N = mkN "copybook" "copybooks";
lin copycat_N = mkN "copycat" "copycats";
lin copyhold_N = mkN "copyhold" ;
lin copyholder_N = mkN "copyholder" "copyholders";
lin copyist_N = mkN "copyist" "copyists";
lin copyright_N = mkN "copyright" "copyrights";
lin copyright_V2 = mkV2 (mkV "copyright" "copyrights" "copyrighted" "copyrighted" "copyrighting");
lin copywriter_N = mkN "copywriter" "copywriters";
lin coquetry_N = mkN "coquetry" "coquetries";
lin coquette_N = mkN "coquette" "coquettes";
lin coquettish_A = compoundA (mkA "coquettish");
lin cor_anglais_N = mkN "cor anglais" "cor anglaes" {- FIXME: guessed plural form -};
lin coracle_N = mkN "coracle" "coracles";
lin coral_A = compoundA (mkA "coral");
lin coral_N = mkN "coral" "corals";
lin coral_reef_N = mkN "coral - reef" "coral - reefs";
lin corbel_N = mkN "corbel" "corbels";
lin corby_PN = mkPN "Corby";
lin cord_N = mkN "cord" "cords";
lin cord_V2 = mkV2 (mkV "cord" "cords" "corded" "corded" "cording");
lin cordage_N = mkN "cordage" ;
lin cordial_A = compoundA (mkA "cordial");
lin cordial_N = mkN "cordial" "cordials";
lin cordiality_N = mkN "cordiality" "cordialities";
lin cordite_N = mkN "cordite" ;
lin cordoba_PN = mkPN "Cordoba";
lin cordon_N = mkN "cordon" "cordons";
lin cordon_V2 = mkV2 (mkV "cordon" "cordons" "cordoned" "cordoned" "cordoning");
lin cordon_bleu_A = compoundA (mkA "cordon bleu");
lin corduroy_N = mkN "corduroy" ;
lin core_N = mkN "core" "cores";
lin core_V2 = mkV2 (mkV "core" "cores" "cored" "cored" "coring");
lin coreligionist_N = mkN "coreligionist" "coreligionists";
lin corgi_N = mkN "corgi" "corgis";
lin corinthian_A = compoundA (mkA "corinthian");
lin corinthian_N = mkN "corinthian" "corinthians";
lin cork_N = mkN "cork" "corks";
lin cork_PN = mkPN "Cork";
lin cork_V2 = mkV2 (mkV "cork" "corks" "corked" "corked" "corking");
lin corkage_N = mkN "corkage" ;
lin corked_A = compoundA (mkA "corked");
lin corker_N = mkN "corker" "corkers";
lin corkscrew_N = mkN "corkscrew" "corkscrews";
lin corm_N = mkN "corm" "corms";
lin cormorant_N = mkN "cormorant" "cormorants";
lin corn_N = mkN "corn" "corns";
lin corn_V2 = mkV2 (mkV "corn" "corns" "corned" "corned" "corning");
lin corn_exchange_N = mkN "corn - exchange" "corn - exchanges";
lin corncob_N = mkN "corncob" "corncobs";
lin corncrake_N = mkN "corncrake" "corncrakes";
lin cornea_N = mkN "cornea" "corneas";
lin cornelian_N = mkN "cornelian" "cornelians";
lin corner_N = mkN "corner" "corners";
lin corner_V = mkV "corner" "corners" "cornered" "cornered" "cornering";
lin corner_V2 = mkV2 (mkV "corner" "corners" "cornered" "cornered" "cornering");
lin corner_kick_N = mkN "corner - kick" "corner - kicks";
lin cornered_A = compoundA (mkA "cornered");
lin cornerstone_N = mkN "cornerstone" "cornerstones";
lin cornet_N = mkN "cornet" "cornets";
lin cornflake_N = mkN "cornflake" "cornflakes";
lin cornflour_N = mkN "cornflour" ;
lin cornflower_N = mkN "cornflower" "cornflowers";
lin cornice_N = mkN "cornice" "cornices";
lin cornpone_N = mkN "cornpone" ;
lin cornstarch_N = mkN "cornstarch" ;
lin cornucopia_N = mkN "cornucopia" "cornucopias";
lin cornwall_PN = mkPN "Cornwall";
lin corny_A = mkA "corny" "cornier";
lin corolla_N = mkN "corolla" "corollas";
lin corollary_N = mkN "corollary" "corollaries";
lin corona_N = mkN "corona" "coronas";
lin coronary_A = compoundA (mkA "coronary");
lin coronary_N = mkN "coronary" "coronaries";
lin coronation_N = mkN "coronation" "coronations";
lin coroner_N = mkN "coroner" "coroners";
lin coronet_N = mkN "coronet" "coronets";
lin corp_PN = mkPN "Corp";
lin corporal_A = compoundA (mkA "corporal");
lin corporal_N = mkN "corporal" "corporals";
lin corporate_A = compoundA (mkA "corporate");
lin corporation_N = mkN "corporation" "corporations";
lin corporeal_A = compoundA (mkA "corporeal");
lin corps_N = mkN "corps" "corps";
lin corps_de_ballet_N = mkN "corps de ballet" "IRREG";
lin corps_diplomatique_N = mkN "corps diplomatique" "IRREG";
lin corpse_N = mkN "corpse" "corpses";
lin corpulence_N = mkN "corpulence" ;
lin corpulent_A = compoundA (mkA "corpulent");
lin corpus_N = mkN "corpus" "corpi" {- FIXME: guessed plural form -};
lin corpuscle_N = mkN "corpuscle" "corpuscles";
lin corral_N = mkN "corral" "corrals";
lin corral_V2 = mkV2 (mkV "corral" "corrals" "corralled" "corralled" "corralling");
lin correct_A = compoundA (mkA "correct");
lin correct_V = mkV "correct";
lin correct_V2 = mkV2 (mkV "correct" "corrects" "corrected" "corrected" "correcting");
lin correct_VS = mkVS (mkV "correct");
lin correction_N = mkN "correction" "corrections";
lin correctitude_N = mkN "correctitude" ;
lin corrective_A = compoundA (mkA "corrective");
lin corrective_N = mkN "corrective" "correctives";
lin correctness_N = mkN "correctness" ;
lin correlate_V = mkV "correlate" "correlates" "correlated" "correlated" "correlating";
lin correlate_V2 = mkV2 (mkV "correlate" "correlates" "correlated" "correlated" "correlating");
lin correlation_N = mkN "correlation" "correlations";
lin correlative_A = compoundA (mkA "correlative");
lin correlative_N = mkN "correlative" "correlatives";
lin correspond_V = mkV "correspond" "corresponds" "corresponded" "corresponded" "corresponding";
lin correspondence_N = mkN "correspondence" "correspondences";
lin correspondent_N = mkN "correspondent" "correspondents";
lin corresponding_A = compoundA (mkA "corresponding");
lin corridor_N = mkN "corridor" "corridors";
lin corrie_N = mkN "corrie" "corries";
lin corrigendum_N = mkN "corrigendum" "corrigenda" {- FIXME: guessed plural form -};
lin corrigible_A = compoundA (mkA "corrigible");
lin corroborate_V2 = mkV2 (mkV "corroborate" "corroborates" "corroborated" "corroborated" "corroborating");
lin corroboration_N = mkN "corroboration" ;
lin corroborative_A = compoundA (mkA "corroborative");
lin corrode_V = mkV "corrode" "corrodes" "corroded" "corroded" "corroding";
lin corrode_V2 = mkV2 (mkV "corrode" "corrodes" "corroded" "corroded" "corroding");
lin corrosion_N = mkN "corrosion" ;
lin corrosive_A = compoundA (mkA "corrosive");
lin corrosive_N = mkN "corrosive" "corrosives";
lin corrugate_V = mkV "corrugate" "corrugates" "corrugated" "corrugated" "corrugating";
lin corrugate_V2 = mkV2 (mkV "corrugate" "corrugates" "corrugated" "corrugated" "corrugating");
lin corrugation_N = mkN "corrugation" "corrugations";
lin corrupt_A = compoundA (mkA "corrupt");
lin corrupt_V = mkV "corrupt" "corrupts" "corrupted" "corrupted" "corrupting";
lin corrupt_V2 = mkV2 (mkV "corrupt" "corrupts" "corrupted" "corrupted" "corrupting");
lin corruptibility_N = mkN "corruptibility" ;
lin corruptible_A = compoundA (mkA "corruptible");
lin corruption_N = mkN "corruption" ;
lin corruptness_N = mkN "corruptness" ;
lin corsage_N = mkN "corsage" "corsages";
lin corsair_N = mkN "corsair" "corsairs";
lin corse_N = mkN "corse" "corses";
lin corselet_N = mkN "corselet" "corselets";
lin corset_N = mkN "corset" "corsets";
lin corsham_PN = mkPN "Corsham";
lin corslet_N = mkN "corslet" "corslets";
lin cortege_1_N = mkN "cortege" "corteges";
lin cortege_2_N = mkN "cortège" "cortèges";
lin cortex_N = mkN "cortex" "cortices" {- FIXME: guessed plural form -};
lin cortical_A = compoundA (mkA "cortical");
lin cortisone_N = mkN "cortisone" ;
lin corundum_N = mkN "corundum" ;
lin corunna_PN = mkPN "Corunna";
lin coruscate_V = mkV "coruscate" "coruscates" "coruscated" "coruscated" "coruscating";
lin coruscation_N = mkN "coruscation" "coruscations";
lin corvee_N = mkN "corvée" "corvées";
lin corvette_N = mkN "corvette" "corvettes";
lin cos_N = mkN "cos" "cos";
lin cosenza_PN = mkPN "Cosenza";
lin cosh_N = mkN "cosh" "coshes";
lin cosh_V2 = mkV2 (mkV "cosh" "coshes" "coshed" "coshed" "coshing");
lin cosher_A = compoundA (mkA "cosher");
lin cosignatory_A = compoundA (mkA "cosignatory");
lin cosignatory_N = mkN "cosignatory" "cosignatories";
lin cosily_Adv = mkAdv "cosily";
lin cosine_N = mkN "cosine" "cosines";
lin cosiness_N = mkN "cosiness" ;
lin cosmetic_A = compoundA (mkA "cosmetic");
lin cosmetic_N = mkN "cosmetic" "cosmetics";
lin cosmetician_N = mkN "cosmetician" "cosmeticians";
lin cosmic_A = compoundA (mkA "cosmic");
lin cosmogony_N = mkN "cosmogony" "cosmogonies";
lin cosmonaut_N = mkN "cosmonaut" "cosmonauts";
lin cosmopolitan_A = compoundA (mkA "cosmopolitan");
lin cosmopolitan_N = mkN "cosmopolitan" "cosmopolitans";
lin cosmos_N = mkN "cosmos" (variants {"cosmoi"; "cosmoses"});
lin cosset_V2 = mkV2 (mkV "cosset" "cossets" "cosseted" "cosseted" "cosseting");
lin cost_N = mkN "cost" "costs";
lin cost_V = mkV "cost" "costs" "costed" "costed" "costing";
lin cost_V2 = mkV2 (mkV "cost" "costs" "costed" "costed" "costing");
lin costa_rica_PN = mkPN "Costa rica";
lin costa_rican_A = compoundA (mkA "costa rican");
lin costa_rican_N = mkN "costa rican" "costa ricans";
lin costermonger_N = mkN "costermonger" "costermongers";
lin costing_N = mkN "costing" "costings";
lin costive_A = compoundA (mkA "costive");
lin costliness_N = mkN "costliness" ;
lin costly_A = mkA "costly" "costlier";
lin costum_V2 = mkV2 (mkV "costum");
lin costume_N = mkN "costume" "costumes";
lin costumier_N = mkN "costumier" "costumiers";
lin cosy_A = mkA "cosy" "cosier";
lin cosy_N = mkN "cosy" "cosies";
lin cot_N = mkN "cot" "cots";
lin cote_N = mkN "cote" "cotes";
lin cotenant_N = mkN "cotenant" "cotenants";
lin coterie_N = mkN "coterie" "coteries";
lin coterminous_A = compoundA (mkA "coterminous");
lin cotilion_N = mkN "cotilion" "cotilions";
lin cotillion_N = mkN "cotillion" "cotillions";
lin cottage_N = mkN "cottage" "cottages";
lin cottar_N = mkN "cottar" "cottars";
lin cotter_N = mkN "cotter" "cotters";
lin cotton_N = mkN "cotton" ;
lin cotton_V = mkV "cotton" "cottons" "cottoned" "cottoned" "cottoning";
lin cotton_cake_N = mkN "cotton - cake" ;
lin cotton_plant_N = mkN "cotton - plant" "cotton - plants";
lin cotton_wool_N = mkN "cotton - wool" ;
lin cottontail_N = mkN "cottontail" "cottontails";
lin cotyledon_N = mkN "cotyledon" "cotyledons";
lin couch_N = mkN "couch" "couches";
lin couch_V = mkV "couch" "couches" "couched" "couched" "couching";
lin couch_V2 = mkV2 (mkV "couch" "couches" "couched" "couched" "couching");
lin couch_grass_N = mkN "couch - grass" ;
lin couchant_A = compoundA (mkA "couchant");
lin couchette_N = mkN "couchette" "couchettes";
lin cougar_N = mkN "cougar" "cougars";
lin cough_N = mkN "cough" "coughs";
lin cough_V = mkV "cough" "coughs" "coughed" "coughed" "coughing";
lin cough_V2 = mkV2 (mkV "cough" "coughs" "coughed" "coughed" "coughing");
lin coulter_N = mkN "coulter" "coulters";
lin council_N = mkN "council" "councils";
lin council_board_N = mkN "council - board" "council - boards";
lin council_chamber_N = mkN "council - chamber" "council - chambers";
lin councillor_N = mkN "councillor" "councillors";
lin counsel_N = mkN "counsel" ;
lin counsel_V2 = mkV2 (mkV "counsel" "counsels" "counselled" "counselled" "counselling");
lin counsellor_N = mkN "counsellor" "counsellors";
lin count_N = mkN "count" "counts";
lin count_V = mkV "count" "counts" "counted" "counted" "counting";
lin count_V2 = mkV2 (mkV "count" "counts" "counted" "counted" "counting");
lin countable_A = compoundA (mkA "countable");
lin countdown_N = mkN "countdown" "countdowns";
lin countenance_N = mkN "countenance" "countenances";
lin countenance_V2 = mkV2 (mkV "countenance" "countenances" "countenanced" "countenanced" "countenancing");
lin counter_Adv = mkAdv "counter";
lin counter_N = mkN "counter" "counters";
lin counter_V = mkV "counter" "counters" "countered" "countered" "countering";
lin counter_V2 = mkV2 (mkV "counter" "counters" "countered" "countered" "countering");
lin counter_VS = mkVS (mkV "counter" "counters" "countered" "countered" "countering");
lin counter_example_N = mkN "counter - example" "counter - examples";
lin counter_revolution_N = mkN "counter - revolution" "counter - revolutions";
lin counter_revolutionary_A = compoundA (mkA "counter - revolutionary");
lin counter_revolutionary_N = mkN "counter - revolutionary" "counter - revolutionaries";
lin counteract_V2 = mkV2 (mkV "counteract" "counteracts" "counteracted" "counteracted" "counteracting");
lin counteraction_N = mkN "counteraction" "counteractions";
lin counterattack_N = mkN "counterattack" "counterattacks";
lin counterattack_V = mkV "counterattack" "counterattacks" "counterattacked" "counterattacked" "counterattacking";
lin counterattack_V2 = mkV2 (mkV "counterattack" "counterattacks" "counterattacked" "counterattacked" "counterattacking");
lin counterattraction_N = mkN "counterattraction" "counterattractions";
lin counterbalance_N = mkN "counterbalance" "counterbalances";
lin counterbalance_V2 = mkV2 (mkV "counterbalance" "counterbalances" "counterbalanced" "counterbalanced" "counterbalancing");
lin counterblast_N = mkN "counterblast" "counterblasts";
lin counterclaim_N = mkN "counterclaim" "counterclaims";
lin counterclockwise_Adv = mkAdv "counterclockwise";
lin counterespionage_N = mkN "counterespionage" ;
lin counterfeit_A = compoundA (mkA "counterfeit");
lin counterfeit_N = mkN "counterfeit" "counterfeits";
lin counterfeit_V2 = mkV2 (mkV "counterfeit" "counterfeits" "counterfeited" "counterfeited" "counterfeiting");
lin counterfeiter_N = mkN "counterfeiter" "counterfeiters";
lin counterfoil_N = mkN "counterfoil" "counterfoils";
lin counterintelligence_N = mkN "counterintelligence" ;
lin counterirritant_N = mkN "counterirritant" "counterirritants";
lin countermand_V2 = mkV2 (mkV "countermand" "countermands" "countermanded" "countermanded" "countermanding");
lin countermine_N = mkN "countermine" "countermines";
lin countermine_V = mkV "countermine" "countermines" "countermined" "countermined" "countermining";
lin countermine_V2 = mkV2 (mkV "countermine" "countermines" "countermined" "countermined" "countermining");
lin counteroffer_N = mkN "counteroffer" "counteroffers";
lin counterpane_N = mkN "counterpane" "counterpanes";
lin counterpart_N = mkN "counterpart" "counterparts";
lin counterplot_N = mkN "counterplot" "counterplots";
lin counterplot_V = mkV "counterplot" "counterplots" "counterplotted" "counterplotted" "counterplotting";
lin counterplot_V2 = mkV2 (mkV "counterplot" "counterplots" "counterplotted" "counterplotted" "counterplotting");
lin counterpoint_N = mkN "counterpoint" "counterpoints";
lin counterpoise_N = mkN "counterpoise" "counterpoises";
lin counterpoise_V2 = mkV2 (mkV "counterpoise" "counterpoises" "counterpoised" "counterpoised" "counterpoising");
lin countersign_N = mkN "countersign" "countersigns";
lin countersign_V2 = mkV2 (mkV "countersign" "countersigns" "countersigned" "countersigned" "countersigning");
lin countersink_V2 = mkV2 (mkV "counter" IrregEng.sink_V);
lin countersuing_V2 = mkV2 (mkV "countersuing");
lin countertenor_N = mkN "countertenor" "countertenors";
lin countervail_V = mkV "countervail" "countervails" "countervailed" "countervailed" "countervailing";
lin countervail_V2 = mkV2 (mkV "countervail" "countervails" "countervailed" "countervailed" "countervailing");
lin countess_N = mkN "countess" "countesses";
lin counting_house_N = mkN "counting - house" "counting - houses";
lin countless_A = compoundA (mkA "countless");
lin countrified_A = compoundA (mkA "countrified");
lin country_N = mkN "country" "countries";
lin country_house_N = mkN "country - house" "country - houses";
lin country_seat_N = mkN "country - seat" "country - seats";
lin countryman_N = mkN "countryman" "countrymen" {- FIXME: guessed plural form -};
lin countryside_N = mkN "countryside" ;
lin countrywoman_N = mkN "countrywoman" "countrywomen" {- FIXME: guessed plural form -};
lin county_N = mkN "county" "counties";
lin coup_N = mkN "coup" "coups";
lin coup_d'etat_N = mkN "coup d'etat" "IRREG";
lin coup_de_grace_N = mkN "coup de grace" "IRREG";
lin coupe_N = mkN "coupé" "coupés";
lin couple_N = mkN "couple" "couples";
lin couple_V = mkV "couple" "couples" "coupled" "coupled" "coupling";
lin couple_V2 = mkV2 (mkV "couple" "couples" "coupled" "coupled" "coupling");
lin couplet_N = mkN "couplet" "couplets";
lin coupling_N = mkN "coupling" "couplings";
lin coupon_N = mkN "coupon" "coupons";
lin courage_N = mkN "courage" ;
lin courageous_A = compoundA (mkA "courageous");
lin courgette_N = mkN "courgette" "courgettes";
lin courier_N = mkN "courier" "couriers";
lin course_N = mkN "course" "courses";
lin course_V = mkV "course" "courses" "coursed" "coursed" "coursing";
lin course_V2 = mkV2 (mkV "course" "courses" "coursed" "coursed" "coursing");
lin courser_N = mkN "courser" "coursers";
lin coursing_N = mkN "coursing" "coursings";
lin court_N = mkN "court" "courts";
lin court_V = mkV "court" "courts" "courted" "courted" "courting";
lin court_V2 = mkV2 (mkV "court" "courts" "courted" "courted" "courting");
lin court_card_N = mkN "court - card" "court - cards";
lin court_martial_N = mkN "court - martial" "courts - martial";
lin court_martial_V2 = mkV2 (mkV "court - martial" "court - martials" "court - martialed" "court - martialed" "court - martialing");
lin courteous_A = compoundA (mkA "courteous");
lin courtesan_N = mkN "courtesan" "courtesans";
lin courtesy_N = mkN "courtesy" "courtesies";
lin courtier_N = mkN "courtier" "courtiers";
lin courtliness_N = mkN "courtliness" ;
lin courtly_A = mkA "courtly" "courtlier";
lin courtroom_N = mkN "courtroom" "courtrooms";
lin courtship_N = mkN "courtship" "courtships";
lin courtyard_N = mkN "courtyard" "courtyards";
lin cousin_N = mkN "cousin" "cousins";
lin cousinly_A = compoundA (mkA "cousinly");
lin cove_N = mkN "cove" "coves";
lin coven_N = mkN "coven" "covens";
lin covenant_N = mkN "covenant" "covenants";
lin covenant_V = mkV "covenant" "covenants" "covenanted" "covenanted" "covenanting";
lin covenant_V2 = mkV2 (mkV "covenant" "covenants" "covenanted" "covenanted" "covenanting");
lin coventry_PN = mkPN "Coventry";
lin cover_N = mkN "cover" "covers";
lin cover_V2 = mkV2 (mkV "cover" "covers" "covered" "covered" "covering");
lin cover_VS = mkVS (mkV "cover");
lin cover_up_N = mkN "cover - up" "cover - ups";
lin coverage_N = mkN "coverage" ;
lin covering_A = compoundA (mkA "covering");
lin covering_N = mkN "covering" "coverings";
lin coverlet_N = mkN "coverlet" "coverlets";
lin covert_A = compoundA (mkA "covert");
lin covert_N = mkN "covert" "coverts";
lin covet_V2 = mkV2 (mkV "covet" "covets" "coveted" "coveted" "coveting");
lin covetous_A = compoundA (mkA "covetous");
lin covetousness_N = mkN "covetousness" ;
lin covey_N = mkN "covey" "coveys";
lin cow_N = mkN "cow" "cows";
lin cow_V2 = mkV2 (mkV "cow" "cows" "cowed" "cowed" "cowing");
lin coward_N = mkN "coward" "cowards";
lin cowardice_N = mkN "cowardice" ;
lin cowardly_A = compoundA (mkA "cowardly");
lin cowbell_N = mkN "cowbell" "cowbells";
lin cowboy_N = mkN "cowboy" "cowboys";
lin cowcatcher_N = mkN "cowcatcher" "cowcatchers";
lin cowdenbeath_PN = mkPN "Cowdenbeath";
lin cower_V = mkV "cower" "cowers" "cowered" "cowered" "cowering";
lin cowes_PN = mkPN "Cowes";
lin cowhand_N = mkN "cowhand" "cowhands";
lin cowherd_N = mkN "cowherd" "cowherds";
lin cowhide_N = mkN "cowhide" "cowhides";
lin cowhouse_N = mkN "cowhouse" "cowhouses";
lin cowl_N = mkN "cowl" "cowls";
lin cowling_N = mkN "cowling" "cowlings";
lin cowman_N = mkN "cowman" "cowmen" {- FIXME: guessed plural form -};
lin cowpox_N = mkN "cowpox" "cowpoxes";
lin cowrie_N = mkN "cowrie" "cowries";
lin cowshed_N = mkN "cowshed" "cowsheds";
lin cowskin_N = mkN "cowskin" "cowskins";
lin cowslip_N = mkN "cowslip" "cowslips";
lin cox_N = mkN "cox" "coxes";
lin cox_V = mkV "cox" "coxes" "coxed" "coxed" "coxing";
lin cox_V2 = mkV2 (mkV "cox" "coxes" "coxed" "coxed" "coxing");
lin coxcomb_N = mkN "coxcomb" "coxcombs";
lin coxswain_N = mkN "coxswain" "coxswains";
lin coy_A = mkA "coy" "coyer";
lin coyness_N = mkN "coyness" ;
lin coyote_N = mkN "coyote" "coyotes";
lin coypu_N = mkN "coypu" "coypus";
lin cozen_V2 = mkV2 (mkV "cozen" "cozens" "cozened" "cozened" "cozening");
lin cozy_A = mkA "cozy" "cozier";
lin cp_PN = mkPN "Cp";
lin cpl_PN = mkPN "Cpl";
lin crab_N = mkN "crab" "crabs";
lin crab_V = mkV "crab" "crabs" "crabbed" "crabbed" "crabbing";
lin crab_V2 = mkV2 (mkV "crab" "crabs" "crabbed" "crabbed" "crabbing");
lin crab_apple_N = mkN "crab - apple" "crab - apples";
lin crabbed_A = compoundA (mkA "crabbed");
lin crack_N = mkN "crack" "cracks";
lin crack_V = mkV "crack" "cracks" "cracked" "cracked" "cracking";
lin crack_V2 = mkV2 (mkV "crack" "cracks" "cracked" "cracked" "cracking");
lin crack_down_N = mkN "crack - down" "crack - downs";
lin crack_up_N = mkN "crack - up" "crack - ups";
lin cracker_N = mkN "cracker" "crackers";
lin crackers_A = compoundA (mkA "crackers");
lin crackle_N = mkN "crackle" ;
lin crackle_V = mkV "crackle" "crackles" "crackled" "crackled" "crackling";
lin crackle_china_N = mkN "crackle - china" ;
lin crackleware_N = mkN "crackleware" ;
lin crackling_N = mkN "crackling" ;
lin crackpot_N = mkN "crackpot" "crackpots";
lin cracksman_N = mkN "cracksman" "cracksmen" {- FIXME: guessed plural form -};
lin cradle_N = mkN "cradle" "cradles";
lin cradle_V2 = mkV2 (mkV "cradle" "cradles" "cradled" "cradled" "cradling");
lin craft_N = mkN "craft" "crafts";
lin craft_V2 = mkV2 (mkV "craft");
lin craftily_Adv = mkAdv "craftily";
lin craftiness_N = mkN "craftiness" ;
lin craftsman_N = mkN "craftsman" "craftsmen" {- FIXME: guessed plural form -};
lin craftsmanship_N = mkN "craftsmanship" ;
lin crafty_A = mkA "crafty" "craftier";
lin crag_N = mkN "crag" "crags";
lin cragged_A = compoundA (mkA "cragged");
lin craggy_A = mkA "craggy" "craggier";
lin cragsman_N = mkN "cragsman" "cragsmen" {- FIXME: guessed plural form -};
lin crake_N = mkN "crake" "crakes";
lin cram_V = mkV "cram" "crams" "crammed" "crammed" "cramming";
lin cram_V2 = mkV2 (mkV "cram" "crams" "crammed" "crammed" "cramming");
lin cram_full_A = compoundA (mkA "cram - full");
lin cram_full_Adv = mkAdv "cram - full";
lin cramlington_PN = mkPN "Cramlington";
lin crammer_N = mkN "crammer" "crammers";
lin cramp_N = mkN "cramp" "cramps";
lin cramp_V2 = mkV2 (mkV "cramp" "cramps" "cramped" "cramped" "cramping");
lin cramp_iron_N = mkN "cramp - iron" "cramp - irons";
lin cramped_A = compoundA (mkA "cramped");
lin crampon_N = mkN "crampon" "crampons";
lin cranberry_N = mkN "cranberry" "cranberries";
lin crane_N = mkN "crane" "cranes";
lin crane_V = mkV "crane" "cranes" "craned" "craned" "craning";
lin crane_V2 = mkV2 (mkV "crane" "cranes" "craned" "craned" "craning");
lin crane_fly_N = mkN "crane - fly" "crane - flies";
lin cranial_A = compoundA (mkA "cranial");
lin cranium_N = mkN "cranium" "craniums";
lin crank_N = mkN "crank" "cranks";
lin crank_V2 = mkV2 (mkV "crank" "cranks" "cranked" "cranked" "cranking");
lin crankshaft_N = mkN "crankshaft" "crankshafts";
lin cranky_A = mkA "cranky" "crankier";
lin crannied_A = compoundA (mkA "crannied");
lin cranny_N = mkN "cranny" "crannies";
lin crap_N = mkN "crap" "craps";
lin crap_V = mkV "crap" "craps" "crapped" "crapped" "crapping";
lin crap_shooting_N = mkN "crap - shooting" "crap - shootings";
lin crape_N = mkN "crape" ;
lin craps_N = mkN "craps" "craps";
lin crash_Adv = mkAdv "crash";
lin crash_N = mkN "crash" "crashes";
lin crash_V = mkV "crash" "crashes" "crashed" "crashed" "crashing";
lin crash_V2 = mkV2 (mkV "crash" "crashes" "crashed" "crashed" "crashing");
lin crash_dive_N = mkN "crash - dive" "crash - dives";
lin crash_dive_V = mkV "crash - dive" "crash - dives" "crash - dived" "crash - dived" "crash - diving";
lin crash_helmet_N = mkN "crash - helmet" "crash - helmets";
lin crash_land_V = mkV "crash - land" "crash - lands" "crash - landed" "crash - landed" "crash - landing";
lin crash_land_V2 = mkV2 (mkV "crash - land" "crash - lands" "crash - landed" "crash - landed" "crash - landing");
lin crash_landing_N = mkN "crash - landing" "crash - landings";
lin crass_A = compoundA (mkA "crass");
lin crate_N = mkN "crate" "crates";
lin crate_V2 = mkV2 (mkV "crate" "crates" "crated" "crated" "crating");
lin crater_N = mkN "crater" "craters";
lin crater_V = mkV "crater";
lin cravat_N = mkN "cravat" "cravats";
lin crave_V = mkV "crave" "craves" "craved" "craved" "craving";
lin crave_V2 = mkV2 (mkV "crave" "craves" "craved" "craved" "craving");
lin craven_A = compoundA (mkA "craven");
lin craven_N = mkN "craven" "cravens";
lin craving_N = mkN "craving" "cravings";
lin crawfish_N = mkN "crawfish" "crawfishes";
lin crawl_N = mkN "crawl" "crawls";
lin crawl_V = mkV "crawl" "crawls" "crawled" "crawled" "crawling";
lin crawler_N = mkN "crawler" "crawlers";
lin crawley_PN = mkPN "Crawley";
lin crayfish_N = mkN "crayfish" "crayfishes";
lin crayon_N = mkN "crayon" "crayons";
lin crayon_V2 = mkV2 (mkV "crayon" "crayons" "crayoned" "crayoned" "crayoning");
lin craze_N = mkN "craze" "crazes";
lin crazed_A = compoundA (mkA "crazed");
lin crazily_Adv = mkAdv "crazily";
lin craziness_N = mkN "craziness" ;
lin crazy_A = mkA "crazy" "crazier";
lin creak_N = mkN "creak" "creaks";
lin creak_V = mkV "creak" "creaks" "creaked" "creaked" "creaking";
lin creakily_Adv = mkAdv "creakily";
lin creaky_A = mkA "creaky" "creakier";
lin cream_N = mkN "cream" "creams";
lin cream_V2 = mkV2 (mkV "cream" "creams" "creamed" "creamed" "creaming");
lin creamery_N = mkN "creamery" "creameries";
lin creamy_A = mkA "creamy" "creamier";
lin crease_N = mkN "crease" "creases";
lin crease_V = mkV "crease" "creases" "creased" "creased" "creasing";
lin crease_V2 = mkV2 (mkV "crease" "creases" "creased" "creased" "creasing");
lin create_V = mkV "create" "creates" "created" "created" "creating";
lin create_V2 = mkV2 (mkV "create" "creates" "created" "created" "creating");
lin create_VV = mkVV (mkV "create" "creates" "created" "created" "creating");
lin creation_N = mkN "creation" "creations";
lin creative_A = compoundA (mkA "creative");
lin creativeness_N = mkN "creativeness" ;
lin creator_N = mkN "creator" "creators";
lin creature_N = mkN "creature" "creatures";
lin creche_N = mkN "crèche" "crèches";
lin credence_N = mkN "credence" ;
lin credibility_N = mkN "credibility" ;
lin credible_A = compoundA (mkA "credible");
lin credit_N = mkN "credit" "credits";
lin credit_V2 = mkV2 (mkV "credit" "credits" "credited" "credited" "crediting");
lin credit_side_N = mkN "credit - side" "credit - sides";
lin credit_worthiness_N = mkN "credit - worthiness" ;
lin credit_worthy_A = compoundA (mkA "credit - worthy");
lin creditable_A = compoundA (mkA "creditable");
lin creditor_N = mkN "creditor" "creditors";
lin credo_N = mkN "credo" "credos";
lin credulity_N = mkN "credulity" "credulities";
lin credulous_A = compoundA (mkA "credulous");
lin creed_N = mkN "creed" "creeds";
lin creek_N = mkN "creek" "creeks";
lin creel_N = mkN "creel" "creels";
lin creep_N = mkN "creep" "creeps";
lin creep_V = IrregEng.creep_V;
lin creeper_N = mkN "creeper" "creepers";
lin creepy_A = mkA "creepy" "creepier";
lin cremate_V2 = mkV2 (mkV "cremate" "cremates" "cremated" "cremated" "cremating");
lin cremation_N = mkN "cremation" "cremations";
lin crematorium_N = mkN "crematorium" "crematoriums";
lin crematory_N = mkN "crematory" "crematories";
lin creme_de_menthe_N = mkN "crème de menthe" ;
lin crenellated_A = compoundA (mkA "crenellated");
lin creole_A = compoundA (mkA "creole");
lin creole_N = mkN "creole" "creoles";
lin creosote_N = mkN "creosote" ;
lin crepe_1_N = mkN "crepe" ;
lin crepe_2_N = mkN "crêpe" ;
lin crepitate_V = mkV "crepitate" "crepitates" "crepitated" "crepitated" "crepitating";
lin crepitation_N = mkN "crepitation" "crepitations";
lin crepuscular_A = compoundA (mkA "crepuscular");
lin cres_PN = mkPN "Cres";
lin crescendo_N = mkN "crescendo" "crescendos";
lin crescent_N = mkN "crescent" "crescents";
lin cress_N = mkN "cress" ;
lin crest_N = mkN "crest" "crests";
lin crest_V = mkV "crest" "crests" "crested" "crested" "cresting";
lin crest_V2 = mkV2 (mkV "crest" "crests" "crested" "crested" "cresting");
lin crested_A = compoundA (mkA "crested");
lin crestfallen_A = compoundA (mkA "crestfallen");
lin creswell_PN = mkPN "Creswell";
lin cretaceous_A = compoundA (mkA "cretaceous");
lin cretin_N = mkN "cretin" "cretins";
lin cretinous_A = compoundA (mkA "cretinous");
lin cretonne_N = mkN "cretonne" ;
lin crevasse_N = mkN "crevasse" "crevasses";
lin crevice_N = mkN "crevice" "crevices";
lin crew_N = mkN "crew" "crews";
lin crew_V = mkV "crew" "crews" "crewed" "crewed" "crewing";
lin crew_cut_N = mkN "crew - cut" "crew - cuts";
lin crew_neck_N = mkN "crew - neck" "crew - necks";
lin crewe_PN = mkPN "Crewe";
lin crib_N = mkN "crib" "cribs";
lin crib_V = mkV "crib" "cribs" "cribbed" "cribbed" "cribbing";
lin crib_V2 = mkV2 (mkV "crib" "cribs" "cribbed" "cribbed" "cribbing");
lin cribbage_N = mkN "cribbage" ;
lin cribbage_board_N = mkN "cribbage - board" "cribbage - boards";
lin crick_N = mkN "crick" "cricks";
lin crick_V2 = mkV2 (mkV "crick" "cricks" "cricked" "cricked" "cricking");
lin cricket_N = mkN "cricket" "crickets";
lin cricketer_N = mkN "cricketer" "cricketers";
lin crieff_PN = mkPN "Crieff";
lin crier_N = mkN "crier" "criers";
lin crime_N = mkN "crime" "crimes";
lin crime_V2 = mkV2 (mkV "crime" "crimes" "crimed" "crimed" "criming");
lin criminal_A = compoundA (mkA "criminal");
lin criminal_N = mkN "criminal" "criminals";
lin criminalize_V2 = mkV2 (mkV "criminalize");
lin criminology_N = mkN "criminology" ;
lin crimp_V2 = mkV2 (mkV "crimp" "crimps" "crimped" "crimped" "crimping");
lin crimson_A = compoundA (mkA "crimson");
lin crimson_N = mkN "crimson" "crimsons";
lin crimson_V = mkV "crimson" "crimsons" "crimsoned" "crimsoned" "crimsoning";
lin crimson_V2 = mkV2 (mkV "crimson" "crimsons" "crimsoned" "crimsoned" "crimsoning");
lin cringe_V = mkV "cringe" "cringes" "cringed" "cringed" "cringing";
lin crinkle_N = mkN "crinkle" "crinkles";
lin crinkle_V = mkV "crinkle" "crinkles" "crinkled" "crinkled" "crinkling";
lin crinkle_V2 = mkV2 (mkV "crinkle" "crinkles" "crinkled" "crinkled" "crinkling");
lin crinkly_A = mkA "crinkly" "crinklier";
lin crinoline_N = mkN "crinoline" "crinolines";
lin cripple_N = mkN "cripple" "cripples";
lin cripple_V2 = mkV2 (mkV "cripple" "cripples" "crippled" "crippled" "crippling");
lin crisis_N = mkN "crisis" "crises" {- FIXME: guessed plural form -};
lin crisp_A = mkA "crisp" "crisper";
lin crisp_N = mkN "crisp" "crisps";
lin crisp_V = mkV "crisp" "crisps" "crisped" "crisped" "crisping";
lin crisp_V2 = mkV2 (mkV "crisp" "crisps" "crisped" "crisped" "crisping");
lin crispness_N = mkN "crispness" ;
lin criss_cross_V2 = mkV2 (mkV "criss - cross");
lin crisscross_A = compoundA (mkA "crisscross");
lin crisscross_Adv = mkAdv "crisscross";
lin crisscross_V = mkV "crisscross" "crisscrosses" "crisscrossed" "crisscrossed" "crisscrossing";
lin crisscross_V2 = mkV2 (mkV "crisscross" "crisscrosses" "crisscrossed" "crisscrossed" "crisscrossing");
lin criterion_N = mkN "criterion" "criterions";
lin critic_N = mkN "critic" "critics";
lin critical_A = compoundA (mkA "critical");
lin criticism_N = mkN "criticism" "criticisms";
lin criticize_V = mkV "criticize" "criticizes" "criticized" "criticized" "criticizing";
lin criticize_V2 = mkV2 (mkV "criticize" "criticizes" "criticized" "criticized" "criticizing");
lin critique_N = mkN "critique" "critiques";
lin croak_N = mkN "croak" "croaks";
lin croak_V = mkV "croak" "croaks" "croaked" "croaked" "croaking";
lin croak_V2 = mkV2 (mkV "croak" "croaks" "croaked" "croaked" "croaking");
lin crochet_N = mkN "crochet" ;
lin crochet_V = mkV "crochet" "crochets" "crocheted" "crocheted" "crocheting";
lin crochet_V2 = mkV2 (mkV "crochet" "crochets" "crocheted" "crocheted" "crocheting");
lin crochet_hook_N = mkN "crochet - hook" "crochet - hooks";
lin crock_N = mkN "crock" "crocks";
lin crock_V = mkV "crock" "crocks" "crocked" "crocked" "crocking";
lin crock_V2 = mkV2 (mkV "crock" "crocks" "crocked" "crocked" "crocking");
lin crockery_N = mkN "crockery" ;
lin crocodile_N = mkN "crocodile" "crocodiles";
lin crocus_N = mkN "crocus" "crocuses";
lin croesus_PN = mkPN "Croesus";
lin croft_N = mkN "croft" "crofts";
lin crofter_N = mkN "crofter" "crofters";
lin cromer_PN = mkPN "Cromer";
lin cromlech_N = mkN "cromlech" "cromlechs";
lin crone_N = mkN "crone" "crones";
lin crony_N = mkN "crony" "cronies";
lin crook_N = mkN "crook" "crooks";
lin crook_PN = mkPN "Crook";
lin crook_V = mkV "crook" "crooks" "crooked" "crooked" "crooking";
lin crook_V2 = mkV2 (mkV "crook" "crooks" "crooked" "crooked" "crooking");
lin crook_back_A = compoundA (mkA "crook - back");
lin crook_backed_A = compoundA (mkA "crook - backed");
lin crooked_A = compoundA (mkA "crooked");
lin crookedness_N = mkN "crookedness" ;
lin croon_V = mkV "croon" "croons" "crooned" "crooned" "crooning";
lin croon_V2 = mkV2 (mkV "croon" "croons" "crooned" "crooned" "crooning");
lin crooner_N = mkN "crooner" "crooners";
lin crop_N = mkN "crop" "crops";
lin crop_V = mkV "crop" "crops" "cropped" "cropped" "cropping";
lin crop_V2 = mkV2 (mkV "crop" "crops" "cropped" "cropped" "cropping");
lin crop_dusting_N = mkN "crop - dusting" ;
lin cropper_N = mkN "cropper" "croppers";
lin croquet_N = mkN "croquet" ;
lin croquette_N = mkN "croquette" "croquettes";
lin crore_N = mkN "crore" "crores";
lin crosby_PN = mkPN "Crosby";
lin crosier_N = mkN "crosier" "crosiers";
lin cross_A = compoundA (mkA "cross");
lin cross_N = mkN "cross" "crosses";
lin cross_V = mkV "cross" "crosses" "crossed" "crossed" "crossing";
lin cross_V2 = mkV2 (mkV "cross" "crosses" "crossed" "crossed" "crossing");
lin cross_bench_N = mkN "cross - bench" "cross - benches";
lin cross_bencher_N = mkN "cross - bencher" "cross - benchers";
lin cross_division_N = mkN "cross - division" "cross - divisions";
lin cross_examination_N = mkN "cross - examination" "cross - examinations";
lin cross_examine_V2 = mkV2 (mkV "cross - examine" "cross - examines" "cross - examined" "cross - examined" "cross - examining");
lin cross_examiner_N = mkN "cross - examiner" "cross - examiners";
lin cross_fertilization_N = mkN "cross - fertilization" "cross - fertilizations";
lin cross_fertilize_V2 = mkV2 (mkV "cross - fertilize" "cross - fertilizes" "cross - fertilized" "cross - fertilized" "cross - fertilizing");
lin cross_grained_A = compoundA (mkA "cross - grained");
lin cross_heading_N = mkN "cross - heading" "cross - headings";
lin cross_index_N = mkN "cross - index" "cross - indexes";
lin cross_index_V2 = mkV2 (mkV "cross - index" "cross - indexes" "cross - indexed" "cross - indexed" "cross - indexing");
lin cross_legged_Adv = mkAdv "cross - legged";
lin cross_question_V2 = mkV2 (mkV "cross - question" "cross - questions" "cross - questioned" "cross - questioned" "cross - questioning");
lin cross_reference_N = mkN "cross - reference" "cross - references";
lin cross_section_N = mkN "cross - section" "cross - sections";
lin cross_stitch_N = mkN "cross - stitch" "cross - stitches";
lin crossbar_N = mkN "crossbar" "crossbars";
lin crossbeam_N = mkN "crossbeam" "crossbeams";
lin crossbow_N = mkN "crossbow" "crossbows";
lin crossbred_A = compoundA (mkA "crossbred");
lin crossbreed_N = mkN "crossbreed" "crossbreeds";
lin crossbreed_V2 = mkV2 (mkV "cross" IrregEng.breed_V);
lin crosscheck_N = mkN "crosscheck" "crosschecks";
lin crosscheck_V = mkV "crosscheck" "crosschecks" "crosschecked" "crosschecked" "crosschecking";
lin crosscheck_V2 = mkV2 (mkV "crosscheck" "crosschecks" "crosschecked" "crosschecked" "crosschecking");
lin crosscountry_A = compoundA (mkA "crosscountry");
lin crosscountry_Adv = mkAdv "crosscountry";
lin crosscurrent_N = mkN "crosscurrent" "crosscurrents";
lin crosscut_A = compoundA (mkA "crosscut");
lin crosscut_N = mkN "crosscut" "crosscuts";
lin crosse_N = mkN "crosse" "crosses";
lin crosseyed_A = compoundA (mkA "crosseyed");
lin crossfire_N = mkN "crossfire" "crossfires";
lin crossing_N = mkN "crossing" "crossings";
lin crossness_N = mkN "crossness" ;
lin crosspatch_N = mkN "crosspatch" "crosspatches";
lin crosspiece_N = mkN "crosspiece" "crosspieces";
lin crossroad_N = mkN "crossroad" "crossroads";
lin crosstalk_N = mkN "crosstalk" ;
lin crosswalk_N = mkN "crosswalk" "crosswalks";
lin crosswind_N = mkN "crosswind" "crosswinds";
lin crosswise_Adv = mkAdv "crosswise";
lin crossword_N = mkN "crossword" "crosswords";
lin crotch_N = mkN "crotch" "crotches";
lin crotchet_N = mkN "crotchet" "crotchets";
lin crotchety_A = compoundA (mkA "crotchety");
lin crouch_N = mkN "crouch" "crouches";
lin crouch_V = mkV "crouch" "crouches" "crouched" "crouched" "crouching";
lin crouch_V2 = mkV2 (mkV "crouch" "crouches" "crouched" "crouched" "crouching");
lin croup_N = mkN "croup" "croups";
lin croupier_N = mkN "croupier" "croupiers";
lin crow's_nest_N = mkN "crow's - nest" "crow's - nests";
lin crow_N = mkN "crow" "crows";
lin crow_V = mkV "crow" "crows" "crowed" "crowed" "crowing";
lin crow_VS = mkVS (mkV "crow" "crows" "crowed" "crowed" "crowing");
lin crowbar_N = mkN "crowbar" "crowbars";
lin crowborough_PN = mkPN "Crowborough";
lin crowd_N = mkN "crowd" "crowds";
lin crowd_V = mkV "crowd" "crowds" "crowded" "crowded" "crowding";
lin crowd_V2 = mkV2 (mkV "crowd" "crowds" "crowded" "crowded" "crowding");
lin crowded_A = compoundA (mkA "crowded");
lin crown_N = mkN "crown" "crowns";
lin crown_V2 = mkV2 (mkV "crown" "crowns" "crowned" "crowned" "crowning");
lin crown_land_N = mkN "crown - land" "crown - lands";
lin crowning_A = compoundA (mkA "crowning");
lin crowthorne_PN = mkPN "Crowthorne";
lin croydon_PN = mkPN "Croydon";
lin crozier_N = mkN "crozier" "croziers";
lin crucial_A = compoundA (mkA "crucial");
lin crucible_N = mkN "crucible" "crucibles";
lin crucifix_N = mkN "crucifix" "crucifixes";
lin crucifixion_N = mkN "crucifixion" "crucifixions";
lin cruciform_A = compoundA (mkA "cruciform");
lin crucify_V2 = mkV2 (mkV "crucify" "crucifies" "crucified" "crucified" "crucifying");
lin crude_A = mkA "crude" "cruder";
lin crudeness_N = mkN "crudeness" ;
lin crudity_N = mkN "crudity" "crudities";
lin cruel_A = mkA "cruel" "crueller*";
lin cruelty_N = mkN "cruelty" "cruelties";
lin cruet_N = mkN "cruet" "cruets";
lin cruet_stand_N = mkN "cruet - stand" "cruet - stands";
lin cruise_N = mkN "cruise" "cruises";
lin cruise_V = mkV "cruise" "cruises" "cruised" "cruised" "cruising";
lin cruiser_N = mkN "cruiser" "cruisers";
lin crumb_N = mkN "crumb" "crumbs";
lin crumble_V = mkV "crumble" "crumbles" "crumbled" "crumbled" "crumbling";
lin crumble_V2 = mkV2 (mkV "crumble" "crumbles" "crumbled" "crumbled" "crumbling");
lin crumbly_A = mkA "crumbly" "crumblier";
lin crumpet_N = mkN "crumpet" "crumpets";
lin crumple_V = mkV "crumple" "crumples" "crumpled" "crumpled" "crumpling";
lin crumple_V2 = mkV2 (mkV "crumple" "crumples" "crumpled" "crumpled" "crumpling");
lin crunch_N = mkN "crunch" "crunches";
lin crunch_V = mkV "crunch" "crunches" "crunched" "crunched" "crunching";
lin crunch_V2 = mkV2 (mkV "crunch" "crunches" "crunched" "crunched" "crunching");
lin crupper_N = mkN "crupper" "cruppers";
lin crusade_N = mkN "crusade" "crusades";
lin crusade_V = mkV "crusade" "crusades" "crusaded" "crusaded" "crusading";
lin crusader_N = mkN "crusader" "crusaders";
lin cruse_N = mkN "cruse" "cruses";
lin crush_N = mkN "crush" ;
lin crush_V = mkV "crush" "crushes" "crushed" "crushed" "crushing";
lin crush_V2 = mkV2 (mkV "crush" "crushes" "crushed" "crushed" "crushing");
lin crushing_A = compoundA (mkA "crushing");
lin crust_N = mkN "crust" "crusts";
lin crust_V = mkV "crust" "crusts" "crusted" "crusted" "crusting";
lin crust_V2 = mkV2 (mkV "crust" "crusts" "crusted" "crusted" "crusting");
lin crustacean_N = mkN "crustacean" "crustaceans";
lin crusted_A = compoundA (mkA "crusted");
lin crusty_A = mkA "crusty" "crustier";
lin crutch_N = mkN "crutch" "crutches";
lin crux_N = mkN "crux" "cruxes";
lin cruzeiro_N = mkN "cruzeiro" "cruzeiros";
lin cry_N = mkN "cry" "cries";
lin cry_V = mkV "cry" "cries" "cried" "cried" "crying";
lin cry_V2 = mkV2 (mkV "cry" "cries" "cried" "cried" "crying");
lin crybaby_N = mkN "crybaby" "crybabies";
lin crying_A = compoundA (mkA "crying");
lin crypt_N = mkN "crypt" "crypts";
lin cryptic_A = compoundA (mkA "cryptic");
lin cryptically_Adv = mkAdv "cryptically";
lin cryptogram_N = mkN "cryptogram" "cryptograms";
lin crystal_N = mkN "crystal" "crystals";
lin crystal_gazing_N = mkN "crystal - gazing" ;
lin crystalline_A = compoundA (mkA "crystalline");
lin crystallization_N = mkN "crystallization" "crystallizations";
lin crystallize_V = mkV "crystallize" "crystallizes" "crystallized" "crystallized" "crystallizing";
lin crystallize_V2 = mkV2 (mkV "crystallize" "crystallizes" "crystallized" "crystallized" "crystallizing");
lin crystallography_N = mkN "crystallography" ;
lin cub_N = mkN "cub" "cubs";
lin cuba_PN = mkPN "Cuba";
lin cuban_A = compoundA (mkA "cuban");
lin cuban_N = mkN "cuban" "cubans";
lin cubbyhole_N = mkN "cubbyhole" "cubbyholes";
lin cube_N = mkN "cube" "cubes";
lin cube_V2 = mkV2 (mkV "cube" "cubes" "cubed" "cubed" "cubing");
lin cubic_A = compoundA (mkA "cubic");
lin cubical_A = compoundA (mkA "cubical");
lin cubicle_N = mkN "cubicle" "cubicles";
lin cubism_N = mkN "cubism" ;
lin cubist_N = mkN "cubist" "cubists";
lin cubit_N = mkN "cubit" "cubits";
lin cuckold_N = mkN "cuckold" "cuckolds";
lin cuckold_V2 = mkV2 (mkV "cuckold" "cuckolds" "cuckolded" "cuckolded" "cuckolding");
lin cuckoo_N = mkN "cuckoo" "cuckoos";
lin cuckoo_clock_N = mkN "cuckoo - clock" "cuckoo - clocks";
lin cucumber_N = mkN "cucumber" "cucumbers";
lin cud_N = mkN "cud" ;
lin cuddle_N = mkN "cuddle" "cuddles";
lin cuddle_V = mkV "cuddle" "cuddles" "cuddled" "cuddled" "cuddling";
lin cuddle_V2 = mkV2 (mkV "cuddle" "cuddles" "cuddled" "cuddled" "cuddling");
lin cuddlesome_A = compoundA (mkA "cuddlesome");
lin cuddly_A = mkA "cuddly" "cuddlier";
lin cudgel_N = mkN "cudgel" "cudgels";
lin cudgel_V2 = mkV2 (mkV "cudgel" "cudgels" "cudgeled" "cudgeled" "cudgeling");
lin cudworth_PN = mkPN "Cudworth";
lin cue_N = mkN "cue" "cues";
lin cuff_N = mkN "cuff" "cuffs";
lin cuff_V2 = mkV2 (mkV "cuff" "cuffs" "cuffed" "cuffed" "cuffing");
lin cuffley_PN = mkPN "Cuffley";
lin cuirass_N = mkN "cuirass" "cuirasses";
lin cuirassier_N = mkN "cuirassier" "cuirassiers";
lin cuisine_N = mkN "cuisine" ;
lin cul_de_sac_N = mkN "cul - de - sac" "cul - de - sacs";
lin culcheth_PN = mkPN "Culcheth";
lin culinary_A = compoundA (mkA "culinary");
lin cull_N = mkN "cull" "culls";
lin cull_V2 = mkV2 (mkV "cull" "culls" "culled" "culled" "culling");
lin cullender_N = mkN "cullender" "cullenders";
lin culminate_V = mkV "culminate";
lin culminate_V2 = mkV2 (mkV "culminate" "culminates" "culminated" "culminated" "culminating");
lin culmination_N = mkN "culmination" "culminations";
lin culpability_N = mkN "culpability" ;
lin culpable_A = compoundA (mkA "culpable");
lin culprit_N = mkN "culprit" "culprits";
lin cult_N = mkN "cult" "cults";
lin cultivable_A = compoundA (mkA "cultivable");
lin cultivate_V2 = mkV2 (mkV "cultivate" "cultivates" "cultivated" "cultivated" "cultivating");
lin cultivated_A = compoundA (mkA "cultivated");
lin cultivation_N = mkN "cultivation" ;
lin cultivator_N = mkN "cultivator" "cultivators";
lin cultural_A = compoundA (mkA "cultural");
lin culture_N = mkN "culture" "cultures";
lin cultured_A = compoundA (mkA "cultured");
lin culvert_N = mkN "culvert" "culverts";
lin cumber_V2 = mkV2 (mkV "cumber" "cumbers" "cumbered" "cumbered" "cumbering");
lin cumberland_PN = mkPN "Cumberland";
lin cumbernauld_PN = mkPN "Cumbernauld";
lin cumbersome_A = compoundA (mkA "cumbersome");
lin cumbria_PN = mkPN "Cumbria";
lin cumbrous_A = compoundA (mkA "cumbrous");
lin cummerbund_N = mkN "cummerbund" "cummerbunds";
lin cumnock_PN = mkPN "Cumnock";
lin cumulative_A = compoundA (mkA "cumulative");
lin cumulus_N = mkN "cumulus" "cumuli" {- FIXME: guessed plural form -};
lin cuneiform_A = compoundA (mkA "cuneiform");
lin cunning_A = compoundA (mkA "cunning");
lin cunning_N = mkN "cunning" ;
lin cunt_N = mkN "cunt" "cunts";
lin cup_N = mkN "cup" "cups";
lin cup_V2 = mkV2 (mkV "cup" "cups" "cupped" "cupped" "cupping");
lin cup_bearer_N = mkN "cup - bearer" "cup - bearers";
lin cup_final_N = mkN "cup - final" "cup - finals";
lin cup_tie_N = mkN "cup - tie" "cup - ties";
lin cupar_PN = mkPN "Cupar";
lin cupboard_N = mkN "cupboard" "cupboards";
lin cupboard_love_N = mkN "cupboard - love" ;
lin cupful_N = mkN "cupful" "cupfuls";
lin cupid_PN = mkPN "Cupid";
lin cupidity_N = mkN "cupidity" ;
lin cupola_N = mkN "cupola" "cupolas";
lin cuppa_N = mkN "cuppa" "cuppas";
lin cupping_N = mkN "cupping" ;
lin cupric_A = compoundA (mkA "cupric");
lin cupro_nickel_N = mkN "cupro - nickel" ;
lin cur_N = mkN "cur" "curs";
lin curability_N = mkN "curability" ;
lin curable_A = compoundA (mkA "curable");
lin curacao_N = mkN "curaçao" ;
lin curacoa_N = mkN "curaçoa" ;
lin curacy_N = mkN "curacy" "curacies";
lin curate_N = mkN "curate" "curates";
lin curative_A = compoundA (mkA "curative");
lin curator_N = mkN "curator" "curators";
lin curb_N = mkN "curb" "curbs";
lin curb_V2 = mkV2 (mkV "curb" "curbs" "curbed" "curbed" "curbing");
lin curd_N = mkN "curd" "curds";
lin curdle_V = mkV "curdle" "curdles" "curdled" "curdled" "curdling";
lin curdle_V2 = mkV2 (mkV "curdle" "curdles" "curdled" "curdled" "curdling");
lin cure_1_N = mkN "cure" "cures";
lin cure_2_N = mkN "curé" "curés";
lin cure_V = mkV "cure" "cures" "cured" "cured" "curing";
lin cure_V2 = mkV2 (mkV "cure" "cures" "cured" "cured" "curing");
lin cure_all_N = mkN "cure - all" "cure - alls";
lin curfew_N = mkN "curfew" "curfews";
lin curio_N = mkN "curio" "curios";
lin curiosity_N = mkN "curiosity" "curiosities";
lin curious_A = compoundA (mkA "curious");
lin curitiba_PN = mkPN "Curitiba";
lin curl_N = mkN "curl" "curls";
lin curl_V = mkV "curl" "curls" "curled" "curled" "curling";
lin curl_V2 = mkV2 (mkV "curl" "curls" "curled" "curled" "curling");
lin curler_N = mkN "curler" "curlers";
lin curlew_N = mkN "curlew" "curlews";
lin curling_N = mkN "curling" ;
lin curly_A = mkA "curly" "curlier";
lin curmudgeon_N = mkN "curmudgeon" "curmudgeons";
lin currant_N = mkN "currant" "currants";
lin currency_N = mkN "currency" "currencies";
lin current_A = compoundA (mkA "current");
lin current_N = mkN "current" "currents";
lin curriculum_N = mkN "curriculum" "curriculums";
lin curriculum_vitae_N = mkN "curriculum vitae" "curricula vitae";
lin currie_PN = mkPN "Currie";
lin currish_A = compoundA (mkA "currish");
lin curry_N = mkN "curry" "curries";
lin curry_V2 = mkV2 (mkV "curry" "curries" "curried" "curried" "currying");
lin curry_powder_N = mkN "curry - powder" "curry - powders";
lin curse_N = mkN "curse" "curses";
lin curse_V = mkV "curse" "curses" "cursed" "cursed" "cursing";
lin curse_V2 = mkV2 (mkV "curse" "curses" "cursed" "cursed" "cursing");
lin cursed_A = compoundA (mkA "cursed");
lin cursive_A = compoundA (mkA "cursive");
lin cursory_A = compoundA (mkA "cursory");
lin curst_A = compoundA (mkA "curst");
lin curt_A = compoundA (mkA "curt");
lin curtail_V2 = mkV2 (mkV "curtail" "curtails" "curtailed" "curtailed" "curtailing");
lin curtailment_N = mkN "curtailment" "curtailments";
lin curtain_N = mkN "curtain" "curtains";
lin curtain_V2 = mkV2 (mkV "curtain" "curtains" "curtained" "curtained" "curtaining");
lin curtain_call_N = mkN "curtain - call" "curtain - calls";
lin curtain_lecture_N = mkN "curtain - lecture" "curtain - lectures";
lin curtain_raiser_N = mkN "curtain - raiser" "curtain - raisers";
lin curtness_N = mkN "curtness" ;
lin curtsey_N = mkN "curtsey" "curtseys";
lin curtsey_V = mkV "curtsey" "curtseys" "curtseyed" "curtseyed" "curtseying";
lin curtsy_N = mkN "curtsy" "curtsies";
lin curtsy_V = mkV "curtsy" "curtsies" "curtsied" "curtsied" "curtsying";
lin curvature_N = mkN "curvature" ;
lin curve_N = mkN "curve" "curves";
lin curve_V = mkV "curve" "curves" "curved" "curved" "curving";
lin curve_V2 = mkV2 (mkV "curve" "curves" "curved" "curved" "curving");
lin cushion_N = mkN "cushion" "cushions";
lin cushion_V2 = mkV2 (mkV "cushion" "cushions" "cushioned" "cushioned" "cushioning");
lin cushy_A = mkA "cushy" "cushier";
lin cusp_N = mkN "cusp" "cusps";
lin cuspidor_N = mkN "cuspidor" "cuspidors";
lin cuss_N = mkN "cuss" "cusses";
lin cussed_A = compoundA (mkA "cussed");
lin cussedness_N = mkN "cussedness" ;
lin custard_N = mkN "custard" "custards";
lin custodial_A = compoundA (mkA "custodial");
lin custodian_N = mkN "custodian" "custodians";
lin custody_N = mkN "custody" ;
lin custom_N = mkN "custom" "customs";
lin custom_built_A = compoundA (mkA "custom - built");
lin custom_made_A = compoundA (mkA "custom - made");
lin customary_A = compoundA (mkA "customary");
lin customer_N = mkN "customer" "customers";
lin customize_V2 = mkV2 (mkV "customize");
lin cut_N = mkN "cut" "cuts";
lin cut_V = IrregEng.cut_V;
lin cut_V2 = mkV2 (IrregEng.cut_V);
lin cut_VS = mkVS (IrregEng.cut_V);
lin cut_out_N = mkN "cut - out" "cut - outs";
lin cut_price_A = compoundA (mkA "cut - price");
lin cut_rate_A = compoundA (mkA "cut - rate");
lin cut_throat_A = compoundA (mkA "cut - throat");
lin cut_throat_N = mkN "cut - throat" "cut - throats";
lin cutback_N = mkN "cutback" "cutbacks";
lin cute_A = mkA "cute" "cuter";
lin cuteness_N = mkN "cuteness" ;
lin cuticle_N = mkN "cuticle" "cuticles";
lin cutlass_N = mkN "cutlass" "cutlasses";
lin cutler_N = mkN "cutler" "cutlers";
lin cutlery_N = mkN "cutlery" ;
lin cutlet_N = mkN "cutlet" "cutlets";
lin cutpurse_N = mkN "cutpurse" "cutpurses";
lin cutter_N = mkN "cutter" "cutters";
lin cutting_A = compoundA (mkA "cutting");
lin cutting_N = mkN "cutting" "cuttings";
lin cutting_room_N = mkN "cutting - room" "cutting - rooms";
lin cuttlefish_N = mkN "cuttlefish" "cuttlefishes";
lin cutworm_N = mkN "cutworm" "cutworms";
lin cwmbran_PN = mkPN "Cwmbran";
lin cwt_N = mkN "cwt" "cwt";
lin cyanide_N = mkN "cyanide" ;
lin cybernetic_A = compoundA (mkA "cybernetic");
lin cybernetics_N = mkN "cybernetics" "cybernetics";
lin cyclamen_N = mkN "cyclamen" "cyclamens";
lin cycle_N = mkN "cycle" "cycles";
lin cycle_V = mkV "cycle" "cycles" "cycled" "cycled" "cycling";
lin cyclic_A = compoundA (mkA "cyclic");
lin cyclical_A = compoundA (mkA "cyclical");
lin cyclist_N = mkN "cyclist" "cyclists";
lin cyclone_N = mkN "cyclone" "cyclones";
lin cyclonic_A = compoundA (mkA "cyclonic");
lin cyclopaedia_N = mkN "cyclopaedia" "cyclopaedias";
lin cyclopean_A = compoundA (mkA "cyclopean");
lin cyclostyle_N = mkN "cyclostyle" "cyclostyles";
lin cyclostyle_V2 = mkV2 (mkV "cyclostyle" "cyclostyles" "cyclostyled" "cyclostyled" "cyclostyling");
lin cyclotron_N = mkN "cyclotron" "cyclotrons";
lin cyder_N = mkN "cyder" "cyders";
lin cygnet_N = mkN "cygnet" "cygnets";
lin cylinder_N = mkN "cylinder" "cylinders";
lin cylindrical_A = compoundA (mkA "cylindrical");
lin cymbal_N = mkN "cymbal" "cymbals";
lin cynic_N = mkN "cynic" "cynics";
lin cynical_A = compoundA (mkA "cynical");
lin cynicism_N = mkN "cynicism" "cynicisms";
lin cynosure_N = mkN "cynosure" "cynosures";
lin cynthia_PN = mkPN "Cynthia";
lin cypher_N = mkN "cypher" "cyphers";
lin cypher_V = mkV "cypher" "cyphers" "cyphered" "cyphered" "cyphering";
lin cypher_V2 = mkV2 (mkV "cypher" "cyphers" "cyphered" "cyphered" "cyphering");
lin cypress_N = mkN "cypress" "cypresses";
lin cyprian_A = compoundA (mkA "cyprian");
lin cypriot_A = compoundA (mkA "cypriot");
lin cypriot_N = mkN "cypriot" "cypriots";
lin cyprus_PN = mkPN "Cyprus";
lin cyril_PN = mkPN "Cyril";
lin cyrillic_A = compoundA (mkA "cyrillic");
lin cyst_N = mkN "cyst" "cysts";
lin czar_N = mkN "czar" "czars";
lin czarina_N = mkN "czarina" "czarinas";
lin czech_A = compoundA (mkA "czech");
lin czech_N = mkN "czech" "czechs";
lin czechoslovak_A = compoundA (mkA "czechoslovak");
lin czechoslovak_N = mkN "czechoslovak" "czechoslovaks";
lin czechoslovakia_PN = mkPN "Czechoslovakia";
lin czechoslovakian_A = compoundA (mkA "czechoslovakian");
lin czechoslovakian_N = mkN "czechoslovakian" "czechoslovakians";
lin d_day_PN = mkPN "D - day";
lin dab_N = mkN "dab" "dabs";
lin dab_V = mkV "dab" "dabs" "dabbed" "dabbed" "dabbing";
lin dab_V2 = mkV2 (mkV "dab" "dabs" "dabbed" "dabbed" "dabbing");
lin dabble_V = mkV "dabble" "dabbles" "dabbled" "dabbled" "dabbling";
lin dabble_V2 = mkV2 (mkV "dabble" "dabbles" "dabbled" "dabbled" "dabbling");
lin dabbler_N = mkN "dabbler" "dabblers";
lin dacca_PN = mkPN "Dacca";
lin dace_N = mkN "dace" "dace";
lin dacha_N = mkN "dacha" "dachas";
lin dachshund_N = mkN "dachshund" "dachshunds";
lin dacoit_N = mkN "dacoit" "dacoits";
lin dacoity_N = mkN "dacoity" "dacoities";
lin dactyl_N = mkN "dactyl" "dactyls";
lin dactylic_A = compoundA (mkA "dactylic");
lin dad_N = mkN "dad" "dads";
lin daddy_N = mkN "daddy" "daddies";
lin daddy_longlegs_N = mkN "daddy - longlegs" "daddy - longlegs";
lin dado_N = mkN "dado" "dados";
lin daemon_N = mkN "daemon" "daemons";
lin daffodil_N = mkN "daffodil" "daffodils";
lin daft_A = mkA "daft" "dafter";
lin dagger_N = mkN "dagger" "daggers";
lin dago_N = mkN "dago" "dagos";
lin daguerreotype_N = mkN "daguerreotype" "daguerreotypes";
lin dahlia_N = mkN "dahlia" "dahlias";
lin dail_eireann_N = mkN "dail eireann" "IRREG";
lin daily_A = compoundA (mkA "daily");
lin daily_Adv = mkAdv "daily";
lin daily_N = mkN "daily" "dailies";
lin daintily_Adv = mkAdv "daintily";
lin daintiness_N = mkN "daintiness" ;
lin dainty_A = mkA "dainty" "daintier";
lin dainty_N = mkN "dainty" "dainties";
lin dairy_N = mkN "dairy" "dairies";
lin dairy_farm_N = mkN "dairy - farm" "dairy - farms";
lin dairy_farming_N = mkN "dairy - farming" ;
lin dairying_N = mkN "dairying" ;
lin dairymaid_N = mkN "dairymaid" "dairymaids";
lin dairyman_N = mkN "dairyman" "dairymen" {- FIXME: guessed plural form -};
lin dais_N = mkN "dais" "daises";
lin daisy_N = mkN "daisy" "daisies";
lin daisy_PN = mkPN "Daisy";
lin dakar_PN = mkPN "Dakar";
lin dakota_PN = mkPN "Dakota";
lin dale_N = mkN "dale" "dales";
lin dalesman_N = mkN "dalesman" "dalesmen" {- FIXME: guessed plural form -};
lin dalkeith_PN = mkPN "Dalkeith";
lin dallas_PN = mkPN "Dallas";
lin dalliance_N = mkN "dalliance" ;
lin dally_V = mkV "dally" "dallies" "dallied" "dallied" "dallying";
lin dalmatian_N = mkN "dalmatian" "dalmatians";
lin dalry_PN = mkPN "Dalry";
lin dalton_PN = mkPN "Dalton";
lin dam_N = mkN "dam" "dams";
lin dam_V2 = mkV2 (mkV "dam" "dams" "dammed" "dammed" "damming");
lin damage_N = mkN "damage" "damages";
lin damage_V2 = mkV2 (mkV "damage" "damages" "damaged" "damaged" "damaging");
lin damascene_A = compoundA (mkA "damascene");
lin damascene_V2 = mkV2 (mkV "damascene" "damascenes" "damascened" "damascened" "damascening");
lin damascus_PN = mkPN "Damascus";
lin damask_N = mkN "damask" ;
lin dame_N = mkN "dame" "dames";
lin damn_A = compoundA (mkA "damn");
lin damn_Adv = mkAdv "damn";
lin damn_N = mkN "damn" "damns";
lin damn_V2 = mkV2 (mkV "damn" "damns" "damned" "damned" "damning");
lin damnable_A = compoundA (mkA "damnable");
lin damnation_N = mkN "damnation" ;
lin damned_A = compoundA (mkA "damned");
lin damned_Adv = mkAdv "damned";
lin damocles_PN = mkPN "Damocles";
lin damp_A = mkA "damp" "damper";
lin damp_N = mkN "damp" ;
lin damp_V = mkV "damp" "damps" "damped" "damped" "damping";
lin damp_V2 = mkV2 (mkV "damp" "damps" "damped" "damped" "damping");
lin dampen_V = mkV "dampen" "dampens" "dampened" "dampened" "dampening";
lin dampen_V2 = mkV2 (mkV "dampen" "dampens" "dampened" "dampened" "dampening");
lin damper_N = mkN "damper" "dampers";
lin dampish_A = compoundA (mkA "dampish");
lin dampness_N = mkN "dampness" ;
lin damsel_N = mkN "damsel" "damsels";
lin damson_N = mkN "damson" "damsons";
lin dan_PN = mkPN "Dan";
lin dance_N = mkN "dance" "dances";
lin dance_V = mkV "dance" "dances" "danced" "danced" "dancing";
lin dance_V2 = mkV2 (mkV "dance" "dances" "danced" "danced" "dancing");
lin dance_band_N = mkN "dance - band" "dance - bands";
lin dance_hall_N = mkN "dance - hall" "dance - halls";
lin dance_orchestra_N = mkN "dance - orchestra" "dance - orchestras";
lin dancer_N = mkN "dancer" "dancers";
lin dancing_A = compoundA (mkA "dancing");
lin dancing_N = mkN "dancing" ;
lin dandelion_N = mkN "dandelion" "dandelions";
lin dander_N = mkN "dander" "IRREG";
lin dandified_A = compoundA (mkA "dandified");
lin dandle_V2 = mkV2 (mkV "dandle" "dandles" "dandled" "dandled" "dandling");
lin dandruff_N = mkN "dandruff" ;
lin dandy_A = compoundA (mkA "dandy");
lin dandy_N = mkN "dandy" "dandies";
lin dane_N = mkN "dane" "danes";
lin danger_N = mkN "danger" "dangers";
lin dangerous_A = compoundA (mkA "dangerous");
lin dangle_V = mkV "dangle" "dangles" "dangled" "dangled" "dangling";
lin dangle_V2 = mkV2 (mkV "dangle" "dangles" "dangled" "dangled" "dangling");
lin daniel_N = mkN "daniel" "daniels";
lin daniel_PN = mkPN "Daniel";
lin danish_A = compoundA (mkA "Danish");
lin danish_N = mkN "Danish" ;
lin dank_A = mkA "dank" "danker";
lin danny_PN = mkPN "Danny";
lin danse_macabre_N = mkN "danse macabre" "IRREG";
lin daphne_N = mkN "daphne" "daphnes";
lin daphne_PN = mkPN "Daphne";
lin dapper_A = compoundA (mkA "dapper");
lin dapple_V2 = mkV2 (mkV "dapple" "dapples" "dappled" "dappled" "dappling");
lin dapple_grey_A = compoundA (mkA "dapple - grey");
lin dapple_grey_N = mkN "dapple - grey" "dapple - greys";
lin darby_PN = mkPN "Darby";
lin dare_N = mkN "dare" "dares";
lin dare_V = mkV "dare" "dares" "dared" "dared" "daring";
lin dare_V2 = mkV2 (mkV "dare" "dares" "dared" "dared" "daring");
lin dare_VV = mkVV (mkV "dare" "dares" "dared" "dared" "daring");
lin daredevil_N = mkN "daredevil" "daredevils";
lin darenth_PN = mkPN "Darenth";
lin darfield_PN = mkPN "Darfield";
lin daring_A = compoundA (mkA "daring");
lin daring_N = mkN "daring" ;
lin dark_A = mkA "dark" "darker";
lin dark_N = mkN "dark" ;
lin darken_V = mkV "darken" "darkens" "darkened" "darkened" "darkening";
lin darken_V2 = mkV2 (mkV "darken" "darkens" "darkened" "darkened" "darkening");
lin darkey_N = mkN "darkey" "darkeys";
lin darkie_N = mkN "darkie" "darkies";
lin darkness_N = mkN "darkness" ;
lin darkroom_N = mkN "darkroom" "darkrooms";
lin darky_N = mkN "darky" "darkies";
lin darling_N = mkN "darling" "darlings";
lin darlington_PN = mkPN "Darlington";
lin darmstadt_PN = mkPN "Darmstadt";
lin darn_N = mkN "darn" "darns";
lin darn_V = mkV "darn" "darns" "darned" "darned" "darning";
lin darn_V2 = mkV2 (mkV "darn" "darns" "darned" "darned" "darning");
lin darning_N = mkN "darning" ;
lin darning_needle_N = mkN "darning - needle" "darning - needles";
lin dart_N = mkN "dart" "darts";
lin dart_V = mkV "dart" "darts" "darted" "darted" "darting";
lin dart_V2 = mkV2 (mkV "dart" "darts" "darted" "darted" "darting");
lin dartford_PN = mkPN "Dartford";
lin dartmouth_PN = mkPN "Dartmouth";
lin darwen_PN = mkPN "Darwen";
lin dash_N = mkN "dash" "dashes";
lin dash_V = mkV "dash" "dashes" "dashed" "dashed" "dashing";
lin dash_V2 = mkV2 (mkV "dash" "dashes" "dashed" "dashed" "dashing");
lin dashboard_N = mkN "dashboard" "dashboards";
lin dashing_A = compoundA (mkA "dashing");
lin dastard_N = mkN "dastard" "dastards";
lin dastardly_A = compoundA (mkA "dastardly");
lin data_N = mkN "data" "data";
lin datable_A = compoundA (mkA "datable");
lin date_N = mkN "date" "dates";
lin date_V = mkV "date" "dates" "dated" "dated" "dating";
lin date_V2 = mkV2 (mkV "date" "dates" "dated" "dated" "dating");
lin dated_A = compoundA (mkA "dated");
lin dateless_A = compoundA (mkA "dateless");
lin dateline_N = mkN "dateline" "datelines";
lin dative_A = compoundA (mkA "dative");
lin dative_N = mkN "dative" "datives";
lin datum_N = mkN "datum" "data" {- FIXME: guessed plural form -};
lin daub_N = mkN "daub" "daubs";
lin daub_V = mkV "daub" "daubs" "daubed" "daubed" "daubing";
lin daub_V2 = mkV2 (mkV "daub" "daubs" "daubed" "daubed" "daubing");
lin dauber_N = mkN "dauber" "daubers";
lin daughter_N = mkN "daughter" "daughters";
lin daughter_in_law_N = mkN "daughter - in - law" "daughters - in - law" {- FIXME: guessed plural form -};
lin daughterly_A = compoundA (mkA "daughterly");
lin daunt_V2 = mkV2 (mkV "daunt" "daunts" "daunted" "daunted" "daunting");
lin dauntless_A = compoundA (mkA "dauntless");
lin dauphin_N = mkN "dauphin" "dauphins";
lin dave_PN = mkPN "Dave";
lin davenport_N = mkN "davenport" "davenports";
lin daventry_PN = mkPN "Daventry";
lin davey_PN = mkPN "Davey";
lin david_PN = mkPN "David";
lin davit_N = mkN "davit" "davits";
lin daw_N = mkN "daw" "daws";
lin dawdle_V = mkV "dawdle" "dawdles" "dawdled" "dawdled" "dawdling";
lin dawdle_V2 = mkV2 (mkV "dawdle" "dawdles" "dawdled" "dawdled" "dawdling");
lin dawdler_N = mkN "dawdler" "dawdlers";
lin dawley_PN = mkPN "Dawley";
lin dawlish_PN = mkPN "Dawlish";
lin dawn_N = mkN "dawn" "dawns";
lin dawn_PN = mkPN "Dawn";
lin dawn_V = mkV "dawn" "dawns" "dawned" "dawned" "dawning";
lin day_N = mkN "day" "days";
lin day_boarder_N = mkN "day - boarder" "day - boarders";
lin day_labourer_N = mkN "day - labourer" "day - labourers";
lin day_return_N = mkN "day - return" "day - returns";
lin day_school_N = mkN "day - school" "day - schools";
lin daybook_N = mkN "daybook" "daybooks";
lin dayboy_N = mkN "dayboy" "dayboys";
lin daybreak_N = mkN "daybreak" "daybreaks";
lin daydream_N = mkN "daydream" "daydreams";
lin daydream_V = mkV "daydream" "daydreams" "daydreamed" "daydreamed" "daydreaming";
lin daygirl_N = mkN "daygirl" "daygirls";
lin daylight_N = mkN "daylight" ;
lin daylight_saving_A = compoundA (mkA "daylight - saving");
lin daylight_saving_N = mkN "daylight - saving" ;
lin daylong_A = compoundA (mkA "daylong");
lin daylong_Adv = mkAdv "daylong";
lin dayspring_N = mkN "dayspring" "daysprings";
lin daytime_N = mkN "daytime" "daytimes";
lin dayton_PN = mkPN "Dayton";
lin daze_N = mkN "daze" "dazes";
lin daze_V2 = mkV2 (mkV "daze" "dazes" "dazed" "dazed" "dazing");
lin dazedly_Adv = mkAdv "dazedly";
lin dazzle_N = mkN "dazzle" ;
lin dazzle_V2 = mkV2 (mkV "dazzle" "dazzles" "dazzled" "dazzled" "dazzling");
lin ddt_N = mkN "ddt" ;
lin de_emphasize_V2 = mkV2 (mkV "de - emphasize");
lin de_escalate_V2 = mkV2 (mkV "de - escalate" "de - escalates" "de - escalated" "de - escalated" "de - escalating");
lin de_escalation_N = mkN "de - escalation" "de - escalations";
lin de_facto_A = compoundA (mkA "de facto");
lin de_facto_Adv = mkAdv "de facto";
lin de_ice_V2 = mkV2 (mkV "de - ice" "de - ices" "de - iced" "de - iced" "de - icing");
lin de_jure_A = compoundA (mkA "de jure");
lin de_jure_Adv = mkAdv "de jure";
lin de_luxe_A = compoundA (mkA "de luxe");
lin de_rigeur_A = compoundA (mkA "de rigeur");
lin de_trop_A = compoundA (mkA "de trop");
lin deacon_N = mkN "deacon" "deacons";
lin deaconess_N = mkN "deaconess" "deaconesses";
lin deactivate_V2 = mkV2 (mkV "deactivate");
lin dead_A = compoundA (mkA "dead");
lin dead_Adv = mkAdv "dead";
lin deaden_V2 = mkV2 (mkV "deaden" "deadens" "deadened" "deadened" "deadening");
lin deadline_N = mkN "deadline" "deadlines";
lin deadlock_N = mkN "deadlock" "deadlocks";
lin deadlock_V = mkV "deadlock";
lin deadlocked_A = compoundA (mkA "deadlocked");
lin deadly_A = mkA "deadly" "deadlier";
lin deadpan_A = compoundA (mkA "deadpan");
lin deaf_A = mkA "deaf" "deafer";
lin deaf_aid_N = mkN "deaf - aid" "deaf - aids";
lin deaf_mute_N = mkN "deaf mute" "deaf mutes";
lin deafen_V2 = mkV2 (mkV "deafen" "deafens" "deafened" "deafened" "deafening");
lin deafness_N = mkN "deafness" ;
lin deal_Adv = mkAdv "deal";
lin deal_N = mkN "deal" "deals";
lin deal_PN = mkPN "Deal";
lin deal_V = IrregEng.deal_V;
lin deal_V2 = mkV2 (IrregEng.deal_V);
lin dealer_N = mkN "dealer" "dealers";
lin dealing_N = mkN "dealing" "dealings";
lin dean_N = mkN "dean" "deans";
lin dean_PN = mkPN "Dean";
lin deanery_N = mkN "deanery" "deaneries";
lin dear_A = mkA "dear" "dearer";
lin dear_Adv = mkAdv "dear";
lin dear_N = mkN "dear" "dears";
lin dearest_N = mkN "dearest" "dearests";
lin dearie_N = mkN "dearie" "dearies";
lin dearness_N = mkN "dearness" ;
lin dearth_N = mkN "dearth" "dearths";
lin deary_N = mkN "deary" "dearies";
lin death_N = mkN "death" "deaths";
lin death_mask_N = mkN "death - mask" "death - masks";
lin death_rate_N = mkN "death - rate" "death - rates";
lin death_roll_N = mkN "death - roll" "death - rolls";
lin death_warrant_N = mkN "death - warrant" "death - warrants";
lin deathbed_N = mkN "deathbed" "deathbeds";
lin deathblow_N = mkN "deathblow" "deathblows";
lin deathless_A = compoundA (mkA "deathless");
lin deathlike_A = compoundA (mkA "deathlike");
lin deathly_A = compoundA (mkA "deathly");
lin deathly_Adv = mkAdv "deathly";
lin deathtrap_N = mkN "deathtrap" "deathtraps";
lin deb_N = mkN "deb" "debs";
lin debacle_N = mkN "débâcle" "débâcles";
lin debag_V2 = mkV2 (mkV "debag" "debags" "debagged" "debagged" "debagging");
lin debar_V2 = mkV2 (mkV "debar" "debars" "debarred" "debarred" "debarring");
lin debark_V = mkV "debark" "debarks" "debarked" "debarked" "debarking";
lin debark_V2 = mkV2 (mkV "debark" "debarks" "debarked" "debarked" "debarking");
lin debarkation_N = mkN "debarkation" "debarkations";
lin debase_V2 = mkV2 (mkV "debase" "debases" "debased" "debased" "debasing");
lin debasement_N = mkN "debasement" "debasements";
lin debatable_A = compoundA (mkA "debatable");
lin debate_N = mkN "debate" "debates";
lin debate_V = mkV "debate" "debates" "debated" "debated" "debating";
lin debate_V2 = mkV2 (mkV "debate" "debates" "debated" "debated" "debating");
lin debater_N = mkN "debater" "debaters";
lin debauch_N = mkN "debauch" "debauches";
lin debauch_V2 = mkV2 (mkV "debauch" "debauches" "debauched" "debauched" "debauching");
lin debauchee_N = mkN "debauchee" "debauchees";
lin debauchery_N = mkN "debauchery" "debaucheries";
lin debbie_PN = mkPN "Debbie";
lin debby_PN = mkPN "Debby";
lin debenture_N = mkN "debenture" "debentures";
lin debilitate_V2 = mkV2 (mkV "debilitate" "debilitates" "debilitated" "debilitated" "debilitating");
lin debility_N = mkN "debility" ;
lin debit_N = mkN "debit" "debits";
lin debit_V2 = mkV2 (mkV "debit" "debits" "debited" "debited" "debiting");
lin debit_side_N = mkN "debit - side" "debit - sides";
lin debonair_A = compoundA (mkA "debonair");
lin deborah_PN = mkPN "Deborah";
lin debouch_V = mkV "debouch" "debouches" "debouched" "debouched" "debouching";
lin debouch_V2 = mkV2 (mkV "debouch" "debouches" "debouched" "debouched" "debouching");
lin debrief_V2 = mkV2 (mkV "debrief" "debriefs" "debriefed" "debriefed" "debriefing");
lin debris_1_N = mkN "debris" ;
lin debris_2_N = mkN "débris" ;
lin debt_N = mkN "debt" "debts";
lin debtor_N = mkN "debtor" "debtors";
lin debug_V2 = mkV2 (mkV "debug" "debugs" "debugged" "debugged" "debugging");
lin debunk_V2 = mkV2 (mkV "debunk" "debunks" "debunked" "debunked" "debunking");
lin debut_1_N = mkN "debut" "debuts";
lin debut_2_N = mkN "début" "débuts";
lin debut_V2 = mkV2 (mkV "debut");
lin debutante_1_N = mkN "debutante" "debutantes";
lin debutante_2_N = mkN "débutante" "débutantes";
lin dec_PN = mkPN "Dec";
lin decade_N = mkN "decade" "decades";
lin decadence_N = mkN "decadence" ;
lin decadent_A = compoundA (mkA "decadent");
lin decadent_N = mkN "decadent" "decadents";
lin decalogue_N = mkN "decalogue" "decalogues";
lin decamp_V = mkV "decamp" "decamps" "decamped" "decamped" "decamping";
lin decant_V2 = mkV2 (mkV "decant" "decants" "decanted" "decanted" "decanting");
lin decanter_N = mkN "decanter" "decanters";
lin decapitate_V2 = mkV2 (mkV "decapitate" "decapitates" "decapitated" "decapitated" "decapitating");
lin decapitation_N = mkN "decapitation" "decapitations";
lin decarbonize_V2 = mkV2 (mkV "decarbonize" "decarbonizes" "decarbonized" "decarbonized" "decarbonizing");
lin decasyllabic_A = compoundA (mkA "decasyllabic");
lin decasyllable_N = mkN "decasyllable" "decasyllables";
lin decay_N = mkN "decay" ;
lin decay_V = mkV "decay" "decays" "decayed" "decayed" "decaying";
lin decease_N = mkN "decease" ;
lin decease_V = mkV "decease" "deceases" "deceased" "deceased" "deceasing";
lin deceit_N = mkN "deceit" "deceits";
lin deceitful_A = compoundA (mkA "deceitful");
lin deceitfulness_N = mkN "deceitfulness" ;
lin deceive_V2 = mkV2 (mkV "deceive" "deceives" "deceived" "deceived" "deceiving");
lin deceiver_N = mkN "deceiver" "deceivers";
lin deceivingly_Adv = mkAdv "deceivingly";
lin decelerate_V = mkV "decelerate" "decelerates" "decelerated" "decelerated" "decelerating";
lin decelerate_V2 = mkV2 (mkV "decelerate" "decelerates" "decelerated" "decelerated" "decelerating");
lin december_N = mkN "december" "decembers";
lin december_PN = mkPN "December";
lin decency_N = mkN "decency" "decencies";
lin decent_A = compoundA (mkA "decent");
lin decentralization_N = mkN "decentralization" ;
lin decentralize_V2 = mkV2 (mkV "decentralize" "decentralizes" "decentralized" "decentralized" "decentralizing");
lin deception_N = mkN "deception" "deceptions";
lin deceptive_A = compoundA (mkA "deceptive");
lin decibel_N = mkN "decibel" "decibels";
lin decide_V = mkV "decide" "decides" "decided" "decided" "deciding";
lin decide_V2 = mkV2 (mkV "decide" "decides" "decided" "decided" "deciding");
lin decide_VV = mkVV (mkV "decide" "decides" "decided" "decided" "deciding");
lin decide_VS = mkVS (mkV "decide" "decides" "decided" "decided" "deciding");
lin decided_A = compoundA (mkA "decided");
lin deciduous_A = compoundA (mkA "deciduous");
lin decimal_A = compoundA (mkA "decimal");
lin decimalization_N = mkN "decimalization" ;
lin decimalize_V2 = mkV2 (mkV "decimalize" "decimalizes" "decimalized" "decimalized" "decimalizing");
lin decimate_V2 = mkV2 (mkV "decimate" "decimates" "decimated" "decimated" "decimating");
lin decipher_V2 = mkV2 (mkV "decipher" "deciphers" "deciphered" "deciphered" "deciphering");
lin decipherable_A = compoundA (mkA "decipherable");
lin decision_N = mkN "decision" "decisions";
lin decisive_A = compoundA (mkA "decisive");
lin deck_N = mkN "deck" "decks";
lin deck_V2 = mkV2 (mkV "deck" "decks" "decked" "decked" "decking");
lin decker_N = mkN "decker" "deckers";
lin deckle_edged_A = compoundA (mkA "deckle - edged");
lin declaim_V = mkV "declaim" "declaims" "declaimed" "declaimed" "declaiming";
lin declaim_V2 = mkV2 (mkV "declaim" "declaims" "declaimed" "declaimed" "declaiming");
lin declamation_N = mkN "declamation" "declamations";
lin declamatory_A = compoundA (mkA "declamatory");
lin declarable_A = compoundA (mkA "declarable");
lin declaration_N = mkN "declaration" "declarations";
lin declare_V = mkV "declare" "declares" "declared" "declared" "declaring";
lin declare_V2 = mkV2 (mkV "declare" "declares" "declared" "declared" "declaring");
lin declare_V2V = mkV2V (mkV "declare" "declares" "declared" "declared" "declaring") noPrep to_Prep ;
lin declare_VS = mkVS (mkV "declare" "declares" "declared" "declared" "declaring");
lin declassification_N = mkN "declassification" "declassifications";
lin declassify_V2 = mkV2 (mkV "declassify" "declassifies" "declassified" "declassified" "declassifying");
lin declension_N = mkN "declension" "declensions";
lin declination_N = mkN "declination" "declinations";
lin decline_N = mkN "decline" "declines";
lin decline_V = mkV "decline" "declines" "declined" "declined" "declining";
lin decline_V2 = mkV2 (mkV "decline" "declines" "declined" "declined" "declining");
lin decline_VV = mkVV (mkV "decline" "declines" "declined" "declined" "declining");
lin decline_VS = mkVS (mkV "decline" "declines" "declined" "declined" "declining");
lin declivity_N = mkN "declivity" "declivities";
lin declutch_V = mkV "declutch" "declutches" "declutched" "declutched" "declutching";
lin decode_V2 = mkV2 (mkV "decode" "decodes" "decoded" "decoded" "decoding");
lin decoder_N = mkN "decoder" "decoders";
lin decoke_V2 = mkV2 (mkV "decoke" "decokes" "decoked" "decoked" "decoking");
lin decollete_A = compoundA (mkA "décolleté");
lin decolonization_N = mkN "decolonization" ;
lin decolonize_V2 = mkV2 (mkV "decolonize" "decolonizes" "decolonized" "decolonized" "decolonizing");
lin decompose_V = mkV "decompose" "decomposes" "decomposed" "decomposed" "decomposing";
lin decompose_V2 = mkV2 (mkV "decompose" "decomposes" "decomposed" "decomposed" "decomposing");
lin decomposition_N = mkN "decomposition" "decompositions";
lin decompress_V2 = mkV2 (mkV "decompress" "decompresses" "decompressed" "decompressed" "decompressing");
lin decompression_N = mkN "decompression" "decompressions";
lin decontaminate_V2 = mkV2 (mkV "decontaminate" "decontaminates" "decontaminated" "decontaminated" "decontaminating");
lin decontamination_N = mkN "decontamination" ;
lin decontrol_V2 = mkV2 (mkV "decontrol" "decontrols" "decontrolled" "decontrolled" "decontrolling");
lin decor_N = mkN "décor";
lin decorate_V2 = mkV2 (mkV "decorate" "decorates" "decorated" "decorated" "decorating");
lin decoration_N = mkN "decoration" "decorations";
lin decorative_A = compoundA (mkA "decorative");
lin decorator_N = mkN "decorator" "decorators";
lin decorous_A = compoundA (mkA "decorous");
lin decorum_N = mkN "decorum" ;
lin decoy_N = mkN "decoy" "decoys";
lin decoy_V2 = mkV2 (mkV "decoy" "decoys" "decoyed" "decoyed" "decoying");
lin decrease_N = mkN "decrease" "decreases";
lin decrease_V = mkV "decrease" "decreases" "decreased" "decreased" "decreasing";
lin decrease_V2 = mkV2 (mkV "decrease" "decreases" "decreased" "decreased" "decreasing");
lin decree_N = mkN "decree" "decrees";
lin decree_V2 = mkV2 (mkV "decree" "decrees" "decreed" "decreed" "decreeing");
lin decree_nisi_N = mkN "decree nisi" "IRREG";
lin decrepit_A = compoundA (mkA "decrepit");
lin decrepitude_N = mkN "decrepitude" ;
lin decribe_V2 = mkV2 (mkV "decribe");
lin decry_V2 = mkV2 (mkV "decry" "decries" "decried" "decried" "decrying");
lin dedicate_V2 = mkV2 (mkV "dedicate" "dedicates" "dedicated" "dedicated" "dedicating");
lin dedication_N = mkN "dedication" "dedications";
lin deduce_V2 = mkV2 (mkV "deduce" "deduces" "deduced" "deduced" "deducing");
lin deduct_V2 = mkV2 (mkV "deduct" "deducts" "deducted" "deducted" "deducting");
lin deductible_A = compoundA (mkA "deductible");
lin deduction_N = mkN "deduction" "deductions";
lin deductive_A = compoundA (mkA "deductive");
lin deed_N = mkN "deed" "deeds";
lin deed_box_N = mkN "deed - box" "deed - boxes";
lin deedpoll_N = mkN "deedpoll" "deedpolls";
lin deem_V2 = mkV2 (mkV "deem" "deems" "deemed" "deemed" "deeming");
lin deem_VS = mkVS (mkV "deem");
lin deep_A = mkA "deep" "deeper";
lin deep_Adv = mkAdv "deep";
lin deep_N = mkN "deep" "deeps";
lin deep_freeze_N = mkN "deep - freeze" "deep - freezes";
lin deep_freeze_V2 = mkV2 (mkV "deep-" IrregEng.freeze_V);
lin deep_laid_A = compoundA (mkA "deep - laid");
lin deep_mined_A = compoundA (mkA "deep - mined");
lin deep_rooted_A = compoundA (mkA "deep - rooted");
lin deep_sea_A = compoundA (mkA "deep - sea");
lin deep_seated_A = compoundA (mkA "deep - seated");
lin deep_water_A = compoundA (mkA "deep - water");
lin deepen_V = mkV "deepen" "deepens" "deepened" "deepened" "deepening";
lin deepen_V2 = mkV2 (mkV "deepen" "deepens" "deepened" "deepened" "deepening");
lin deepness_N = mkN "deepness" ;
lin deer_N = mkN "deer" "deer";
lin deerskin_N = mkN "deerskin" "deerskins";
lin deerstalker_N = mkN "deerstalker" "deerstalkers";
lin deerstalking_N = mkN "deerstalking" ;
lin deface_V2 = mkV2 (mkV "deface" "defaces" "defaced" "defaced" "defacing");
lin defacement_N = mkN "defacement" "defacements";
lin defalcation_N = mkN "defalcation" "defalcations";
lin defamation_N = mkN "defamation" ;
lin defamatory_A = compoundA (mkA "defamatory");
lin defame_V2 = mkV2 (mkV "defame" "defames" "defamed" "defamed" "defaming");
lin default_N = mkN "default" ;
lin default_V = mkV "default" "defaults" "defaulted" "defaulted" "defaulting";
lin defaulter_N = mkN "defaulter" "defaulters";
lin defeat_N = mkN "defeat" "defeats";
lin defeat_V2 = mkV2 (mkV "defeat" "defeats" "defeated" "defeated" "defeating");
lin defeatism_N = mkN "defeatism" ;
lin defeatist_N = mkN "defeatist" "defeatists";
lin defecate_V = mkV "defecate" "defecates" "defecated" "defecated" "defecating";
lin defecation_N = mkN "defecation" "defecations";
lin defect_N = mkN "defect" "defects";
lin defect_V = mkV "defect" "defects" "defected" "defected" "defecting";
lin defection_N = mkN "defection" "defections";
lin defective_A = compoundA (mkA "defective");
lin defectiveness_N = mkN "defectiveness" ;
lin defector_N = mkN "defector" "defectors";
lin defence_N = mkN "defence" "defences";
lin defenceless_A = compoundA (mkA "defenceless");
lin defencelessness_N = mkN "defencelessness" ;
lin defend_V = mkV "defend";
lin defend_V2 = mkV2 (mkV "defend" "defends" "defended" "defended" "defending");
lin defendant_N = mkN "defendant" "defendants";
lin defender_N = mkN "defender" "defenders";
lin defensible_A = compoundA (mkA "defensible");
lin defensive_A = compoundA (mkA "defensive");
lin defensive_N = mkN "defensive" "defensives";
lin defer_V = mkV "defer" "defers" "deferred" "deferred" "deferring";
lin defer_V2 = mkV2 (mkV "defer" "defers" "deferred" "deferred" "deferring");
lin deference_N = mkN "deference" ;
lin deferential_A = compoundA (mkA "deferential");
lin deferment_N = mkN "deferment" "deferments";
lin defiance_N = mkN "defiance" ;
lin defiant_A = compoundA (mkA "defiant");
lin deficiency_N = mkN "deficiency" "deficiencies";
lin deficient_A = compoundA (mkA "deficient");
lin deficit_N = mkN "deficit" "deficits";
lin defile_N = mkN "defile" "defiles";
lin defile_V = mkV "defile" "defiles" "defiled" "defiled" "defiling";
lin defile_V2 = mkV2 (mkV "defile" "defiles" "defiled" "defiled" "defiling");
lin defilement_N = mkN "defilement" ;
lin definable_A = compoundA (mkA "definable");
lin define_V = mkV "define";
lin define_V2 = mkV2 (mkV "define" "defines" "defined" "defined" "defining");
lin definite_A = compoundA (mkA "definite");
lin definition_N = mkN "definition" "definitions";
lin definitive_A = compoundA (mkA "definitive");
lin deflate_V2 = mkV2 (mkV "deflate" "deflates" "deflated" "deflated" "deflating");
lin deflation_N = mkN "deflation" ;
lin deflationary_A = compoundA (mkA "deflationary");
lin deflect_V = mkV "deflect" "deflects" "deflected" "deflected" "deflecting";
lin deflect_V2 = mkV2 (mkV "deflect" "deflects" "deflected" "deflected" "deflecting");
lin deflection_N = mkN "deflection" "deflections";
lin deflower_V2 = mkV2 (mkV "deflower" "deflowers" "deflowered" "deflowered" "deflowering");
lin defoliant_N = mkN "defoliant" "defoliants";
lin defoliate_V2 = mkV2 (mkV "defoliate" "defoliates" "defoliated" "defoliated" "defoliating");
lin defoliation_N = mkN "defoliation" "defoliations";
lin deforest_V2 = mkV2 (mkV "deforest" "deforests" "deforested" "deforested" "deforesting");
lin deform_V2 = mkV2 (mkV "deform" "deforms" "deformed" "deformed" "deforming");
lin deformed_A = compoundA (mkA "deformed");
lin deformity_N = mkN "deformity" "deformities";
lin defraud_V2 = mkV2 (mkV "defraud" "defrauds" "defrauded" "defrauded" "defrauding");
lin defray_V2 = mkV2 (mkV "defray" "defrays" "defrayed" "defrayed" "defraying");
lin defrayal_N = mkN "defrayal" "defrayals";
lin defrayment_N = mkN "defrayment" "defrayments";
lin defrock_V2 = mkV2 (mkV "defrock" "defrocks" "defrocked" "defrocked" "defrocking");
lin defrost_V2 = mkV2 (mkV "defrost" "defrosts" "defrosted" "defrosted" "defrosting");
lin defroster_N = mkN "defroster" "defrosters";
lin deft_A = compoundA (mkA "deft");
lin deftness_N = mkN "deftness" ;
lin defunct_A = compoundA (mkA "defunct");
lin defuse_V2 = mkV2 (mkV "defuse" "defuses" "defused" "defused" "defusing");
lin defy_V2 = mkV2 (mkV "defy" "defies" "defied" "defied" "defying");
lin defy_V2V = mkV2V (mkV "defy") noPrep to_Prep ;
lin degauss_V2 = mkV2 (mkV "degauss" "degausses" "degaussed" "degaussed" "degaussing");
lin degeneracy_N = mkN "degeneracy" ;
lin degenerate_A = compoundA (mkA "degenerate");
lin degenerate_N = mkN "degenerate" "degenerates";
lin degenerate_V = mkV "degenerate" "degenerates" "degenerated" "degenerated" "degenerating";
lin degeneration_N = mkN "degeneration" ;
lin degradation_N = mkN "degradation" "degradations";
lin degrade_V2 = mkV2 (mkV "degrade" "degrades" "degraded" "degraded" "degrading");
lin degree_N = mkN "degree" "degrees";
lin dehorn_V2 = mkV2 (mkV "dehorn" "dehorns" "dehorned" "dehorned" "dehorning");
lin dehumanize_V2 = mkV2 (mkV "dehumanize" "dehumanizes" "dehumanized" "dehumanized" "dehumanizing");
lin dehydrate_V2 = mkV2 (mkV "dehydrate" "dehydrates" "dehydrated" "dehydrated" "dehydrating");
lin deification_N = mkN "deification" ;
lin deify_V2 = mkV2 (mkV "deify" "deifies" "deified" "deified" "deifying");
lin deign_V = mkV "deign" "deigns" "deigned" "deigned" "deigning";
lin deirdre_PN = mkPN "Deirdre";
lin deism_N = mkN "deism" ;
lin deist_N = mkN "deist" "deists";
lin deity_N = mkN "deity" "deities";
lin deject_V2 = mkV2 (mkV "deject" "dejects" "dejected" "dejected" "dejecting");
lin dejectedly_Adv = mkAdv "dejectedly";
lin dejection_N = mkN "dejection" ;
lin dekko_N = mkN "dekko" "dekki" {- FIXME: guessed plural form -};
lin delaware_PN = mkPN "Delaware";
lin delay_N = mkN "delay" "delays";
lin delay_V = mkV "delay" "delays" "delayed" "delayed" "delaying";
lin delay_V2 = mkV2 (mkV "delay" "delays" "delayed" "delayed" "delaying");
lin delay_VS = mkVS (mkV "delay" "delays" "delayed" "delayed" "delaying");
lin delayed_action_A = compoundA (mkA "delayed - action");
lin delayed_action_N = mkN "delayed - action" ;
lin delectable_A = compoundA (mkA "delectable");
lin delectation_N = mkN "delectation" ;
lin delegacy_N = mkN "delegacy" "delegacies";
lin delegate_N = mkN "delegate" "delegates";
lin delegate_V2 = mkV2 (mkV "delegate" "delegates" "delegated" "delegated" "delegating");
lin delegation_N = mkN "delegation" "delegations";
lin delete_V2 = mkV2 (mkV "delete" "deletes" "deleted" "deleted" "deleting");
lin deleterious_A = compoundA (mkA "deleterious");
lin deletion_N = mkN "deletion" "deletions";
lin delf_N = mkN "delf" ;
lin delft_N = mkN "delft" ;
lin delhi_PN = mkPN "Delhi";
lin deliberate_A = compoundA (mkA "deliberate");
lin deliberate_V = mkV "deliberate" "deliberates" "deliberated" "deliberated" "deliberating";
lin deliberate_V2 = mkV2 (mkV "deliberate" "deliberates" "deliberated" "deliberated" "deliberating");
lin deliberation_N = mkN "deliberation" "deliberations";
lin deliberative_A = compoundA (mkA "deliberative");
lin delicacy_N = mkN "delicacy" "delicacies";
lin delicate_A = compoundA (mkA "delicate");
lin delicatessen_N = mkN "delicatessen" "delicatessens";
lin delicious_A = compoundA (mkA "delicious");
lin delight_N = mkN "delight" "delights";
lin delight_V = mkV "delight" "delights" "delighted" "delighted" "delighting";
lin delight_V2 = mkV2 (mkV "delight" "delights" "delighted" "delighted" "delighting");
lin delight_VS = mkVS (mkV "delight" "delights" "delighted" "delighted" "delighting");
lin delightedly_Adv = mkAdv "delightedly";
lin delightful_A = compoundA (mkA "delightful");
lin delimit_V2 = mkV2 (mkV "delimit" "delimits" "delimited" "delimited" "delimiting");
lin delimitate_V2 = mkV2 (mkV "delimitate" "delimitates" "delimitated" "delimitated" "delimitating");
lin delimitation_N = mkN "delimitation" "delimitations";
lin delineate_V2 = mkV2 (mkV "delineate" "delineates" "delineated" "delineated" "delineating");
lin delineation_N = mkN "delineation" "delineations";
lin delinquency_N = mkN "delinquency" "delinquencies";
lin delinquent_A = compoundA (mkA "delinquent");
lin delinquent_N = mkN "delinquent" "delinquents";
lin deliquescent_A = compoundA (mkA "deliquescent");
lin delirious_A = compoundA (mkA "delirious");
lin delirium_N = mkN "delirium" ;
lin delirium_tremens_N = mkN "delirium tremens" "IRREG";
lin deliver_V = mkV "deliver" "delivers" "delivered" "delivered" "delivering";
lin deliver_V2 = mkV2 (mkV "deliver" "delivers" "delivered" "delivered" "delivering");
lin deliverance_N = mkN "deliverance" "deliverances";
lin deliverer_N = mkN "deliverer" "deliverers";
lin delivery_N = mkN "delivery" "deliveries";
lin dell_N = mkN "dell" "dells";
lin delouse_V2 = mkV2 (mkV "delouse" "delouses" "deloused" "deloused" "delousing");
lin delphic_A = compoundA (mkA "delphic");
lin delphinium_N = mkN "delphinium" "delphiniums";
lin delta_N = mkN "delta" "deltas";
lin delude_V2 = mkV2 (mkV "delude" "deludes" "deluded" "deluded" "deluding");
lin deluge_N = mkN "deluge" "deluges";
lin deluge_V2 = mkV2 (mkV "deluge" "deluges" "deluged" "deluged" "deluging");
lin delusion_N = mkN "delusion" "delusions";
lin delusive_A = compoundA (mkA "delusive");
lin delve_V = mkV "delve" "delves" "delved" "delved" "delving";
lin delve_V2 = mkV2 (mkV "delve" "delves" "delved" "delved" "delving");
lin demagnetization_N = mkN "demagnetization" ;
lin demagnetize_V2 = mkV2 (mkV "demagnetize" "demagnetizes" "demagnetized" "demagnetized" "demagnetizing");
lin demagogic_A = compoundA (mkA "demagogic");
lin demagogue_N = mkN "demagogue" "demagogues";
lin demagogy_N = mkN "demagogy" ;
lin demand_N = mkN "demand" "demands";
lin demand_V2 = mkV2 (mkV "demand" "demands" "demanded" "demanded" "demanding");
lin demand_VS = mkVS (mkV "demand");
lin demarcate_V2 = mkV2 (mkV "demarcate" "demarcates" "demarcated" "demarcated" "demarcating");
lin demarcation_N = mkN "demarcation" ;
lin demarche_N = mkN "démarche" "démarches";
lin demean_V2 = mkV2 (mkV "demean" "demeans" "demeaned" "demeaned" "demeaning");
lin demeanour_N = mkN "demeanour" ;
lin demented_A = compoundA (mkA "demented");
lin demerara_N = mkN "demerara" ;
lin demerit_N = mkN "demerit" "demerits";
lin demesne_N = mkN "demesne" "demesnes";
lin demigod_N = mkN "demigod" "demigods";
lin demijohn_N = mkN "demijohn" "demijohns";
lin demilitarize_V2 = mkV2 (mkV "demilitarize" "demilitarizes" "demilitarized" "demilitarized" "demilitarizing");
lin demimondaine_N = mkN "demimondaine" "demimondaines";
lin demimonde_N = mkN "demimonde" "demimondes";
lin demise_N = mkN "demise" "demises";
lin demist_V2 = mkV2 (mkV "demist" "demists" "demisted" "demisted" "demisting");
lin demister_N = mkN "demister" "demisters";
lin demo_N = mkN "demo" "demos";
lin demob_V2 = mkV2 (mkV "demob" "demobs" "demobbed" "demobbed" "demobbing");
lin demobilization_N = mkN "demobilization" ;
lin demobilize_V2 = mkV2 (mkV "demobilize" "demobilizes" "demobilized" "demobilized" "demobilizing");
lin democracy_N = mkN "democracy" "democracies";
lin democrat_N = mkN "democrat" "democrats";
lin democratic_A = compoundA (mkA "democratic");
lin democratically_Adv = mkAdv "democratically";
lin democratization_N = mkN "democratization" ;
lin democratize_V2 = mkV2 (mkV "democratize" "democratizes" "democratized" "democratized" "democratizing");
lin demode_A = compoundA (mkA "démodé");
lin demographic_A = compoundA (mkA "demographic");
lin demography_N = mkN "demography" ;
lin demolish_V2 = mkV2 (mkV "demolish" "demolishes" "demolished" "demolished" "demolishing");
lin demolition_N = mkN "demolition" "demolitions";
lin demon_N = mkN "demon" "demons";
lin demonetization_N = mkN "demonetization" "demonetizations";
lin demonetize_V2 = mkV2 (mkV "demonetize" "demonetizes" "demonetized" "demonetized" "demonetizing");
lin demoniac_A = compoundA (mkA "demoniac");
lin demoniac_N = mkN "demoniac" "demoniacs";
lin demoniacal_A = compoundA (mkA "demoniacal");
lin demonic_A = compoundA (mkA "demonic");
lin demonize_V2 = mkV2 (mkV "demonize");
lin demonstrability_N = mkN "demonstrability" ;
lin demonstrable_A = compoundA (mkA "demonstrable");
lin demonstrate_V = mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating";
lin demonstrate_V2 = mkV2 (mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating");
lin demonstrate_VS = mkVS (mkV "demonstrate" "demonstrates" "demonstrated" "demonstrated" "demonstrating");
lin demonstration_N = mkN "demonstration" "demonstrations";
lin demonstrative_A = compoundA (mkA "demonstrative");
lin demonstrator_N = mkN "demonstrator" "demonstrators";
lin demoralization_N = mkN "demoralization" ;
lin demoralize_V2 = mkV2 (mkV "demoralize" "demoralizes" "demoralized" "demoralized" "demoralizing");
lin demote_V2 = mkV2 (mkV "demote" "demotes" "demoted" "demoted" "demoting");
lin demotic_A = compoundA (mkA "demotic");
lin demotion_N = mkN "demotion" "demotions";
lin demur_N = mkN "demur" ;
lin demur_V = mkV "demur" "demurs" "demurred" "demurred" "demurring";
lin demur_VS = mkVS (mkV "demur" "demurs" "demurred" "demurred" "demurring");
lin demure_A = compoundA (mkA "demure");
lin demureness_N = mkN "demureness" ;
lin den_N = mkN "den" "dens";
lin denain_PN = mkPN "Denain";
lin denary_A = compoundA (mkA "denary");
lin denationalization_N = mkN "denationalization" ;
lin denationalize_V2 = mkV2 (mkV "denationalize" "denationalizes" "denationalized" "denationalized" "denationalizing");
lin denatured_A = compoundA (mkA "denatured");
lin denbigh_PN = mkPN "Denbigh";
lin deniable_A = compoundA (mkA "deniable");
lin denial_N = mkN "denial" "denials";
lin denier_N = mkN "denier" "denier";
lin denigrate_V2 = mkV2 (mkV "denigrate" "denigrates" "denigrated" "denigrated" "denigrating");
lin denigration_N = mkN "denigration" ;
lin denim_N = mkN "denim" ;
lin denis_PN = mkPN "Denis";
lin denise_PN = mkPN "Denise";
lin denizen_N = mkN "denizen" "denizens";
lin denmark_PN = mkPN "Denmark";
lin dennis_PN = mkPN "Dennis";
lin denny_PN = mkPN "Denny";
lin denominate_V2 = mkV2 (mkV "denominate" "denominates" "denominated" "denominated" "denominating");
lin denomination_N = mkN "denomination" "denominations";
lin denominational_A = compoundA (mkA "denominational");
lin denominator_N = mkN "denominator" "denominators";
lin denote_V2 = mkV2 (mkV "denote" "denotes" "denoted" "denoted" "denoting");
lin denouement_N = mkN "dénouement" "dénouements";
lin denounce_V2 = mkV2 (mkV "denounce" "denounces" "denounced" "denounced" "denouncing");
lin dense_A = mkA "dense" "denser";
lin denseness_N = mkN "denseness" ;
lin density_N = mkN "density" "densities";
lin dent_N = mkN "dent" "dents";
lin dent_V = mkV "dent" "dents" "dented" "dented" "denting";
lin dent_V2 = mkV2 (mkV "dent" "dents" "dented" "dented" "denting");
lin dental_A = compoundA (mkA "dental");
lin dentifrice_N = mkN "dentifrice" ;
lin dentist_N = mkN "dentist" "dentists";
lin dentistry_N = mkN "dentistry" ;
lin denture_N = mkN "denture" "dentures";
lin denudation_N = mkN "denudation" ;
lin denude_V2 = mkV2 (mkV "denude" "denudes" "denuded" "denuded" "denuding");
lin denunciation_N = mkN "denunciation" "denunciations";
lin denver_PN = mkPN "Denver";
lin deny_V2 = mkV2 (mkV "deny" "denies" "denied" "denied" "denying");
lin deny_VS = mkVS (mkV "deny");
lin deodar_N = mkN "deodar" "deodars";
lin deodorant_N = mkN "deodorant" "deodorants";
lin deodorize_V2 = mkV2 (mkV "deodorize" "deodorizes" "deodorized" "deodorized" "deodorizing");
lin dep_PN = mkPN "Dep";
lin depart_V = mkV "depart" "departs" "departed" "departed" "departing";
lin departed_A = compoundA (mkA "departed");
lin departed_N = mkN "departed" "departed";
lin department_N = mkN "department" "departments";
lin departmental_A = compoundA (mkA "departmental");
lin departure_N = mkN "departure" "departures";
lin depend_V = mkV "depend" "depends" "depended" "depended" "depending";
lin dependable_A = compoundA (mkA "dependable");
lin dependant_N = mkN "dependant" "dependants";
lin dependence_N = mkN "dependence" ;
lin dependency_N = mkN "dependency" "dependencies";
lin dependent_A = compoundA (mkA "dependent");
lin dependent_N = mkN "dependent" "dependents";
lin depict_V2 = mkV2 (mkV "depict" "depicts" "depicted" "depicted" "depicting");
lin depiction_N = mkN "depiction" "depictions";
lin depilatory_A = compoundA (mkA "depilatory");
lin depilatory_N = mkN "depilatory" "depilatories";
lin deplane_V = mkV "deplane" "deplanes" "deplaned" "deplaned" "deplaning";
lin deplete_V2 = mkV2 (mkV "deplete" "depletes" "depleted" "depleted" "depleting");
lin depletion_N = mkN "depletion" ;
lin deplorable_A = compoundA (mkA "deplorable");
lin deplore_V2 = mkV2 (mkV "deplore" "deplores" "deplored" "deplored" "deploring");
lin deploy_V = mkV "deploy" "deploys" "deployed" "deployed" "deploying";
lin deploy_V2 = mkV2 (mkV "deploy" "deploys" "deployed" "deployed" "deploying");
lin deployment_N = mkN "deployment" "deployments";
lin deponent_N = mkN "deponent" "deponents";
lin depopulate_V2 = mkV2 (mkV "depopulate" "depopulates" "depopulated" "depopulated" "depopulating");
lin depopulation_N = mkN "depopulation" ;
lin deport_V2 = mkV2 (mkV "deport" "deports" "deported" "deported" "deporting");
lin deportation_N = mkN "deportation" "deportations";
lin deportee_N = mkN "deportee" "deportees";
lin deportment_N = mkN "deportment" ;
lin depose_V = mkV "depose" "deposes" "deposed" "deposed" "deposing";
lin depose_V2 = mkV2 (mkV "depose" "deposes" "deposed" "deposed" "deposing");
lin deposit_N = mkN "deposit" "deposits";
lin deposit_V2 = mkV2 (mkV "deposit" "deposits" "deposited" "deposited" "depositing");
lin deposition_N = mkN "deposition" "depositions";
lin depositor_N = mkN "depositor" "depositors";
lin depository_N = mkN "depository" "depositories";
lin depot_N = mkN "depot" "depots";
lin deprave_V2 = mkV2 (mkV "deprave" "depraves" "depraved" "depraved" "depraving");
lin depravity_N = mkN "depravity" "depravities";
lin deprecate_V2 = mkV2 (mkV "deprecate" "deprecates" "deprecated" "deprecated" "deprecating");
lin deprecation_N = mkN "deprecation" "deprecations";
lin depreciate_V = mkV "depreciate" "depreciates" "depreciated" "depreciated" "depreciating";
lin depreciate_V2 = mkV2 (mkV "depreciate" "depreciates" "depreciated" "depreciated" "depreciating");
lin depreciation_N = mkN "depreciation" ;
lin depreciatory_A = compoundA (mkA "depreciatory");
lin depredation_N = mkN "depredation" "depredations";
lin depress_V2 = mkV2 (mkV "depress" "depresses" "depressed" "depressed" "depressing");
lin depression_N = mkN "depression" "depressions";
lin depressive_A = compoundA (mkA "depressive");
lin depressive_N = mkN "depressive" "depressives";
lin deprivation_N = mkN "deprivation" "deprivations";
lin deprive_V2 = mkV2 (mkV "deprive" "deprives" "deprived" "deprived" "depriving");
lin deprived_A = compoundA (mkA "deprived");
lin dept_PN = mkPN "Dept";
lin depth_N = mkN "depth" "depths";
lin depth_bomb_N = mkN "depth - bomb" "depth - bombs";
lin depth_charge_N = mkN "depth - charge" "depth - charges";
lin deputation_N = mkN "deputation" "deputations";
lin depute_V2 = mkV2 (mkV "depute" "deputes" "deputed" "deputed" "deputing");
lin deputize_V = mkV "deputize" "deputizes" "deputized" "deputized" "deputizing";
lin deputy_N = mkN "deputy" "deputies";
lin derail_V2 = mkV2 (mkV "derail" "derails" "derailed" "derailed" "derailing");
lin derailment_N = mkN "derailment" "derailments";
lin derange_V2 = mkV2 (mkV "derange" "deranges" "deranged" "deranged" "deranging");
lin derangement_N = mkN "derangement" "derangements";
lin derate_V2 = mkV2 (mkV "derate" "derates" "derated" "derated" "derating");
lin derby_N = mkN "derby" "derbies";
lin derby_PN = mkPN "Derby";
lin derbyshire_PN = mkPN "Derbyshire";
lin deregulate_V2 = mkV2 (mkV "deregulate");
lin dereham_PN = mkPN "Dereham";
lin derek_PN = mkPN "Derek";
lin derelict_A = compoundA (mkA "derelict");
lin dereliction_N = mkN "dereliction" ;
lin derequisition_V2 = mkV2 (mkV "derequisition" "derequisitions" "derequisitioned" "derequisitioned" "derequisitioning");
lin derestrict_V2 = mkV2 (mkV "derestrict" "derestricts" "derestricted" "derestricted" "derestricting");
lin deride_V2 = mkV2 (mkV "deride" "derides" "derided" "derided" "deriding");
lin derision_N = mkN "derision" ;
lin derisive_A = compoundA (mkA "derisive");
lin derisory_A = compoundA (mkA "derisory");
lin derivation_N = mkN "derivation" "derivations";
lin derivative_A = compoundA (mkA "derivative");
lin derivative_N = mkN "derivative" "derivatives";
lin derive_V = mkV "derive" "derives" "derived" "derived" "deriving";
lin derive_V2 = mkV2 (mkV "derive" "derives" "derived" "derived" "deriving");
lin dermatitis_N = mkN "dermatitis" ;
lin dermatologist_N = mkN "dermatologist" "dermatologists";
lin dermatology_N = mkN "dermatology" ;
lin derogate_V = mkV "derogate" "derogates" "derogated" "derogated" "derogating";
lin derogation_N = mkN "derogation" ;
lin derogatory_A = compoundA (mkA "derogatory");
lin derrick_N = mkN "derrick" "derricks";
lin derring_do_N = mkN "derring - do" ;
lin derv_N = mkN "derv" ;
lin dervish_N = mkN "dervish" "dervishes";
lin des_N = mkN "des" ;
lin des_PN = mkPN "Des";
lin desalinate_V2 = mkV2 (mkV "desalinate" "desalinates" "desalinated" "desalinated" "desalinating");
lin desalination_N = mkN "desalination" ;
lin desalinization_N = mkN "desalinization" ;
lin desalinize_V2 = mkV2 (mkV "desalinize" "desalinizes" "desalinized" "desalinized" "desalinizing");
lin desalt_V2 = mkV2 (mkV "desalt" "desalts" "desalted" "desalted" "desalting");
lin descale_V2 = mkV2 (mkV "descale" "descales" "descaled" "descaled" "descaling");
lin descant_N = mkN "descant" "descants";
lin descant_V = mkV "descant" "descants" "descanted" "descanted" "descanting";
lin descend_V = mkV "descend" "descends" "descended" "descended" "descending";
lin descend_V2 = mkV2 (mkV "descend" "descends" "descended" "descended" "descending");
lin descendant_N = mkN "descendant" "descendants";
lin descent_N = mkN "descent" "descents";
lin describe_V = mkV "describe";
lin describe_V2 = mkV2 (mkV "describe" "describes" "described" "described" "describing");
lin describe_VS = mkVS (mkV "describe");
lin description_N = mkN "description" "descriptions";
lin descriptive_A = compoundA (mkA "descriptive");
lin descry_V2 = mkV2 (mkV "descry" "descries" "descried" "descried" "descrying");
lin desecrate_V2 = mkV2 (mkV "desecrate" "desecrates" "desecrated" "desecrated" "desecrating");
lin desecration_N = mkN "desecration" ;
lin desegregate_V2 = mkV2 (mkV "desegregate" "desegregates" "desegregated" "desegregated" "desegregating");
lin desegregation_N = mkN "desegregation" ;
lin desensitization_N = mkN "desensitization" ;
lin desensitize_V2 = mkV2 (mkV "desensitize" "desensitizes" "desensitized" "desensitized" "desensitizing");
lin desert_A = compoundA (mkA "desert");
lin desert_N = mkN "desert" "deserts";
lin desert_V = mkV "desert" "deserts" "deserted" "deserted" "deserting";
lin desert_V2 = mkV2 (mkV "desert" "deserts" "deserted" "deserted" "deserting");
lin deserter_N = mkN "deserter" "deserters";
lin desertion_N = mkN "desertion" "desertions";
lin deserve_V = mkV "deserve" "deserves" "deserved" "deserved" "deserving";
lin deserve_V2 = mkV2 (mkV "deserve" "deserves" "deserved" "deserved" "deserving");
lin deserved_A = compoundA (mkA "deserved");
lin deserving_A = compoundA (mkA "deserving");
lin deshabille_N = mkN "déshabillé" ;
lin desiccant_N = mkN "desiccant" "desiccants";
lin desiccate_V2 = mkV2 (mkV "desiccate" "desiccates" "desiccated" "desiccated" "desiccating");
lin desideratum_N = mkN "desideratum" "desiderata";
lin design_N = mkN "design" "designs";
lin design_V = mkV "design" "designs" "designed" "designed" "designing";
lin design_V2 = mkV2 (mkV "design" "designs" "designed" "designed" "designing");
lin design_VV = mkVV (mkV "design" "designs" "designed" "designed" "designing");
lin design_VS = mkVS (mkV "design" "designs" "designed" "designed" "designing");
lin designate_A = compoundA (mkA "designate");
lin designate_V = mkV "designate";
lin designate_V2 = mkV2 (mkV "designate" "designates" "designated" "designated" "designating");
lin designate_V2V = mkV2V (mkV "designate") noPrep to_Prep ;
lin designate_VS = mkVS (mkV "designate");
lin designation_N = mkN "designation" "designations";
lin designedly_Adv = mkAdv "designedly";
lin designer_N = mkN "designer" "designers";
lin designing_A = compoundA (mkA "designing");
lin designing_N = mkN "designing" ;
lin desirability_N = mkN "desirability" ;
lin desirable_A = compoundA (mkA "desirable");
lin desire_N = mkN "desire" "desires";
lin desire_V2 = mkV2 (mkV "desire" "desires" "desired" "desired" "desiring");
lin desirous_A = compoundA (mkA "desirous");
lin desist_V = mkV "desist" "desists" "desisted" "desisted" "desisting";
lin desk_N = mkN "desk" "desks";
lin desmond_PN = mkPN "Desmond";
lin desolate_A = compoundA (mkA "desolate");
lin desolate_V2 = mkV2 (mkV "desolate" "desolates" "desolated" "desolated" "desolating");
lin desolation_N = mkN "desolation" ;
lin despair_N = mkN "despair" ;
lin despair_V = mkV "despair" "despairs" "despaired" "despaired" "despairing";
lin despairingly_Adv = mkAdv "despairingly";
lin despatch_N = mkN "despatch" "despatches";
lin despatch_V2 = mkV2 (mkV "despatch" "despatches" "despatched" "despatched" "despatching");
lin desperado_N = mkN "desperado" "desperadoes";
lin desperate_A = compoundA (mkA "desperate");
lin desperation_N = mkN "desperation" ;
lin despicable_A = compoundA (mkA "despicable");
lin despise_V2 = mkV2 (mkV "despise" "despises" "despised" "despised" "despising");
lin despite_N = mkN "despite" ;
lin despite_Prep = mkPrep "despite";
lin despiteful_A = compoundA (mkA "despiteful");
lin despoil_V2 = mkV2 (mkV "despoil" "despoils" "despoiled" "despoiled" "despoiling");
lin despondency_N = mkN "despondency" ;
lin despondent_A = compoundA (mkA "despondent");
lin despot_N = mkN "despot" "despots";
lin despotic_A = compoundA (mkA "despotic");
lin despotism_N = mkN "despotism" "despotisms";
lin dessau_PN = mkPN "Dessau";
lin dessert_N = mkN "dessert" "desserts";
lin dessertspoon_N = mkN "dessertspoon" "dessertspoons";
lin dessertspoonful_N = mkN "dessertspoonful" "dessertspoonfuls";
lin destination_N = mkN "destination" "destinations";
lin destine_V2 = mkV2 (mkV "destine" "destines" "destined" "destined" "destining");
lin destine_V2V = mkV2V (mkV "destine") noPrep to_Prep ;
lin destiny_N = mkN "destiny" "destinies";
lin destitute_A = compoundA (mkA "destitute");
lin destitution_N = mkN "destitution" ;
lin destroy_V2 = mkV2 (mkV "destroy" "destroys" "destroyed" "destroyed" "destroying");
lin destroyer_N = mkN "destroyer" "destroyers";
lin destructibility_N = mkN "destructibility" ;
lin destructible_A = compoundA (mkA "destructible");
lin destruction_N = mkN "destruction" ;
lin destructive_A = compoundA (mkA "destructive");
lin destructiveness_N = mkN "destructiveness" ;
lin desuetude_N = mkN "desuetude" ;
lin desultory_A = compoundA (mkA "desultory");
lin detach_V2 = mkV2 (mkV "detach" "detaches" "detached" "detached" "detaching");
lin detachable_A = compoundA (mkA "detachable");
lin detached_A = compoundA (mkA "detached");
lin detachment_N = mkN "detachment" "detachments";
lin detail_N = mkN "detail" "details";
lin detail_V2 = mkV2 (mkV "detail" "details" "detailed" "detailed" "detailing");
lin detain_V2 = mkV2 (mkV "detain" "detains" "detained" "detained" "detaining");
lin detainee_N = mkN "detainee" "detainees";
lin detect_V2 = mkV2 (mkV "detect" "detects" "detected" "detected" "detecting");
lin detectable_A = compoundA (mkA "detectable");
lin detection_N = mkN "detection" ;
lin detective_N = mkN "detective" "detectives";
lin detector_N = mkN "detector" "detectors";
lin detente_N = mkN "détente" ;
lin detention_N = mkN "detention" "detentions";
lin deter_V2 = mkV2 (mkV "deter" "deters" "deterred" "deterred" "deterring");
lin detergent_A = compoundA (mkA "detergent");
lin detergent_N = mkN "detergent" "detergents";
lin deteriorate_V = mkV "deteriorate" "deteriorates" "deteriorated" "deteriorated" "deteriorating";
lin deteriorate_V2 = mkV2 (mkV "deteriorate" "deteriorates" "deteriorated" "deteriorated" "deteriorating");
lin deterioration_N = mkN "deterioration" "deteriorations";
lin determinable_A = compoundA (mkA "determinable");
lin determinant_A = compoundA (mkA "determinant");
lin determinant_N = mkN "determinant" "determinants";
lin determinate_A = compoundA (mkA "determinate");
lin determination_N = mkN "determination" ;
lin determinative_A = compoundA (mkA "determinative");
lin determinative_N = mkN "determinative" "determinatives";
lin determine_V = mkV "determine" "determines" "determined" "determined" "determining";
lin determine_V2 = mkV2 (mkV "determine" "determines" "determined" "determined" "determining");
lin determine_V2V = mkV2V (mkV "determine" "determines" "determined" "determined" "determining") noPrep to_Prep ;
lin determine_VV = mkVV (mkV "determine" "determines" "determined" "determined" "determining") ;
lin determine_VS = mkVS (mkV "determine" "determines" "determined" "determined" "determining");
lin determinedly_Adv = mkAdv "determinedly";
lin determiner_N = mkN "determiner" "determiners";
lin deterrent_A = compoundA (mkA "deterrent");
lin deterrent_N = mkN "deterrent" "deterrents";
lin detest_V2 = mkV2 (mkV "detest" "detests" "detested" "detested" "detesting");
lin detestable_A = compoundA (mkA "detestable");
lin detestation_N = mkN "detestation" "detestations";
lin dethrone_V2 = mkV2 (mkV "dethrone" "dethrones" "dethroned" "dethroned" "dethroning");
lin dethronement_N = mkN "dethronement" "dethronements";
lin detonate_V = mkV "detonate" "detonates" "detonated" "detonated" "detonating";
lin detonate_V2 = mkV2 (mkV "detonate" "detonates" "detonated" "detonated" "detonating");
lin detonation_N = mkN "detonation" "detonations";
lin detonator_N = mkN "detonator" "detonators";
lin detour_N = mkN "detour" "detours";
lin detour_V2 = mkV2 (mkV "detour" "detours" "detoured" "detoured" "detouring");
lin detract_V = mkV "detract" "detracts" "detracted" "detracted" "detracting";
lin detraction_N = mkN "detraction" "detractions";
lin detractor_N = mkN "detractor" "detractors";
lin detrain_V = mkV "detrain" "detrains" "detrained" "detrained" "detraining";
lin detrain_V2 = mkV2 (mkV "detrain" "detrains" "detrained" "detrained" "detraining");
lin detribalization_N = mkN "detribalization" ;
lin detribalize_V2 = mkV2 (mkV "detribalize" "detribalizes" "detribalized" "detribalized" "detribalizing");
lin detriment_N = mkN "detriment" ;
lin detrimental_A = compoundA (mkA "detrimental");
lin detritus_N = mkN "detritus" ;
lin detroit_PN = mkPN "Detroit";
lin deuce_N = mkN "deuce" "deuces";
lin deuced_A = compoundA (mkA "deuced");
lin deutschmark_N = mkN "deutschmark" "deutschmarks";
lin devaluate_V2 = mkV2 (mkV "devaluate" "devaluates" "devaluated" "devaluated" "devaluating");
lin devaluation_N = mkN "devaluation" "devaluations";
lin devalue_V2 = mkV2 (mkV "devalue" "devalues" "devalued" "devalued" "devaluing");
lin devastate_V2 = mkV2 (mkV "devastate" "devastates" "devastated" "devastated" "devastating");
lin devastation_N = mkN "devastation" ;
lin develop_V = mkV "develop" "develops" "developed" "developed" "developing";
lin develop_V2 = mkV2 (mkV "develop" "develops" "developed" "developed" "developing");
lin developer_N = mkN "developer" "developers";
lin development_N = mkN "development" "developments";
lin deviant_A = compoundA (mkA "deviant");
lin deviant_N = mkN "deviant" "deviants";
lin deviate_V = mkV "deviate" "deviates" "deviated" "deviated" "deviating";
lin deviation_N = mkN "deviation" "deviations";
lin deviationism_N = mkN "deviationism" ;
lin deviationist_N = mkN "deviationist" "deviationists";
lin device_N = mkN "device" "devices";
lin devil_N = mkN "devil" "devils";
lin devil_V = mkV "devil" "devils" "devilled" "devilled" "devilling";
lin devil_V2 = mkV2 (mkV "devil" "devils" "devilled" "devilled" "devilling");
lin devil_may_care_A = compoundA (mkA "devil - may - care");
lin devilish_A = compoundA (mkA "devilish");
lin devilish_Adv = mkAdv "devilish";
lin devilment_N = mkN "devilment" "devilments";
lin devilry_N = mkN "devilry" "devilries";
lin devious_A = compoundA (mkA "devious");
lin deviousness_N = mkN "deviousness" ;
lin devise_V2 = mkV2 (mkV "devise" "devises" "devised" "devised" "devising");
lin devitalization_N = mkN "devitalization" ;
lin devitalize_V2 = mkV2 (mkV "devitalize" "devitalizes" "devitalized" "devitalized" "devitalizing");
lin devizes_PN = mkPN "Devizes";
lin devoid_A = compoundA (mkA "devoid");
lin devolution_N = mkN "devolution" ;
lin devolve_V = mkV "devolve" "devolves" "devolved" "devolved" "devolving";
lin devolve_V2 = mkV2 (mkV "devolve" "devolves" "devolved" "devolved" "devolving");
lin devon_PN = mkPN "Devon";
lin devote_V2 = mkV2 (mkV "devote" "devotes" "devoted" "devoted" "devoting");
lin devoted_A = compoundA (mkA "devoted");
lin devotee_N = mkN "devotee" "devotees";
lin devotion_N = mkN "devotion" "devotions";
lin devotional_A = compoundA (mkA "devotional");
lin devour_V2 = mkV2 (mkV "devour" "devours" "devoured" "devoured" "devouring");
lin devout_A = compoundA (mkA "devout");
lin devoutness_N = mkN "devoutness" ;
lin dew_N = mkN "dew" ;
lin dewlap_N = mkN "dewlap" "dewlaps";
lin dewsbury_PN = mkPN "Dewsbury";
lin dewy_A = mkA "dewy" "dewier";
lin dexterity_N = mkN "dexterity" ;
lin dexterous_A = compoundA (mkA "dexterous");
lin dextrose_N = mkN "dextrose" ;
lin dextrous_A = compoundA (mkA "dextrous");
lin dg_PN = mkPN "Dg";
lin dhoti_N = mkN "dhoti" "dhotis";
lin dhow_N = mkN "dhow" "dhows";
lin di_PN = mkPN "Di";
lin diabetes_N = mkN "diabetes" ;
lin diabetic_A = compoundA (mkA "diabetic");
lin diabetic_N = mkN "diabetic" "diabetics";
lin diabolic_A = compoundA (mkA "diabolic");
lin diabolical_A = compoundA (mkA "diabolical");
lin diacritic_A = compoundA (mkA "diacritic");
lin diacritic_N = mkN "diacritic" "diacritics";
lin diacritical_A = compoundA (mkA "diacritical");
lin diadem_N = mkN "diadem" "diadems";
lin diaeresis_N = mkN "diaeresis" "diaereses" {- FIXME: guessed plural form -};
lin diagnose_V2 = mkV2 (mkV "diagnose" "diagnoses" "diagnosed" "diagnosed" "diagnosing");
lin diagnosis_N = mkN "diagnosis" "diagnoses" {- FIXME: guessed plural form -};
lin diagnostic_A = compoundA (mkA "diagnostic");
lin diagonal_A = compoundA (mkA "diagonal");
lin diagonal_N = mkN "diagonal" "diagonals";
lin diagram_N = mkN "diagram" "diagrams";
lin diagrammatic_A = compoundA (mkA "diagrammatic");
lin diagrammatical_A = compoundA (mkA "diagrammatical");
lin dial_N = mkN "dial" "dials";
lin dial_V2 = mkV2 (mkV "dial" "dials" "dialled" "dialled" "dialling");
lin dialect_N = mkN "dialect" "dialects";
lin dialectal_A = compoundA (mkA "dialectal");
lin dialectic_N = mkN "dialectic" "dialectics";
lin dialectical_A = compoundA (mkA "dialectical");
lin dialectician_N = mkN "dialectician" "dialecticians";
lin dialogue_N = mkN "dialogue" "dialogues";
lin diameter_N = mkN "diameter" "diameters";
lin diametrically_Adv = mkAdv "diametrically";
lin diamond_N = mkN "diamond" "diamonds";
lin diana_PN = mkPN "Diana";
lin diaper_N = mkN "diaper" "diapers";
lin diaphanous_A = compoundA (mkA "diaphanous");
lin diaphragm_N = mkN "diaphragm" "diaphragms";
lin diarchy_N = mkN "diarchy" "diarchies";
lin diarist_N = mkN "diarist" "diarists";
lin diarrhea_N = mkN "diarrhea" ;
lin diarrhoea_N = mkN "diarrhoea" ;
lin diary_N = mkN "diary" "diaries";
lin diaspora_N = mkN "diaspora" "diasporas";
lin diatonic_A = compoundA (mkA "diatonic");
lin diatribe_N = mkN "diatribe" "diatribes";
lin dibber_N = mkN "dibber" "dibbers";
lin dibble_N = mkN "dibble" "dibbles";
lin dibble_V2 = mkV2 (mkV "dibble" "dibbles" "dibbled" "dibbled" "dibbling");
lin dice_N = mkN "dice" "dice";
lin dice_V = mkV "dice" "dices" "diced" "diced" "dicing";
lin dice_V2 = mkV2 (mkV "dice" "dices" "diced" "diced" "dicing");
lin dice_box_N = mkN "dice - box" "dice - boxes";
lin dicey_A = compoundA (mkA "dicey");
lin dichotomy_N = mkN "dichotomy" "dichotomies";
lin dick_PN = mkPN "Dick";
lin dickens_N = mkN "dickens" "IRREG";
lin dicker_V = mkV "dicker" "dickers" "dickered" "dickered" "dickering";
lin dickey_N = mkN "dickey" "dickeys";
lin dicky_A = compoundA (mkA "dicky");
lin dicky_N = mkN "dicky" "dickies";
lin dicky_PN = mkPN "Dicky";
lin dicky_seat_N = mkN "dicky - seat" "dicky - seats";
lin dickybird_N = mkN "dickybird" "dickybirds";
lin dictaphone_N = mkN "dictaphone" "dictaphones";
lin dictate_N = mkN "dictate" "dictates";
lin dictate_V = mkV "dictate" "dictates" "dictated" "dictated" "dictating";
lin dictate_V2 = mkV2 (mkV "dictate" "dictates" "dictated" "dictated" "dictating");
lin dictate_VS = mkVS (mkV "dictate" "dictates" "dictated" "dictated" "dictating");
lin dictation_N = mkN "dictation" "dictations";
lin dictator_N = mkN "dictator" "dictators";
lin dictatorial_A = compoundA (mkA "dictatorial");
lin dictatorship_N = mkN "dictatorship" "dictatorships";
lin diction_N = mkN "diction" ;
lin dictionary_N = mkN "dictionary" "dictionaries";
lin dictum_N = mkN "dictum" "dictums";
lin didactic_A = compoundA (mkA "didactic");
lin didactically_Adv = mkAdv "didactically";
lin didcot_PN = mkPN "Didcot";
lin diddle_V2 = mkV2 (mkV "diddle" "diddles" "diddled" "diddled" "diddling");
lin die_N = mkN "die" "dies";
lin die_V = mkV "die" "dies" "died" "died" "dying";
lin die_V2 = mkV2 (mkV "die" "dies" "died" "died" "dying");
lin die_cast_A = compoundA (mkA "die - cast");
lin die_hard_N = mkN "die - hard" "die - hards";
lin dieresis_N = mkN "dieresis" "diereses" {- FIXME: guessed plural form -};
lin diesel_N = mkN "diesel" "diesels";
lin diet_N = mkN "diet" "diets";
lin diet_V = mkV "diet" "diets" "dieted" "dieted" "dieting";
lin diet_V2 = mkV2 (mkV "diet" "diets" "dieted" "dieted" "dieting");
lin dietary_A = compoundA (mkA "dietary");
lin dietetics_N = mkN "dietetics" "dietetics";
lin dietician_N = mkN "dietician" "dieticians";
lin dietitian_N = mkN "dietitian" "dietitians";
lin differ_V = mkV "differ" "differs" "differed" "differed" "differing";
lin difference_N = mkN "difference" "differences";
lin different_A = compoundA (mkA "different");
lin differential_A = compoundA (mkA "differential");
lin differential_N = mkN "differential" "differentials";
lin differentiate_V = mkV "differentiate";
lin differentiate_V2 = mkV2 (mkV "differentiate" "differentiates" "differentiated" "differentiated" "differentiating");
lin differentiation_N = mkN "differentiation" "differentiations";
lin difficult_A = compoundA (mkA "difficult");
lin difficulty_N = mkN "difficulty" "difficulties";
lin diffidence_N = mkN "diffidence" ;
lin diffident_A = compoundA (mkA "diffident");
lin diffract_V2 = mkV2 (mkV "diffract" "diffracts" "diffracted" "diffracted" "diffracting");
lin diffraction_N = mkN "diffraction" "diffractions";
lin diffuse_A = compoundA (mkA "diffuse");
lin diffuse_V = mkV "diffuse" "diffuses" "diffused" "diffused" "diffusing";
lin diffuse_V2 = mkV2 (mkV "diffuse" "diffuses" "diffused" "diffused" "diffusing");
lin diffuseness_N = mkN "diffuseness" ;
lin diffusion_N = mkN "diffusion" ;
lin dig_N = mkN "dig" "digs";
lin dig_V = IrregEng.dig_V;
lin dig_V2 = mkV2 (IrregEng.dig_V);
lin digest_N = mkN "digest" "digests";
lin digest_V = mkV "digest" "digests" "digested" "digested" "digesting";
lin digest_V2 = mkV2 (mkV "digest" "digests" "digested" "digested" "digesting");
lin digestibility_N = mkN "digestibility" ;
lin digestible_A = compoundA (mkA "digestible");
lin digestion_N = mkN "digestion" "digestions";
lin digestive_A = compoundA (mkA "digestive");
lin digger_N = mkN "digger" "diggers";
lin digging_N = mkN "digging" "diggings";
lin digit_N = mkN "digit" "digits";
lin digital_A = compoundA (mkA "digital");
lin dignified_A = compoundA (mkA "dignified");
lin dignify_V2 = mkV2 (mkV "dignify" "dignifies" "dignified" "dignified" "dignifying");
lin dignitary_N = mkN "dignitary" "dignitaries";
lin dignity_N = mkN "dignity" "dignities";
lin digraph_N = mkN "digraph" "digraphs";
lin digress_V = mkV "digress" "digresses" "digressed" "digressed" "digressing";
lin digression_N = mkN "digression" "digressions";
lin dijon_PN = mkPN "Dijon";
lin dike_N = mkN "dike" "dikes";
lin dike_V = mkV "dike" "dikes" "diked" "diked" "diking";
lin dike_V2 = mkV2 (mkV "dike" "dikes" "diked" "diked" "diking");
lin dilapidated_A = compoundA (mkA "dilapidated");
lin dilapidation_N = mkN "dilapidation" ;
lin dilate_V = mkV "dilate" "dilates" "dilated" "dilated" "dilating";
lin dilate_V2 = mkV2 (mkV "dilate" "dilates" "dilated" "dilated" "dilating");
lin dilation_N = mkN "dilation" ;
lin dilatory_A = compoundA (mkA "dilatory");
lin dilemma_N = mkN "dilemma" "dilemmas";
lin dilettante_N = mkN "dilettante" "dilettantes";
lin diligence_N = mkN "diligence" ;
lin diligent_A = compoundA (mkA "diligent");
lin dill_N = mkN "dill" ;
lin dilly_dally_V = mkV "dilly - dally" "dilly - dallies" "dilly - dallied" "dilly - dallied" "dilly - dallying";
lin dilute_A = compoundA (mkA "dilute");
lin dilute_V = mkV "dilute";
lin dilute_V2 = mkV2 (mkV "dilute" "dilutes" "diluted" "diluted" "diluting");
lin dilution_N = mkN "dilution" "dilutions";
lin dim_A = mkA "dim" "dimmer*";
lin dim_V = mkV "dim" "dims" "dimmed" "dimmed" "dimming";
lin dim_V2 = mkV2 (mkV "dim" "dims" "dimmed" "dimmed" "dimming");
lin dime_N = mkN "dime" "dimes";
lin dimension_N = mkN "dimension" "dimensions";
lin dimensional_A = compoundA (mkA "dimensional");
lin diminish_V = mkV "diminish" "diminishes" "diminished" "diminished" "diminishing";
lin diminish_V2 = mkV2 (mkV "diminish" "diminishes" "diminished" "diminished" "diminishing");
lin diminuendo_N = mkN "diminuendo" "diminuendos";
lin diminution_N = mkN "diminution" "diminutions";
lin diminutive_A = compoundA (mkA "diminutive");
lin diminutive_N = mkN "diminutive" "diminutives";
lin dimity_N = mkN "dimity" ;
lin dimness_N = mkN "dimness" ;
lin dimple_N = mkN "dimple" "dimples";
lin dimple_V = mkV "dimple" "dimples" "dimpled" "dimpled" "dimpling";
lin dimple_V2 = mkV2 (mkV "dimple" "dimples" "dimpled" "dimpled" "dimpling");
lin din_N = mkN "din" ;
lin din_V = mkV "din" "dins" "dinned" "dinned" "dinning";
lin din_V2 = mkV2 (mkV "din" "dins" "dinned" "dinned" "dinning");
lin dinar_N = mkN "dinar" "dinars";
lin dine_V = mkV "dine" "dines" "dined" "dined" "dining";
lin dine_V2 = mkV2 (mkV "dine" "dines" "dined" "dined" "dining");
lin diner_N = mkN "diner" "diners";
lin ding_dong_Adv = mkAdv "ding - dong";
lin ding_dong_N = mkN "ding - dong" "ding - dongs";
lin dinghy_N = mkN "dinghy" "dinghies";
lin dingily_Adv = mkAdv "dingily";
lin dinginess_N = mkN "dinginess" ;
lin dingle_N = mkN "dingle" "dingles";
lin dingle_PN = mkPN "Dingle";
lin dingy_A = mkA "dingy" "dingier";
lin dining_car_N = mkN "dining - car" "dining - cars";
lin dining_room_N = mkN "dining - room" "dining - rooms";
lin dining_table_N = mkN "dining - table" "dining - tables";
lin dinky_A = mkA "dinky" "dinkier";
lin dinner_N = mkN "dinner" "dinners";
lin dinner_jacket_N = mkN "dinner - jacket" "dinner - jackets";
lin dinner_party_N = mkN "dinner - party" "dinner - parties";
lin dinner_service_N = mkN "dinner - service" "dinner - services";
lin dinner_set_N = mkN "dinner - set" "dinner - sets";
lin dinnington_PN = mkPN "Dinnington";
lin dinosaur_N = mkN "dinosaur" "dinosaurs";
lin dint_N = mkN "dint" "dints";
lin diocesan_A = compoundA (mkA "diocesan");
lin diocesan_N = mkN "diocesan" "diocesans";
lin diocese_N = mkN "diocese" "dioceses";
lin dioxide_N = mkN "dioxide" "dioxides";
lin dip_N = mkN "dip" ;
lin dip_V = mkV "dip" "dips" "dipped" "dipped" "dipping";
lin dip_V2 = mkV2 (mkV "dip" "dips" "dipped" "dipped" "dipping");
lin dip_ed_N = mkN "dip ed" ;
lin diphtheria_N = mkN "diphtheria" ;
lin diphthong_N = mkN "diphthong" "diphthongs";
lin diploma_N = mkN "diploma" "diplomas";
lin diplomacy_N = mkN "diplomacy" ;
lin diplomat_N = mkN "diplomat" "diplomats";
lin diplomatic_A = compoundA (mkA "diplomatic");
lin diplomatically_Adv = mkAdv "diplomatically";
lin diplomatist_N = mkN "diplomatist" "diplomatists";
lin dipper_N = mkN "dipper" "dippers";
lin dipsomania_N = mkN "dipsomania" ;
lin dipsomaniac_N = mkN "dipsomaniac" "dipsomaniacs";
lin dipstick_N = mkN "dipstick" "dipsticks";
lin diptych_N = mkN "diptych" "diptychs";
lin dir_N = mkN "dir" ;
lin dire_A = mkA "dire" "direr";
lin direct_A = compoundA (mkA "direct");
lin direct_Adv = mkAdv "direct";
lin direct_V = mkV "direct" "directs" "directed" "directed" "directing";
lin direct_V2 = mkV2 (mkV "direct" "directs" "directed" "directed" "directing");
lin direct_VS = mkVS (mkV "direct" "directs" "directed" "directed" "directing");
lin direction_N = mkN "direction" "directions";
lin direction_finder_N = mkN "direction - finder" "direction - finders";
lin directional_A = compoundA (mkA "directional");
lin directive_N = mkN "directive" "directives";
lin directness_N = mkN "directness" ;
lin director_N = mkN "director" "directors";
lin directorate_N = mkN "directorate" "directorates";
lin directorship_N = mkN "directorship" "directorships";
lin directory_N = mkN "directory" "directories";
lin direful_A = compoundA (mkA "direful");
lin dirge_N = mkN "dirge" "dirges";
lin dirigible_N = mkN "dirigible" "dirigibles";
lin dirk_N = mkN "dirk" "dirks";
lin dirndl_N = mkN "dirndl" "dirndls";
lin dirt_N = mkN "dirt" ;
lin dirt_cheap_A = compoundA (mkA "dirt - cheap");
lin dirt_track_N = mkN "dirt - track" "dirt - tracks";
lin dirtily_Adv = mkAdv "dirtily";
lin dirty_A = mkA "dirty" "dirtier";
lin dirty_V = mkV "dirty" "dirties" "dirtied" "dirtied" "dirtying";
lin dirty_V2 = mkV2 (mkV "dirty" "dirties" "dirtied" "dirtied" "dirtying");
lin disability_N = mkN "disability" "disabilities";
lin disable_V2 = mkV2 (mkV "disable" "disables" "disabled" "disabled" "disabling");
lin disablement_N = mkN "disablement" "disablements";
lin disabuse_V2 = mkV2 (mkV "disabuse" "disabuses" "disabused" "disabused" "disabusing");
lin disadvantage_N = mkN "disadvantage" "disadvantages";
lin disadvantageous_A = compoundA (mkA "disadvantageous");
lin disaffected_A = compoundA (mkA "disaffected");
lin disaffection_N = mkN "disaffection" ;
lin disafforest_V2 = mkV2 (mkV "disafforest" "disafforests" "disafforested" "disafforested" "disafforesting");
lin disagree_V = mkV "disagree";
lin disagree_V2 = mkV2 (mkV "disagree" "disagrees" "disagreed" "disagreed" "disagreeing");
lin disagree_VS = mkVS (mkV "disagree");
lin disagreeable_A = compoundA (mkA "disagreeable");
lin disagreeableness_N = mkN "disagreeableness" ;
lin disagreement_N = mkN "disagreement" "disagreements";
lin disallow_V2 = mkV2 (mkV "disallow" "disallows" "disallowed" "disallowed" "disallowing");
lin disappear_V = mkV "disappear" "disappears" "disappeared" "disappeared" "disappearing";
lin disappearance_N = mkN "disappearance" "disappearances";
lin disappoint_V2 = mkV2 (mkV "disappoint" "disappoints" "disappointed" "disappointed" "disappointing");
lin disappointed_A = compoundA (mkA "disappointed");
lin disappointing_A = compoundA (mkA "disappointing");
lin disappointment_N = mkN "disappointment" "disappointments";
lin disapprobation_N = mkN "disapprobation" ;
lin disapproval_N = mkN "disapproval" ;
lin disapprove_V = mkV "disapprove" "disapproves" "disapproved" "disapproved" "disapproving";
lin disapprove_V2 = mkV2 (mkV "disapprove" "disapproves" "disapproved" "disapproved" "disapproving");
lin disapprovingly_Adv = mkAdv "disapprovingly";
lin disarm_V = mkV "disarm" "disarms" "disarmed" "disarmed" "disarming";
lin disarm_V2 = mkV2 (mkV "disarm" "disarms" "disarmed" "disarmed" "disarming");
lin disarmament_N = mkN "disarmament" ;
lin disarrange_V2 = mkV2 (mkV "disarrange" "disarranges" "disarranged" "disarranged" "disarranging");
lin disarrangement_N = mkN "disarrangement" "disarrangements";
lin disarray_N = mkN "disarray" ;
lin disarray_V2 = mkV2 (mkV "disarray" "disarrays" "disarrayed" "disarrayed" "disarraying");
lin disassociate_V2 = mkV2 (mkV "disassociate" "disassociates" "disassociated" "disassociated" "disassociating");
lin disaster_N = mkN "disaster" "disasters";
lin disastrous_A = compoundA (mkA "disastrous");
lin disavow_V2 = mkV2 (mkV "disavow" "disavows" "disavowed" "disavowed" "disavowing");
lin disavowal_N = mkN "disavowal" "disavowals";
lin disband_V = mkV "disband" "disbands" "disbanded" "disbanded" "disbanding";
lin disband_V2 = mkV2 (mkV "disband" "disbands" "disbanded" "disbanded" "disbanding");
lin disbandment_N = mkN "disbandment" "disbandments";
lin disbelief_N = mkN "disbelief" ;
lin disbelieve_V = mkV "disbelieve" "disbelieves" "disbelieved" "disbelieved" "disbelieving";
lin disbelieve_V2 = mkV2 (mkV "disbelieve" "disbelieves" "disbelieved" "disbelieved" "disbelieving");
lin disbelievingly_Adv = mkAdv "disbelievingly";
lin disbud_V2 = mkV2 (mkV "disbud" "disbuds" "disbudded" "disbudded" "disbudding");
lin disburden_V2 = mkV2 (mkV "disburden" "disburdens" "disburdened" "disburdened" "disburdening");
lin disburse_V = mkV "disburse" "disburses" "disbursed" "disbursed" "disbursing";
lin disburse_V2 = mkV2 (mkV "disburse" "disburses" "disbursed" "disbursed" "disbursing");
lin disbursement_N = mkN "disbursement" "disbursements";
lin disc_N = mkN "disc" "discs";
lin discard_N = mkN "discard" "discards";
lin discard_V2 = mkV2 (mkV "discard" "discards" "discarded" "discarded" "discarding");
lin discern_V2 = mkV2 (mkV "discern" "discerns" "discerned" "discerned" "discerning");
lin discernible_A = compoundA (mkA "discernible");
lin discerning_A = compoundA (mkA "discerning");
lin discernment_N = mkN "discernment" ;
lin discharge_N = mkN "discharge" "discharges";
lin discharge_V = mkV "discharge" "discharges" "discharged" "discharged" "discharging";
lin discharge_V2 = mkV2 (mkV "discharge" "discharges" "discharged" "discharged" "discharging");
lin disciple_N = mkN "disciple" "disciples";
lin disciplinarian_N = mkN "disciplinarian" "disciplinarians";
lin disciplinary_A = compoundA (mkA "disciplinary");
lin discipline_N = mkN "discipline" "disciplines";
lin discipline_V2 = mkV2 (mkV "discipline" "disciplines" "disciplined" "disciplined" "disciplining");
lin disclaim_V2 = mkV2 (mkV "disclaim" "disclaims" "disclaimed" "disclaimed" "disclaiming");
lin disclaim_VS = mkVS (mkV "disclaim");
lin disclaimer_N = mkN "disclaimer" "disclaimers";
lin disclose_V = mkV "disclose";
lin disclose_V2 = mkV2 (mkV "disclose" "discloses" "disclosed" "disclosed" "disclosing");
lin disclose_VS = mkVS (mkV "disclose");
lin disclosure_N = mkN "disclosure" "disclosures";
lin disco_N = mkN "disco" "discos";
lin discolour_V = mkV "discolour" "discolours" "discoloured" "discoloured" "discolouring";
lin discolour_V2 = mkV2 (mkV "discolour" "discolours" "discoloured" "discoloured" "discolouring");
lin discolouration_N = mkN "discolouration" "discolourations";
lin discomfit_V2 = mkV2 (mkV "discomfit" "discomfits" "discomfited" "discomfited" "discomfiting");
lin discomfiture_N = mkN "discomfiture" ;
lin discomfort_N = mkN "discomfort" "discomforts";
lin discommode_V2 = mkV2 (mkV "discommode" "discommodes" "discommoded" "discommoded" "discommoding");
lin discompose_V2 = mkV2 (mkV "discompose" "discomposes" "discomposed" "discomposed" "discomposing");
lin discomposure_N = mkN "discomposure" ;
lin disconcert_V2 = mkV2 (mkV "disconcert" "disconcerts" "disconcerted" "disconcerted" "disconcerting");
lin disconcertingly_Adv = mkAdv "disconcertingly";
lin disconnect_V2 = mkV2 (mkV "disconnect" "disconnects" "disconnected" "disconnected" "disconnecting");
lin disconnected_A = compoundA (mkA "disconnected");
lin disconsolate_A = compoundA (mkA "disconsolate");
lin discontent_N = mkN "discontent" "discontents";
lin discontent_V2 = mkV2 (mkV "discontent" "discontents" "discontented" "discontented" "discontenting");
lin discontentedly_Adv = mkAdv "discontentedly";
lin discontinuance_N = mkN "discontinuance" "discontinuances";
lin discontinue_V = mkV "discontinue" "discontinues" "discontinued" "discontinued" "discontinuing";
lin discontinue_V2 = mkV2 (mkV "discontinue" "discontinues" "discontinued" "discontinued" "discontinuing");
lin discontinuity_N = mkN "discontinuity" "discontinuities";
lin discontinuous_A = compoundA (mkA "discontinuous");
lin discord_N = mkN "discord" "discords";
lin discordance_N = mkN "discordance" ;
lin discordant_A = compoundA (mkA "discordant");
lin discotheque_N = mkN "discotheque" "discotheques";
lin discount_N = mkN "discount" "discounts";
lin discount_V = mkV "discount";
lin discount_V2 = mkV2 (mkV "discount" "discounts" "discounted" "discounted" "discounting");
lin discountenance_V2 = mkV2 (mkV "discountenance" "discountenances" "discountenanced" "discountenanced" "discountenancing");
lin discourage_V2 = mkV2 (mkV "discourage" "discourages" "discouraged" "discouraged" "discouraging");
lin discouragement_N = mkN "discouragement" "discouragements";
lin discourse_N = mkN "discourse" "discourses";
lin discourse_V = mkV "discourse" "discourses" "discoursed" "discoursed" "discoursing";
lin discourteous_A = compoundA (mkA "discourteous");
lin discourtesy_N = mkN "discourtesy" "discourtesies";
lin discover_V = mkV "discover" "discovers" "discovered" "discovered" "discovering";
lin discover_V2 = mkV2 (mkV "discover" "discovers" "discovered" "discovered" "discovering");
lin discover_V2V = mkV2V (mkV "discover" "discovers" "discovered" "discovered" "discovering") noPrep to_Prep ;
lin discover_VS = mkVS (mkV "discover" "discovers" "discovered" "discovered" "discovering");
lin discoverer_N = mkN "discoverer" "discoverers";
lin discovery_N = mkN "discovery" "discoveries";
lin discredit_N = mkN "discredit" ;
lin discredit_V2 = mkV2 (mkV "discredit" "discredits" "discredited" "discredited" "discrediting");
lin discreditable_A = compoundA (mkA "discreditable");
lin discreet_A = compoundA (mkA "discreet");
lin discrepancy_N = mkN "discrepancy" "discrepancies";
lin discrete_A = compoundA (mkA "discrete");
lin discreteness_N = mkN "discreteness" ;
lin discretion_N = mkN "discretion" ;
lin discretionary_A = compoundA (mkA "discretionary");
lin discriminate_V = mkV "discriminate" "discriminates" "discriminated" "discriminated" "discriminating";
lin discriminate_V2 = mkV2 (mkV "discriminate" "discriminates" "discriminated" "discriminated" "discriminating");
lin discriminating_A = compoundA (mkA "discriminating");
lin discrimination_N = mkN "discrimination" ;
lin discriminatory_A = compoundA (mkA "discriminatory");
lin discursive_A = compoundA (mkA "discursive");
lin discursiveness_N = mkN "discursiveness" ;
lin discus_N = mkN "discus" "discuses";
lin discuss_V2 = mkV2 (mkV "discuss" "discusses" "discussed" "discussed" "discussing");
lin discuss_VS = mkVS (mkV "discuss");
lin discussion_N = mkN "discussion" "discussions";
lin disdain_N = mkN "disdain" ;
lin disdain_V2 = mkV2 (mkV "disdain" "disdains" "disdained" "disdained" "disdaining");
lin disdainful_A = compoundA (mkA "disdainful");
lin disease_N = mkN "disease" "diseases";
lin diseased_A = compoundA (mkA "diseased");
lin disembark_V = mkV "disembark" "disembarks" "disembarked" "disembarked" "disembarking";
lin disembark_V2 = mkV2 (mkV "disembark" "disembarks" "disembarked" "disembarked" "disembarking");
lin disembarkation_N = mkN "disembarkation" "disembarkations";
lin disembarrass_V2 = mkV2 (mkV "disembarrass" "disembarrasses" "disembarrassed" "disembarrassed" "disembarrassing");
lin disembarrassment_N = mkN "disembarrassment" "disembarrassments";
lin disembody_V2 = mkV2 (mkV "disembody" "disembodies" "disembodied" "disembodied" "disembodying");
lin disembowel_V2 = mkV2 (mkV "disembowel" "disembowels" "disembowelled" "disembowelled" "disembowelling");
lin disenchant_V2 = mkV2 (mkV "disenchant" "disenchants" "disenchanted" "disenchanted" "disenchanting");
lin disenchantment_N = mkN "disenchantment" "disenchantments";
lin disencumber_V2 = mkV2 (mkV "disencumber" "disencumbers" "disencumbered" "disencumbered" "disencumbering");
lin disenfranchise_V2 = mkV2 (mkV "disenfranchise" "disenfranchises" "disenfranchised" "disenfranchised" "disenfranchising");
lin disengage_V = mkV "disengage" "disengages" "disengaged" "disengaged" "disengaging";
lin disengage_V2 = mkV2 (mkV "disengage" "disengages" "disengaged" "disengaged" "disengaging");
lin disengagement_N = mkN "disengagement" "disengagements";
lin disentangle_V = mkV "disentangle" "disentangles" "disentangled" "disentangled" "disentangling";
lin disentangle_V2 = mkV2 (mkV "disentangle" "disentangles" "disentangled" "disentangled" "disentangling");
lin disentanglement_N = mkN "disentanglement" "disentanglements";
lin disequilibrium_N = mkN "disequilibrium" ;
lin disestablish_V2 = mkV2 (mkV "disestablish" "disestablishes" "disestablished" "disestablished" "disestablishing");
lin disestablishment_N = mkN "disestablishment" ;
lin disfavour_N = mkN "disfavour" ;
lin disfavour_V2 = mkV2 (mkV "disfavour" "disfavours" "disfavoured" "disfavoured" "disfavouring");
lin disfigure_V2 = mkV2 (mkV "disfigure" "disfigures" "disfigured" "disfigured" "disfiguring");
lin disfigurement_N = mkN "disfigurement" "disfigurements";
lin disforest_V2 = mkV2 (mkV "disforest" "disforests" "disforested" "disforested" "disforesting");
lin disfranchise_V2 = mkV2 (mkV "disfranchise" "disfranchises" "disfranchised" "disfranchised" "disfranchising");
lin disfranchisement_N = mkN "disfranchisement" ;
lin disgorge_V2 = mkV2 (mkV "disgorge" "disgorges" "disgorged" "disgorged" "disgorging");
lin disgrace_N = mkN "disgrace" ;
lin disgrace_V2 = mkV2 (mkV "disgrace" "disgraces" "disgraced" "disgraced" "disgracing");
lin disgraceful_A = compoundA (mkA "disgraceful");
lin disgruntled_A = compoundA (mkA "disgruntled");
lin disguise_N = mkN "disguise" "disguises";
lin disguise_V2 = mkV2 (mkV "disguise" "disguises" "disguised" "disguised" "disguising");
lin disgust_N = mkN "disgust" ;
lin disgust_V2 = mkV2 (mkV "disgust" "disgusts" "disgusted" "disgusted" "disgusting");
lin disgustedly_Adv = mkAdv "disgustedly";
lin disgusting_A = compoundA (mkA "disgusting");
lin dish_N = mkN "dish" "dishes";
lin dish_V2 = mkV2 (mkV "dish" "dishes" "dished" "dished" "dishing");
lin dishabille_N = mkN "dishabille" ;
lin disharmonious_A = compoundA (mkA "disharmonious");
lin disharmony_N = mkN "disharmony" ;
lin dishcloth_N = mkN "dishcloth" "dishcloths";
lin dishearten_V2 = mkV2 (mkV "dishearten" "disheartens" "disheartened" "disheartened" "disheartening");
lin dishevelled_A = compoundA (mkA "dishevelled");
lin dishful_N = mkN "dishful" "dishfuls";
lin dishonest_A = compoundA (mkA "dishonest");
lin dishonesty_N = mkN "dishonesty" "dishonesties";
lin dishonour_N = mkN "dishonour" ;
lin dishonour_V2 = mkV2 (mkV "dishonour" "dishonours" "dishonoured" "dishonoured" "dishonouring");
lin dishonourable_A = compoundA (mkA "dishonourable");
lin dishwasher_N = mkN "dishwasher" "dishwashers";
lin dishwater_N = mkN "dishwater" ;
lin dishy_A = mkA "dishy" "dishier";
lin disillusion_N = mkN "disillusion" ;
lin disillusion_V2 = mkV2 (mkV "disillusion" "disillusions" "disillusioned" "disillusioned" "disillusioning");
lin disillusionment_N = mkN "disillusionment" "disillusionments";
lin disincentive_N = mkN "disincentive" "disincentives";
lin disinclination_N = mkN "disinclination" "disinclinations";
lin disincline_V2 = mkV2 (mkV "disincline" "disinclines" "disinclined" "disinclined" "disinclining");
lin disincline_V2V = mkV2V (mkV "disincline") noPrep to_Prep ;
lin disinfect_V2 = mkV2 (mkV "disinfect" "disinfects" "disinfected" "disinfected" "disinfecting");
lin disinfectant_A = compoundA (mkA "disinfectant");
lin disinfectant_N = mkN "disinfectant" "disinfectants";
lin disinfection_N = mkN "disinfection" ;
lin disinfest_V2 = mkV2 (mkV "disinfest" "disinfests" "disinfested" "disinfested" "disinfesting");
lin disinfestation_N = mkN "disinfestation" ;
lin disinflation_N = mkN "disinflation" ;
lin disingenuous_A = compoundA (mkA "disingenuous");
lin disingenuousness_N = mkN "disingenuousness" ;
lin disinherit_V2 = mkV2 (mkV "disinherit" "disinherits" "disinherited" "disinherited" "disinheriting");
lin disinheritance_N = mkN "disinheritance" ;
lin disintegrate_V = mkV "disintegrate" "disintegrates" "disintegrated" "disintegrated" "disintegrating";
lin disintegrate_V2 = mkV2 (mkV "disintegrate" "disintegrates" "disintegrated" "disintegrated" "disintegrating");
lin disintegration_N = mkN "disintegration" "disintegrations";
lin disinter_V2 = mkV2 (mkV "disinter" "disinters" "disinterred" "disinterred" "disinterring");
lin disinterested_A = compoundA (mkA "disinterested");
lin disinterestedness_N = mkN "disinterestedness" ;
lin disinterment_N = mkN "disinterment" "disinterments";
lin disjoint_V2 = mkV2 (mkV "disjoint" "disjoints" "disjointed" "disjointed" "disjointing");
lin disjointed_A = compoundA (mkA "disjointed");
lin disjointedness_N = mkN "disjointedness" ;
lin disjunctive_A = compoundA (mkA "disjunctive");
lin disk_N = mkN "disk" "disks";
lin dislike_N = mkN "dislike" "dislikes";
lin dislike_V2 = mkV2 (mkV "dislike" "dislikes" "disliked" "disliked" "disliking");
lin dislocate_V2 = mkV2 (mkV "dislocate" "dislocates" "dislocated" "dislocated" "dislocating");
lin dislocation_N = mkN "dislocation" "dislocations";
lin dislodge_V2 = mkV2 (mkV "dislodge" "dislodges" "dislodged" "dislodged" "dislodging");
lin dislodgement_N = mkN "dislodgement" "dislodgements";
lin disloyal_A = compoundA (mkA "disloyal");
lin disloyalty_N = mkN "disloyalty" "disloyalties";
lin dismal_A = compoundA (mkA "dismal");
lin dismantle_V2 = mkV2 (mkV "dismantle" "dismantles" "dismantled" "dismantled" "dismantling");
lin dismantlement_N = mkN "dismantlement" ;
lin dismay_N = mkN "dismay" ;
lin dismay_V = mkV "dismay";
lin dismay_V2 = mkV2 (mkV "dismay" "dismays" "dismayed" "dismayed" "dismaying");
lin dismember_V2 = mkV2 (mkV "dismember" "dismembers" "dismembered" "dismembered" "dismembering");
lin dismemberment_N = mkN "dismemberment" "dismemberments";
lin dismiss_V2 = mkV2 (mkV "dismiss" "dismisses" "dismissed" "dismissed" "dismissing");
lin dismissal_N = mkN "dismissal" "dismissals";
lin dismount_V = mkV "dismount" "dismounts" "dismounted" "dismounted" "dismounting";
lin dismount_V2 = mkV2 (mkV "dismount" "dismounts" "dismounted" "dismounted" "dismounting");
lin dismounted_A = compoundA (mkA "dismounted");
lin disobedience_N = mkN "disobedience" ;
lin disobedient_A = compoundA (mkA "disobedient");
lin disobey_V2 = mkV2 (mkV "disobey" "disobeys" "disobeyed" "disobeyed" "disobeying");
lin disoblige_V2 = mkV2 (mkV "disoblige" "disobliges" "disobliged" "disobliged" "disobliging");
lin disorder_N = mkN "disorder" "disorders";
lin disorder_V2 = mkV2 (mkV "disorder" "disorders" "disordered" "disordered" "disordering");
lin disorderly_A = compoundA (mkA "disorderly");
lin disorganization_N = mkN "disorganization" ;
lin disorganize_V2 = mkV2 (mkV "disorganize" "disorganizes" "disorganized" "disorganized" "disorganizing");
lin disorient_V2 = mkV2 (mkV "disorient" "disorients" "disoriented" "disoriented" "disorienting");
lin disorientate_V2 = mkV2 (mkV "disorientate" "disorientates" "disorientated" "disorientated" "disorientating");
lin disown_V2 = mkV2 (mkV "disown" "disowns" "disowned" "disowned" "disowning");
lin disparage_V2 = mkV2 (mkV "disparage" "disparages" "disparaged" "disparaged" "disparaging");
lin disparagement_N = mkN "disparagement" "disparagements";
lin disparagingly_Adv = mkAdv "disparagingly";
lin disparate_A = compoundA (mkA "disparate");
lin disparity_N = mkN "disparity" "disparities";
lin dispassionate_A = compoundA (mkA "dispassionate");
lin dispassionateness_N = mkN "dispassionateness" ;
lin dispatch_N = mkN "dispatch" "dispatches";
lin dispatch_V2 = mkV2 (mkV "dispatch" "dispatches" "dispatched" "dispatched" "dispatching");
lin dispatch_V2V = mkV2V (mkV "dispatch") noPrep to_Prep ;
lin dispatch_box_N = mkN "dispatch - box" "dispatch - boxes";
lin dispatch_rider_N = mkN "dispatch - rider" "dispatch - riders";
lin dispel_V2 = mkV2 (mkV "dispel" "dispels" "dispelled" "dispelled" "dispelling");
lin dispensable_A = compoundA (mkA "dispensable");
lin dispensary_N = mkN "dispensary" "dispensaries";
lin dispensation_N = mkN "dispensation" "dispensations";
lin dispense_V = mkV "dispense" "dispenses" "dispensed" "dispensed" "dispensing";
lin dispense_V2 = mkV2 (mkV "dispense" "dispenses" "dispensed" "dispensed" "dispensing");
lin dispenser_N = mkN "dispenser" "dispensers";
lin dispersal_N = mkN "dispersal" "dispersals";
lin disperse_V = mkV "disperse" "disperses" "dispersed" "dispersed" "dispersing";
lin disperse_V2 = mkV2 (mkV "disperse" "disperses" "dispersed" "dispersed" "dispersing");
lin dispersion_N = mkN "dispersion" "dispersions";
lin dispirit_V2 = mkV2 (mkV "dispirit" "dispirits" "dispirited" "dispirited" "dispiriting");
lin dispiritedly_Adv = mkAdv "dispiritedly";
lin displace_V2 = mkV2 (mkV "displace" "displaces" "displaced" "displaced" "displacing");
lin displacement_N = mkN "displacement" "displacements";
lin display_N = mkN "display" "displays";
lin display_V2 = mkV2 (mkV "display" "displays" "displayed" "displayed" "displaying");
lin display_VS = mkVS (mkV "display");
lin displease_V2 = mkV2 (mkV "displease" "displeases" "displeased" "displeased" "displeasing");
lin displeasing_A = compoundA (mkA "displeasing");
lin displeasure_N = mkN "displeasure" ;
lin disport_V2 = mkV2 (mkV "disport" "disports" "disported" "disported" "disporting");
lin disposable_A = compoundA (mkA "disposable");
lin disposal_N = mkN "disposal" ;
lin dispose_V = mkV "dispose" "disposes" "disposed" "disposed" "disposing";
lin dispose_V2 = mkV2 (mkV "dispose" "disposes" "disposed" "disposed" "disposing");
lin disposition_N = mkN "disposition" "dispositions";
lin dispossess_V2 = mkV2 (mkV "dispossess" "dispossesses" "dispossessed" "dispossessed" "dispossessing");
lin dispossession_N = mkN "dispossession" "dispossessions";
lin disproof_N = mkN "disproof" "disproofs";
lin disproportion_N = mkN "disproportion" ;
lin disproportionate_A = compoundA (mkA "disproportionate");
lin disprove_V2 = mkV2 (mkV "disprove" "disproves" "disproved" "disproved" "disproving");
lin disprove_VS = mkVS (mkV "disprove");
lin disputable_A = compoundA (mkA "disputable");
lin disputant_N = mkN "disputant" "disputants";
lin disputation_N = mkN "disputation" "disputations";
lin disputatious_A = compoundA (mkA "disputatious");
lin dispute_N = mkN "dispute" "disputes";
lin dispute_V = mkV "dispute" "disputes" "disputed" "disputed" "disputing";
lin dispute_V2 = mkV2 (mkV "dispute" "disputes" "disputed" "disputed" "disputing");
lin disqualification_N = mkN "disqualification" "disqualifications";
lin disqualify_V2 = mkV2 (mkV "disqualify" "disqualifies" "disqualified" "disqualified" "disqualifying");
lin disquiet_N = mkN "disquiet" ;
lin disquiet_V2 = mkV2 (mkV "disquiet" "disquiets" "disquieted" "disquieted" "disquieting");
lin disquieting_A = compoundA (mkA "disquieting");
lin disquietude_N = mkN "disquietude" ;
lin disquisition_N = mkN "disquisition" "disquisitions";
lin disregard_N = mkN "disregard" ;
lin disregard_V2 = mkV2 (mkV "disregard" "disregards" "disregarded" "disregarded" "disregarding");
lin disrepair_N = mkN "disrepair" ;
lin disreputable_A = compoundA (mkA "disreputable");
lin disrepute_N = mkN "disrepute" ;
lin disrespect_N = mkN "disrespect" ;
lin disrespectful_A = compoundA (mkA "disrespectful");
lin disrobe_V = mkV "disrobe" "disrobes" "disrobed" "disrobed" "disrobing";
lin disrobe_V2 = mkV2 (mkV "disrobe" "disrobes" "disrobed" "disrobed" "disrobing");
lin disrupt_V = mkV "disrupt";
lin disrupt_V2 = mkV2 (mkV "disrupt" "disrupts" "disrupted" "disrupted" "disrupting");
lin disruption_N = mkN "disruption" "disruptions";
lin disruptive_A = compoundA (mkA "disruptive");
lin dissatisfaction_N = mkN "dissatisfaction" ;
lin dissatisfy_V2 = mkV2 (mkV "dissatisfy" "dissatisfies" "dissatisfied" "dissatisfied" "dissatisfying");
lin dissect_V2 = mkV2 (mkV "dissect" "dissects" "dissected" "dissected" "dissecting");
lin dissection_N = mkN "dissection" "dissections";
lin dissemble_V = mkV "dissemble" "dissembles" "dissembled" "dissembled" "dissembling";
lin dissemble_V2 = mkV2 (mkV "dissemble" "dissembles" "dissembled" "dissembled" "dissembling");
lin dissembler_N = mkN "dissembler" "dissemblers";
lin disseminate_V = mkV "disseminate";
lin disseminate_V2 = mkV2 (mkV "disseminate" "disseminates" "disseminated" "disseminated" "disseminating");
lin dissemination_N = mkN "dissemination" ;
lin dissension_N = mkN "dissension" "dissensions";
lin dissent_N = mkN "dissent" ;
lin dissent_V = mkV "dissent" "dissents" "dissented" "dissented" "dissenting";
lin dissenter_N = mkN "dissenter" "dissenters";
lin dissertation_N = mkN "dissertation" "dissertations";
lin disservice_N = mkN "disservice" "disservices";
lin dissever_V2 = mkV2 (mkV "dissever" "dissevers" "dissevered" "dissevered" "dissevering");
lin dissidence_N = mkN "dissidence" ;
lin dissident_A = compoundA (mkA "dissident");
lin dissident_N = mkN "dissident" "dissidents";
lin dissimilar_A = compoundA (mkA "dissimilar");
lin dissimilarity_N = mkN "dissimilarity" "dissimilarities";
lin dissimilitude_N = mkN "dissimilitude" ;
lin dissimulate_V = mkV "dissimulate" "dissimulates" "dissimulated" "dissimulated" "dissimulating";
lin dissimulate_V2 = mkV2 (mkV "dissimulate" "dissimulates" "dissimulated" "dissimulated" "dissimulating");
lin dissimulation_N = mkN "dissimulation" "dissimulations";
lin dissipate_V = mkV "dissipate" "dissipates" "dissipated" "dissipated" "dissipating";
lin dissipate_V2 = mkV2 (mkV "dissipate" "dissipates" "dissipated" "dissipated" "dissipating");
lin dissipated_A = compoundA (mkA "dissipated");
lin dissipation_N = mkN "dissipation" ;
lin dissociate_V2 = mkV2 (mkV "dissociate" "dissociates" "dissociated" "dissociated" "dissociating");
lin dissociation_N = mkN "dissociation" ;
lin dissolubility_N = mkN "dissolubility" ;
lin dissoluble_A = compoundA (mkA "dissoluble");
lin dissolute_A = compoundA (mkA "dissolute");
lin dissolution_N = mkN "dissolution" "dissolutions";
lin dissolve_V = mkV "dissolve" "dissolves" "dissolved" "dissolved" "dissolving";
lin dissolve_V2 = mkV2 (mkV "dissolve" "dissolves" "dissolved" "dissolved" "dissolving");
lin dissonance_N = mkN "dissonance" "dissonances";
lin dissonant_A = compoundA (mkA "dissonant");
lin dissuade_V2 = mkV2 (mkV "dissuade" "dissuades" "dissuaded" "dissuaded" "dissuading");
lin dissuasion_N = mkN "dissuasion" ;
lin dissyllable_N = mkN "dissyllable" "dissyllables";
lin distaff_N = mkN "distaff" "distaffs";
lin distance_N = mkN "distance" "distances";
lin distance_V2 = mkV2 (mkV "distance" "distances" "distanced" "distanced" "distancing");
lin distant_A = compoundA (mkA "distant");
lin distaste_N = mkN "distaste" "distastes";
lin distasteful_A = compoundA (mkA "distasteful");
lin distastefulness_N = mkN "distastefulness" ;
lin distemper_N = mkN "distemper" ;
lin distemper_V2 = mkV2 (mkV "distemper" "distempers" "distempered" "distempered" "distempering");
lin distend_V = mkV "distend" "distends" "distended" "distended" "distending";
lin distend_V2 = mkV2 (mkV "distend" "distends" "distended" "distended" "distending");
lin distension_N = mkN "distension" "distensions";
lin distil_V = mkV "distil" "distils" "distilled" "distilled" "distilling";
lin distil_V2 = mkV2 (mkV "distil" "distils" "distilled" "distilled" "distilling");
lin distillation_N = mkN "distillation" "distillations";
lin distiller_N = mkN "distiller" "distillers";
lin distillery_N = mkN "distillery" "distilleries";
lin distinct_A = compoundA (mkA "distinct");
lin distinction_N = mkN "distinction" "distinctions";
lin distinctive_A = compoundA (mkA "distinctive");
lin distinctiveness_N = mkN "distinctiveness" ;
lin distinctness_N = mkN "distinctness" ;
lin distinguish_V = mkV "distinguish" "distinguishes" "distinguished" "distinguished" "distinguishing";
lin distinguish_V2 = mkV2 (mkV "distinguish" "distinguishes" "distinguished" "distinguished" "distinguishing");
lin distinguishable_A = compoundA (mkA "distinguishable");
lin distinguished_A = compoundA (mkA "distinguished");
lin distort_V2 = mkV2 (mkV "distort" "distorts" "distorted" "distorted" "distorting");
lin distortion_N = mkN "distortion" "distortions";
lin distract_V = mkV "distract";
lin distract_V2 = mkV2 (mkV "distract" "distracts" "distracted" "distracted" "distracting");
lin distracted_A = compoundA (mkA "distracted");
lin distraction_N = mkN "distraction" "distractions";
lin distrain_V = mkV "distrain" "distrains" "distrained" "distrained" "distraining";
lin distraint_N = mkN "distraint" "distraints";
lin distrait_A = compoundA (mkA "distrait");
lin distraught_A = compoundA (mkA "distraught");
lin distress_N = mkN "distress" ;
lin distress_V2 = mkV2 (mkV "distress" "distresses" "distressed" "distressed" "distressing");
lin distressful_A = compoundA (mkA "distressful");
lin distressing_A = compoundA (mkA "distressing");
lin distribute_V2 = mkV2 (mkV "distribute" "distributes" "distributed" "distributed" "distributing");
lin distribution_N = mkN "distribution" "distributions";
lin distributive_A = compoundA (mkA "distributive");
lin distributor_N = mkN "distributor" "distributors";
lin district_N = mkN "district" "districts";
lin distrust_N = mkN "distrust" "distrusts";
lin distrust_V2 = mkV2 (mkV "distrust" "distrusts" "distrusted" "distrusted" "distrusting");
lin distrustful_A = compoundA (mkA "distrustful");
lin distrustfulness_N = mkN "distrustfulness" ;
lin disturb_V2 = mkV2 (mkV "disturb" "disturbs" "disturbed" "disturbed" "disturbing");
lin disturbance_N = mkN "disturbance" "disturbances";
lin disturbingly_Adv = mkAdv "disturbingly";
lin disunion_N = mkN "disunion" ;
lin disunite_V = mkV "disunite" "disunites" "disunited" "disunited" "disuniting";
lin disunite_V2 = mkV2 (mkV "disunite" "disunites" "disunited" "disunited" "disuniting");
lin disunity_N = mkN "disunity" ;
lin disuse_N = mkN "disuse" ;
lin disused_A = compoundA (mkA "disused");
lin disyllabic_A = compoundA (mkA "disyllabic");
lin disyllable_N = mkN "disyllable" "disyllables";
lin ditch_N = mkN "ditch" "ditches";
lin ditch_V = mkV "ditch" "ditches" "ditched" "ditched" "ditching";
lin ditch_V2 = mkV2 (mkV "ditch" "ditches" "ditched" "ditched" "ditching");
lin dither_N = mkN "dither" "dithers";
lin dither_V = mkV "dither" "dithers" "dithered" "dithered" "dithering";
lin ditto_N = mkN "ditto" "ditti" {- FIXME: guessed plural form -};
lin ditty_N = mkN "ditty" "ditties";
lin diurnal_A = compoundA (mkA "diurnal");
lin divagate_V = mkV "divagate" "divagates" "divagated" "divagated" "divagating";
lin divagation_N = mkN "divagation" "divagations";
lin divan_N = mkN "divan" "divans";
lin divan_bed_N = mkN "divan - bed" "divan - beds";
lin dive_N = mkN "dive" "dives";
lin dive_V = mkV "dive" "dives" "dived" "dived" "diving";
lin dive_bomb_V = mkV "dive - bomb" "dive - bombs" "dive - bombed" "dive - bombed" "dive - bombing";
lin dive_bomb_V2 = mkV2 (mkV "dive - bomb" "dive - bombs" "dive - bombed" "dive - bombed" "dive - bombing");
lin dive_bomber_N = mkN "dive - bomber" "dive - bombers";
lin diver_N = mkN "diver" "divers";
lin diverge_V = mkV "diverge" "diverges" "diverged" "diverged" "diverging";
lin divergence_N = mkN "divergence" "divergences";
lin divergency_N = mkN "divergency" "divergencies";
lin divergent_A = compoundA (mkA "divergent");
lin divers_A = compoundA (mkA "divers");
lin diverse_A = compoundA (mkA "diverse");
lin diversification_N = mkN "diversification" ;
lin diversify_V = mkV "diversify";
lin diversify_V2 = mkV2 (mkV "diversify" "diversifies" "diversified" "diversified" "diversifying");
lin diversion_N = mkN "diversion" "diversions";
lin diversionary_A = compoundA (mkA "diversionary");
lin diversionist_N = mkN "diversionist" "diversionists";
lin diversity_N = mkN "diversity" ;
lin divert_V = mkV "divert";
lin divert_V2 = mkV2 (mkV "divert" "diverts" "diverted" "diverted" "diverting");
lin diverting_A = compoundA (mkA "diverting");
lin dives_PN = mkPN "Dives";
lin divest_V2 = mkV2 (mkV "divest" "divests" "divested" "divested" "divesting");
lin divide_N = mkN "divide" "divides";
lin divide_V = mkV "divide" "divides" "divided" "divided" "dividing";
lin divide_V2 = mkV2 (mkV "divide" "divides" "divided" "divided" "dividing");
lin dividend_N = mkN "dividend" "dividends";
lin dividend_warrant_N = mkN "dividend - warrant" "dividend - warrants";
lin divination_N = mkN "divination" "divinations";
lin divine_A = compoundA (mkA "divine");
lin divine_N = mkN "divine" "divines";
lin divine_V = mkV "divine" "divines" "divined" "divined" "divining";
lin divine_V2 = mkV2 (mkV "divine" "divines" "divined" "divined" "divining");
lin diviner_N = mkN "diviner" "diviners";
lin diving_bell_N = mkN "diving - bell" "diving - bells";
lin diving_board_N = mkN "diving - board" "diving - boards";
lin diving_dress_N = mkN "diving - dress" ;
lin diving_suit_N = mkN "diving - suit" "diving - suits";
lin divinity_N = mkN "divinity" "divinities";
lin divisible_A = compoundA (mkA "divisible");
lin division_N = mkN "division" "divisions";
lin divisional_A = compoundA (mkA "divisional");
lin divisor_N = mkN "divisor" "divisors";
lin divorce_N = mkN "divorce" "divorces";
lin divorce_V2 = mkV2 (mkV "divorce" "divorces" "divorced" "divorced" "divorcing");
lin divorcee_N = mkN "divorcee" "divorcees";
lin divot_N = mkN "divot" "divots";
lin divulge_V2 = mkV2 (mkV "divulge" "divulges" "divulged" "divulged" "divulging");
lin divulgence_N = mkN "divulgence" "divulgences";
lin divvy_N = mkN "divvy" "divvies";
lin dixie_N = mkN "dixie" "dixies";
lin diy_N = mkN "diy" ;
lin dizzily_Adv = mkAdv "dizzily";
lin dizziness_N = mkN "dizziness" ;
lin dizzy_A = mkA "dizzy" "dizzier";
lin dizzy_V2 = mkV2 (mkV "dizzy" "dizzies" "dizzied" "dizzied" "dizzying");
lin dj_N = mkN "dj" ;
lin djibouti_PN = mkPN "Djibouti";
lin djiboutian_A = compoundA (mkA "djiboutian");
lin djiboutian_N = mkN "djiboutian" "djiboutians";
lin djinn_N = mkN "djinn" "djinns";
lin djs_N = mkN "DJ" "DJs" ;
lin dlitt_N = mkN "dlitt" ;
lin dm_N = mkN "dm" "dm";
lin dna_N = mkN "DNA" "DNAs" ;
lin dnepropetrovsk_PN = mkPN "Dnepropetrovsk";
lin do_N = mkN "do" "di" {- FIXME: guessed plural form -};
lin do_V = IrregEng.do_V;
lin do_V2 = mkV2 (IrregEng.do_V);
lin do_gooder_N = mkN "do - gooder" "do - gooders";
lin dobbin_N = mkN "dobbin" "dobbins";
lin docile_A = compoundA (mkA "docile");
lin docility_N = mkN "docility" ;
lin dock_N = mkN "dock" "docks";
lin dock_V = mkV "dock" "docks" "docked" "docked" "docking";
lin dock_V2 = mkV2 (mkV "dock" "docks" "docked" "docked" "docking");
lin docker_N = mkN "docker" "dockers";
lin docket_N = mkN "docket" "dockets";
lin docket_V2 = mkV2 (mkV "docket" "dockets" "docketed" "docketed" "docketing");
lin dockyard_N = mkN "dockyard" "dockyards";
lin doctor_N = mkN "doctor" "doctors";
lin doctor_V2 = mkV2 (mkV "doctor" "doctors" "doctored" "doctored" "doctoring");
lin doctorate_N = mkN "doctorate" "doctorates";
lin doctrinaire_A = compoundA (mkA "doctrinaire");
lin doctrinaire_N = mkN "doctrinaire" "doctrinaires";
lin doctrinal_A = compoundA (mkA "doctrinal");
lin doctrine_N = mkN "doctrine" "doctrines";
lin document_N = mkN "document" "documents";
lin document_V2 = mkV2 (mkV "document" "documents" "documented" "documented" "documenting");
lin documentary_A = compoundA (mkA "documentary");
lin documentation_N = mkN "documentation" ;
lin dodder_V = mkV "dodder" "dodders" "doddered" "doddered" "doddering";
lin dodderer_N = mkN "dodderer" "dodderers";
lin doddering_A = compoundA (mkA "doddering");
lin doddery_A = compoundA (mkA "doddery");
lin dodge_N = mkN "dodge" "dodges";
lin dodge_V = mkV "dodge" "dodges" "dodged" "dodged" "dodging";
lin dodge_V2 = mkV2 (mkV "dodge" "dodges" "dodged" "dodged" "dodging");
lin dodgem_N = mkN "dodgem" "dodgems";
lin dodger_N = mkN "dodger" "dodgers";
lin dodgy_A = compoundA (mkA "dodgy");
lin dodo_N = mkN "dodo" "dodos";
lin doe_N = mkN "doe" ;
lin doer_N = mkN "doer" "doers";
lin doff_V2 = mkV2 (mkV "doff" "doffs" "doffed" "doffed" "doffing");
lin dog's_tooth_N = mkN "dog's - tooth" ;
lin dog_N = mkN "dog" "dogs";
lin dog_V2 = mkV2 (mkV "dog" "dogs" "dogged" "dogged" "dogging");
lin dog_biscuit_N = mkN "dog - biscuit" "dog - biscuits";
lin dog_cart_N = mkN "dog - cart" "dog - carts";
lin dog_collar_N = mkN "dog - collar" "dog - collars";
lin dog_eared_A = compoundA (mkA "dog - eared");
lin dog_like_A = compoundA (mkA "dog - like");
lin doge_N = mkN "doge" "doges";
lin dogfish_N = mkN "dogfish" "dogfish";
lin dogged_A = compoundA (mkA "dogged");
lin doggedness_N = mkN "doggedness" ;
lin doggerel_N = mkN "doggerel" ;
lin doggie_N = mkN "doggie" "doggies";
lin doggo_Adv = mkAdv "doggo";
lin doggy_N = mkN "doggy" "doggies";
lin doghouse_N = mkN "doghouse" "doghouses";
lin dogma_N = mkN "dogma" "dogmas";
lin dogmatic_A = compoundA (mkA "dogmatic");
lin dogmatically_Adv = mkAdv "dogmatically";
lin dogmatism_N = mkN "dogmatism" ;
lin dogmatize_V = mkV "dogmatize" "dogmatizes" "dogmatized" "dogmatized" "dogmatizing";
lin dogmatize_V2 = mkV2 (mkV "dogmatize" "dogmatizes" "dogmatized" "dogmatized" "dogmatizing");
lin dogsbody_N = mkN "dogsbody" "dogsbodies";
lin dogtooth_N = mkN "dogtooth" ;
lin dogtrot_N = mkN "dogtrot" "dogtrots";
lin dogwatch_N = mkN "dogwatch" "dogwatches";
lin dogwood_N = mkN "dogwood" "dogwoods";
lin doh_N = mkN "doh" "dohs";
lin doily_N = mkN "doily" "doilies";
lin dole_N = mkN "dole" "doles";
lin dole_V2 = mkV2 (mkV "dole" "doles" "doled" "doled" "doling");
lin doleful_A = compoundA (mkA "doleful");
lin doll_N = mkN "doll" "dolls";
lin doll_V = mkV "doll" "dolls" "dolled" "dolled" "dolling";
lin doll_V2 = mkV2 (mkV "doll" "dolls" "dolled" "dolled" "dolling");
lin dollar_N = mkN "dollar" "dollars";
lin dollop_N = mkN "dollop" "dollops";
lin dolly_N = mkN "dolly" "dollies";
lin dolly_PN = mkPN "Dolly";
lin dolmen_N = mkN "dolmen" "dolmens";
lin dolour_N = mkN "dolour" "dolours";
lin dolourous_A = compoundA (mkA "dolourous");
lin dolphin_N = mkN "dolphin" "dolphins";
lin dolt_N = mkN "dolt" "dolts";
lin doltish_A = compoundA (mkA "doltish");
lin domain_N = mkN "domain" "domains";
lin dome_N = mkN "dome" "domes";
lin domed_A = compoundA (mkA "domed");
lin domesday_PN = mkPN "Domesday";
lin domestic_A = compoundA (mkA "domestic");
lin domestically_Adv = mkAdv "domestically";
lin domesticate_V2 = mkV2 (mkV "domesticate" "domesticates" "domesticated" "domesticated" "domesticating");
lin domestication_N = mkN "domestication" ;
lin domesticity_N = mkN "domesticity" ;
lin domicile_N = mkN "domicile" "domiciles";
lin domiciliary_A = compoundA (mkA "domiciliary");
lin dominance_N = mkN "dominance" ;
lin dominant_A = compoundA (mkA "dominant");
lin dominate_V = mkV "dominate" "dominates" "dominated" "dominated" "dominating";
lin dominate_V2 = mkV2 (mkV "dominate" "dominates" "dominated" "dominated" "dominating");
lin domination_N = mkN "domination" ;
lin domineer_V = mkV "domineer" "domineers" "domineered" "domineered" "domineering";
lin domineering_A = compoundA (mkA "domineering");
lin dominic_PN = mkPN "Dominic";
lin dominica_PN = mkPN "Dominica";
lin dominican_A = compoundA (mkA "dominican");
lin dominican_N = mkN "dominican" "dominicans";
lin dominie_N = mkN "dominie" "dominies";
lin dominion_N = mkN "dominion" "dominions";
lin domino_N = mkN "domino" "dominos";
lin don't_know_N = mkN "don't - know" "don't - knows";
lin don_N = mkN "don" "dons";
lin don_PN = mkPN "Don";
lin don_V2 = mkV2 (mkV "don" "dons" "donned" "donned" "donning");
lin donald_PN = mkPN "Donald";
lin donate_V = mkV "donate";
lin donate_V2 = mkV2 (mkV "donate" "donates" "donated" "donated" "donating");
lin donation_N = mkN "donation" "donations";
lin doncaster_PN = mkPN "Doncaster";
lin done_VA = mkVA (mkV "done");
lin donegal_PN = mkPN "Donegal";
lin donetsk_PN = mkPN "Donetsk";
lin donjon_N = mkN "donjon" "donjons";
lin donkey_N = mkN "donkey" "donkeys";
lin donkey_jacket_N = mkN "donkey - jacket" "donkey - jackets";
lin donkey_work_N = mkN "donkey - work" ;
lin donnish_A = compoundA (mkA "donnish");
lin donor_N = mkN "donor" "donors";
lin doodle_V = mkV "doodle" "doodles" "doodled" "doodled" "doodling";
lin doodlebug_N = mkN "doodlebug" "doodlebugs";
lin doom_N = mkN "doom" "dooms";
lin doom_V2 = mkV2 (mkV "doom" "dooms" "doomed" "doomed" "dooming");
lin doomsday_PN = mkPN "Doomsday";
lin door_N = mkN "door" "doors";
lin door_to_door_A = compoundA (mkA "door - to - door");
lin doorbell_N = mkN "doorbell" "doorbells";
lin doorcase_N = mkN "doorcase" "doorcases";
lin doorframe_N = mkN "doorframe" "doorframes";
lin doorhandle_N = mkN "doorhandle" "doorhandles";
lin doorkeeper_N = mkN "doorkeeper" "doorkeepers";
lin doorknob_N = mkN "doorknob" "doorknobs";
lin doorknocker_N = mkN "doorknocker" "doorknockers";
lin doorman_N = mkN "doorman" "doormen" {- FIXME: guessed plural form -};
lin doormat_N = mkN "doormat" "doormats";
lin doornail_N = mkN "doornail" "doornails";
lin doorplate_N = mkN "doorplate" "doorplates";
lin doorpost_N = mkN "doorpost" "doorposts";
lin doorstep_N = mkN "doorstep" "doorsteps";
lin doorstopper_N = mkN "doorstopper" "doorstoppers";
lin doorway_N = mkN "doorway" "doorways";
lin dope_N = mkN "dope" "dopes";
lin dope_V2 = mkV2 (mkV "dope" "dopes" "doped" "doped" "doping");
lin dopey_A = compoundA (mkA "dopey");
lin dora_PN = mkPN "Dora";
lin dorchester_PN = mkPN "Dorchester";
lin dordrecht_PN = mkPN "Dordrecht";
lin doreen_PN = mkPN "Doreen";
lin doric_A = compoundA (mkA "doric");
lin doris_PN = mkPN "Doris";
lin dorking_PN = mkPN "Dorking";
lin dormant_A = compoundA (mkA "dormant");
lin dormer_N = mkN "dormer" "dormers";
lin dormer_window_N = mkN "dormer - window" "dormer - windows";
lin dormitory_N = mkN "dormitory" "dormitories";
lin dormouse_N = mkN "dormouse" "dormice" {- FIXME: guessed plural form -};
lin dorothy_PN = mkPN "Dorothy";
lin dorsal_A = compoundA (mkA "dorsal");
lin dorset_PN = mkPN "Dorset";
lin dortmund_PN = mkPN "Dortmund";
lin dory_N = mkN "dory" "dories";
lin dosage_N = mkN "dosage" "dosages";
lin dose_N = mkN "dose" "doses";
lin dose_V2 = mkV2 (mkV "dose" "doses" "dosed" "dosed" "dosing");
lin doss_V = mkV "doss" "dosses" "dossed" "dossed" "dossing";
lin doss_house_N = mkN "doss - house" "doss - houses";
lin dosser_N = mkN "dosser" "dossers";
lin dossier_N = mkN "dossier" "dossiers";
lin dot_N = mkN "dot" "dots";
lin dot_V2 = mkV2 (mkV "dot" "dots" "dotted" "dotted" "dotting");
lin dotage_N = mkN "dotage" ;
lin dotard_N = mkN "dotard" "dotards";
lin dote_V = mkV "dote" "dotes" "doted" "doted" "doting";
lin dottle_N = mkN "dottle" "dottles";
lin dotty_A = mkA "dotty" "dottier";
lin douai_PN = mkPN "Douai";
lin double_A = compoundA (mkA "double");
lin double_Adv = mkAdv "double";
lin double_N = mkN "double" "doubles";
lin double_V = mkV "double" "doubles" "doubled" "doubled" "doubling";
lin double_V2 = mkV2 (mkV "double" "doubles" "doubled" "doubled" "doubling");
lin double_barrelled_A = compoundA (mkA "double - barrelled");
lin double_bass_N = mkN "double - bass" "double - basses";
lin double_bedded_A = compoundA (mkA "double - bedded");
lin double_breasted_A = compoundA (mkA "double - breasted");
lin double_check_V2 = mkV2 (mkV "double - check" "double - checks" "double - checked" "double - checked" "double - checking");
lin double_cross_N = mkN "double - cross" "double - crosses";
lin double_cross_V2 = mkV2 (mkV "double - cross" "double - crosses" "double - crossed" "double - crossed" "double - crossing");
lin double_dealer_N = mkN "double - dealer" "double - dealers";
lin double_dealing_A = compoundA (mkA "double - dealing");
lin double_dealing_N = mkN "double - dealing" ;
lin double_decker_N = mkN "double - decker" "double - deckers";
lin double_dutch_N = mkN "double - dutch" ;
lin double_dyed_A = compoundA (mkA "double - dyed");
lin double_edged_A = compoundA (mkA "double - edged");
lin double_entry_N = mkN "double - entry" "double - entries";
lin double_faced_A = compoundA (mkA "double - faced");
lin double_first_N = mkN "double - first" "double - firsts";
lin double_jointed_A = compoundA (mkA "double - jointed");
lin double_park_V = mkV "double - park" "double - parks" "double - parked" "double - parked" "double - parking";
lin double_park_V2 = mkV2 (mkV "double - park" "double - parks" "double - parked" "double - parked" "double - parking");
lin double_quick_A = compoundA (mkA "double - quick");
lin double_quick_Adv = mkAdv "double - quick";
lin double_spacing_N = mkN "double - spacing" ;
lin double_talk_N = mkN "double - talk" ;
lin double_think_N = mkN "double - think" ;
lin doublet_N = mkN "doublet" "doublets";
lin doubloon_N = mkN "doubloon" "doubloons";
lin doubt_N = mkN "doubt" "doubts";
lin doubt_V2 = mkV2 (mkV "doubt" "doubts" "doubted" "doubted" "doubting");
lin doubt_VS = mkVS (mkV "doubt");
lin doubtful_A = compoundA (mkA "doubtful");
lin doubtless_Adv = mkAdv "doubtless";
lin douche_N = mkN "douche" "douches";
lin doug_PN = mkPN "Doug";
lin dough_N = mkN "dough" ;
lin doughnut_N = mkN "doughnut" "doughnuts";
lin doughty_A = compoundA (mkA "doughty");
lin doughy_A = mkA "doughy" "doughier";
lin douglas_PN = mkPN "Douglas";
lin dour_A = compoundA (mkA "dour");
lin douse_V2 = mkV2 (mkV "douse" "douses" "doused" "doused" "dousing");
lin dove_N = mkN "dove" "doves";
lin dovecote_N = mkN "dovecote" "dovecotes";
lin dover_PN = mkPN "Dover";
lin dovetail_N = mkN "dovetail" "dovetails";
lin dovetail_V = mkV "dovetail" "dovetails" "dovetailed" "dovetailed" "dovetailing";
lin dovetail_V2 = mkV2 (mkV "dovetail" "dovetails" "dovetailed" "dovetailed" "dovetailing");
lin dowager_N = mkN "dowager" "dowagers";
lin dowdily_Adv = mkAdv "dowdily";
lin dowdiness_N = mkN "dowdiness" ;
lin dowdy_A = mkA "dowdy" "dowdier";
lin dowel_N = mkN "dowel" "dowels";
lin dower_N = mkN "dower" "dowers";
lin dower_V2 = mkV2 (mkV "dower" "dowers" "dowered" "dowered" "dowering");
lin down_Adv = mkAdv "down";
lin down_N = mkN "down" "downs";
lin down_PN = mkPN "Down";
lin down_Prep = mkPrep "down";
lin down_V2 = mkV2 (mkV "down" "downs" "downed" "downed" "downing");
lin down_and_out_N = mkN "down - and - out" "down - and - outs";
lin down_market_A = compoundA (mkA "down - market");
lin down_to_earth_A = compoundA (mkA "down - to - earth");
lin downbeat_N = mkN "downbeat" "downbeats";
lin downcast_A = compoundA (mkA "downcast");
lin downfall_N = mkN "downfall";
lin downgrade_V2 = mkV2 (mkV "downgrade" "downgrades" "downgraded" "downgraded" "downgrading");
lin downhearted_A = compoundA (mkA "downhearted");
lin downhill_Adv = mkAdv "downhill";
lin downing_street_PN = mkPN "Downing street";
lin downplay_V2 = mkV2 (mkV "downplay");
lin downpour_N = mkN "downpour" "downpours";
lin downright_A = compoundA (mkA "downright");
lin downright_Adv = mkAdv "downright";
lin downrightness_N = mkN "downrightness" ;
lin downsize_V2 = mkV2 (mkV "downsize");
lin downstair_A = compoundA (mkA "downstair");
lin downstairs_A = compoundA (mkA "downstairs");
lin downstairs_Adv = mkAdv "downstairs";
lin downstream_A = compoundA (mkA "downstream");
lin downstream_Adv = mkAdv "downstream";
lin downtown_Adv = mkAdv "downtown";
lin downtrodden_A = compoundA (mkA "downtrodden");
lin downward_A = compoundA (mkA "downward");
lin downward_Adv = mkAdv "downward";
lin downwards_Adv = mkAdv "downwards";
lin downy_A = compoundA (mkA "downy");
lin dowry_N = mkN "dowry" "dowries";
lin dowse_V2 = mkV2 (mkV "dowse" "dowses" "dowsed" "dowsed" "dowsing");
lin dowser_N = mkN "dowser" "dowsers";
lin dowsing_N = mkN "dowsing" ;
lin doxology_N = mkN "doxology" "doxologies";
lin doyen_N = mkN "doyen" "doyens";
lin doyley_N = mkN "doyley" "doyleys";
lin doyly_N = mkN "doyly" "doylies";
lin doz_N = mkN "doz" "doz";
lin doze_N = mkN "doze" "dozes";
lin doze_V = mkV "doze" "dozes" "dozed" "dozed" "dozing";
lin dozen_N = mkN "dozen" "dozens";
lin dphil_N = mkN "dphil" ;
lin dr_PN = mkPN "Dr";
lin drab_A = mkA "drab" "drabber*";
lin drabness_N = mkN "drabness" ;
lin drachm_N = mkN "drachm" "drachms";
lin drachma_N = mkN "drachma" "drachmas";
lin draconian_A = compoundA (mkA "draconian");
lin draft_N = mkN "draft" "drafts";
lin draft_V2 = mkV2 (mkV "draft" "drafts" "drafted" "drafted" "drafting");
lin draftee_N = mkN "draftee" "draftees";
lin drafting_N = mkN "drafting" "draftings";
lin draftsman_N = mkN "draftsman" "draftsmen" {- FIXME: guessed plural form -};
lin drag_N = mkN "drag" ;
lin drag_V = mkV "drag" "drags" "dragged" "dragged" "dragging";
lin drag_V2 = mkV2 (mkV "drag" "drags" "dragged" "dragged" "dragging");
lin draggled_A = compoundA (mkA "draggled");
lin dragnet_N = mkN "dragnet" "dragnets";
lin dragoman_N = mkN "dragoman" "dragomans";
lin dragon_N = mkN "dragon" "dragons";
lin dragonfly_N = mkN "dragonfly" "dragonflies";
lin dragoon_N = mkN "dragoon" "dragoons";
lin dragoon_V2 = mkV2 (mkV "dragoon" "dragoons" "dragooned" "dragooned" "dragooning");
lin drain_N = mkN "drain" "drains";
lin drain_V = mkV "drain" "drains" "drained" "drained" "draining";
lin drain_V2 = mkV2 (mkV "drain" "drains" "drained" "drained" "draining");
lin drainage_N = mkN "drainage" ;
lin drainage_basin_N = mkN "drainage - basin" "drainage - basins";
lin draining_board_N = mkN "draining - board" "draining - boards";
lin drainpipe_N = mkN "drainpipe" "drainpipes";
lin drake_N = mkN "drake" "drakes";
lin dram_N = mkN "dram" "drams";
lin drama_N = mkN "drama" "dramas";
lin dramatic_A = compoundA (mkA "dramatic");
lin dramatically_Adv = mkAdv "dramatically";
lin dramatics_N = mkN "dramatics" "dramatics";
lin dramatist_N = mkN "dramatist" "dramatists";
lin dramatization_N = mkN "dramatization" "dramatizations";
lin dramatize_V2 = mkV2 (mkV "dramatize" "dramatizes" "dramatized" "dramatized" "dramatizing");
lin drape_N = mkN "drape" "drapes";
lin drape_V2 = mkV2 (mkV "drape" "drapes" "draped" "draped" "draping");
lin draper_N = mkN "draper" "drapers";
lin drapery_N = mkN "drapery" "draperies";
lin drastic_A = compoundA (mkA "drastic");
lin drastically_Adv = mkAdv "drastically";
lin drat_V2 = mkV2 (mkV "drat" "drats" "dratted" "dratted" "dratting");
lin draught_N = mkN "draught" "draughts";
lin draught_V2 = mkV2 (mkV "draught" "draughts" "draughted" "draughted" "draughting");
lin draught_horse_N = mkN "draught - horse" "draught - horses";
lin draughts_N = mkN "draughts" "draughts";
lin draughtsman_N = mkN "draughtsman" "draughtsmen" {- FIXME: guessed plural form -};
lin draughty_A = mkA "draughty" "draughtier";
lin draw_N = mkN "draw" "draws";
lin draw_V = IrregEng.draw_V;
lin draw_V2 = mkV2 (IrregEng.draw_V);
lin draw_V2V = mkV2V (IrregEng.draw_V) noPrep to_Prep ;
lin drawback_N = mkN "drawback" "drawbacks";
lin drawbridge_N = mkN "drawbridge" "drawbridges";
lin drawer_N = mkN "drawer" "drawers";
lin drawing_N = mkN "drawing" "drawings";
lin drawing_board_N = mkN "drawing - board" "drawing - boards";
lin drawing_pin_N = mkN "drawing - pin" "drawing - pins";
lin drawing_room_N = mkN "drawing - room" "drawing - rooms";
lin drawl_N = mkN "drawl" "drawls";
lin drawl_V = mkV "drawl" "drawls" "drawled" "drawled" "drawling";
lin drawl_V2 = mkV2 (mkV "drawl" "drawls" "drawled" "drawled" "drawling");
lin dray_N = mkN "dray" "drays";
lin drayton_PN = mkPN "Drayton";
lin dread_N = mkN "dread" ;
lin dread_V = mkV "dread" "dreads" "dreaded" "dreaded" "dreading";
lin dread_V2 = mkV2 (mkV "dread" "dreads" "dreaded" "dreaded" "dreading");
lin dreaded_A = compoundA (mkA "dreaded");
lin dreadful_A = compoundA (mkA "dreadful");
lin dreadfulness_N = mkN "dreadfulness" ;
lin dreadnought_N = mkN "dreadnought" "dreadnoughts";
lin dream_N = mkN "dream" "dreams";
lin dream_V = mkV "dream" "dreams" "dreamed" "dreamed" "dreaming";
lin dream_V2 = mkV2 (mkV "dream" "dreams" "dreamed" "dreamed" "dreaming");
lin dreamer_N = mkN "dreamer" "dreamers";
lin dreamily_Adv = mkAdv "dreamily";
lin dreamland_N = mkN "dreamland" "dreamlands";
lin dreamless_A = compoundA (mkA "dreamless");
lin dreamlike_A = compoundA (mkA "dreamlike");
lin dreamworld_N = mkN "dreamworld" "dreamworlds";
lin dreamy_A = mkA "dreamy" "dreamier";
lin drear_A = compoundA (mkA "drear");
lin drearily_Adv = mkAdv "drearily";
lin dreariness_N = mkN "dreariness" ;
lin dreary_A = mkA "dreary" "drearier";
lin dredge_N = mkN "dredge" "dredges";
lin dredge_V = mkV "dredge" "dredges" "dredged" "dredged" "dredging";
lin dredge_V2 = mkV2 (mkV "dredge" "dredges" "dredged" "dredged" "dredging");
lin dredger_N = mkN "dredger" "dredgers";
lin drench_V2 = mkV2 (mkV "drench" "drenches" "drenched" "drenched" "drenching");
lin drenching_N = mkN "drenching" "drenchings";
lin dresden_PN = mkPN "Dresden";
lin dress_N = mkN "dress" "dresses";
lin dress_V = mkV "dress" "dresses" "dressed" "dressed" "dressing";
lin dress_V2 = mkV2 (mkV "dress" "dresses" "dressed" "dressed" "dressing");
lin dress_hanger_N = mkN "dress - hanger" "dress - hangers";
lin dressage_N = mkN "dressage" ;
lin dresser_N = mkN "dresser" "dressers";
lin dressing_N = mkN "dressing" "dressings";
lin dressing_case_N = mkN "dressing - case" "dressing - cases";
lin dressing_down_N = mkN "dressing - down";
lin dressing_gown_N = mkN "dressing - gown" "dressing - gowns";
lin dressing_table_N = mkN "dressing - table" "dressing - tables";
lin dressmaker_N = mkN "dressmaker" "dressmakers";
lin dressmaking_N = mkN "dressmaking" ;
lin dressy_A = mkA "dressy" "dressier";
lin dribble_V = mkV "dribble" "dribbles" "dribbled" "dribbled" "dribbling";
lin dribble_V2 = mkV2 (mkV "dribble" "dribbles" "dribbled" "dribbled" "dribbling");
lin dribbler_N = mkN "dribbler" "dribblers";
lin driblet_N = mkN "driblet" "driblets";
lin drier_N = mkN "drier" "driers";
lin driffield_PN = mkPN "Driffield";
lin drift_N = mkN "drift" "drifts";
lin drift_V = mkV "drift" "drifts" "drifted" "drifted" "drifting";
lin drift_V2 = mkV2 (mkV "drift" "drifts" "drifted" "drifted" "drifting");
lin drift_ice_N = mkN "drift - ice" ;
lin drift_net_N = mkN "drift - net" "drift - nets";
lin drift_wood_N = mkN "drift - wood" ;
lin driftage_N = mkN "driftage" ;
lin drifter_N = mkN "drifter" "drifters";
lin drill_N = mkN "drill" "drills";
lin drill_V = mkV "drill" "drills" "drilled" "drilled" "drilling";
lin drill_V2 = mkV2 (mkV "drill" "drills" "drilled" "drilled" "drilling");
lin drily_Adv = mkAdv "drily";
lin drink_N = mkN "drink" "drinks";
lin drink_V = IrregEng.drink_V;
lin drink_V2 = mkV2 (IrregEng.drink_V);
lin drinkable_A = compoundA (mkA "drinkable");
lin drinker_N = mkN "drinker" "drinkers";
lin drinking_N = mkN "drinking" ;
lin drinking_bout_N = mkN "drinking - bout" "drinking - bouts";
lin drinking_fountain_N = mkN "drinking - fountain" "drinking - fountains";
lin drinking_song_N = mkN "drinking - song" "drinking - songs";
lin drinking_water_N = mkN "drinking - water" ;
lin drip_N = mkN "drip" "drips";
lin drip_V = mkV "drip" "drips" "dripped" "dripped" "dripping";
lin drip_V2 = mkV2 (mkV "drip" "drips" "dripped" "dripped" "dripping");
lin drip_dry_A = compoundA (mkA "drip - dry");
lin drip_dry_V2 = mkV2 (mkV "drip - dry" "drip - dries" "drip - dried" "drip - dried" "drip - drying");
lin dripping_N = mkN "dripping" ;
lin dripping_pan_N = mkN "dripping - pan" "dripping - pans";
lin drive_N = mkN "drive" "drives";
lin drive_V = IrregEng.drive_V;
lin drive_V2 = mkV2 (IrregEng.drive_V);
lin drive_V2V = mkV2V (IrregEng.drive_V) noPrep to_Prep ;
lin drive_VS = mkVS (IrregEng.drive_V);
lin drive_in_N = mkN "drive - in" "drive - ins";
lin drivel_N = mkN "drivel" ;
lin drivel_V = mkV "drivel" "drivels" "drivelled" "drivelled" "drivelling";
lin driveller_N = mkN "driveller" "drivellers";
lin driver_N = mkN "driver" "drivers";
lin driveway_N = mkN "driveway" "driveways";
lin driving_belt_N = mkN "driving - belt" "driving - belts";
lin driving_wheel_N = mkN "driving - wheel" "driving - wheels";
lin drizzle_N = mkN "drizzle" ;
lin drizzle_V = mkV "drizzle" "drizzles" "drizzled" "drizzled" "drizzling";
lin drizzly_A = compoundA (mkA "drizzly");
lin drogheda_PN = mkPN "Drogheda";
lin drogue_N = mkN "drogue" "drogues";
lin droitwich_PN = mkPN "Droitwich";
lin droll_A = compoundA (mkA "droll");
lin drollery_N = mkN "drollery" "drolleries";
lin dromedary_N = mkN "dromedary" "dromedaries";
lin drone_N = mkN "drone" "drones";
lin drone_V = mkV "drone" "drones" "droned" "droned" "droning";
lin drone_V2 = mkV2 (mkV "drone" "drones" "droned" "droned" "droning");
lin dronfield_PN = mkPN "Dronfield";
lin drool_V = mkV "drool" "drools" "drooled" "drooled" "drooling";
lin droop_N = mkN "droop";
lin droop_V = mkV "droop" "droops" "drooped" "drooped" "drooping";
lin droop_V2 = mkV2 (mkV "droop" "droops" "drooped" "drooped" "drooping");
lin droopingly_Adv = mkAdv "droopingly";
lin drop_N = mkN "drop" "drops";
lin drop_V = mkV "drop" "drops" "dropped" "dropped" "dropping";
lin drop_V2 = mkV2 (mkV "drop" "drops" "dropped" "dropped" "dropping");
lin drop_curtain_N = mkN "drop - curtain" "drop - curtains";
lin drop_kick_N = mkN "drop - kick" "drop - kicks";
lin dropout_N = mkN "dropout" "dropouts";
lin dropping_zone_N = mkN "dropping - zone" "dropping - zones";
lin dropsical_A = compoundA (mkA "dropsical");
lin dropsy_N = mkN "dropsy" ;
lin droshky_N = mkN "droshky" "droshkies";
lin dross_N = mkN "dross" ;
lin drought_N = mkN "drought" "droughts";
lin drove_N = mkN "drove" "droves";
lin drover_N = mkN "drover" "drovers";
lin drown_V = mkV "drown" "drowns" "drowned" "drowned" "drowning";
lin drown_V2 = mkV2 (mkV "drown" "drowns" "drowned" "drowned" "drowning");
lin drowse_N = mkN "drowse";
lin drowse_V = mkV "drowse" "drowses" "drowsed" "drowsed" "drowsing";
lin drowse_V2 = mkV2 (mkV "drowse" "drowses" "drowsed" "drowsed" "drowsing");
lin drowsily_Adv = mkAdv "drowsily";
lin drowsiness_N = mkN "drowsiness" ;
lin drowsy_A = mkA "drowsy" "drowsier";
lin drub_V2 = mkV2 (mkV "drub" "drubs" "drubbed" "drubbed" "drubbing");
lin drubbing_N = mkN "drubbing" "IRREG";
lin drudge_N = mkN "drudge" "drudges";
lin drudge_V = mkV "drudge" "drudges" "drudged" "drudged" "drudging";
lin drudgery_N = mkN "drudgery" ;
lin drug_N = mkN "drug" "drugs";
lin drug_V2 = mkV2 (mkV "drug" "drugs" "drugged" "drugged" "drugging");
lin drugget_N = mkN "drugget" "druggets";
lin druggist_N = mkN "druggist" "druggists";
lin drugstore_N = mkN "drugstore" "drugstores";
lin druid_N = mkN "druid" "druids";
lin drum_N = mkN "drum" "drums";
lin drum_V = mkV "drum" "drums" "drummed" "drummed" "drumming";
lin drum_V2 = mkV2 (mkV "drum" "drums" "drummed" "drummed" "drumming");
lin drum_major_N = mkN "drum - major" "drum - majors";
lin drum_majorette_N = mkN "drum - majorette" "drum - majorettes";
lin drumfire_N = mkN "drumfire" ;
lin drumhead_A = compoundA (mkA "drumhead");
lin drummer_N = mkN "drummer" "drummers";
lin drumstick_N = mkN "drumstick" "drumsticks";
lin drunk_A = mkA "drunk" "drunker";
lin drunk_N = mkN "drunk" "drunks";
lin drunkard_N = mkN "drunkard" "drunkards";
lin drunken_A = compoundA (mkA "drunken");
lin drunkenness_N = mkN "drunkenness" ;
lin drupe_N = mkN "drupe" "drupes";
lin dry_A = mkA "dry" "drier";
lin dry_V = mkV "dry" "dries" "dried" "dried" "drying";
lin dry_V2 = mkV2 (mkV "dry" "dries" "dried" "dried" "drying");
lin dry_clean_V2 = mkV2 (mkV "dry - clean" "dry - cleans" "dry - cleaned" "dry - cleaned" "dry - cleaning");
lin dry_cleaner_N = mkN "dry - cleaner" "dry - cleaners";
lin dry_cleaning_N = mkN "dry - cleaning" ;
lin dry_shod_A = compoundA (mkA "dry - shod");
lin dry_walling_N = mkN "dry - walling" ;
lin dryad_N = mkN "dryad" "dryads";
lin dryer_N = mkN "dryer" "dryers";
lin dryness_N = mkN "dryness" ;
lin dsc_N = mkN "dsc" ;
lin dss_N = mkN "dss" ;
lin dti_N = mkN "dti" ;
lin dual_A = compoundA (mkA "dual");
lin dub_V2 = mkV2 (mkV "dub" "dubs" "dubbed" "dubbed" "dubbing");
lin dub_VS = mkVS (mkV "dub");
lin dubbin_N = mkN "dubbin" ;
lin dubiety_N = mkN "dubiety" "dubieties";
lin dubious_A = compoundA (mkA "dubious");
lin dubiousness_N = mkN "dubiousness" ;
lin dublin_PN = mkPN "Dublin";
lin dubliner_N = mkN "dubliner" "dubliners";
lin ducal_A = compoundA (mkA "ducal");
lin ducat_N = mkN "ducat" "ducats";
lin duce_N = mkN "duce" "duci";
lin duchess_N = mkN "duchess" "duchesses";
lin duchy_N = mkN "duchy" "duchies";
lin duck_N = mkN "duck" "duck";
lin duck_V = mkV "duck" "ducks" "ducked" "ducked" "ducking";
lin duck_V2 = mkV2 (mkV "duck" "ducks" "ducked" "ducked" "ducking");
lin duckbilled_A = compoundA (mkA "duckbilled");
lin ducking_N = mkN "ducking" "duckings";
lin ducking_stool_N = mkN "ducking - stool" "ducking - stools";
lin duckling_N = mkN "duckling" "ducklings";
lin duckweed_N = mkN "duckweed" ;
lin ducky_N = mkN "ducky" "duckies";
lin duct_N = mkN "duct" "ducts";
lin ductile_A = compoundA (mkA "ductile");
lin ductility_N = mkN "ductility" ;
lin dud_A = compoundA (mkA "dud");
lin dud_N = mkN "dud" "duds";
lin dude_N = mkN "dude" "dudes";
lin dudgeon_N = mkN "dudgeon" ;
lin dudley_PN = mkPN "Dudley";
lin due_A = compoundA (mkA "due");
lin due_Adv = mkAdv "due";
lin due_N = mkN "due" "dues";
lin duel_N = mkN "duel" "duels";
lin duel_V = mkV "duel" "duels" "duelled" "duelled" "duelling";
lin duelist_N = mkN "duelist" "duelists";
lin duellist_N = mkN "duellist" "duellists";
lin duenna_N = mkN "duenna" "duennas";
lin duet_N = mkN "duet" "duets";
lin duffel_N = mkN "duffel" ;
lin duffer_N = mkN "duffer" "duffers";
lin duffle_N = mkN "duffle" ;
lin dug_N = mkN "dug" "dugs";
lin dugong_N = mkN "dugong" "dugongs";
lin dugout_N = mkN "dugout" "dugouts";
lin duisburg_PN = mkPN "Duisburg";
lin duke_N = mkN "duke" "dukes";
lin dukedom_N = mkN "dukedom" "dukedoms";
lin dukinfield_PN = mkPN "Dukinfield";
lin dulcet_A = compoundA (mkA "dulcet");
lin dulcimer_N = mkN "dulcimer" "dulcimers";
lin dull_A = mkA "dull" "duller";
lin dull_V = mkV "dull" "dulls" "dulled" "dulled" "dulling";
lin dull_V2 = mkV2 (mkV "dull" "dulls" "dulled" "dulled" "dulling");
lin dullard_N = mkN "dullard" "dullards";
lin dullness_N = mkN "dullness" ;
lin dully_Adv = mkAdv "dully";
lin duly_Adv = mkAdv "duly";
lin dumb_A = mkA "dumb" "dumber";
lin dumbarton_PN = mkPN "Dumbarton";
lin dumbbell_N = mkN "dumbbell" "dumbbells";
lin dumbfound_V2 = mkV2 (mkV "dumbfound" "dumbfounds" "dumbfounded" "dumbfounded" "dumbfounding");
lin dumbness_N = mkN "dumbness" ;
lin dumbwaiter_N = mkN "dumbwaiter" "dumbwaiters";
lin dumdum_N = mkN "dumdum" "dumdums";
lin dumfries_PN = mkPN "Dumfries";
lin dummy_N = mkN "dummy" "dummies";
lin dump_N = mkN "dump" "dumps";
lin dump_V = mkV "dump";
lin dump_V2 = mkV2 (mkV "dump" "dumps" "dumped" "dumped" "dumping");
lin dumper_N = mkN "dumper" "dumpers";
lin dumpling_N = mkN "dumpling" "dumplings";
lin dumpy_A = mkA "dumpy" "dumpier";
lin dun_A = compoundA (mkA "dun");
lin dun_N = mkN "dun" "duns";
lin dun_V2 = mkV2 (mkV "dun" "duns" "dunned" "dunned" "dunning");
lin dun_laoghaire_PN = mkPN "Dun laoghaire";
lin duncan_PN = mkPN "Duncan";
lin dunce_N = mkN "dunce" "dunces";
lin dundalk_PN = mkPN "Dundalk";
lin dundee_PN = mkPN "Dundee";
lin dunderhead_N = mkN "dunderhead" "dunderheads";
lin dune_N = mkN "dune" "dunes";
lin dunfermline_PN = mkPN "Dunfermline";
lin dung_N = mkN "dung" ;
lin dungeon_N = mkN "dungeon" "dungeons";
lin dunghill_N = mkN "dunghill" "dunghills";
lin dunk_V2 = mkV2 (mkV "dunk" "dunks" "dunked" "dunked" "dunking");
lin dunkirk_PN = mkPN "Dunkirk";
lin dunoon_PN = mkPN "Dunoon";
lin dunstable_PN = mkPN "Dunstable";
lin duodecimal_A = compoundA (mkA "duodecimal");
lin duodenal_A = compoundA (mkA "duodenal");
lin duodenum_N = mkN "duodenum" "duodenums";
lin duologue_N = mkN "duologue" "duologues";
lin dupe_N = mkN "dupe" "dupes";
lin dupe_V2 = mkV2 (mkV "dupe" "dupes" "duped" "duped" "duping");
lin dupl_PN = mkPN "Dupl";
lin duplex_A = compoundA (mkA "duplex");
lin duplicate_A = compoundA (mkA "duplicate");
lin duplicate_N = mkN "duplicate" "duplicates";
lin duplicate_V2 = mkV2 (mkV "duplicate" "duplicates" "duplicated" "duplicated" "duplicating");
lin duplication_N = mkN "duplication" "duplications";
lin duplicator_N = mkN "duplicator" "duplicators";
lin duplicity_N = mkN "duplicity" ;
lin durability_N = mkN "durability" ;
lin durable_A = compoundA (mkA "durable");
lin durable_N = mkN "durable" "durables";
lin durance_N = mkN "durance" ;
lin duration_N = mkN "duration" "durations";
lin durban_PN = mkPN "Durban";
lin durbar_N = mkN "durbar" "durbars";
lin duress_N = mkN "duress" ;
lin durham_PN = mkPN "Durham";
lin during_Prep = mkPrep "during";
lin durrington_PN = mkPN "Durrington";
lin dursley_PN = mkPN "Dursley";
lin dusk_N = mkN "dusk" ;
lin dusky_A = mkA "dusky" "duskier";
lin dusseldorf_PN = mkPN "Dusseldorf";
lin dust_N = mkN "dust" ;
lin dust_V2 = mkV2 (mkV "dust" "dusts" "dusted" "dusted" "dusting");
lin dust_bowl_N = mkN "dust - bowl" "dust - bowls";
lin dust_coat_N = mkN "dust - coat" "dust - coats";
lin dust_jacket_N = mkN "dust - jacket" "dust - jackets";
lin dust_sheet_N = mkN "dust - sheet" "dust - sheets";
lin dust_up_N = mkN "dust - up" "dust - ups";
lin dust_wrapper_N = mkN "dust - wrapper" "dust - wrappers";
lin dustbin_N = mkN "dustbin" "dustbins";
lin dustcart_N = mkN "dustcart" "dustcarts";
lin duster_N = mkN "duster" "dusters";
lin dustman_N = mkN "dustman" "dustmen" {- FIXME: guessed plural form -};
lin dustpan_N = mkN "dustpan" "dustpans";
lin dusty_A = mkA "dusty" "dustier";
lin dutch_A = compoundA (mkA "Dutch");
lin dutch_N = mkN "Dutch" ;
lin dutchman_N = mkN "dutchman" "dutchmen" {- FIXME: guessed plural form -};
lin duteous_A = compoundA (mkA "duteous");
lin dutiable_A = compoundA (mkA "dutiable");
lin dutiful_A = compoundA (mkA "dutiful");
lin duty_N = mkN "duty" "duties";
lin duty_free_A = compoundA (mkA "duty - free");
lin duvet_N = mkN "duvet" "duvets";
lin dwarf_N = mkN "dwarf" "dwarfs";
lin dwarf_V2 = mkV2 (mkV "dwarf" "dwarfs" "dwarfed" "dwarfed" "dwarfing");
lin dwarfish_A = compoundA (mkA "dwarfish");
lin dwell_V = variants {mkV "dwell" "dwells" "dwelt" "dwelt" "dwelling"; mkV "dwell" "dwells" "dwelled" "dwelled" "dwelling"};
lin dweller_N = mkN "dweller" "dwellers";
lin dwelling_N = mkN "dwelling" "dwellings";
lin dwelling_house_N = mkN "dwelling - house" "dwelling - houses";
lin dwindle_V = mkV "dwindle" "dwindles" "dwindled" "dwindled" "dwindling";
lin dyarchy_N = mkN "dyarchy" "dyarchies";
lin dye_N = mkN "dye" "dyes";
lin dye_V = mkV "dye" "dyes" "dyed" "dyed" "dying";
lin dye_V2 = mkV2 (mkV "dye" "dyes" "dyed" "dyed" "dying");
lin dye_works_N = mkN "dye - works" "dye - works";
lin dyed_in_the_wool_A = compoundA (mkA "dyed - in - the - wool");
lin dyer_N = mkN "dyer" "dyers";
lin dyestuff_N = mkN "dyestuff" "dyestuffs";
lin dyfed_PN = mkPN "Dyfed";
lin dyke_N = mkN "dyke" "dykes";
lin dyke_V = mkV "dyke" "dykes" "dyked" "dyked" "dyking";
lin dyke_V2 = mkV2 (mkV "dyke" "dykes" "dyked" "dyked" "dyking");
lin dynamic_A = compoundA (mkA "dynamic");
lin dynamic_N = mkN "dynamic" "dynamics";
lin dynamically_Adv = mkAdv "dynamically";
lin dynamism_N = mkN "dynamism" ;
lin dynamite_N = mkN "dynamite" ;
lin dynamite_V2 = mkV2 (mkV "dynamite" "dynamites" "dynamited" "dynamited" "dynamiting");
lin dynamo_N = mkN "dynamo" "dynamos";
lin dynast_N = mkN "dynast" "dynasts";
lin dynastic_A = compoundA (mkA "dynastic");
lin dynasty_N = mkN "dynasty" "dynasties";
lin dyne_N = mkN "dyne" "dynes";
lin dysentery_N = mkN "dysentery" ;
lin dyslexia_N = mkN "dyslexia" ;
lin dyslexic_A = compoundA (mkA "dyslexic");
lin dyspepsia_N = mkN "dyspepsia" ;
lin dyspeptic_A = compoundA (mkA "dyspeptic");
lin dyspeptic_N = mkN "dyspeptic" "dyspeptics";
lin e'en_Adv = mkAdv "e'en";
lin e'er_Adv = mkAdv "e'er";
lin each_Det = mkDeterminer singular "each";
lin eager_A = compoundA (mkA "eager");
lin eagerness_N = mkN "eagerness" ;
lin eagle_N = mkN "eagle" "eagles";
lin eagle_eyed_A = compoundA (mkA "eagle - eyed");
lin eaglescliffe_PN = mkPN "Eaglescliffe";
lin eaglet_N = mkN "eaglet" "eaglets";
lin ealing_PN = mkPN "Ealing";
lin ear_N = mkN "ear" "ears";
lin ear_trumpet_N = mkN "ear - trumpet" "ear - trumpets";
lin earache_N = mkN "earache" "earaches";
lin eardrop_N = mkN "eardrop" "eardrops";
lin eardrum_N = mkN "eardrum" "eardrums";
lin earful_N = mkN "earful" "earfuls";
lin earl_N = mkN "earl" "earls";
lin earl_shilton_PN = mkPN "Earl shilton";
lin earldom_N = mkN "earldom" "earldoms";
lin early_A = mkA "early" "earlier";
lin early_Adv = mkAdv "early";
lin early_warning_A = compoundA (mkA "early - warning");
lin earmark_N = mkN "earmark" "earmarks";
lin earmark_V2 = mkV2 (mkV "earmark" "earmarks" "earmarked" "earmarked" "earmarking");
lin earn_V = mkV "earn";
lin earn_V2 = mkV2 (mkV "earn" "earns" "earned" "earned" "earning");
lin earn_VA = mkVA (mkV "earn");
lin earnest_A = compoundA (mkA "earnest");
lin earnest_N = mkN "earnest" ;
lin earnest_money_N = mkN "earnest - money" ;
lin earnestness_N = mkN "earnestness" ;
lin earphone_N = mkN "earphone" "earphones";
lin earpiece_N = mkN "earpiece" "earpieces";
lin earring_N = mkN "earring" "earrings";
lin earshot_N = mkN "earshot" ;
lin earth_N = mkN "earth" ;
lin earth_V2 = mkV2 (mkV "earth" "earths" "earthed" "earthed" "earthing");
lin earth_closet_N = mkN "earth - closet" "earth - closets";
lin earthen_A = compoundA (mkA "earthen");
lin earthenware_N = mkN "earthenware" ;
lin earthly_A = compoundA (mkA "earthly");
lin earthnut_N = mkN "earthnut" "earthnuts";
lin earthquake_N = mkN "earthquake" "earthquakes";
lin earthwork_N = mkN "earthwork" "earthworks";
lin earthworm_N = mkN "earthworm" "earthworms";
lin earthy_A = mkA "earthy" "earthier";
lin earwax_N = mkN "earwax" ;
lin earwig_N = mkN "earwig" "earwigs";
lin ease_N = mkN "ease" ;
lin ease_V = mkV "ease" "eases" "eased" "eased" "easing";
lin ease_V2 = mkV2 (mkV "ease" "eases" "eased" "eased" "easing");
lin easel_N = mkN "easel" "easels";
lin easily_Adv = mkAdv "easily";
lin easington_PN = mkPN "Easington";
lin east_A = mkA "east";
lin east_Adv = mkAdv "east";
lin east_N = mkN "east" ;
lin east_dereham_PN = mkPN "East dereham";
lin east_grinstead_PN = mkPN "East grinstead";
lin east_kilbride_PN = mkPN "East kilbride";
lin east_retford_PN = mkPN "East retford";
lin eastbourne_PN = mkPN "Eastbourne";
lin easter_N = mkN "easter" "easters";
lin easter_PN = mkPN "Easter";
lin easterly_A = compoundA (mkA "easterly");
lin easterly_Adv = mkAdv "easterly";
lin eastern_A = compoundA (mkA "eastern");
lin easternmost_A = compoundA (mkA "easternmost");
lin eastleigh_PN = mkPN "Eastleigh";
lin eastward_A = compoundA (mkA "eastward");
lin eastward_Adv = mkAdv "eastward";
lin eastwards_Adv = mkAdv "eastwards";
lin easy_A = mkA "easy" "easier";
lin easy_Adv = mkAdv "easy";
lin easy_V2V = mkV2V (mkV "easy") noPrep to_Prep ;
lin easygoing_A = compoundA (mkA "easygoing");
lin eat_V = IrregEng.eat_V;
lin eat_V2 = mkV2 (IrregEng.eat_V);
lin eatable_A = compoundA (mkA "eatable");
lin eatable_N = mkN "eatable" "eatables";
lin eater_N = mkN "eater" "eaters";
lin eating_apple_N = mkN "eating - apple" "eating - apples";
lin eating_house_N = mkN "eating - house" "eating - houses";
lin eau_de_cologne_N = mkN "eau de cologne" ;
lin eau_de_vie_N = mkN "eau - de - vie" ;
lin eavesdrop_V = mkV "eavesdrop" "eavesdrops" "eavesdropped" "eavesdropped" "eavesdropping";
lin eavesdropper_N = mkN "eavesdropper" "eavesdroppers";
lin ebb_N = mkN "ebb" "ebbs";
lin ebb_V = mkV "ebb" "ebbs" "ebbed" "ebbed" "ebbing";
lin ebbtide_N = mkN "ebbtide" "ebbtides";
lin ebbw_vale_PN = mkPN "Ebbw vale";
lin ebonite_N = mkN "ebonite" ;
lin ebony_A = compoundA (mkA "ebony");
lin ebony_N = mkN "ebony" ;
lin ebullience_N = mkN "ebullience" ;
lin ebullient_A = compoundA (mkA "ebullient");
lin ec_N = mkN "ec" ;
lin eccentric_A = compoundA (mkA "eccentric");
lin eccentric_N = mkN "eccentric" "eccentrics";
lin eccentricity_N = mkN "eccentricity" "eccentricities";
lin eccles_PN = mkPN "Eccles";
lin ecclesiastic_N = mkN "ecclesiastic" "ecclesiastics";
lin ecclesiastical_A = compoundA (mkA "ecclesiastical");
lin echelon_N = mkN "echelon" "echelons";
lin echo_N = mkN "echo" "echoes";
lin echo_V = mkV "echo" "echos" "echoed" "echoed" "echoing";
lin echo_V2 = mkV2 (mkV "echo" "echos" "echoed" "echoed" "echoing");
lin echo_sounder_N = mkN "echo - sounder" "echo - sounders";
lin echo_sounding_N = mkN "echo - sounding" "echo - soundings";
lin eclair_N = mkN "éclair" "éclairs";
lin eclat_N = mkN "éclat" ;
lin eclectic_A = compoundA (mkA "eclectic");
lin eclecticism_N = mkN "eclecticism" ;
lin eclipse_N = mkN "eclipse" "eclipses";
lin eclipse_V2 = mkV2 (mkV "eclipse" "eclipses" "eclipsed" "eclipsed" "eclipsing");
lin ecliptic_N = mkN "ecliptic" "ecliptics";
lin ecological_A = compoundA (mkA "ecological");
lin ecologist_N = mkN "ecologist" "ecologists";
lin ecology_N = mkN "ecology" ;
lin economic_A = compoundA (mkA "economic");
lin economical_A = compoundA (mkA "economical");
lin economics_N = mkN "economics" "economics";
lin economist_N = mkN "economist" "economists";
lin economize_V = mkV "economize" "economizes" "economized" "economized" "economizing";
lin economize_V2 = mkV2 (mkV "economize" "economizes" "economized" "economized" "economizing");
lin economy_N = mkN "economy" "economies";
lin ecosystem_N = mkN "ecosystem" "ecosystems";
lin ecstasy_N = mkN "ecstasy" "ecstasies";
lin ecstatic_A = compoundA (mkA "ecstatic");
lin ecstatically_Adv = mkAdv "ecstatically";
lin ectoplasm_N = mkN "ectoplasm" ;
lin ecuador_PN = mkPN "Ecuador";
lin ecuadorian_A = compoundA (mkA "ecuadorian");
lin ecuadorian_N = mkN "ecuadorian" "ecuadorians";
lin ecumenical_A = compoundA (mkA "ecumenical");
lin eczema_N = mkN "eczema" ;
lin ed_PN = mkPN "Ed";
lin eddie_PN = mkPN "Eddie";
lin eddy_N = mkN "eddy" "eddies";
lin eddy_PN = mkPN "Eddy";
lin eddy_V = mkV "eddy" "eddies" "eddied" "eddied" "eddying";
lin edelweiss_N = mkN "edelweiss" ;
lin eden_PN = mkPN "Eden";
lin edenbridge_PN = mkPN "Edenbridge";
lin edgar_PN = mkPN "Edgar";
lin edge_N = mkN "edge" "edges";
lin edge_V = mkV "edge" "edges" "edged" "edged" "edging";
lin edge_V2 = mkV2 (mkV "edge" "edges" "edged" "edged" "edging");
lin edgeways_Adv = mkAdv "edgeways";
lin edgewise_Adv = mkAdv "edgewise";
lin edging_N = mkN "edging" "edgings";
lin edgy_A = mkA "edgy" "edgier";
lin edibility_N = mkN "edibility" ;
lin edible_A = compoundA (mkA "edible");
lin edible_N = mkN "edible" "edibles";
lin edict_N = mkN "edict" "edicts";
lin edification_N = mkN "edification" ;
lin edifice_N = mkN "edifice" "edifices";
lin edify_V2 = mkV2 (mkV "edify" "edifies" "edified" "edified" "edifying");
lin edinburgh_PN = mkPN "Edinburgh";
lin edit_V2 = mkV2 (mkV "edit" "edits" "edited" "edited" "editing");
lin edith_PN = mkPN "Edith";
lin edition_N = mkN "edition" "editions";
lin editor_N = mkN "editor" "editors";
lin editorial_A = compoundA (mkA "editorial");
lin editorial_N = mkN "editorial" "editorials";
lin edmund_PN = mkPN "Edmund";
lin edp_N = mkN "edp" ;
lin educate_V2 = mkV2 (mkV "educate" "educates" "educated" "educated" "educating");
lin education_N = mkN "education" ;
lin educational_A = compoundA (mkA "educational");
lin educationalist_N = mkN "educationalist" "educationalists";
lin educationist_N = mkN "educationist" "educationists";
lin educator_N = mkN "educator" "educators";
lin educe_V2 = mkV2 (mkV "educe" "educes" "educed" "educed" "educing");
lin edward_PN = mkPN "Edward";
lin edwardian_A = compoundA (mkA "edwardian");
lin edwardian_N = mkN "edwardian" "edwardians";
lin eec_N = mkN "eec" ;
lin eeg_N = mkN "eeg" ;
lin eel_N = mkN "eel" "eels";
lin eerie_A = mkA "eerie" "eerier";
lin eerily_Adv = mkAdv "eerily";
lin eeriness_N = mkN "eeriness" ;
lin eery_A = mkA "eery" "eerier";
lin eff_V = mkV "eff" "effs" "effed" "effed" "effing";
lin efface_V2 = mkV2 (mkV "efface" "effaces" "effaced" "effaced" "effacing");
lin effacement_N = mkN "effacement" ;
lin effect_N = mkN "effect" "effects";
lin effect_V2 = mkV2 (mkV "effect" "effects" "effected" "effected" "effecting");
lin effective_A = compoundA (mkA "effective");
lin effectiveness_N = mkN "effectiveness" ;
lin effectual_A = compoundA (mkA "effectual");
lin effectuality_N = mkN "effectuality" ;
lin effectualness_N = mkN "effectualness" ;
lin effeminacy_N = mkN "effeminacy" ;
lin effeminate_A = compoundA (mkA "effeminate");
lin effendi_N = mkN "effendi" "effendis";
lin effervesce_V = mkV "effervesce" "effervesces" "effervesced" "effervesced" "effervescing";
lin effervescence_N = mkN "effervescence" ;
lin effervescent_A = compoundA (mkA "effervescent");
lin effete_A = compoundA (mkA "effete");
lin effeteness_N = mkN "effeteness" ;
lin efficacious_A = compoundA (mkA "efficacious");
lin efficacy_N = mkN "efficacy" ;
lin efficiency_N = mkN "efficiency" ;
lin efficient_A = compoundA (mkA "efficient");
lin effigy_N = mkN "effigy" "effigies";
lin efflorescence_N = mkN "efflorescence" ;
lin efflorescent_A = compoundA (mkA "efflorescent");
lin effluent_N = mkN "effluent" "effluents";
lin efflux_N = mkN "efflux" "effluxes";
lin effort_N = mkN "effort" "efforts";
lin effortless_A = compoundA (mkA "effortless");
lin effrontery_N = mkN "effrontery" "effronteries";
lin effulgence_N = mkN "effulgence" ;
lin effulgent_A = compoundA (mkA "effulgent");
lin effusion_N = mkN "effusion" "effusions";
lin effusive_A = compoundA (mkA "effusive");
lin effusiveness_N = mkN "effusiveness" ;
lin eft_N = mkN "eft" "efts";
lin efta_N = mkN "efta" ;
lin eg_PN = mkPN "Eg";
lin egalitarian_A = compoundA (mkA "egalitarian");
lin egalitarian_N = mkN "egalitarian" "egalitarians";
lin egalitarianism_N = mkN "egalitarianism" ;
lin egg_N = mkN "egg" "eggs";
lin egg_V2 = mkV2 (mkV "egg" "eggs" "egged" "egged" "egging");
lin egg_beater_N = mkN "egg - beater" "egg - beaters";
lin egg_cup_N = mkN "egg - cup" "egg - cups";
lin egg_whisk_N = mkN "egg - whisk" "egg - whisks";
lin egghead_N = mkN "egghead" "eggheads";
lin eggplant_N = mkN "eggplant" "eggplants";
lin eggshake_N = mkN "eggshake" "eggshakes";
lin eggshell_N = mkN "eggshell" "eggshells";
lin eglantine_N = mkN "eglantine" ;
lin ego_N = mkN "ego" "egos";
lin egocentric_A = compoundA (mkA "egocentric");
lin egoism_N = mkN "egoism" ;
lin egoist_N = mkN "egoist" "egoists";
lin egoistic_A = compoundA (mkA "egoistic");
lin egoistical_A = compoundA (mkA "egoistical");
lin egotism_N = mkN "egotism" ;
lin egotist_N = mkN "egotist" "egotists";
lin egotistic_A = compoundA (mkA "egotistic");
lin egotistically_Adv = mkAdv "egotistically";
lin egotrip_N = mkN "egotrip" "egotrips";
lin egotrip_V = mkV "egotrip" "egotrips" "egotripped" "egotripped" "egotripping";
lin egregious_A = compoundA (mkA "egregious");
lin egremont_PN = mkPN "Egremont";
lin egress_N = mkN "egress" "egresses";
lin egret_N = mkN "egret" "egrets";
lin egypt_PN = mkPN "Egypt";
lin egyptian_A = compoundA (mkA "egyptian");
lin egyptian_N = mkN "egyptian" "egyptians";
lin eiche_PN = mkPN "Eiche";
lin eiderdown_N = mkN "eiderdown" "eiderdowns";
lin eightpence_N = mkN "eightpence" "eightpences";
lin eightpenny_A = compoundA (mkA "eightpenny");
lin eightsome_N = mkN "eightsome" "eightsomes";
lin eileen_PN = mkPN "Eileen";
lin eindhoven_PN = mkPN "Eindhoven";
lin eisteddfod_N = mkN "eisteddfod" "eisteddfods";
lin either7or_DConj = mkConj "either" "or" singular ;
lin either_Adv = mkAdv "either";
lin either_Det = mkDeterminer singular "either";
lin ejaculate_V2 = mkV2 (mkV "ejaculate" "ejaculates" "ejaculated" "ejaculated" "ejaculating");
lin ejaculation_N = mkN "ejaculation" "ejaculations";
lin eject_V = mkV "eject" "ejects" "ejected" "ejected" "ejecting";
lin eject_V2 = mkV2 (mkV "eject" "ejects" "ejected" "ejected" "ejecting");
lin ejection_N = mkN "ejection" "ejections";
lin ejector_N = mkN "ejector" "ejectors";
lin ejector_seat_N = mkN "ejector - seat" "ejector - seats";
lin eke_V2 = mkV2 (mkV "eke" "ekes" "eked" "eked" "eking");
lin el_dorado_N = mkN "el dorado" "el doradi" {- FIXME: guessed plural form -};
lin el_salvador_PN = mkPN "El salvador";
lin elaborate_A = compoundA (mkA "elaborate");
lin elaborate_V = mkV "elaborate";
lin elaborate_V2 = mkV2 (mkV "elaborate" "elaborates" "elaborated" "elaborated" "elaborating");
lin elaborateness_N = mkN "elaborateness" ;
lin elaboration_N = mkN "elaboration" "elaborations";
lin elaine_PN = mkPN "Elaine";
lin elan_N = mkN "élan" ;
lin eland_N = mkN "eland" "elands";
lin elapse_V = mkV "elapse" "elapses" "elapsed" "elapsed" "elapsing";
lin elastic_A = compoundA (mkA "elastic");
lin elastic_N = mkN "elastic" ;
lin elasticity_N = mkN "elasticity" "elasticities";
lin elasticized_A = compoundA (mkA "elasticized");
lin elastoplast_N = mkN "elastoplast" ;
lin elate_V2 = mkV2 (mkV "elate" "elates" "elated" "elated" "elating");
lin elation_N = mkN "elation" ;
lin elbow_N = mkN "elbow" "elbows";
lin elbow_V2 = mkV2 (mkV "elbow" "elbows" "elbowed" "elbowed" "elbowing");
lin elder_N = mkN "elder" "elders";
lin elderly_A = compoundA (mkA "elderly");
lin elderslie_PN = mkPN "Elderslie";
lin eleanor_PN = mkPN "Eleanor";
lin elect_A = compoundA (mkA "elect");
lin elect_V = mkV "elect";
lin elect_V2 = mkV2 (mkV "elect");
lin elect_V2V = mkV2V (mkV "elect") noPrep to_Prep ;
lin elect_V3 = mkV3 (mkV "elect");
lin elect_VS = mkVS (mkV "elect");
lin election_N = mkN "election" "elections";
lin electioneering_N = mkN "electioneering" ;
lin elective_A = compoundA (mkA "elective");
lin elector_N = mkN "elector" "electors";
lin electoral_A = compoundA (mkA "electoral");
lin electorate_N = mkN "electorate" "electorates";
lin electric_A = compoundA (mkA "electric");
lin electrical_A = compoundA (mkA "electrical");
lin electrician_N = mkN "electrician" "electricians";
lin electricity_N = mkN "electricity" ;
lin electrification_N = mkN "electrification" ;
lin electrify_V2 = mkV2 (mkV "electrify" "electrifies" "electrified" "electrified" "electrifying");
lin electrocardiogram_N = mkN "electrocardiogram" "electrocardiograms";
lin electrocardiograph_N = mkN "electrocardiograph" "electrocardiographs";
lin electrochemistry_N = mkN "electrochemistry" ;
lin electrocute_V2 = mkV2 (mkV "electrocute" "electrocutes" "electrocuted" "electrocuted" "electrocuting");
lin electrocution_N = mkN "electrocution" "electrocutions";
lin electrode_N = mkN "electrode" "electrodes";
lin electrolysis_N = mkN "electrolysis" ;
lin electrolyte_N = mkN "electrolyte" "electrolytes";
lin electromagnet_N = mkN "electromagnet" "electromagnets";
lin electromagnetic_A = compoundA (mkA "electromagnetic");
lin electromagnetism_N = mkN "electromagnetism" ;
lin electron_N = mkN "electron" "electrons";
lin electronic_A = compoundA (mkA "electronic");
lin electronically_Adv = mkAdv "electronically";
lin electronics_N = mkN "electronics" "electronics";
lin electroplate_N = mkN "electroplate" ;
lin electroplate_V2 = mkV2 (mkV "electroplate" "electroplates" "electroplated" "electroplated" "electroplating");
lin electrostatic_A = compoundA (mkA "electrostatic");
lin eleemosynary_A = compoundA (mkA "eleemosynary");
lin elegance_N = mkN "elegance" ;
lin elegant_A = compoundA (mkA "elegant");
lin elegiac_A = compoundA (mkA "elegiac");
lin elegy_N = mkN "elegy" "elegies";
lin element_N = mkN "element" "elements";
lin elemental_A = compoundA (mkA "elemental");
lin elementary_A = compoundA (mkA "elementary");
lin elephant_N = mkN "elephant" "elephants";
lin elephantiasis_N = mkN "elephantiasis" ;
lin elephantine_A = compoundA (mkA "elephantine");
lin elevate_V2 = mkV2 (mkV "elevate" "elevates" "elevated" "elevated" "elevating");
lin elevation_N = mkN "elevation" "elevations";
lin elevator_N = mkN "elevator" "elevators";
lin elf_N = mkN "elf" "elves" {- FIXME: guessed plural form -};
lin elfin_A = compoundA (mkA "elfin");
lin elfish_A = compoundA (mkA "elfish");
lin elgin_PN = mkPN "Elgin";
lin elicit_V2 = mkV2 (mkV "elicit" "elicits" "elicited" "elicited" "eliciting");
lin elicitation_N = mkN "elicitation" "elicitations";
lin elide_V2 = mkV2 (mkV "elide" "elides" "elided" "elided" "eliding");
lin eligibility_N = mkN "eligibility" ;
lin eligible_A = compoundA (mkA "eligible");
lin eliminate_V2 = mkV2 (mkV "eliminate" "eliminates" "eliminated" "eliminated" "eliminating");
lin elimination_N = mkN "elimination" "eliminations";
lin elision_N = mkN "elision" "elisions";
lin elite_N = mkN "élite" "élites";
lin elitism_N = mkN "elitism" ;
lin elitist_N = mkN "elitist" "elitists";
lin elixir_N = mkN "elixir" "elixirs";
lin eliza_PN = mkPN "Eliza";
lin elizabeth_PN = mkPN "Elizabeth";
lin elizabethan_A = compoundA (mkA "elizabethan");
lin elizabethan_N = mkN "elizabethan" "elizabethans";
lin elk_N = mkN "elk" "elks";
lin elland_PN = mkPN "Elland";
lin ellen_PN = mkPN "Ellen";
lin ellesmere_PN = mkPN "Ellesmere";
lin ellesmere_port_PN = mkPN "Ellesmere port";
lin ellie_PN = mkPN "Ellie";
lin ellipse_N = mkN "ellipse" "ellipses";
lin ellipsis_N = mkN "ellipsis" "ellipses" {- FIXME: guessed plural form -};
lin elliptic_A = compoundA (mkA "elliptic");
lin elliptical_A = compoundA (mkA "elliptical");
lin elloughton_PN = mkPN "Elloughton";
lin elm_N = mkN "elm" "elms";
lin elocution_N = mkN "elocution" ;
lin elocutionary_A = compoundA (mkA "elocutionary");
lin elocutionist_N = mkN "elocutionist" "elocutionists";
lin elongate_V = mkV "elongate" "elongates" "elongated" "elongated" "elongating";
lin elongate_V2 = mkV2 (mkV "elongate" "elongates" "elongated" "elongated" "elongating");
lin elongation_N = mkN "elongation" "elongations";
lin elope_V = mkV "elope" "elopes" "eloped" "eloped" "eloping";
lin elopement_N = mkN "elopement" "elopements";
lin eloquence_N = mkN "eloquence" ;
lin eloquent_A = compoundA (mkA "eloquent");
lin else_Adv = mkAdv "else";
lin elsewhere_Adv = mkAdv "elsewhere";
lin elsie_PN = mkPN "Elsie";
lin elstree_PN = mkPN "Elstree";
lin elucidate_V2 = mkV2 (mkV "elucidate" "elucidates" "elucidated" "elucidated" "elucidating");
lin elucidation_N = mkN "elucidation" "elucidations";
lin elude_V2 = mkV2 (mkV "elude" "eludes" "eluded" "eluded" "eluding");
lin elusive_A = compoundA (mkA "elusive");
lin elver_N = mkN "elver" "elvers";
lin elvish_A = compoundA (mkA "elvish");
lin ely_PN = mkPN "Ely";
lin elysian_A = compoundA (mkA "elysian");
lin elysium_PN = mkPN "Elysium";
lin emaciate_V2 = mkV2 (mkV "emaciate" "emaciates" "emaciated" "emaciated" "emaciating");
lin emaciation_N = mkN "emaciation" ;
lin emanate_V = mkV "emanate" "emanates" "emanated" "emanated" "emanating";
lin emanation_N = mkN "emanation" "emanations";
lin emancipate_V2 = mkV2 (mkV "emancipate" "emancipates" "emancipated" "emancipated" "emancipating");
lin emancipation_N = mkN "emancipation" ;
lin emasculate_V2 = mkV2 (mkV "emasculate" "emasculates" "emasculated" "emasculated" "emasculating");
lin emasculation_N = mkN "emasculation" "emasculations";
lin embalm_V2 = mkV2 (mkV "embalm" "embalms" "embalmed" "embalmed" "embalming");
lin embalmment_N = mkN "embalmment" "embalmments";
lin embankment_N = mkN "embankment" "embankments";
lin embargo_N = mkN "embargo" "embargoes";
lin embargo_V2 = mkV2 (mkV "embargo" "embargos" "embargoed" "embargoed" "embargoing");
lin embark_V = mkV "embark" "embarks" "embarked" "embarked" "embarking";
lin embark_V2 = mkV2 (mkV "embark" "embarks" "embarked" "embarked" "embarking");
lin embarkation_N = mkN "embarkation" "embarkations";
lin embarrass_V2 = mkV2 (mkV "embarrass" "embarrasses" "embarrassed" "embarrassed" "embarrassing");
lin embarrassing_A = compoundA (mkA "embarrassing");
lin embarrassment_N = mkN "embarrassment" "embarrassments";
lin embassy_N = mkN "embassy" "embassies";
lin embattled_A = compoundA (mkA "embattled");
lin embed_V2 = mkV2 (mkV "embed" "embeds" "embedded" "embedded" "embedding");
lin embellish_V2 = mkV2 (mkV "embellish" "embellishes" "embellished" "embellished" "embellishing");
lin embellishment_N = mkN "embellishment" "embellishments";
lin ember_N = mkN "ember" "embers";
lin embezzle_V2 = mkV2 (mkV "embezzle" "embezzles" "embezzled" "embezzled" "embezzling");
lin embezzlement_N = mkN "embezzlement" "embezzlements";
lin embitter_V2 = mkV2 (mkV "embitter" "embitters" "embittered" "embittered" "embittering");
lin embitterment_N = mkN "embitterment" "embitterments";
lin emblazon_V2 = mkV2 (mkV "emblazon" "emblazons" "emblazoned" "emblazoned" "emblazoning");
lin emblem_N = mkN "emblem" "emblems";
lin emblematic_A = compoundA (mkA "emblematic");
lin embodiment_N = mkN "embodiment" "embodiments";
lin embody_V2 = mkV2 (mkV "embody" "embodies" "embodied" "embodied" "embodying");
lin embolden_V2 = mkV2 (mkV "embolden" "emboldens" "emboldened" "emboldened" "emboldening");
lin embonpoint_A = compoundA (mkA "embonpoint");
lin embonpoint_N = mkN "embonpoint" ;
lin emboss_V2 = mkV2 (mkV "emboss" "embosses" "embossed" "embossed" "embossing");
lin embrace_N = mkN "embrace" "embraces";
lin embrace_V = mkV "embrace" "embraces" "embraced" "embraced" "embracing";
lin embrace_V2 = mkV2 (mkV "embrace" "embraces" "embraced" "embraced" "embracing");
lin embrasure_N = mkN "embrasure" "embrasures";
lin embrocation_N = mkN "embrocation" ;
lin embroider_V = mkV "embroider" "embroiders" "embroidered" "embroidered" "embroidering";
lin embroider_V2 = mkV2 (mkV "embroider" "embroiders" "embroidered" "embroidered" "embroidering");
lin embroidery_N = mkN "embroidery" ;
lin embroil_V = mkV "embroil";
lin embroil_V2 = mkV2 (mkV "embroil" "embroils" "embroiled" "embroiled" "embroiling");
lin embryo_N = mkN "embryo" "embryos";
lin embryonic_A = compoundA (mkA "embryonic");
lin emeer_N = mkN "emeer" "emeers";
lin emend_V2 = mkV2 (mkV "emend" "emends" "emended" "emended" "emending");
lin emendation_N = mkN "emendation" "emendations";
lin emerald_N = mkN "emerald" "emeralds";
lin emerge_V = mkV "emerge" "emerges" "emerged" "emerged" "emerging";
lin emerge_V2 = mkV2 (mkV "emerge" "emerges" "emerged" "emerged" "emerging");
lin emerge_V2V = mkV2V (mkV "emerge" "emerges" "emerged" "emerged" "emerging") noPrep to_Prep ;
lin emerge_VS = mkVS (mkV "emerge" "emerges" "emerged" "emerged" "emerging");
lin emergence_N = mkN "emergence" ;
lin emergency_N = mkN "emergency" "emergencies";
lin emergent_A = compoundA (mkA "emergent");
lin emeritus_A = compoundA (mkA "emeritus");
lin emery_N = mkN "emery" ;
lin emetic_N = mkN "emetic" "emetics";
lin emigrant_N = mkN "emigrant" "emigrants";
lin emigrate_V = mkV "emigrate" "emigrates" "emigrated" "emigrated" "emigrating";
lin emigrate_V2V = mkV2V (mkV "emigrate" "emigrates" "emigrated" "emigrated" "emigrating") noPrep to_Prep ;
lin emigration_N = mkN "emigration" "emigrations";
lin emigre_N = mkN "émigré" "émigrés";
lin emily_PN = mkPN "Emily";
lin eminence_N = mkN "eminence" "eminences";
lin eminent_A = compoundA (mkA "eminent");
lin emir_N = mkN "emir" "emirs";
lin emirate_N = mkN "emirate" "emirates";
lin emissary_N = mkN "emissary" "emissaries";
lin emission_N = mkN "emission" "emissions";
lin emit_V2 = mkV2 (mkV "emit" "emits" "emitted" "emitted" "emitting");
lin emma_PN = mkPN "Emma";
lin emolument_N = mkN "emolument" "emoluments";
lin emotion_N = mkN "emotion" "emotions";
lin emotional_A = compoundA (mkA "emotional");
lin emotionless_A = compoundA (mkA "emotionless");
lin emotive_A = compoundA (mkA "emotive");
lin empale_V2 = mkV2 (mkV "empale" "empales" "empaled" "empaled" "empaling");
lin empanel_V2 = mkV2 (mkV "empanel" "empanels" "empanelled" "empanelled" "empanelling");
lin empathize_V = mkV "empathize";
lin empathy_N = mkN "empathy" ;
lin emperor_N = mkN "emperor" "emperors";
lin emphasis_N = mkN "emphasis" "emphases" {- FIXME: guessed plural form -};
lin emphasize_V2 = mkV2 (mkV "emphasize" "emphasizes" "emphasized" "emphasized" "emphasizing");
lin emphasize_VS = mkVS (mkV "emphasize");
lin emphatic_A = compoundA (mkA "emphatic");
lin emphatically_Adv = mkAdv "emphatically";
lin empire_N = mkN "empire" "empires";
lin empiric_A = compoundA (mkA "empiric");
lin empirical_A = compoundA (mkA "empirical");
lin empiricism_N = mkN "empiricism" ;
lin empiricist_N = mkN "empiricist" "empiricists";
lin emplacement_N = mkN "emplacement" "emplacements";
lin emplane_V = mkV "emplane" "emplanes" "emplaned" "emplaned" "emplaning";
lin emplane_V2 = mkV2 (mkV "emplane" "emplanes" "emplaned" "emplaned" "emplaning");
lin employ_N = mkN "employ" "employs";
lin employ_V2 = mkV2 (mkV "employ" "employs" "employed" "employed" "employing");
lin employable_A = compoundA (mkA "employable");
lin employee_N = mkN "employee" "employees";
lin employer_N = mkN "employer" "employers";
lin employment_N = mkN "employment" ;
lin emporium_N = mkN "emporium" "emporiums";
lin empower_V2 = mkV2 (mkV "empower" "empowers" "empowered" "empowered" "empowering");
lin empower_V2V = mkV2V (mkV "empower") noPrep to_Prep ;
lin empress_N = mkN "empress" "empresses";
lin emptiness_N = mkN "emptiness" ;
lin empty_A = mkA "empty" "emptier";
lin empty_N = mkN "empty" "empties";
lin empty_V = mkV "empty" "empties" "emptied" "emptied" "emptying";
lin empty_V2 = mkV2 (mkV "empty" "empties" "emptied" "emptied" "emptying");
lin empty_handed_A = compoundA (mkA "empty - handed");
lin empty_headed_A = compoundA (mkA "empty - headed");
lin empurpled_A = compoundA (mkA "empurpled");
lin empyrean_A = compoundA (mkA "empyrean");
lin empyrean_N = mkN "empyrean" "IRREG";
lin emsworth_PN = mkPN "Emsworth";
lin emu_N = mkN "emu" "emus";
lin emulate_V2 = mkV2 (mkV "emulate" "emulates" "emulated" "emulated" "emulating");
lin emulation_N = mkN "emulation" ;
lin emulous_A = compoundA (mkA "emulous");
lin emulsify_V2 = mkV2 (mkV "emulsify" "emulsifies" "emulsified" "emulsified" "emulsifying");
lin emulsion_N = mkN "emulsion" "emulsions";
lin en_clair_Adv = mkAdv "en clair";
lin en_famille_Adv = mkAdv "en famille";
lin en_masse_Adv = mkAdv "en masse";
lin en_route_Adv = mkAdv "en route";
lin enable_V2 = mkV2 (mkV "enable" "enables" "enabled" "enabled" "enabling");
lin enable_V2V = mkV2V (mkV "enable") noPrep to_Prep ;
lin enable_VS = mkVS (mkV "enable");
lin enabling_A = compoundA (mkA "enabling");
lin enact_V2 = mkV2 (mkV "enact" "enacts" "enacted" "enacted" "enacting");
lin enact_V2V = mkV2V (mkV "enact") noPrep to_Prep ;
lin enactment_N = mkN "enactment" "enactments";
lin enamel_N = mkN "enamel" ;
lin enamel_V2 = mkV2 (mkV "enamel" "enamels" "enamelled" "enamelled" "enamelling");
lin enamour_V2 = mkV2 (mkV "enamour" "enamours" "enamoured" "enamoured" "enamouring");
lin enc_PN = mkPN "Enc";
lin encamp_V = mkV "encamp" "encamps" "encamped" "encamped" "encamping";
lin encamp_V2 = mkV2 (mkV "encamp" "encamps" "encamped" "encamped" "encamping");
lin encampment_N = mkN "encampment" "encampments";
lin encase_V2 = mkV2 (mkV "encase" "encases" "encased" "encased" "encasing");
lin encaustic_A = compoundA (mkA "encaustic");
lin encephalitis_N = mkN "encephalitis" ;
lin enchain_V2 = mkV2 (mkV "enchain" "enchains" "enchained" "enchained" "enchaining");
lin enchant_V2 = mkV2 (mkV "enchant" "enchants" "enchanted" "enchanted" "enchanting");
lin enchanter_N = mkN "enchanter" "enchanters";
lin enchantingly_Adv = mkAdv "enchantingly";
lin enchantment_N = mkN "enchantment" "enchantments";
lin enchantress_N = mkN "enchantress" "enchantresses";
lin encircle_V2 = mkV2 (mkV "encircle" "encircles" "encircled" "encircled" "encircling");
lin encirclement_N = mkN "encirclement" "encirclements";
lin enclave_N = mkN "enclave" "enclaves";
lin enclose_V2 = mkV2 (mkV "enclose" "encloses" "enclosed" "enclosed" "enclosing");
lin enclosure_N = mkN "enclosure" "enclosures";
lin encode_V2 = mkV2 (mkV "encode" "encodes" "encoded" "encoded" "encoding");
lin encomium_N = mkN "encomium" "encomiums";
lin encompass_V2 = mkV2 (mkV "encompass" "encompasses" "encompassed" "encompassed" "encompassing");
lin encore_N = mkN "encore" "encores";
lin encore_V2 = mkV2 (mkV "encore" "encores" "encored" "encored" "encoring");
lin encounter_N = mkN "encounter" "encounters";
lin encounter_V2 = mkV2 (mkV "encounter" "encounters" "encountered" "encountered" "encountering");
lin encourage_V2 = mkV2 (mkV "encourage" "encourages" "encouraged" "encouraged" "encouraging");
lin encourage_V2V = mkV2V (mkV "encourage") noPrep to_Prep ;
lin encouragement_N = mkN "encouragement" "encouragements";
lin encouragingly_Adv = mkAdv "encouragingly";
lin encroach_V = mkV "encroach" "encroaches" "encroached" "encroached" "encroaching";
lin encroachment_N = mkN "encroachment" "encroachments";
lin encrust_V = mkV "encrust" "encrusts" "encrusted" "encrusted" "encrusting";
lin encrust_V2 = mkV2 (mkV "encrust" "encrusts" "encrusted" "encrusted" "encrusting");
lin encrypt_V2 = mkV2 (mkV "encrypt");
lin encumber_V2 = mkV2 (mkV "encumber" "encumbers" "encumbered" "encumbered" "encumbering");
lin encumbrance_N = mkN "encumbrance" "encumbrances";
lin encyclical_A = compoundA (mkA "encyclical");
lin encyclical_N = mkN "encyclical" "encyclicals";
lin encyclopaedia_N = mkN "encyclopaedia" "encyclopaedias";
lin encyclopaedic_A = compoundA (mkA "encyclopaedic");
lin encyclopedia_N = mkN "encyclopedia" "encyclopedias";
lin encyclopedic_A = compoundA (mkA "encyclopedic");
lin end_N = mkN "end" "ends";
lin end_V = mkV "end" "ends" "ended" "ended" "ending";
lin end_V2 = mkV2 (mkV "end" "ends" "ended" "ended" "ending");
lin end_VA = mkVA (mkV "end" "ends" "ended" "ended" "ending");
lin end_VS = mkVS (mkV "end" "ends" "ended" "ended" "ending");
lin end_all_N = mkN "end - all" "IRREG";
lin end_tail_V2 = mkV2 (mkV "end - tail");
lin endanger_V2 = mkV2 (mkV "endanger" "endangers" "endangered" "endangered" "endangering");
lin endear_V2 = mkV2 (mkV "endear" "endears" "endeared" "endeared" "endearing");
lin endearingly_Adv = mkAdv "endearingly";
lin endearment_N = mkN "endearment" "endearments";
lin endeavour_N = mkN "endeavour" "endeavours";
lin endeavour_V = mkV "endeavour" "endeavours" "endeavoured" "endeavoured" "endeavouring";
lin endemic_A = compoundA (mkA "endemic");
lin endemic_N = mkN "endemic" "endemics";
lin ending_N = mkN "ending" "endings";
lin endive_N = mkN "endive" "endives";
lin endless_A = compoundA (mkA "endless");
lin endorse_V2 = mkV2 (mkV "endorse" "endorses" "endorsed" "endorsed" "endorsing");
lin endorsement_N = mkN "endorsement" "endorsements";
lin endow_V2 = mkV2 (mkV "endow" "endows" "endowed" "endowed" "endowing");
lin endowment_N = mkN "endowment" "endowments";
lin endue_V2 = mkV2 (mkV "endue" "endues" "endued" "endued" "enduing");
lin endurable_A = compoundA (mkA "endurable");
lin endurance_N = mkN "endurance" ;
lin endure_V = mkV "endure" "endures" "endured" "endured" "enduring";
lin endure_V2 = mkV2 (mkV "endure" "endures" "endured" "endured" "enduring");
lin enduring_A = compoundA (mkA "enduring");
lin endways_Adv = mkAdv "endways";
lin endwise_Adv = mkAdv "endwise";
lin enema_N = mkN "enema" "enemas";
lin enemy_N = mkN "enemy" "enemies";
lin energetic_A = compoundA (mkA "energetic");
lin energetically_Adv = mkAdv "energetically";
lin energy_N = mkN "energy" "energies";
lin enervate_V2 = mkV2 (mkV "enervate" "enervates" "enervated" "enervated" "enervating");
lin enfant_terrible_N = mkN "enfant terrible" "IRREG";
lin enfeeble_V2 = mkV2 (mkV "enfeeble" "enfeebles" "enfeebled" "enfeebled" "enfeebling");
lin enfield_PN = mkPN "Enfield";
lin enfold_V2 = mkV2 (mkV "enfold" "enfolds" "enfolded" "enfolded" "enfolding");
lin enforce_V2 = mkV2 (mkV "enforce" "enforces" "enforced" "enforced" "enforcing");
lin enforceable_A = compoundA (mkA "enforceable");
lin enforcement_N = mkN "enforcement" ;
lin enfranchise_V2 = mkV2 (mkV "enfranchise" "enfranchises" "enfranchised" "enfranchised" "enfranchising");
lin enfranchisement_N = mkN "enfranchisement" "enfranchisements";
lin engage_V = mkV "engage" "engages" "engaged" "engaged" "engaging";
lin engage_V2 = mkV2 (mkV "engage" "engages" "engaged" "engaged" "engaging");
lin engagement_N = mkN "engagement" "engagements";
lin engaging_A = compoundA (mkA "engaging");
lin engender_V2 = mkV2 (mkV "engender" "engenders" "engendered" "engendered" "engendering");
lin engine_N = mkN "engine" "engines";
lin engine_driver_N = mkN "engine - driver" "engine - drivers";
lin engineer_N = mkN "engineer" "engineers";
lin engineer_V = mkV "engineer" "engineers" "engineered" "engineered" "engineering";
lin engineer_V2 = mkV2 (mkV "engineer" "engineers" "engineered" "engineered" "engineering");
lin engineering_N = mkN "engineering" ;
lin england_PN = mkPN "England";
lin english_A = compoundA (mkA "English");
lin english_N = mkN "English" ;
lin englishman_N = mkN "englishman" "englishmen" {- FIXME: guessed plural form -};
lin englishwoman_N = mkN "englishwoman" "englishwomen" {- FIXME: guessed plural form -};
lin engraft_V2 = mkV2 (mkV "engraft" "engrafts" "engrafted" "engrafted" "engrafting");
lin engrave_V2 = mkV2 (mkV "engrave" "engraves" "engraved" "engraved" "engraving");
lin engraver_N = mkN "engraver" "engravers";
lin engraving_N = mkN "engraving" "engravings";
lin engross_V2 = mkV2 (mkV "engross" "engrosses" "engrossed" "engrossed" "engrossing");
lin engulf_V2 = mkV2 (mkV "engulf" "engulfs" "engulfed" "engulfed" "engulfing");
lin enhance_V2 = mkV2 (mkV "enhance" "enhances" "enhanced" "enhanced" "enhancing");
lin enhancement_N = mkN "enhancement" "enhancements";
lin enigma_N = mkN "enigma" "enigmas";
lin enigmatic_A = compoundA (mkA "enigmatic");
lin enigmatically_Adv = mkAdv "enigmatically";
lin enjoin_V2 = mkV2 (mkV "enjoin" "enjoins" "enjoined" "enjoined" "enjoining");
lin enjoy_V2 = mkV2 (mkV "enjoy" "enjoys" "enjoyed" "enjoyed" "enjoying");
lin enjoy_VV = ingVV (mkV "enjoy");
lin enjoyable_A = compoundA (mkA "enjoyable");
lin enjoyment_N = mkN "enjoyment" "enjoyments";
lin enkindle_V2 = mkV2 (mkV "enkindle" "enkindles" "enkindled" "enkindled" "enkindling");
lin enlarge_V = mkV "enlarge" "enlarges" "enlarged" "enlarged" "enlarging";
lin enlarge_V2 = mkV2 (mkV "enlarge" "enlarges" "enlarged" "enlarged" "enlarging");
lin enlargement_N = mkN "enlargement" "enlargements";
lin enlighten_V2 = mkV2 (mkV "enlighten" "enlightens" "enlightened" "enlightened" "enlightening");
lin enlightened_A = compoundA (mkA "enlightened");
lin enlightenment_N = mkN "enlightenment" ;
lin enlist_V = mkV "enlist" "enlists" "enlisted" "enlisted" "enlisting";
lin enlist_V2 = mkV2 (mkV "enlist" "enlists" "enlisted" "enlisted" "enlisting");
lin enlistment_N = mkN "enlistment" "enlistments";
lin enliven_V2 = mkV2 (mkV "enliven" "enlivens" "enlivened" "enlivened" "enlivening");
lin enmesh_V2 = mkV2 (mkV "enmesh" "enmeshes" "enmeshed" "enmeshed" "enmeshing");
lin enmity_N = mkN "enmity" "enmities";
lin ennoble_V2 = mkV2 (mkV "ennoble" "ennobles" "ennobled" "ennobled" "ennobling");
lin ennoblement_N = mkN "ennoblement" "ennoblements";
lin ennui_N = mkN "ennui" "ennuis";
lin ennumerate_V2 = mkV2 (mkV "ennumerate");
lin enoch_PN = mkPN "Enoch";
lin enormity_N = mkN "enormity" "enormities";
lin enormous_A = compoundA (mkA "enormous");
lin enormousness_N = mkN "enormousness" ;
lin enough_A = compoundA (mkA "enough");
lin enough_Adv = mkAdv "enough";
lin enough_N = mkN "enough" "enough";
lin enplane_V = mkV "enplane" "enplanes" "enplaned" "enplaned" "enplaning";
lin enplane_V2 = mkV2 (mkV "enplane" "enplanes" "enplaned" "enplaned" "enplaning");
lin enquire_V = mkV "enquire" "enquires" "enquired" "enquired" "enquiring";
lin enquire_V2 = mkV2 (mkV "enquire" "enquires" "enquired" "enquired" "enquiring");
lin enquirer_N = mkN "enquirer" "enquirers";
lin enquiringly_Adv = mkAdv "enquiringly";
lin enquiry_N = mkN "enquiry" "enquiries";
lin enrage_V2 = mkV2 (mkV "enrage" "enrages" "enraged" "enraged" "enraging");
lin enrapture_V2 = mkV2 (mkV "enrapture" "enraptures" "enraptured" "enraptured" "enrapturing");
lin enrich_V2 = mkV2 (mkV "enrich" "enriches" "enriched" "enriched" "enriching");
lin enrichment_N = mkN "enrichment" ;
lin enrol_V = mkV "enrol" "enrols" "enroled" "enroled" "enroling";
lin enrol_V2 = mkV2 (mkV "enrol" "enrols" "enroled" "enroled" "enroling");
lin enroll_V = mkV "enroll" "enrolls" "enrolled" "enrolled" "enrolling";
lin enroll_V2 = mkV2 (mkV "enroll" "enrolls" "enrolled" "enrolled" "enrolling");
lin enrolment_N = mkN "enrolment" "enrolments";
lin enschede_PN = mkPN "Enschede";
lin ensconce_V2 = mkV2 (mkV "ensconce" "ensconces" "ensconced" "ensconced" "ensconcing");
lin ensemble_N = mkN "ensemble" "ensembles";
lin enshrine_V2 = mkV2 (mkV "enshrine" "enshrines" "enshrined" "enshrined" "enshrining");
lin enshroud_V2 = mkV2 (mkV "enshroud" "enshrouds" "enshrouded" "enshrouded" "enshrouding");
lin ensign_N = mkN "ensign" "ensigns";
lin ensilage_N = mkN "ensilage" ;
lin enslave_V2 = mkV2 (mkV "enslave" "enslaves" "enslaved" "enslaved" "enslaving");
lin enslavement_N = mkN "enslavement" "enslavements";
lin ensnare_V2 = mkV2 (mkV "ensnare" "ensnares" "ensnared" "ensnared" "ensnaring");
lin ensue_V = mkV "ensue" "ensues" "ensued" "ensued" "ensuing";
lin ensure_V = mkV "ensure" "ensures" "ensured" "ensured" "ensuring";
lin ensure_V2 = mkV2 (mkV "ensure" "ensures" "ensured" "ensured" "ensuring");
lin ensure_VS = mkVS (mkV "ensure" "ensures" "ensured" "ensured" "ensuring");
lin entail_N = mkN "entail" "entails";
lin entail_V2 = mkV2 (mkV "entail" "entails" "entailed" "entailed" "entailing");
lin entangle_V2 = mkV2 (mkV "entangle" "entangles" "entangled" "entangled" "entangling");
lin entanglement_N = mkN "entanglement" "entanglements";
lin entente_N = mkN "entente" "ententes";
lin entente_cordiale_N = mkN "entente cordiale" "IRREG";
lin enter_V = mkV "enter" "enters" "entered" "entered" "entering";
lin enter_V2 = mkV2 (mkV "enter" "enters" "entered" "entered" "entering");
lin enteric_A = compoundA (mkA "enteric");
lin enteritis_N = mkN "enteritis" ;
lin enterprise_N = mkN "enterprise" "enterprises";
lin enterprising_A = compoundA (mkA "enterprising");
lin entertain_V2 = mkV2 (mkV "entertain" "entertains" "entertained" "entertained" "entertaining");
lin entertainer_N = mkN "entertainer" "entertainers";
lin entertaining_A = compoundA (mkA "entertaining");
lin entertainment_N = mkN "entertainment" "entertainments";
lin enthral_V2 = mkV2 (mkV "enthral" "enthrals" "enthralled" "enthralled" "enthralling");
lin enthrall_V2 = mkV2 (mkV "enthrall" "enthralls" "enthralled" "enthralled" "enthralling");
lin enthrone_V2 = mkV2 (mkV "enthrone" "enthrones" "enthroned" "enthroned" "enthroning");
lin enthronement_N = mkN "enthronement" "enthronements";
lin enthuse_V = mkV "enthuse" "enthuses" "enthused" "enthused" "enthusing";
lin enthusiasm_N = mkN "enthusiasm" ;
lin enthusiast_N = mkN "enthusiast" "enthusiasts";
lin enthusiastic_A = compoundA (mkA "enthusiastic");
lin enthusiastically_Adv = mkAdv "enthusiastically";
lin entice_V2 = mkV2 (mkV "entice" "entices" "enticed" "enticed" "enticing");
lin enticement_N = mkN "enticement" "enticements";
lin entire_A = compoundA (mkA "entire");
lin entirety_N = mkN "entirety" ;
lin entitle_V2 = mkV2 (mkV "entitle" "entitles" "entitled" "entitled" "entitling");
lin entitle_V2V = mkV2V (mkV "entitle") noPrep to_Prep ;
lin entitle_VS = mkVS (mkV "entitle");
lin entitlement_N = mkN "entitlement" "entitlements";
lin entity_N = mkN "entity" "entities";
lin entomb_V2 = mkV2 (mkV "entomb" "entombs" "entombed" "entombed" "entombing");
lin entomological_A = compoundA (mkA "entomological");
lin entomologist_N = mkN "entomologist" "entomologists";
lin entomology_N = mkN "entomology" ;
lin entourage_N = mkN "entourage";
lin entr'acte_N = mkN "entr'acte" "entr'actes";
lin entrain_V = mkV "entrain" "entrains" "entrained" "entrained" "entraining";
lin entrain_V2 = mkV2 (mkV "entrain" "entrains" "entrained" "entrained" "entraining");
lin entrance_N = mkN "entrance" "entrances";
lin entrance_V2 = mkV2 (mkV "entrance" "entrances" "entranced" "entranced" "entrancing");
lin entrance_fee_N = mkN "entrance - fee" "entrance - fees";
lin entrance_money_N = mkN "entrance - money" ;
lin entrant_N = mkN "entrant" "entrants";
lin entrap_V2 = mkV2 (mkV "entrap" "entraps" "entrapped" "entrapped" "entrapping");
lin entreat_V2 = mkV2 (mkV "entreat" "entreats" "entreated" "entreated" "entreating");
lin entreatingly_Adv = mkAdv "entreatingly";
lin entreaty_N = mkN "entreaty" "entreaties";
lin entree_N = mkN "entrée" "entrées";
lin entrench_V2 = mkV2 (mkV "entrench" "entrenches" "entrenched" "entrenched" "entrenching");
lin entrenchment_N = mkN "entrenchment" "entrenchments";
lin entrepot_N = mkN "entrepot" "entrepots";
lin entrepreneur_N = mkN "entrepreneur" "entrepreneurs";
lin entrepreneurial_A = compoundA (mkA "entrepreneurial");
lin entrust_V2 = mkV2 (mkV "entrust" "entrusts" "entrusted" "entrusted" "entrusting");
lin entry_N = mkN "entry" "entries";
lin entwin_V = mkV "entwin";
lin entwine_V2 = mkV2 (mkV "entwine" "entwines" "entwined" "entwined" "entwining");
lin enumerate_V2 = mkV2 (mkV "enumerate" "enumerates" "enumerated" "enumerated" "enumerating");
lin enumeration_N = mkN "enumeration" "enumerations";
lin enunciate_V = mkV "enunciate" "enunciates" "enunciated" "enunciated" "enunciating";
lin enunciate_V2 = mkV2 (mkV "enunciate" "enunciates" "enunciated" "enunciated" "enunciating");
lin enunciation_N = mkN "enunciation" "enunciations";
lin envelop_V2 = mkV2 (mkV "envelop" "envelops" "enveloped" "enveloped" "enveloping");
lin envelope_N = mkN "envelope" "envelopes";
lin envelopment_N = mkN "envelopment" "envelopments";
lin envenom_V2 = mkV2 (mkV "envenom" "envenoms" "envenomed" "envenomed" "envenoming");
lin enviable_A = compoundA (mkA "enviable");
lin envious_A = compoundA (mkA "envious");
lin environ_V2 = mkV2 (mkV "environ" "environs" "environed" "environed" "environing");
lin environment_N = mkN "environment" "environments";
lin environmental_A = compoundA (mkA "environmental");
lin envisage_V2 = mkV2 (mkV "envisage" "envisages" "envisaged" "envisaged" "envisaging");
lin envision_V2 = mkV2 (mkV "envision");
lin envision_VS = mkVS (mkV "envision");
lin envoi_N = mkN "envoi" "envois";
lin envoy_N = mkN "envoy" "envoys";
lin envy_N = mkN "envy" ;
lin envy_V2 = mkV2 (mkV "envy" "envies" "envied" "envied" "envying");
lin enwrap_V2 = mkV2 (mkV "enwrap" "enwraps" "enwrapped" "enwrapped" "enwrapping");
lin enzyme_N = mkN "enzyme" "enzymes";
lin eon_N = mkN "eon" "eons";
lin epaulet_N = mkN "epaulet" "epaulets";
lin epaulette_N = mkN "epaulette" "epaulettes";
lin epee_N = mkN "épée" "épées";
lin ephemeral_A = compoundA (mkA "ephemeral");
lin epic_A = compoundA (mkA "epic");
lin epic_N = mkN "epic" "epics";
lin epicentre_N = mkN "epicentre" "epicentres";
lin epicure_N = mkN "epicure" "epicures";
lin epicurean_A = compoundA (mkA "epicurean");
lin epicurean_N = mkN "epicurean" "epicureans";
lin epidemic_A = compoundA (mkA "epidemic");
lin epidemic_N = mkN "epidemic" "epidemics";
lin epidemiologist_N = mkN "epidemiologist" "epidemiologists";
lin epidemiology_N = mkN "epidemiology" ;
lin epidermis_N = mkN "epidermis" ;
lin epidiascope_N = mkN "epidiascope" "epidiascopes";
lin epiglottis_N = mkN "epiglottis" "epiglottises";
lin epigram_N = mkN "epigram" "epigrams";
lin epigrammatic_A = compoundA (mkA "epigrammatic");
lin epilepsy_N = mkN "epilepsy" ;
lin epileptic_A = compoundA (mkA "epileptic");
lin epileptic_N = mkN "epileptic" "epileptics";
lin epilogue_N = mkN "epilogue" "epilogues";
lin epiphany_PN = mkPN "Epiphany";
lin episcopal_A = compoundA (mkA "episcopal");
lin episcopalian_A = compoundA (mkA "episcopalian");
lin episcopalian_N = mkN "episcopalian" "episcopalians";
lin episode_N = mkN "episode" "episodes";
lin episodic_A = compoundA (mkA "episodic");
lin epistle_N = mkN "epistle" "epistles";
lin epistolary_A = compoundA (mkA "epistolary");
lin epitaph_N = mkN "epitaph" "epitaphs";
lin epithet_N = mkN "epithet" "epithets";
lin epitome_N = mkN "epitome" "epitomes";
lin epitomize_V2 = mkV2 (mkV "epitomize" "epitomizes" "epitomized" "epitomized" "epitomizing");
lin epoch_N = mkN "epoch" "epochs";
lin epoch_making_A = compoundA (mkA "epoch - making");
lin epping_PN = mkPN "Epping";
lin epsom_PN = mkPN "Epsom";
lin equable_A = compoundA (mkA "equable");
lin equal_A = compoundA (mkA "equal");
lin equal_N = mkN "equal" "equals";
lin equal_V2 = mkV2 (variants {mkV "equal" "equals" "equaled"  "equaled"  "equaling"; -- US
                               mkV "equal" "equals" "equalled" "equalled" "equalling"});
lin equalitarian_N = mkN "equalitarian" "equalitarians";
lin equality_N = mkN "equality" ;
lin equalization_N = mkN "equalization" "equalizations";
lin equalize_V2 = mkV2 (mkV "equalize" "equalizes" "equalized" "equalized" "equalizing");
lin equalizer_N = mkN "equalizer" "equalizers";
lin equanimity_N = mkN "equanimity" ;
lin equate_V2 = mkV2 (mkV "equate" "equates" "equated" "equated" "equating");
lin equation_N = mkN "equation" "equations";
lin equator_N = mkN "equator" "equators";
lin equatorial_A = compoundA (mkA "equatorial");
lin equerry_N = mkN "equerry" "equerries";
lin equestrian_A = compoundA (mkA "equestrian");
lin equestrian_N = mkN "equestrian" "equestrians";
lin equidistant_A = compoundA (mkA "equidistant");
lin equilateral_A = compoundA (mkA "equilateral");
lin equilibrium_N = mkN "equilibrium" ;
lin equine_A = compoundA (mkA "equine");
lin equinoctial_A = compoundA (mkA "equinoctial");
lin equinox_N = mkN "equinox" "equinoxes";
lin equip_V2 = mkV2 (mkV "equip" "equips" "equipped" "equipped" "equipping");
lin equipage_N = mkN "equipage" "equipages";
lin equipment_N = mkN "equipment" ;
lin equipoise_N = mkN "equipoise" "equipoises";
lin equitable_A = compoundA (mkA "equitable");
lin equity_N = mkN "equity" "equities";
lin equivalence_N = mkN "equivalence" "equivalences";
lin equivalent_A = compoundA (mkA "equivalent");
lin equivalent_N = mkN "equivalent" "equivalents";
lin equivocal_A = compoundA (mkA "equivocal");
lin equivocation_N = mkN "equivocation" "equivocations";
lin era_N = mkN "era" "eras";
lin eradicate_V2 = mkV2 (mkV "eradicate" "eradicates" "eradicated" "eradicated" "eradicating");
lin eradication_N = mkN "eradication" "eradications";
lin erase_V2 = mkV2 (mkV "erase" "erases" "erased" "erased" "erasing");
lin eraser_N = mkN "eraser" "erasers";
lin erasure_N = mkN "erasure" "erasures";
lin ere_Adv = mkAdv "ere";
lin erect_A = compoundA (mkA "erect");
lin erect_V2 = mkV2 (mkV "erect" "erects" "erected" "erected" "erecting");
lin erectile_A = compoundA (mkA "erectile");
lin erection_N = mkN "erection" "erections";
lin erectness_N = mkN "erectness" ;
lin eremite_N = mkN "eremite" "eremites";
lin erfurt_PN = mkPN "Erfurt";
lin erg_N = mkN "erg" "ergs";
lin ergo_Adv = mkAdv "ergo";
lin ergonomics_N = mkN "ergonomics" "ergonomics";
lin eric_PN = mkPN "Eric";
lin erica_PN = mkPN "Erica";
lin erin_PN = mkPN "Erin";
lin eritrea_PN = mkPN "Eritrea";
lin eritrean_A = compoundA (mkA "eritrean");
lin eritrean_N = mkN "eritrean" "eritreans";
lin erlangen_PN = mkPN "Erlangen";
lin ermine_N = mkN "ermine" ;
lin ernest_PN = mkPN "Ernest";
lin ernie_PN = mkPN "Ernie";
lin erode_V = mkV "erode";
lin erode_V2 = mkV2 (mkV "erode" "erodes" "eroded" "eroded" "eroding");
lin erogenous_A = compoundA (mkA "erogenous");
lin erosion_N = mkN "erosion" ;
lin erosive_A = compoundA (mkA "erosive");
lin erotic_A = compoundA (mkA "erotic");
lin eroticism_N = mkN "eroticism" ;
lin err_V = mkV "err" "errs" "erred" "erred" "erring";
lin errand_N = mkN "errand" "errands";
lin errant_A = compoundA (mkA "errant");
lin erratic_A = compoundA (mkA "erratic");
lin erratically_Adv = mkAdv "erratically";
lin erratum_N = mkN "erratum" "errata" {- FIXME: guessed plural form -};
lin erroneous_A = compoundA (mkA "erroneous");
lin error_N = mkN "error" "errors";
lin erse_N = mkN "erse" ;
lin eructation_N = mkN "eructation" "eructations";
lin erudite_A = compoundA (mkA "erudite");
lin erudition_N = mkN "erudition" ;
lin erupt_V = mkV "erupt" "erupts" "erupted" "erupted" "erupting";
lin eruption_N = mkN "eruption" "eruptions";
lin erysipelas_N = mkN "erysipelas" ;
lin escalate_V = mkV "escalate" "escalates" "escalated" "escalated" "escalating";
lin escalate_V2 = mkV2 (mkV "escalate" "escalates" "escalated" "escalated" "escalating");
lin escalation_N = mkN "escalation" "escalations";
lin escalator_N = mkN "escalator" "escalators";
lin escalope_N = mkN "escalope" "escalopes";
lin escapade_N = mkN "escapade" "escapades";
lin escape_N = mkN "escape" "escapes";
lin escape_V = mkV "escape" "escapes" "escaped" "escaped" "escaping";
lin escape_V2 = mkV2 (mkV "escape" "escapes" "escaped" "escaped" "escaping");
lin escape_VS = mkVS (mkV "escape" "escapes" "escaped" "escaped" "escaping");
lin escapee_N = mkN "escapee" "escapees";
lin escapement_N = mkN "escapement" "escapements";
lin escapism_N = mkN "escapism" ;
lin escapist_N = mkN "escapist" "escapists";
lin escapologist_N = mkN "escapologist" "escapologists";
lin escarpment_N = mkN "escarpment" "escarpments";
lin eschatology_N = mkN "eschatology" ;
lin eschew_V2 = mkV2 (mkV "eschew" "eschews" "eschewed" "eschewed" "eschewing");
lin escort_N = mkN "escort" "escorts";
lin escort_V2 = mkV2 (mkV "escort" "escorts" "escorted" "escorted" "escorting");
lin escritoire_N = mkN "escritoire" "escritoires";
lin escudo_N = mkN "escudo" "escudos";
lin escutcheon_N = mkN "escutcheon" "escutcheons";
lin esfahan_PN = mkPN "Esfahan";
lin eskimo_N = mkN "eskimo" "eskimos";
lin esophagus_N = mkN "esophagus" "esophaguses";
lin esoteric_A = compoundA (mkA "esoteric");
lin esp_N = mkN "esp" ;
lin espalier_N = mkN "espalier" "espaliers";
lin especial_A = compoundA (mkA "especial");
lin esperanto_N = mkN "esperanto" ;
lin espionage_N = mkN "espionage" ;
lin esplanade_N = mkN "esplanade" "esplanades";
lin espousal_N = mkN "espousal" "espousals";
lin espouse_V2 = mkV2 (mkV "espouse" "espouses" "espoused" "espoused" "espousing");
lin espresso_N = mkN "espresso" "espressos";
lin esprit_N = mkN "esprit" ;
lin esprit_de_corps_N = mkN "esprit de corps" "IRREG";
lin espy_V2 = mkV2 (mkV "espy" "espies" "espied" "espied" "espying");
lin esq_PN = mkPN "Esq";
lin esquire_N = mkN "esquire" "esquires";
lin essay_N = mkN "essay" "essays";
lin essay_V = mkV "essay" "essays" "essayed" "essayed" "essaying";
lin essay_V2 = mkV2 (mkV "essay" "essays" "essayed" "essayed" "essaying");
lin essayist_N = mkN "essayist" "essayists";
lin essen_PN = mkPN "Essen";
lin essence_N = mkN "essence" "essences";
lin essential_A = compoundA (mkA "essential");
lin essential_N = mkN "essential" "essentials";
lin essex_PN = mkPN "Essex";
lin establish_V2 = mkV2 (mkV "establish" "establishes" "established" "established" "establishing");
lin establishment_N = mkN "establishment" "establishments";
lin estaminet_N = mkN "estaminet" "estaminets";
lin estate_N = mkN "estate" "estates";
lin esteem_N = mkN "esteem" ;
lin esteem_V2 = mkV2 (mkV "esteem" "esteems" "esteemed" "esteemed" "esteeming");
lin esther_PN = mkPN "Esther";
lin esthete_N = mkN "esthete" "esthetes";
lin esthetic_A = compoundA (mkA "esthetic");
lin esthetic_N = mkN "esthetic" ;
lin esthetical_A = compoundA (mkA "esthetical");
lin esthetics_N = mkN "esthetics" "esthetics";
lin estimable_A = compoundA (mkA "estimable");
lin estimate_N = mkN "estimate" "estimates";
lin estimate_V = mkV "estimate" "estimates" "estimated" "estimated" "estimating";
lin estimate_V2 = mkV2 (mkV "estimate" "estimates" "estimated" "estimated" "estimating");
lin estimate_V2V = mkV2V (mkV "estimate" "estimates" "estimated" "estimated" "estimating") noPrep to_Prep ;
lin estimate_VS = mkVS (mkV "estimate" "estimates" "estimated" "estimated" "estimating");
lin estimation_N = mkN "estimation" ;
lin estrange_V2 = mkV2 (mkV "estrange" "estranges" "estranged" "estranged" "estranging");
lin estrangement_N = mkN "estrangement" "estrangements";
lin estuary_N = mkN "estuary" "estuaries";
lin et_al_PN = mkPN "Et al";
lin et_seq_PN = mkPN "Et seq";
lin eta_N = mkN "eta" ;
lin etc_PN = mkPN "Etc";
lin etch_V = mkV "etch" "etches" "etched" "etched" "etching";
lin etch_V2 = mkV2 (mkV "etch" "etches" "etched" "etched" "etching");
lin etcher_N = mkN "etcher" "etchers";
lin etching_N = mkN "etching" "etchings";
lin etd_N = mkN "etd" ;
lin eternal_A = compoundA (mkA "eternal");
lin eternity_N = mkN "eternity" "eternities";
lin ethel_PN = mkPN "Ethel";
lin ether_N = mkN "ether" ;
lin ethereal_A = compoundA (mkA "ethereal");
lin ethic_N = mkN "ethic" "ethics";
lin ethical_A = compoundA (mkA "ethical");
lin ethiopia_PN = mkPN "Ethiopia";
lin ethiopian_A = compoundA (mkA "ethiopian");
lin ethiopian_N = mkN "ethiopian" "ethiopians";
lin ethnic_A = compoundA (mkA "ethnic");
lin ethnically_Adv = mkAdv "ethnically";
lin ethnographer_N = mkN "ethnographer" "ethnographers";
lin ethnographic_A = compoundA (mkA "ethnographic");
lin ethnography_N = mkN "ethnography" ;
lin ethnological_A = compoundA (mkA "ethnological");
lin ethnologist_N = mkN "ethnologist" "ethnologists";
lin ethnology_N = mkN "ethnology" ;
lin ethos_N = mkN "ethos" (variants {"ethe"; "ethea"});
lin ethyl_N = mkN "ethyl" "ethyls";
lin etiology_N = mkN "etiology" "etiologies";
lin etiquette_N = mkN "etiquette" ;
lin etymological_A = compoundA (mkA "etymological");
lin etymologist_N = mkN "etymologist" "etymologists";
lin etymology_N = mkN "etymology" "etymologies";
lin eucalyptus_N = mkN "eucalyptus" "eucalyptuses";
lin eucharist_N = mkN "eucharist" "eucharists";
lin euclidean_A = compoundA (mkA "euclidean");
lin eugene_PN = mkPN "Eugene";
lin eugenics_N = mkN "eugenics" "eugenics";
lin eulogist_N = mkN "eulogist" "eulogists";
lin eulogistic_A = compoundA (mkA "eulogistic");
lin eulogize_V2 = mkV2 (mkV "eulogize" "eulogizes" "eulogized" "eulogized" "eulogizing");
lin eulogy_N = mkN "eulogy" "eulogies";
lin eunice_PN = mkPN "Eunice";
lin eunuch_N = mkN "eunuch" "eunuchs";
lin euphemism_N = mkN "euphemism" "euphemisms";
lin euphemistic_A = compoundA (mkA "euphemistic");
lin euphemistically_Adv = mkAdv "euphemistically";
lin euphonium_N = mkN "euphonium" "euphoniums";
lin euphony_N = mkN "euphony" "euphonies";
lin euphoria_N = mkN "euphoria" ;
lin euphoric_A = compoundA (mkA "euphoric");
lin euphuism_N = mkN "euphuism" "euphuisms";
lin eurasia_PN = mkPN "Eurasia";
lin eurasian_A = compoundA (mkA "eurasian");
lin eurasian_N = mkN "eurasian" "eurasians";
lin eurhythmics_N = mkN "eurhythmics" "eurhythmics";
lin eurodollar_N = mkN "eurodollar" "eurodollars";
lin europe_PN = mkPN "Europe";
lin european_A = compoundA (mkA "European");
lin european_N = mkN "European" "Europeans";
lin eurovision_PN = mkPN "Eurovision";
lin eurythmics_N = mkN "eurythmics" "eurythmics";
lin eustachian_A = compoundA (mkA "eustachian");
lin euthanasia_N = mkN "euthanasia" ;
lin eva_PN = mkPN "Eva";
lin evacuate_V2 = mkV2 (mkV "evacuate" "evacuates" "evacuated" "evacuated" "evacuating");
lin evacuation_N = mkN "evacuation" "evacuations";
lin evacuee_N = mkN "evacuee" "evacuees";
lin evade_V2 = mkV2 (mkV "evade" "evades" "evaded" "evaded" "evading");
lin evaluate_V = mkV "evaluate";
lin evaluate_V2 = mkV2 (mkV "evaluate" "evaluates" "evaluated" "evaluated" "evaluating");
lin evaluation_N = mkN "evaluation" "evaluations";
lin evaluative_A = compoundA (mkA "evaluative");
lin evanescence_N = mkN "evanescence" ;
lin evanescent_A = compoundA (mkA "evanescent");
lin evangelical_A = compoundA (mkA "evangelical");
lin evangelicalism_N = mkN "evangelicalism" ;
lin evangelism_N = mkN "evangelism" ;
lin evangelist_N = mkN "evangelist" "evangelists";
lin evangelistic_A = compoundA (mkA "evangelistic");
lin evaporate_V = mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating";
lin evaporate_V2 = mkV2 (mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating");
lin evaporate_VS = mkVS (mkV "evaporate" "evaporates" "evaporated" "evaporated" "evaporating");
lin evaporation_N = mkN "evaporation" "evaporations";
lin evasion_N = mkN "evasion" "evasions";
lin evasive_A = compoundA (mkA "evasive");
lin evasiveness_N = mkN "evasiveness" ;
lin eve_N = mkN "eve" "eves";
lin eve_PN = mkPN "Eve";
lin evelyn_PN = mkPN "Evelyn";
lin even_A = compoundA (mkA "even");
lin even_Adv = mkAdv "even";
lin even_N = mkN "even" "evens";
lin even_V2 = mkV2 (mkV "even" "evens" "evened" "evened" "evening");
lin even_handed_A = compoundA (mkA "even - handed");
lin evening_N = mkN "evening" "evenings";
lin evenness_N = mkN "evenness" ;
lin evensong_N = mkN "evensong" "evensongs";
lin event_N = mkN "event" "events";
lin eventful_A = compoundA (mkA "eventful");
lin eventide_N = mkN "eventide" ;
lin eventual_A = compoundA (mkA "eventual");
lin eventuality_N = mkN "eventuality" "eventualities";
lin ever_AdV = mkAdV "ever";
lin evergreen_A = compoundA (mkA "evergreen");
lin evergreen_N = mkN "evergreen" "evergreens";
lin everlasting_A = compoundA (mkA "everlasting");
lin evermore_Adv = mkAdv "evermore";
lin every_Det = mkDeterminer singular "every";
lin everybody_NP = regNP "everybody" singular ;
lin everyday_A = compoundA (mkA "everyday");
lin everyone_NP = regNP "everyone" singular;
lin everyplace_Adv = mkAdv "everyplace";
lin everything_NP = regNP "everything" singular;
lin evesham_PN = mkPN "Evesham";
lin evict_V2 = mkV2 (mkV "evict" "evicts" "evicted" "evicted" "evicting");
lin eviction_N = mkN "eviction" "evictions";
lin evidence_N = mkN "evidence" ;
lin evidence_V2 = mkV2 (mkV "evidence" "evidences" "evidenced" "evidenced" "evidencing");
lin evident_A = compoundA (mkA "evident");
lin evil_A = compoundA (mkA "evil");
lin evil_N = mkN "evil" "evils";
lin evil_doer_N = mkN "evil - doer" "evil - doers";
lin evil_minded_A = compoundA (mkA "evil - minded");
lin evince_V2 = mkV2 (mkV "evince" "evinces" "evinced" "evinced" "evincing");
lin eviscerate_V2 = mkV2 (mkV "eviscerate" "eviscerates" "eviscerated" "eviscerated" "eviscerating");
lin evocation_N = mkN "evocation" "evocations";
lin evocative_A = compoundA (mkA "evocative");
lin evoke_V2 = mkV2 (mkV "evoke" "evokes" "evoked" "evoked" "evoking");
lin evolution_N = mkN "evolution" "evolutions";
lin evolutionary_A = compoundA (mkA "evolutionary");
lin evolve_V = mkV "evolve" "evolves" "evolved" "evolved" "evolving";
lin evolve_V2 = mkV2 (mkV "evolve" "evolves" "evolved" "evolved" "evolving");
lin ewe_N = mkN "ewe" "ewes";
lin ewell_PN = mkPN "Ewell";
lin ewer_N = mkN "ewer" "ewers";
lin ex_directory_A = compoundA (mkA "ex - directory");
lin ex_gratia_A = compoundA (mkA "ex gratia");
lin ex_officio_A = compoundA (mkA "ex officio");
lin ex_officio_Adv = mkAdv "ex officio";
lin ex_service_A = compoundA (mkA "ex - service");
lin ex_serviceman_N = mkN "ex - serviceman" "ex - servicemen" {- FIXME: guessed plural form -};
lin exacerbate_V2 = mkV2 (mkV "exacerbate" "exacerbates" "exacerbated" "exacerbated" "exacerbating");
lin exacerbation_N = mkN "exacerbation" "exacerbations";
lin exact_A = compoundA (mkA "exact");
lin exact_V2 = mkV2 (mkV "exact" "exacts" "exacted" "exacted" "exacting");
lin exacting_A = compoundA (mkA "exacting");
lin exaction_N = mkN "exaction" "exactions";
lin exactitude_N = mkN "exactitude" ;
lin exactness_N = mkN "exactness" ;
lin exaggerate_V = mkV "exaggerate" "exaggerates" "exaggerated" "exaggerated" "exaggerating";
lin exaggerate_V2 = mkV2 (mkV "exaggerate" "exaggerates" "exaggerated" "exaggerated" "exaggerating");
lin exaggeration_N = mkN "exaggeration" "exaggerations";
lin exalt_V2 = mkV2 (mkV "exalt" "exalts" "exalted" "exalted" "exalting");
lin exaltation_N = mkN "exaltation" ;
lin exalted_A = compoundA (mkA "exalted");
lin exam_N = mkN "exam" "exams";
lin examination_N = mkN "examination" "examinations";
lin examine_V2 = mkV2 (mkV "examine" "examines" "examined" "examined" "examining");
lin examiner_N = mkN "examiner" "examiners";
lin example_N = mkN "example" "examples";
lin exasperate_V2 = mkV2 (mkV "exasperate" "exasperates" "exasperated" "exasperated" "exasperating");
lin exasperation_N = mkN "exasperation" ;
lin excavate_V = mkV "excavate" "excavates" "excavated" "excavated" "excavating";
lin excavate_V2 = mkV2 (mkV "excavate" "excavates" "excavated" "excavated" "excavating");
lin excavation_N = mkN "excavation" "excavations";
lin excavator_N = mkN "excavator" "excavators";
lin exceed_V2 = mkV2 (mkV "exceed" "exceeds" "exceeded" "exceeded" "exceeding");
lin exceedingly_Adv = mkAdv "exceedingly";
lin excel_V = mkV "excel" "excels" "excelled" "excelled" "excelling";
lin excel_V2 = mkV2 (mkV "excel" "excels" "excelled" "excelled" "excelling");
lin excellence_N = mkN "excellence" "excellences";
lin excellency_N = mkN "excellency" "excellencies";
lin excellent_A = compoundA (mkA "excellent");
lin excelsior_N = mkN "excelsior" ;
lin except_Prep = mkPrep "except";
lin except_V2 = mkV2 (mkV "except" "excepts" "excepted" "excepted" "excepting");
lin exception_N = mkN "exception" "exceptions";
lin exceptionable_A = compoundA (mkA "exceptionable");
lin exceptional_A = compoundA (mkA "exceptional");
lin excerpt_N = mkN "excerpt" "excerpts";
lin excess_A = compoundA (mkA "excess");
lin excess_N = mkN "excess" "excesses";
lin excessive_A = compoundA (mkA "excessive");
lin exchange_N = mkN "exchange" "exchanges";
lin exchange_V2 = mkV2 (mkV "exchange" "exchanges" "exchanged" "exchanged" "exchanging");
lin exchangeable_A = compoundA (mkA "exchangeable");
lin exchanger_N = mkN "exchanger" "exchangers";
lin exchequer_N = mkN "exchequer" "exchequers";
lin excise_N = mkN "excise" ;
lin excise_V2 = mkV2 (mkV "excise" "excises" "excised" "excised" "excising");
lin exciseman_N = mkN "exciseman" "excisemen" {- FIXME: guessed plural form -};
lin excision_N = mkN "excision" "excisions";
lin excitability_N = mkN "excitability" ;
lin excitable_A = compoundA (mkA "excitable");
lin excite_V2 = mkV2 (mkV "excite" "excites" "excited" "excited" "exciting");
lin excitedly_Adv = mkAdv "excitedly";
lin excitement_N = mkN "excitement" "excitements";
lin excitingly_Adv = mkAdv "excitingly";
lin excl_PN = mkPN "Excl";
lin exclaim_V = mkV "exclaim" "exclaims" "exclaimed" "exclaimed" "exclaiming";
lin exclaim_V2 = mkV2 (mkV "exclaim" "exclaims" "exclaimed" "exclaimed" "exclaiming");
lin exclamation_N = mkN "exclamation" "exclamations";
lin exclamatory_A = compoundA (mkA "exclamatory");
lin exclude_V2 = mkV2 (mkV "exclude" "excludes" "excluded" "excluded" "excluding");
lin exclusion_N = mkN "exclusion" ;
lin exclusive_A = compoundA (mkA "exclusive");
lin excogitate_V2 = mkV2 (mkV "excogitate" "excogitates" "excogitated" "excogitated" "excogitating");
lin excogitation_N = mkN "excogitation" "excogitations";
lin excommunicate_V2 = mkV2 (mkV "excommunicate" "excommunicates" "excommunicated" "excommunicated" "excommunicating");
lin excommunication_N = mkN "excommunication" "excommunications";
lin excoriate_V2 = mkV2 (mkV "excoriate" "excoriates" "excoriated" "excoriated" "excoriating");
lin excoriation_N = mkN "excoriation" "excoriations";
lin excrement_N = mkN "excrement" ;
lin excrescence_N = mkN "excrescence" "excrescences";
lin excrete_V2 = mkV2 (mkV "excrete" "excretes" "excreted" "excreted" "excreting");
lin excretion_N = mkN "excretion" "excretions";
lin excruciating_A = compoundA (mkA "excruciating");
lin exculpate_V2 = mkV2 (mkV "exculpate" "exculpates" "exculpated" "exculpated" "exculpating");
lin excursion_N = mkN "excursion" "excursions";
lin excursionist_N = mkN "excursionist" "excursionists";
lin excusable_A = compoundA (mkA "excusable");
lin excuse_N = mkN "excuse" "excuses";
lin excuse_V2 = mkV2 (mkV "excuse" "excuses" "excused" "excused" "excusing");
lin execrable_A = compoundA (mkA "execrable");
lin execrate_V2 = mkV2 (mkV "execrate" "execrates" "execrated" "execrated" "execrating");
lin execration_N = mkN "execration" "execrations";
lin executant_N = mkN "executant" "executants";
lin execute_V2 = mkV2 (mkV "execute" "executes" "executed" "executed" "executing");
lin execution_N = mkN "execution" "executions";
lin executioner_N = mkN "executioner" "executioners";
lin executive_A = compoundA (mkA "executive");
lin executive_N = mkN "executive" "executives";
lin executor_N = mkN "executor" "executors";
lin executrix_N = mkN "executrix" "executrixes";
lin exegesis_N = mkN "exegesis" ;
lin exemplary_A = compoundA (mkA "exemplary");
lin exemplification_N = mkN "exemplification" "exemplifications";
lin exemplify_V2 = mkV2 (mkV "exemplify" "exemplifies" "exemplified" "exemplified" "exemplifying");
lin exempt_A = compoundA (mkA "exempt");
lin exempt_V2 = mkV2 (mkV "exempt");
lin exempt_V2V = ingV2V (mkV "exempt" "exempts" "exempted" "exempted" "exempting") noPrep from_Prep;
lin exemption_N = mkN "exemption" "exemptions";
lin exercise_N = mkN "exercise" "exercises";
lin exercise_V = mkV "exercise" "exercises" "exercised" "exercised" "exercising";
lin exercise_V2 = mkV2 (mkV "exercise" "exercises" "exercised" "exercised" "exercising");
lin exercise_VV = mkVV (mkV "exercise" "exercises" "exercised" "exercised" "exercising");
lin exert_V2 = mkV2 (mkV "exert" "exerts" "exerted" "exerted" "exerting");
lin exertion_N = mkN "exertion" "exertions";
lin exeter_PN = mkPN "Exeter";
lin exhalation_N = mkN "exhalation" "exhalations";
lin exhale_V = mkV "exhale" "exhales" "exhaled" "exhaled" "exhaling";
lin exhale_V2 = mkV2 (mkV "exhale" "exhales" "exhaled" "exhaled" "exhaling");
lin exhaust_N = mkN "exhaust" "exhausts";
lin exhaust_V2 = mkV2 (mkV "exhaust" "exhausts" "exhausted" "exhausted" "exhausting");
lin exhaust_pipe_N = mkN "exhaust - pipe" "exhaust - pipes";
lin exhaustion_N = mkN "exhaustion" ;
lin exhaustive_A = compoundA (mkA "exhaustive");
lin exhibit_N = mkN "exhibit" "exhibits";
lin exhibit_V2 = mkV2 (mkV "exhibit" "exhibits" "exhibited" "exhibited" "exhibiting");
lin exhibition_N = mkN "exhibition" "exhibitions";
lin exhibitioner_N = mkN "exhibitioner" "exhibitioners";
lin exhibitionism_N = mkN "exhibitionism" ;
lin exhibitionist_N = mkN "exhibitionist" "exhibitionists";
lin exhibitor_N = mkN "exhibitor" "exhibitors";
lin exhilarate_V2 = mkV2 (mkV "exhilarate" "exhilarates" "exhilarated" "exhilarated" "exhilarating");
lin exhilaration_N = mkN "exhilaration" ;
lin exhort_V2 = mkV2 (mkV "exhort" "exhorts" "exhorted" "exhorted" "exhorting");
lin exhortation_N = mkN "exhortation" "exhortations";
lin exhumation_N = mkN "exhumation" "exhumations";
lin exhume_V2 = mkV2 (mkV "exhume" "exhumes" "exhumed" "exhumed" "exhuming");
lin exigency_N = mkN "exigency" "exigencies";
lin exigent_A = compoundA (mkA "exigent");
lin exiguous_A = compoundA (mkA "exiguous");
lin exile_N = mkN "exile" "exiles";
lin exile_V2 = mkV2 (mkV "exile" "exiles" "exiled" "exiled" "exiling");
lin exist_V = mkV "exist" "exists" "existed" "existed" "existing";
lin exist_V2V = mkV2V (mkV "exist" "exists" "existed" "existed" "existing") noPrep to_Prep ;
lin existence_N = mkN "existence" "existences";
lin existent_A = compoundA (mkA "existent");
lin existentialism_N = mkN "existentialism" ;
lin existentialist_N = mkN "existentialist" "existentialists";
lin exit_N = mkN "exit" "exits";
lin exit_V = mkV "exit" "exits" "exited" "exited" "exiting";
lin exmouth_PN = mkPN "Exmouth";
lin exodus_N = mkN "exodus" "exoduses";
lin exonerate_V2 = mkV2 (mkV "exonerate" "exonerates" "exonerated" "exonerated" "exonerating");
lin exoneration_N = mkN "exoneration" "exonerations";
lin exorbitance_N = mkN "exorbitance" ;
lin exorbitant_A = compoundA (mkA "exorbitant");
lin exorcise_V2 = mkV2 (mkV "exorcise");
lin exorcize_V2 = mkV2 (mkV "exorcize" "exorcizes" "exorcized" "exorcized" "exorcizing");
lin exotic_A = compoundA (mkA "exotic");
lin expand_V = mkV "expand" "expands" "expanded" "expanded" "expanding";
lin expand_V2 = mkV2 (mkV "expand" "expands" "expanded" "expanded" "expanding");
lin expand_V2V = mkV2V (mkV "expand" "expands" "expanded" "expanded" "expanding") noPrep to_Prep ;
lin expanse_N = mkN "expanse" "expanses";
lin expansion_N = mkN "expansion" ;
lin expansive_A = compoundA (mkA "expansive");
lin expansiveness_N = mkN "expansiveness" ;
lin expatiate_V = mkV "expatiate" "expatiates" "expatiated" "expatiated" "expatiating";
lin expatriate_N = mkN "expatriate" "expatriates";
lin expatriate_V2 = mkV2 (mkV "expatriate" "expatriates" "expatriated" "expatriated" "expatriating");
lin expect_Prep = mkPrep "expect";
lin expect_V = mkV "expect";
lin expect_V2 = mkV2 (mkV "expect");
lin expect_V2V = mkV2V (mkV "expect") noPrep (mkPrep "to") ;
lin expect_VV = mkVV (mkV "expect") ;
lin expect_VS = mkVS (mkV "expect");
lin expectancy_N = mkN "expectancy" "expectancies";
lin expectant_A = compoundA (mkA "expectant");
lin expectation_N = mkN "expectation" "expectations";
lin expected_A = compoundA (mkA "expected");
lin expectorant_N = mkN "expectorant" "expectorants";
lin expectorate_V = mkV "expectorate" "expectorates" "expectorated" "expectorated" "expectorating";
lin expectorate_V2 = mkV2 (mkV "expectorate" "expectorates" "expectorated" "expectorated" "expectorating");
lin expedience_N = mkN "expedience" ;
lin expediency_N = mkN "expediency" ;
lin expedient_A = compoundA (mkA "expedient");
lin expedient_N = mkN "expedient" "expedients";
lin expedite_V2 = mkV2 (mkV "expedite" "expedites" "expedited" "expedited" "expediting");
lin expedition_N = mkN "expedition" "expeditions";
lin expeditionary_A = compoundA (mkA "expeditionary");
lin expeditious_A = compoundA (mkA "expeditious");
lin expel_V2 = mkV2 (mkV "expel" "expels" "expelled" "expelled" "expelling");
lin expend_V2 = mkV2 (mkV "expend" "expends" "expended" "expended" "expending");
lin expendable_A = compoundA (mkA "expendable");
lin expenditure_N = mkN "expenditure" "expenditures";
lin expense_N = mkN "expense" "expenses";
lin expensive_A = compoundA (mkA "expensive");
lin experience_N = mkN "experience" "experiences";
lin experience_V2 = mkV2 (mkV "experience" "experiences" "experienced" "experienced" "experiencing");
lin experienced_A = compoundA (mkA "experienced");
lin experiment_N = mkN "experiment" "experiments";
lin experiment_V = mkV "experiment" "experiments" "experimented" "experimented" "experimenting";
lin experiment_V2 = mkV2 (mkV "experiment" "experiments" "experimented" "experimented" "experimenting");
lin experimental_A = compoundA (mkA "experimental");
lin experimentation_N = mkN "experimentation" ;
lin experimenter_N = mkN "experimenter" "experimenters";
lin expert_A = compoundA (mkA "expert");
lin expert_N = mkN "expert" "experts";
lin expertise_N = mkN "expertise" ;
lin expertness_N = mkN "expertness" ;
lin expiate_V2 = mkV2 (mkV "expiate" "expiates" "expiated" "expiated" "expiating");
lin expiation_N = mkN "expiation" ;
lin expiration_N = mkN "expiration" ;
lin expire_V = mkV "expire" "expires" "expired" "expired" "expiring";
lin expire_V2 = mkV2 (mkV "expire" "expires" "expired" "expired" "expiring");
lin expire_VS = mkVS (mkV "expire" "expires" "expired" "expired" "expiring");
lin expiry_N = mkN "expiry" "expiries";
lin explain_V2 = mkV2 (mkV "explain" "explains" "explained" "explained" "explaining");
lin explain_VS = mkVS (mkV "explain");
lin explanation_N = mkN "explanation" "explanations";
lin explanatory_A = compoundA (mkA "explanatory");
lin expletive_N = mkN "expletive" "expletives";
lin explicable_A = compoundA (mkA "explicable");
lin explicate_V2 = mkV2 (mkV "explicate" "explicates" "explicated" "explicated" "explicating");
lin explicit_A = compoundA (mkA "explicit");
lin explicitness_N = mkN "explicitness" ;
lin explode_V = mkV "explode" "explodes" "exploded" "exploded" "exploding";
lin explode_V2 = mkV2 (mkV "explode" "explodes" "exploded" "exploded" "exploding");
lin exploit_N = mkN "exploit" "exploits";
lin exploit_V2 = mkV2 (mkV "exploit" "exploits" "exploited" "exploited" "exploiting");
lin exploitation_N = mkN "exploitation" ;
lin exploration_N = mkN "exploration" "explorations";
lin exploratory_A = compoundA (mkA "exploratory");
lin explore_V2 = mkV2 (mkV "explore" "explores" "explored" "explored" "exploring");
lin explore_VS = mkVS (mkV "explore");
lin explorer_N = mkN "explorer" "explorers";
lin explosion_N = mkN "explosion" "explosions";
lin explosive_A = compoundA (mkA "explosive");
lin explosive_N = mkN "explosive" "explosives";
lin expo_N = mkN "expo" "expos";
lin exponent_N = mkN "exponent" "exponents";
lin exponential_A = compoundA (mkA "exponential");
lin exponential_N = mkN "exponential" "exponentials";
lin export_N = mkN "export" "exports";
lin export_V = mkV "export";
lin export_V2 = mkV2 (mkV "export" "exports" "exported" "exported" "exporting");
lin exportable_A = compoundA (mkA "exportable");
lin exportation_N = mkN "exportation" ;
lin exporter_N = mkN "exporter" "exporters";
lin expose_N = mkN "exposé" "exposés";
lin expose_V = mkV "expose";
lin expose_V2 = mkV2 (mkV "expose" "exposes" "exposed" "exposed" "exposing");
lin exposition_N = mkN "exposition" "expositions";
lin expostulate_V = mkV "expostulate" "expostulates" "expostulated" "expostulated" "expostulating";
lin expostulation_N = mkN "expostulation" "expostulations";
lin exposure_N = mkN "exposure" "exposures";
lin expound_V2 = mkV2 (mkV "expound" "expounds" "expounded" "expounded" "expounding");
lin expound_VS = mkVS (mkV "expound" "expounds" "expounded" "expounded" "expounding");
lin express_A = compoundA (mkA "express");
lin express_Adv = mkAdv "express";
lin express_N = mkN "express" "expresses";
lin express_V2 = mkV2 (mkV "express" "expresses" "expressed" "expressed" "expressing");
lin expression_N = mkN "expression" "expressions";
lin expressionism_N = mkN "expressionism" ;
lin expressionist_N = mkN "expressionist" "expressionists";
lin expressionless_A = compoundA (mkA "expressionless");
lin expressive_A = compoundA (mkA "expressive");
lin expressway_N = mkN "expressway" "expressways";
lin expropriate_V2 = mkV2 (mkV "expropriate" "expropriates" "expropriated" "expropriated" "expropriating");
lin expropriation_N = mkN "expropriation" ;
lin expulsion_N = mkN "expulsion" "expulsions";
lin expunge_V2 = mkV2 (mkV "expunge" "expunges" "expunged" "expunged" "expunging");
lin expurgate_V2 = mkV2 (mkV "expurgate" "expurgates" "expurgated" "expurgated" "expurgating");
lin expurgation_N = mkN "expurgation" "expurgations";
lin exquisite_A = compoundA (mkA "exquisite");
lin exquisiteness_N = mkN "exquisiteness" ;
lin extant_A = compoundA (mkA "extant");
lin extemporaneous_A = compoundA (mkA "extemporaneous");
lin extemporary_A = compoundA (mkA "extemporary");
lin extempore_A = compoundA (mkA "extempore");
lin extempore_Adv = mkAdv "extempore";
lin extemporize_V = mkV "extemporize" "extemporize" "extemporize" "extemporize" "extemporize";
lin extemporize_V2 = mkV2 (mkV "extemporize" "extemporize" "extemporize" "extemporize" "extemporize");
lin extend_V = mkV "extend" "extends" "extended" "extended" "extending";
lin extend_V2 = mkV2 (mkV "extend" "extends" "extended" "extended" "extending");
lin extension_N = mkN "extension" "extensions";
lin extensive_A = compoundA (mkA "extensive");
lin extent_N = mkN "extent" ;
lin extenuate_V2 = mkV2 (mkV "extenuate" "extenuates" "extenuated" "extenuated" "extenuating");
lin extenuation_N = mkN "extenuation" "extenuations";
lin exterior_A = compoundA (mkA "exterior");
lin exterior_N = mkN "exterior" "exteriors";
lin exteriorize_V2 = mkV2 (mkV "exteriorize" "exteriorizes" "exteriorized" "exteriorized" "exteriorizing");
lin exterminate_V2 = mkV2 (mkV "exterminate" "exterminates" "exterminated" "exterminated" "exterminating");
lin extermination_N = mkN "extermination" "exterminations";
lin external_A = compoundA (mkA "external");
lin external_N = mkN "external" "externals";
lin externalize_V2 = mkV2 (mkV "externalize" "externalizes" "externalized" "externalized" "externalizing");
lin exterritorial_A = compoundA (mkA "exterritorial");
lin extinct_A = compoundA (mkA "extinct");
lin extinction_N = mkN "extinction" ;
lin extinguish_V2 = mkV2 (mkV "extinguish" "extinguishes" "extinguished" "extinguished" "extinguishing");
lin extinguisher_N = mkN "extinguisher" "extinguishers";
lin extirpate_V2 = mkV2 (mkV "extirpate" "extirpates" "extirpated" "extirpated" "extirpating");
lin extirpation_N = mkN "extirpation" ;
lin extol_V2 = mkV2 (mkV "extol" "extols" "extolled" "extolled" "extolling");
lin extort_V = mkV "extort" "extorts" "extorted" "extorted" "extorting";
lin extort_V2 = mkV2 (mkV "extort" "extorts" "extorted" "extorted" "extorting");
lin extortion_N = mkN "extortion" "extortions";
lin extortionate_A = compoundA (mkA "extortionate");
lin extra_A = compoundA (mkA "extra");
lin extra_Adv = mkAdv "extra";
lin extra_N = mkN "extra" "extras";
lin extract_N = mkN "extract" "extracts";
lin extract_V2 = mkV2 (mkV "extract" "extracts" "extracted" "extracted" "extracting");
lin extraction_N = mkN "extraction" "extractions";
lin extracurricular_A = compoundA (mkA "extracurricular");
lin extradite_V2 = mkV2 (mkV "extradite" "extradites" "extradited" "extradited" "extraditing");
lin extradition_N = mkN "extradition" "extraditions";
lin extrajudicial_A = compoundA (mkA "extrajudicial");
lin extramarital_A = compoundA (mkA "extramarital");
lin extramural_A = compoundA (mkA "extramural");
lin extraneous_A = compoundA (mkA "extraneous");
lin extraordinary_A = compoundA (mkA "extraordinary");
lin extrapolate_V = mkV "extrapolate" "extrapolate" "extrapolate" "extrapolate" "extrapolate";
lin extrapolate_V2 = mkV2 (mkV "extrapolate" "extrapolate" "extrapolate" "extrapolate" "extrapolate");
lin extrapolation_N = mkN "extrapolation" ;
lin extrasensory_A = compoundA (mkA "extrasensory");
lin extraterritorial_A = compoundA (mkA "extraterritorial");
lin extravagance_N = mkN "extravagance" "extravagances";
lin extravagant_A = compoundA (mkA "extravagant");
lin extravaganza_N = mkN "extravaganza" "extravaganzas";
lin extreme_A = compoundA (mkA "extreme");
lin extreme_N = mkN "extreme" "extremes";
lin extremist_N = mkN "extremist" "extremists";
lin extremity_N = mkN "extremity" "extremities";
lin extricable_A = compoundA (mkA "extricable");
lin extricate_V2 = mkV2 (mkV "extricate" "extricates" "extricated" "extricated" "extricating");
lin extrication_N = mkN "extrication" ;
lin extrinsic_A = compoundA (mkA "extrinsic");
lin extroversion_N = mkN "extroversion" ;
lin extrovert_N = mkN "extrovert" "extroverts";
lin extrude_V2 = mkV2 (mkV "extrude" "extrudes" "extruded" "extruded" "extruding");
lin extrusion_N = mkN "extrusion" "extrusions";
lin exuberance_N = mkN "exuberance" ;
lin exuberant_A = compoundA (mkA "exuberant");
lin exude_V = mkV "exude" "exudes" "exuded" "exuded" "exuding";
lin exude_V2 = mkV2 (mkV "exude" "exudes" "exuded" "exuded" "exuding");
lin exult_V = mkV "exult" "exults" "exulted" "exulted" "exulting";
lin exultant_A = compoundA (mkA "exultant");
lin exultation_N = mkN "exultation" ;
lin eye_N = mkN "eye" "eyes";
lin eye_V2 = mkV2 (mkV "eye" "eyes" "eyed" "eyed" "eyeing");
lin eye_catching_A = compoundA (mkA "eye - catching");
lin eye_opener_N = mkN "eye - opener" "eye - openers";
lin eye_shadow_N = mkN "eye - shadow" ;
lin eyeball_N = mkN "eyeball" "eyeballs";
lin eyeball_V2 = mkV2 (mkV "eyeball");
lin eyebath_N = mkN "eyebath" "eyebaths";
lin eyebrow_N = mkN "eyebrow" "eyebrows";
lin eyecatching_A = compoundA (mkA "eyecatching");
lin eyecup_N = mkN "eyecup" "eyecups";
lin eyed_A = compoundA (mkA "eyed");
lin eyeful_N = mkN "eyeful" "eyefuls";
lin eyeglass_N = mkN "eyeglass" "eyeglasses";
lin eyelash_N = mkN "eyelash" "eyelashes";
lin eyeless_A = compoundA (mkA "eyeless");
lin eyelet_N = mkN "eyelet" "eyelets";
lin eyelid_N = mkN "eyelid" "eyelids";
lin eyepiece_N = mkN "eyepiece" "eyepieces";
lin eyeshot_N = mkN "eyeshot" ;
lin eyesight_N = mkN "eyesight" ;
lin eyesore_N = mkN "eyesore" "eyesores";
lin eyestrain_N = mkN "eyestrain" ;
lin eyetooth_N = mkN "eyetooth" "eyeteeth" {- FIXME: guessed plural form -};
lin eyewash_N = mkN "eyewash" ;
lin eyewitness_N = mkN "eyewitness" "eyewitnesses";
lin eyrie_N = mkN "eyrie" "eyries";
lin eyry_N = mkN "eyry" "eyries";
lin fa_N = mkN "fa" ;
lin fab_A = compoundA (mkA "fab");
lin fabian_A = compoundA (mkA "fabian");
lin fabian_N = mkN "fabian" "fabians";
lin fable_N = mkN "fable" "fables";
lin fabled_A = compoundA (mkA "fabled");
lin fabric_N = mkN "fabric" "fabrics";
lin fabricate_V2 = mkV2 (mkV "fabricate" "fabricates" "fabricated" "fabricated" "fabricating");
lin fabrication_N = mkN "fabrication" "fabrications";
lin fabulous_A = compoundA (mkA "fabulous");
lin facade_N = mkN "façade" "façades";
lin face_N = mkN "face" "faces";
lin face_V = mkV "face" "faces" "faced" "faced" "facing";
lin face_V2 = mkV2 (mkV "face" "faces" "faced" "faced" "facing");
lin face_ache_N = mkN "face - ache" ;
lin face_card_N = mkN "face - card" "face - cards";
lin face_cloth_N = mkN "face - cloth" "face - cloths";
lin face_cream_N = mkN "face - cream" "face - creams";
lin face_lift_N = mkN "face - lift" "face - lifts";
lin face_lifting_N = mkN "face - lifting" "face - liftings";
lin face_pack_N = mkN "face - pack" "face - packs";
lin face_powder_N = mkN "face - powder" "face - powders";
lin face_saver_N = mkN "face - saver" "face - savers";
lin face_saving_A = compoundA (mkA "face - saving");
lin face_saving_N = mkN "face - saving" ;
lin faceless_A = compoundA (mkA "faceless");
lin facer_N = mkN "facer" "facers";
lin facet_N = mkN "facet" "facets";
lin facetious_A = compoundA (mkA "facetious");
lin facetiousness_N = mkN "facetiousness" ;
lin facia_N = mkN "facia" "facias";
lin facial_A = compoundA (mkA "facial");
lin facial_N = mkN "facial" "facials";
lin facile_A = compoundA (mkA "facile");
lin facilitate_V2 = mkV2 (mkV "facilitate" "facilitates" "facilitated" "facilitated" "facilitating");
lin facility_N = mkN "facility" "facilities";
lin facing_N = mkN "facing" "facings";
lin facsimile_N = mkN "facsimile" "facsimiles";
lin fact_N = mkN "fact" "facts";
lin fact_finding_A = compoundA (mkA "fact - finding");
lin faction_N = mkN "faction" "factions";
lin factious_A = compoundA (mkA "factious");
lin factitious_A = compoundA (mkA "factitious");
lin factor_N = mkN "factor" "factors";
lin factorize_V2 = mkV2 (mkV "factorize" "factorizes" "factorized" "factorized" "factorizing");
lin factory_N = mkN "factory" "factories";
lin factotum_N = mkN "factotum" "factotums";
lin factual_A = compoundA (mkA "factual");
lin faculty_N = mkN "faculty" "faculties";
lin fad_N = mkN "fad" "fads";
lin faddily_Adv = mkAdv "faddily";
lin faddy_A = mkA "faddy" "faddier";
lin fade_V = mkV "fade" "fades" "faded" "faded" "fading";
lin fade_V2 = mkV2 (mkV "fade" "fades" "faded" "faded" "fading");
lin faerie_N = mkN "faerie" "faeries";
lin faery_N = mkN "faery" "faeries";
lin fag_N = mkN "fag" "fags";
lin fag_V = mkV "fag" "fags" "fagged" "fagged" "fagging";
lin fag_V2 = mkV2 (mkV "fag" "fags" "fagged" "fagged" "fagging");
lin fag_end_N = mkN "fag - end" "fag - ends";
lin faggot_N = mkN "faggot" "faggots";
lin faience_N = mkN "faience" ;
lin fail_N = mkN "fail" ;
lin fail_V = mkV "fail";
lin fail_V2 = mkV2 (mkV "fail");
lin fail_V2V = mkV2V (mkV "fail") noPrep to_Prep ;
lin fail_VS = mkVS (mkV "fail");
lin fail_VV = mkVV (mkV "fail");
lin fail_safe_A = compoundA (mkA "fail - safe");
lin failing_N = mkN "failing" "failings";
lin failure_N = mkN "failure" "failures";
lin fain_Adv = mkAdv "fain";
lin faint_A = mkA "faint" "fainter";
lin faint_N = mkN "faint" "faints";
lin faint_V = mkV "faint" "faints" "fainted" "fainted" "fainting";
lin faint_hearted_A = compoundA (mkA "faint - hearted");
lin faintness_N = mkN "faintness" ;
lin fair_A = mkA "fair" "fairer";
lin fair_Adv = mkAdv "fair";
lin fair_N = mkN "fair" "fairs";
lin fair_minded_A = compoundA (mkA "fair - minded");
lin fairground_N = mkN "fairground" "fairgrounds";
lin fairish_A = compoundA (mkA "fairish");
lin fairness_N = mkN "fairness" ;
lin fairway_N = mkN "fairway" "fairways";
lin fairy_N = mkN "fairy" "fairies";
lin fairyland_N = mkN "fairyland" "fairylands";
lin fairytale_N = mkN "fairytale" "fairytales";
lin fait_accompli_N = mkN "fait accompli" "IRREG";
lin faith_N = mkN "faith" "faiths";
lin faith_healing_N = mkN "faith - healing" ;
lin faithful_A = compoundA (mkA "faithful");
lin faithfulness_N = mkN "faithfulness" ;
lin faithless_A = compoundA (mkA "faithless");
lin faithlessness_N = mkN "faithlessness" ;
lin fake_N = mkN "fake" "fakes";
lin fake_V2 = mkV2 (mkV "fake" "fakes" "faked" "faked" "faking");
lin fakir_N = mkN "fakir" "fakirs";
lin falcon_N = mkN "falcon" "falcons";
lin falconry_N = mkN "falconry" ;
lin falkirk_PN = mkPN "Falkirk";
lin fall_N = mkN "fall" "falls";
lin fall_V = IrregEng.fall_V;
lin fall_V2 = mkV2 (IrregEng.fall_V);
lin fall_VA = mkVA (IrregEng.fall_V);
lin fall_VS = mkVS (IrregEng.fall_V);
lin fallacious_A = compoundA (mkA "fallacious");
lin fallacy_N = mkN "fallacy" "fallacies";
lin fallibility_N = mkN "fallibility" ;
lin fallible_A = compoundA (mkA "fallible");
lin fallopian_A = compoundA (mkA "fallopian");
lin fallout_N = mkN "fallout" ;
lin fallow_A = compoundA (mkA "fallow");
lin fallow_N = mkN "fallow" ;
lin fallow_deer_N = mkN "fallow - deer" "fallow - deer";
lin falmouth_PN = mkPN "Falmouth";
lin false_A = compoundA (mkA "false");
lin false_Adv = mkAdv "false";
lin falsehood_N = mkN "falsehood" "falsehoods";
lin falseness_N = mkN "falseness" ;
lin falsetto_A = compoundA (mkA "falsetto");
lin falsetto_N = mkN "falsetto" "falsettos";
lin falsification_N = mkN "falsification" "falsifications";
lin falsify_V2 = mkV2 (mkV "falsify" "falsifies" "falsified" "falsified" "falsifying");
lin falsity_N = mkN "falsity" "falsities";
lin falter_V = mkV "falter" "falters" "faltered" "faltered" "faltering";
lin falter_V2 = mkV2 (mkV "falter" "falters" "faltered" "faltered" "faltering");
lin falteringly_Adv = mkAdv "falteringly";
lin fame_N = mkN "fame" ;
lin fame_V2 = mkV2 (mkV "fame");
lin famed_A = compoundA (mkA "famed");
lin familiar_A = compoundA (mkA "familiar");
lin familiar_N = mkN "familiar" "familiars";
lin familiarity_N = mkN "familiarity" "familiarities";
lin familiarize_V2 = mkV2 (mkV "familiarize" "familiarizes" "familiarized" "familiarized" "familiarizing");
lin family_N = mkN "family" "families";
lin famine_N = mkN "famine" "famines";
lin famish_V = mkV "famish" "famishes" "famished" "famished" "famishing";
lin famish_V2 = mkV2 (mkV "famish" "famishes" "famished" "famished" "famishing");
lin famous_A = compoundA (mkA "famous");
lin fan_N = mkN "fan" "fans";
lin fan_V = mkV "fan" "fans" "fanned" "fanned" "fanning";
lin fan_V2 = mkV2 (mkV "fan" "fans" "fanned" "fanned" "fanning");
lin fan_belt_N = mkN "fan - belt" "fan - belts";
lin fanatic_A = compoundA (mkA "fanatic");
lin fanatic_N = mkN "fanatic" "fanatics";
lin fanatical_A = compoundA (mkA "fanatical");
lin fanaticism_N = mkN "fanaticism" "fanaticisms";
lin fancier_N = mkN "fancier" "fanciers";
lin fanciful_A = compoundA (mkA "fanciful");
lin fancy_A = mkA "fancy" "fancier";
lin fancy_N = mkN "fancy" "fancies";
lin fancy_V2 = mkV2 (mkV "fancy" "fancies" "fancied" "fancied" "fancying");
lin fancy_VS = mkVS (mkV "fancy");
lin fancy_free_A = compoundA (mkA "fancy - free");
lin fandango_N = mkN "fandango" "fandangos";
lin fanfare_N = mkN "fanfare" "fanfares";
lin fang_N = mkN "fang" "fangs";
lin fanlight_N = mkN "fanlight" "fanlights";
lin fanny_N = mkN "fanny" "fannies";
lin fanny_PN = mkPN "Fanny";
lin fantan_N = mkN "fantan" ;
lin fantasia_N = mkN "fantasia" "fantasias";
lin fantasize_V = mkV "fantasize";
lin fantastic_A = compoundA (mkA "fantastic");
lin fantastically_Adv = mkAdv "fantastically";
lin fantasy_N = mkN "fantasy" "fantasies";
lin fao_N = mkN "fao" ;
lin far_A = irregAdv (compoundA (mkA "far")) "far";
lin far_V2 = mkV2 (mkV "far");
lin far_famed_A = compoundA (mkA "far - famed");
lin far_fetched_A = compoundA (mkA "far - fetched");
lin far_flung_A = compoundA (mkA "far - flung");
lin far_off_A = compoundA (mkA "far - off");
lin far_reaching_A = compoundA (mkA "far - reaching");
lin far_seeing_A = compoundA (mkA "far - seeing");
lin far_sighted_A = compoundA (mkA "far - sighted");
lin faraway_A = compoundA (mkA "faraway");
lin farce_N = mkN "farce" "farces";
lin farcical_A = compoundA (mkA "farcical");
lin fare_N = mkN "fare" "fares";
lin fare_V = mkV "fare" "fares" "fared" "fared" "faring";
lin fare_stage_N = mkN "fare - stage" "fare - stages";
lin farewell_N = mkN "farewell" "farewells";
lin farinaceous_A = compoundA (mkA "farinaceous");
lin farm_N = mkN "farm" "farms";
lin farm_V = mkV "farm" "farms" "farmed" "farmed" "farming";
lin farm_V2 = mkV2 (mkV "farm" "farms" "farmed" "farmed" "farming");
lin farmer_N = mkN "farmer" "farmers";
lin farmhand_N = mkN "farmhand" "farmhands";
lin farmhouse_N = mkN "farmhouse" "farmhouses";
lin farmstead_N = mkN "farmstead" "farmsteads";
lin farmyard_N = mkN "farmyard" "farmyards";
lin farnham_PN = mkPN "Farnham";
lin farnworth_PN = mkPN "Farnworth";
lin farrago_N = mkN "farrago" "farragos";
lin farrier_N = mkN "farrier" "farriers";
lin farrow_N = mkN "farrow" "farrows";
lin farrow_V = mkV "farrow" "farrows" "farrowed" "farrowed" "farrowing";
lin farsi_N = mkN "farsi" ;
lin fart_N = mkN "fart" "farts";
lin fart_V = mkV "fart" "farts" "farted" "farted" "farting";
lin farther_Adv = mkAdv "farther";
lin farthest_Adv = mkAdv "farthest";
lin farthing_N = mkN "farthing" "farthings";
lin fascia_N = mkN "fascia" "fascias";
lin fascinate_V2 = mkV2 (mkV "fascinate" "fascinates" "fascinated" "fascinated" "fascinating");
lin fascinating_A = compoundA (mkA "fascinating");
lin fascination_N = mkN "fascination" "fascinations";
lin fascism_N = mkN "fascism" ;
lin fascist_A = compoundA (mkA "fascist");
lin fascist_N = mkN "fascist" "fascists";
lin fashion_N = mkN "fashion" "fashions";
lin fashion_V2 = mkV2 (mkV "fashion" "fashions" "fashioned" "fashioned" "fashioning");
lin fashionable_A = compoundA (mkA "fashionable");
lin fast_A = mkA "fast" "faster";
lin fast_Adv = mkAdv "fast";
lin fast_N = mkN "fast" "fasts";
lin fast_V = mkV "fast" "fasts" "fasted" "fasted" "fasting";
lin fasten_V = mkV "fasten" "fastens" "fastened" "fastened" "fastening";
lin fasten_V2 = mkV2 (mkV "fasten" "fastens" "fastened" "fastened" "fastening");
lin fastener_N = mkN "fastener" "fasteners";
lin fastening_N = mkN "fastening" "fastenings";
lin fastidious_A = compoundA (mkA "fastidious");
lin fastidiousness_N = mkN "fastidiousness" ;
lin fastness_N = mkN "fastness" "fastnesses";
lin fat_A = mkA "fat" "fatter";
lin fat_N = mkN "fat" "fats";
lin fat_V2 = mkV2 (mkV "fat" "fats" "fatted" "fatted" "fatting");
lin fatal_A = compoundA (mkA "fatal");
lin fatalism_N = mkN "fatalism" ;
lin fatalist_N = mkN "fatalist" "fatalists";
lin fatalistic_A = compoundA (mkA "fatalistic");
lin fatality_N = mkN "fatality" "fatalities";
lin fate_N = mkN "fate" "fates";
lin fate_V2 = mkV2 (mkV "fate" "fates" "fated" "fated" "fating");
lin fateful_A = compoundA (mkA "fateful");
lin fathead_N = mkN "fathead" "fatheads";
lin father_N = mkN "father" "fathers";
lin father_V2 = mkV2 (mkV "father" "fathers" "fathered" "fathered" "fathering");
lin father_in_law_N = mkN "father - in - law" "fathers - in - law";
lin fatherhood_N = mkN "fatherhood" ;
lin fatherland_N = mkN "fatherland" "fatherlands";
lin fatherless_A = compoundA (mkA "fatherless");
lin fatherly_A = compoundA (mkA "fatherly");
lin fathom_N = mkN "fathom" "fathoms";
lin fathom_V2 = mkV2 (mkV "fathom" "fathoms" "fathomed" "fathomed" "fathoming");
lin fathomless_A = compoundA (mkA "fathomless");
lin fatigue_N = mkN "fatigue" "fatigues";
lin fatigue_V2 = mkV2 (mkV "fatigue" "fatigues" "fatigued" "fatigued" "fatiguing");
lin fatigue_party_N = mkN "fatigue - party" "fatigue - parties";
lin fatless_A = compoundA (mkA "fatless");
lin fatness_N = mkN "fatness" ;
lin fatten_V = mkV "fatten" "fattens" "fattened" "fattened" "fattening";
lin fatten_V2 = mkV2 (mkV "fatten" "fattens" "fattened" "fattened" "fattening");
lin fattish_A = compoundA (mkA "fattish");
lin fatty_A = mkA "fatty" "fattier";
lin fatuity_N = mkN "fatuity" "fatuities";
lin fatuous_A = compoundA (mkA "fatuous");
lin fatuousness_N = mkN "fatuousness" ;
lin faucet_N = mkN "faucet" "faucets";
lin fauldhouse_PN = mkPN "Fauldhouse";
lin fault_N = mkN "fault" "faults";
lin fault_V2 = mkV2 (mkV "fault" "faults" "faulted" "faulted" "faulting");
lin fault_finder_N = mkN "fault - finder" "fault - finders";
lin fault_finding_N = mkN "fault - finding" ;
lin faultily_Adv = mkAdv "faultily";
lin faultless_A = compoundA (mkA "faultless");
lin faulty_A = mkA "faulty" "faultier";
lin faun_N = mkN "faun" "fauns";
lin faux_pas_N = mkN "faux pas" "faux pas";
lin faversham_PN = mkPN "Faversham";
lin favor_V = mkV "favor";
lin favor_V2 = mkV2 (mkV "favor" "favored");
lin favor_VS = mkVS (mkV "favor" "favored");
lin favour_N = mkN "favour" "favours";
lin favour_V2 = mkV2 (mkV "favour" "favours" "favoured" "favoured" "favouring");
lin favourable_A = compoundA (mkA "favourable");
lin favourite_A = compoundA (mkA "favourite");
lin favourite_N = mkN "favourite" "favourites";
lin favouritism_N = mkN "favouritism" ;
lin fawley_PN = mkPN "Fawley";
lin fawn_N = mkN "fawn" "fawns";
lin fawn_V = mkV "fawn" "fawns" "fawned" "fawned" "fawning";
lin fbi_PN = mkPN "FBI";
lin fealty_N = mkN "fealty" "fealties";
lin fear_N = mkN "fear" "fears";
lin fear_V = mkV "fear" "fears" "feared" "feared" "fearing";
lin fear_V2 = mkV2 (mkV "fear" "fears" "feared" "feared" "fearing");
lin fear_VS = mkVS (mkV "fear" "fears" "feared" "feared" "fearing");
lin fearful_A = compoundA (mkA "fearful");
lin fearfulness_N = mkN "fearfulness" ;
lin fearless_A = compoundA (mkA "fearless");
lin fearlessness_N = mkN "fearlessness" ;
lin fearsome_A = compoundA (mkA "fearsome");
lin feasibility_N = mkN "feasibility" ;
lin feasible_A = compoundA (mkA "feasible");
lin feast_N = mkN "feast" "feasts";
lin feast_V = mkV "feast" "feasts" "feasted" "feasted" "feasting";
lin feast_V2 = mkV2 (mkV "feast" "feasts" "feasted" "feasted" "feasting");
lin feast_day_N = mkN "feast - day" "feast - days";
lin feat_N = mkN "feat" "feats";
lin feather_N = mkN "feather" "feathers";
lin feather_V2 = mkV2 (mkV "feather" "feathers" "feathered" "feathered" "feathering");
lin feather_boa_N = mkN "feather - boa" "feather - boas";
lin featherbed_N = mkN "featherbed" "featherbeds";
lin featherbed_V2 = mkV2 (mkV "featherbed" "featherbeds" "featherbedded" "featherbedded" "featherbedding");
lin featherbrained_A = compoundA (mkA "featherbrained");
lin featherstone_PN = mkPN "Featherstone";
lin featherweight_N = mkN "featherweight" "featherweights";
lin feathery_A = compoundA (mkA "feathery");
lin feature_N = mkN "feature" "features";
lin feature_V2 = mkV2 (mkV "feature" "features" "featured" "featured" "featuring");
lin featureless_A = compoundA (mkA "featureless");
lin feb_PN = mkPN "Feb";
lin febrile_A = compoundA (mkA "febrile");
lin february_N = mkN "february" "februaries";
lin february_PN = mkPN "February";
lin feckless_A = compoundA (mkA "feckless");
lin fecklessness_N = mkN "fecklessness" ;
lin fecund_A = compoundA (mkA "fecund");
lin fecundity_N = mkN "fecundity" ;
lin fed_N = mkN "fed" ;
lin federal_A = compoundA (mkA "federal");
lin federalism_N = mkN "federalism" ;
lin federalist_N = mkN "federalist" "federalists";
lin federate_V = mkV "federate" "federates" "federated" "federated" "federating";
lin federate_V2 = mkV2 (mkV "federate" "federates" "federated" "federated" "federating");
lin federation_N = mkN "federation" "federations";
lin fee_N = mkN "fee" "fees";
lin fee_V2 = mkV2 (mkV "fee" "IRREG" "IRREG" "IRREG" "IRREG");
lin feeble_A = mkA "feeble" "feebler";
lin feeble_minded_A = compoundA (mkA "feeble - minded");
lin feebleness_N = mkN "feebleness" ;
lin feebly_Adv = mkAdv "feebly";
lin feed_N = mkN "feed" "feeds";
lin feed_V = IrregEng.feed_V;
lin feed_V2 = mkV2 (IrregEng.feed_V);
lin feedback_N = mkN "feedback" ;
lin feeder_N = mkN "feeder" "feeders";
lin feeding_bottle_N = mkN "feeding - bottle" "feeding - bottles";
lin feel_N = mkN "feel" "feels";
lin feel_V = IrregEng.feel_V;
lin feel_V2 = mkV2 (IrregEng.feel_V);
lin feel_VA = mkVA (IrregEng.feel_V);
lin feel_VS = mkVS (IrregEng.feel_V);
lin feeler_N = mkN "feeler" "feelers";
lin feeling_A = compoundA (mkA "feeling");
lin feeling_N = mkN "feeling" "feelings";
lin feign_V2 = mkV2 (mkV "feign" "feigns" "feigned" "feigned" "feigning");
lin feint_N = mkN "feint" "feints";
lin feint_V = mkV "feint" "feints" "feinted" "feinted" "feinting";
lin feldspar_N = mkN "feldspar" ;
lin felicitate_V2 = mkV2 (mkV "felicitate" "felicitates" "felicitated" "felicitated" "felicitating");
lin felicitation_N = mkN "felicitation" "felicitations";
lin felicitous_A = compoundA (mkA "felicitous");
lin felicity_N = mkN "felicity" "felicities";
lin felicity_PN = mkPN "Felicity";
lin feline_A = compoundA (mkA "feline");
lin felix_PN = mkPN "Felix";
lin felixstowe_PN = mkPN "Felixstowe";
lin fell_A = compoundA (mkA "fell");
lin fell_V2 = mkV2 (mkV "fell" "fells" "felled" "felled" "felling");
lin fell_V2V = mkV2V (mkV "fell") noPrep to_Prep ;
lin fell_VA = mkVA (mkV "fell");
lin fell_VS = mkVS (mkV "fell");
lin fellah_N = mkN "fellah" (variants {"fellahin"; "fellaheen"});
lin fellow_N = mkN "fellow" "fellows";
lin fellow_feeling_N = mkN "fellow - feeling" ;
lin fellow_traveller_N = mkN "fellow - traveller" "fellow - travellers";
lin fellowship_N = mkN "fellowship" "fellowships";
lin felon_N = mkN "felon" "felons";
lin felonious_A = compoundA (mkA "felonious");
lin felony_N = mkN "felony" "felonies";
lin felspar_N = mkN "felspar" ;
lin felt_N = mkN "felt" ;
lin felucca_N = mkN "felucca" "feluccas";
lin fem_PN = mkPN "Fem";
lin female_A = compoundA (mkA "female");
lin female_N = mkN "female" "females";
lin feminine_A = compoundA (mkA "feminine");
lin femininity_N = mkN "femininity" ;
lin feminism_N = mkN "feminism" ;
lin feminist_N = mkN "feminist" "feminists";
lin femur_N = mkN "femur" "femurs";
lin fen_N = mkN "fen" "fens";
lin fence_N = mkN "fence" "fences";
lin fence_V2 = mkV2 (mkV "fence" "fences" "fenced" "fenced" "fencing");
lin fencer_N = mkN "fencer" "fencers";
lin fencing_N = mkN "fencing" ;
lin fend_V = mkV "fend" "fends" "fended" "fended" "fending";
lin fend_V2 = mkV2 (mkV "fend" "fends" "fended" "fended" "fending");
lin fender_N = mkN "fender" "fenders";
lin fennel_N = mkN "fennel" ;
lin feoff_N = mkN "feoff" "feoffs";
lin feral_A = compoundA (mkA "feral");
lin fermanagh_PN = mkPN "Fermanagh";
lin ferment_N = mkN "ferment" "ferments";
lin ferment_V = mkV "ferment" "ferments" "fermented" "fermented" "fermenting";
lin ferment_V2 = mkV2 (mkV "ferment" "ferments" "fermented" "fermented" "fermenting");
lin fermentation_N = mkN "fermentation" ;
lin fern_N = mkN "fern" "ferns";
lin ferny_A = mkA "ferny" "fernier";
lin ferocious_A = compoundA (mkA "ferocious");
lin ferocity_N = mkN "ferocity" "ferocities";
lin ferrara_PN = mkPN "Ferrara";
lin ferret_N = mkN "ferret" "ferrets";
lin ferret_V = mkV "ferret" "ferrets" "ferreted" "ferreted" "ferreting";
lin ferret_V2 = mkV2 (mkV "ferret" "ferrets" "ferreted" "ferreted" "ferreting");
lin ferroconcrete_N = mkN "ferroconcrete" ;
lin ferrous_A = compoundA (mkA "ferrous");
lin ferrule_N = mkN "ferrule" "ferrules";
lin ferry_N = mkN "ferry" "ferries";
lin ferry_V = mkV "ferry" "ferries" "ferried" "ferried" "ferrying";
lin ferry_V2 = mkV2 (mkV "ferry" "ferries" "ferried" "ferried" "ferrying");
lin ferryboat_N = mkN "ferryboat" "ferryboats";
lin ferryhill_PN = mkPN "Ferryhill";
lin ferryman_N = mkN "ferryman" "ferrymen" {- FIXME: guessed plural form -};
lin fertile_A = compoundA (mkA "fertile");
lin fertility_N = mkN "fertility" ;
lin fertilization_N = mkN "fertilization" ;
lin fertilize_V2 = mkV2 (mkV "fertilize" "fertilizes" "fertilized" "fertilized" "fertilizing");
lin fertilizer_N = mkN "fertilizer" "fertilizers";
lin ferule_N = mkN "ferule" "ferules";
lin fervency_N = mkN "fervency" ;
lin fervent_A = compoundA (mkA "fervent");
lin fervid_A = compoundA (mkA "fervid");
lin fervour_N = mkN "fervour" ;
lin festal_A = compoundA (mkA "festal");
lin fester_V = mkV "fester" "festers" "festered" "festered" "festering";
lin festival_N = mkN "festival" "festivals";
lin festive_A = compoundA (mkA "festive");
lin festivity_N = mkN "festivity" "festivities";
lin festoon_N = mkN "festoon" "festoons";
lin festoon_V2 = mkV2 (mkV "festoon" "festoons" "festooned" "festooned" "festooning");
lin fetal_A = compoundA (mkA "fetal");
lin fetch_V = mkV "fetch" "fetches" "fetched" "fetched" "fetching";
lin fetch_V2 = mkV2 (mkV "fetch" "fetches" "fetched" "fetched" "fetching");
lin fetching_A = compoundA (mkA "fetching");
lin fete_N = mkN "fête" "fêtes";
lin fete_V2 = mkV2 (mkV "fête" "fêtes" "fêted" "fêted" "fêting");
lin fete_day_N = mkN "fete - day" "fete - days";
lin fetid_A = compoundA (mkA "fetid");
lin fetish_N = mkN "fetish" "fetishes";
lin fetlock_N = mkN "fetlock" "fetlocks";
lin fetter_N = mkN "fetter" "fetters";
lin fetter_V2 = mkV2 (mkV "fetter" "fetters" "fettered" "fettered" "fettering");
lin fettle_N = mkN "fettle" ;
lin feud_N = mkN "feud" "feuds";
lin feudal_A = compoundA (mkA "feudal");
lin feudalism_N = mkN "feudalism" ;
lin feudatory_A = compoundA (mkA "feudatory");
lin feudatory_N = mkN "feudatory" "feudatories";
lin feude_V = mkV "feude";
lin fever_N = mkN "fever" "fevers";
lin fevered_A = compoundA (mkA "fevered");
lin feverish_A = compoundA (mkA "feverish");
lin few_Num = {s = table {Nom => "few"; Gen => "few's"}; n = Pl; hasCard = True} ;
lin fewness_N = mkN "fewness" ;
lin fey_A = compoundA (mkA "fey");
lin fez_N = mkN "fez" "fezes";
lin fiance_N = mkN "fiancé" "fiancés";
lin fiancee_N = mkN "fiancée" "fiancées";
lin fiasco_N = mkN "fiasco" "fiascos";
lin fiat_N = mkN "fiat" "fiats";
lin fib_N = mkN "fib" "fibs";
lin fib_V = mkV "fib" "fibs" "fibbed" "fibbed" "fibbing";
lin fibber_N = mkN "fibber" "fibbers";
lin fibbing_N = mkN "fibbing" ;
lin fibre_N = mkN "fibre" "fibres";
lin fibreboard_N = mkN "fibreboard" ;
lin fibreglass_N = mkN "fibreglass" ;
lin fibrositis_N = mkN "fibrositis" ;
lin fibrous_A = compoundA (mkA "fibrous");
lin fibula_N = mkN "fibula" "fibulas";
lin fickle_A = compoundA (mkA "fickle");
lin fickleness_N = mkN "fickleness" ;
lin fiction_N = mkN "fiction" "fictions";
lin fictional_A = compoundA (mkA "fictional");
lin fictitious_A = compoundA (mkA "fictitious");
lin fiddle_N = mkN "fiddle" "fiddles";
lin fiddle_V2 = mkV2 (mkV "fiddle" "fiddles" "fiddled" "fiddled" "fiddling");
lin fiddler_N = mkN "fiddler" "fiddlers";
lin fiddlestick_N = mkN "fiddlestick" "fiddlesticks";
lin fiddling_A = compoundA (mkA "fiddling");
lin fidelity_N = mkN "fidelity" ;
lin fidget_N = mkN "fidget" "fidgets";
lin fidget_V = mkV "fidget" "fidgets" "fidgeted" "fidgeted" "fidgeting";
lin fidget_V2 = mkV2 (mkV "fidget" "fidgets" "fidgeted" "fidgeted" "fidgeting");
lin fidgety_A = compoundA (mkA "fidgety");
lin fief_N = mkN "fief" "fiefs";
lin field_N = mkN "field" "fields";
lin field_V = mkV "field" "fields" "fielded" "fielded" "fielding";
lin field_V2 = mkV2 (mkV "field" "fields" "fielded" "fielded" "fielding");
lin field_hospital_N = mkN "field - hospital" "field - hospitals";
lin field_officer_N = mkN "field - officer" "field - officers";
lin fielder_N = mkN "fielder" "fielders";
lin fieldsman_N = mkN "fieldsman" "fieldsmen" {- FIXME: guessed plural form -};
lin fieldwork_N = mkN "fieldwork" "fieldworks";
lin fiend_N = mkN "fiend" "fiends";
lin fiendish_A = compoundA (mkA "fiendish");
lin fierce_A = mkA "fierce" "fiercer";
lin fierceness_N = mkN "fierceness" ;
lin fieriness_N = mkN "fieriness" ;
lin fiery_A = compoundA (mkA "fiery");
lin fiesta_N = mkN "fiesta" "fiestas";
lin fife_N = mkN "fife" "fifes";
lin fife_PN = mkPN "Fife";
lin fig_N = mkN "fig" "figs";
lin fig_leaf_N = mkN "fig - leaf" "fig - leaves";
lin fight_N = mkN "fight" "fights";
lin fight_V = IrregEng.fight_V;
lin fight_V2 = mkV2 (IrregEng.fight_V);
lin fight_V2V = mkV2V (IrregEng.fight_V) noPrep to_Prep ;
lin fighter_N = mkN "fighter" "fighters";
lin fighting_N = mkN "fighting" ;
lin figment_N = mkN "figment" "figments";
lin figurative_A = compoundA (mkA "figurative");
lin figure_N = mkN "figure" "figures";
lin figure_V = mkV "figure" "figures" "figured" "figured" "figuring";
lin figure_V2 = mkV2 (mkV "figure" "figures" "figured" "figured" "figuring");
lin figure_V2V = mkV2V (mkV "figure" "figures" "figured" "figured" "figuring") noPrep to_Prep ;
lin figure_VS = mkVS (mkV "figure" "figures" "figured" "figured" "figuring");
lin figured_A = compoundA (mkA "figured");
lin figurehead_N = mkN "figurehead" "figureheads";
lin fiji_PN = mkPN "Fiji";
lin fijian_A = compoundA (mkA "fijian");
lin fijian_N = mkN "fijian" "fijians";
lin filament_N = mkN "filament" "filaments";
lin filature_N = mkN "filature" "filatures";
lin filbert_N = mkN "filbert" "filberts";
lin filch_V2 = mkV2 (mkV "filch" "filches" "filched" "filched" "filching");
lin file_N = mkN "file" "files";
lin file_V = mkV "file" "files" "filed" "filed" "filing";
lin file_V2 = mkV2 (mkV "file" "files" "filed" "filed" "filing");
lin filial_A = compoundA (mkA "filial");
lin filibuster_N = mkN "filibuster" "filibusters";
lin filibuster_V = mkV "filibuster" "filibusters" "filibustered" "filibustered" "filibustering";
lin filigree_N = mkN "filigree" ;
lin filipino_A = compoundA (mkA "filipino");
lin filipino_N = mkN "filipino" "filipinos";
lin fill_N = mkN "fill" "fills";
lin fill_V = mkV "fill" "fills" "filled" "filled" "filling";
lin fill_V2 = mkV2 (mkV "fill" "fills" "filled" "filled" "filling");
lin fillet_N = mkN "fillet" "fillets";
lin fillet_V2 = mkV2 (mkV "fillet" "fillets" "filleted" "filleted" "filleting");
lin filling_N = mkN "filling" "fillings";
lin fillip_N = mkN "fillip" "fillips";
lin filly_N = mkN "filly" "fillies";
lin film_N = mkN "film" "films";
lin film_V = mkV "film" "films" "filmed" "filmed" "filming";
lin film_V2 = mkV2 (mkV "film" "films" "filmed" "filmed" "filming");
lin film_star_N = mkN "film - star" "film - stars";
lin filmable_A = compoundA (mkA "filmable");
lin filmy_A = mkA "filmy" "filmier";
lin filter_N = mkN "filter" "filters";
lin filter_V = mkV "filter" "filters" "filtered" "filtered" "filtering";
lin filter_V2 = mkV2 (mkV "filter" "filters" "filtered" "filtered" "filtering");
lin filtertipped_A = compoundA (mkA "filtertipped");
lin filth_N = mkN "filth" ;
lin filthily_Adv = mkAdv "filthily";
lin filthiness_N = mkN "filthiness" ;
lin filthy_A = mkA "filthy" "filthier";
lin filtrate_N = mkN "filtrate" "filtrates";
lin filtrate_V = mkV "filtrate" "filtrates" "filtrated" "filtrated" "filtrating";
lin filtrate_V2 = mkV2 (mkV "filtrate" "filtrates" "filtrated" "filtrated" "filtrating");
lin filtration_N = mkN "filtration" ;
lin fin_N = mkN "fin" "fins";
lin finable_A = compoundA (mkA "finable");
lin finagle_V2 = mkV2 (mkV "finagle");
lin final_A = compoundA (mkA "final");
lin final_N = mkN "final" "finals";
lin finale_N = mkN "finale" "finales";
lin finalist_N = mkN "finalist" "finalists";
lin finality_N = mkN "finality" ;
lin finalize_V2 = mkV2 (mkV "finalize" "finalizes" "finalized" "finalized" "finalizing");
lin finance_N = mkN "finance" "finances";
lin finance_V2 = mkV2 (mkV "finance" "finances" "financed" "financed" "financing");
lin financial_A = compoundA (mkA "financial");
lin financier_N = mkN "financier" "financiers";
lin finch_N = mkN "finch" "finches";
lin find_N = mkN "find" "finds";
lin find_V = IrregEng.find_V;
lin find_V2 = mkV2 (IrregEng.find_V);
lin find_V2V = mkV2V (IrregEng.find_V) noPrep to_Prep ;
lin find_VS = mkVS (IrregEng.find_V);
lin finder_N = mkN "finder" "finders";
lin finding_N = mkN "finding" "findings";
lin fine_A = mkA "fine" "finer";
lin fine_Adv = mkAdv "fine";
lin fine_N = mkN "fine" "fines";
lin fine_V2 = mkV2 (mkV "fine" "fines" "fined" "fined" "fining");
lin fine_tooth_A = compoundA (mkA "fine - tooth");
lin fineable_A = compoundA (mkA "fineable");
lin fineness_N = mkN "fineness" ;
lin finery_N = mkN "finery" ;
lin finesse_N = mkN "finesse" "finesses";
lin finesse_V2 = mkV2 (mkV "finesse");
lin finger_N = mkN "finger" "fingers";
lin finger_V2 = mkV2 (mkV "finger" "fingers" "fingered" "fingered" "fingering");
lin finger_alphabet_N = mkN "finger - alphabet" "finger - alphabets";
lin finger_bowl_N = mkN "finger - bowl" "finger - bowls";
lin finger_plate_N = mkN "finger - plate" "finger - plates";
lin finger_post_N = mkN "finger - post" "finger - posts";
lin fingerboard_N = mkN "fingerboard" "fingerboards";
lin fingermark_N = mkN "fingermark" "fingermarks";
lin fingernail_N = mkN "fingernail" "fingernails";
lin fingerprint_N = mkN "fingerprint" "fingerprints";
lin fingerstall_N = mkN "fingerstall" "fingerstalls";
lin fingertip_N = mkN "fingertip" "fingertips";
lin finical_A = compoundA (mkA "finical");
lin finicky_A = compoundA (mkA "finicky");
lin finis_N = mkN "finis" "fines" {- FIXME: guessed plural form -};
lin finish_N = mkN "finish" "finishes";
lin finish_V = mkV "finish" "finishes" "finished" "finished" "finishing";
lin finish_V2 = mkV2 (mkV "finish" "finishes" "finished" "finished" "finishing");
lin finish_VA = mkVA (mkV "finish" "finishes" "finished" "finished" "finishing");
lin finish_VS = mkVS (mkV "finish" "finishes" "finished" "finished" "finishing");
lin finite_A = compoundA (mkA "finite");
lin finland_PN = mkPN "Finland";
lin finn_N = mkN "finn" "finns";
lin finnan_N = mkN "finnan" ;
lin finnan_haddie_N = mkN "finnan haddie" ;
lin finnan_haddock_N = mkN "finnan haddock" ;
lin finnish_A = compoundA (mkA "Finnish");
lin finnish_N = mkN "Finnish" ;
lin fiona_PN = mkPN "Fiona";
lin fiord_N = mkN "fiord" "fiords";
lin fir_N = mkN "fir" "firs";
lin fir_cone_N = mkN "fir - cone" "fir - cones";
lin fire_N = mkN "fire" "fires";
lin fire_V = mkV "fire" "fires" "fired" "fired" "firing";
lin fire_V2 = mkV2 (mkV "fire" "fires" "fired" "fired" "firing");
lin fire_alarm_N = mkN "fire - alarm" "fire - alarms";
lin fire_brigade_N = mkN "fire - brigade" "fire - brigades";
lin fire_control_N = mkN "fire - control" ;
lin fire_eater_N = mkN "fire - eater" "fire - eaters";
lin fire_engine_N = mkN "fire - engine" "fire - engines";
lin fire_escape_N = mkN "fire - escape" "fire - escapes";
lin fire_extinguisher_N = mkN "fire - extinguisher" "fire - extinguishers";
lin fire_fighter_N = mkN "fire - fighter" "fire - fighters";
lin fire_hose_N = mkN "fire - hose" "fire - hoses";
lin fire_power_N = mkN "fire - power" ;
lin fire_raising_N = mkN "fire - raising" ;
lin fire_walker_N = mkN "fire - walker" "fire - walkers";
lin fire_walking_N = mkN "fire - walking" ;
lin fire_watcher_N = mkN "fire - watcher" "fire - watchers";
lin fire_watching_N = mkN "fire - watching" ;
lin firearm_N = mkN "firearm" "firearms";
lin fireball_N = mkN "fireball" "fireballs";
lin firebird_N = mkN "firebird" "firebirds";
lin firebomb_N = mkN "firebomb" "firebombs";
lin firebox_N = mkN "firebox" "fireboxes";
lin firebrand_N = mkN "firebrand" "firebrands";
lin firebreak_N = mkN "firebreak" "firebreaks";
lin firebrick_N = mkN "firebrick" "firebricks";
lin firebug_N = mkN "firebug" "firebugs";
lin fireclay_N = mkN "fireclay" ;
lin firecracker_N = mkN "firecracker" "firecrackers";
lin firedamp_N = mkN "firedamp" ;
lin firedog_N = mkN "firedog" "firedogs";
lin firefly_N = mkN "firefly" "fireflies";
lin fireguard_N = mkN "fireguard" "fireguards";
lin firelight_N = mkN "firelight" "firelights";
lin firelighter_N = mkN "firelighter" "firelighters";
lin fireman_N = mkN "fireman" "firemen" {- FIXME: guessed plural form -};
lin firenze_PN = mkPN "Firenze";
lin fireplace_N = mkN "fireplace" "fireplaces";
lin fireproof_A = compoundA (mkA "fireproof");
lin fireside_N = mkN "fireside" "firesides";
lin firestone_N = mkN "firestone" ;
lin firewater_N = mkN "firewater" ;
lin firewood_N = mkN "firewood" ;
lin firework_N = mkN "firework" "fireworks";
lin firing_line_N = mkN "firing - line" "firing - lines";
lin firing_party_N = mkN "firing - party" "firing - parties";
lin firing_squad_N = mkN "firing - squad" "firing - squads";
lin firkin_N = mkN "firkin" "firkins";
lin firm_A = mkA "firm" "firmer";
lin firm_Adv = mkAdv "firm";
lin firm_N = mkN "firm" "firms";
lin firm_V = mkV "firm" "firms" "firmed" "firmed" "firming";
lin firm_V2 = mkV2 (mkV "firm" "firms" "firmed" "firmed" "firming");
lin firmament_N = mkN "firmament" "firmaments";
lin firmness_N = mkN "firmness" ;
lin first_class_A = compoundA (mkA "first - class");
lin first_class_Adv = mkAdv "first - class";
lin first_hand_A = compoundA (mkA "first - hand");
lin first_hand_Adv = mkAdv "first - hand";
lin first_nighter_N = mkN "first - nighter" "first - nighters";
lin first_rate_A = compoundA (mkA "first - rate");
lin first_rate_Adv = mkAdv "first - rate";
lin firstborn_A = compoundA (mkA "firstborn");
lin firstborn_N = mkN "firstborn" "firstborns";
lin firth_N = mkN "firth" "firths";
lin fiscal_A = compoundA (mkA "fiscal");
lin fish_N = mkN "fish" "fish";
lin fish_V = mkV "fish" "fishes" "fished" "fished" "fishing";
lin fish_V2 = mkV2 (mkV "fish" "fishes" "fished" "fished" "fishing");
lin fish_hook_N = mkN "fish - hook" "fish - hooks";
lin fish_knife_N = mkN "fish - knife" "fish - knives";
lin fish_slice_N = mkN "fish - slice" "fish - slices";
lin fishball_N = mkN "fishball" "fishballs";
lin fishbone_N = mkN "fishbone" "fishbones";
lin fishcake_N = mkN "fishcake" "fishcakes";
lin fisher_N = mkN "fisher" "fishers";
lin fisherman_N = mkN "fisherman" "fishermen";
lin fishery_N = mkN "fishery" "fisheries";
lin fishing_N = mkN "fishing" ;
lin fishing_line_N = mkN "fishing - line" "fishing - lines";
lin fishing_rod_N = mkN "fishing - rod" "fishing - rods";
lin fishing_tackle_N = mkN "fishing - tackle" ;
lin fishmonger_N = mkN "fishmonger" "fishmongers";
lin fishpaste_N = mkN "fishpaste" "fishpastes";
lin fishplate_N = mkN "fishplate" "fishplates";
lin fishwife_N = mkN "fishwife" "fishwives" {- FIXME: guessed plural form -};
lin fishy_A = mkA "fishy" "fishier";
lin fissile_A = compoundA (mkA "fissile");
lin fission_N = mkN "fission" ;
lin fissionable_A = compoundA (mkA "fissionable");
lin fissiparous_A = compoundA (mkA "fissiparous");
lin fissure_N = mkN "fissure" "fissures";
lin fist_N = mkN "fist" "fists";
lin fistula_N = mkN "fistula" "fistulas";
lin fit_A = mkA "fit" "fitter*";
lin fit_N = mkN "fit" "fits";
lin fit_V = mkV "fit" "fits" "fitted" "fitted" "fitting";
lin fit_V2 = mkV2 (mkV "fit" "fits" "fitted" "fitted" "fitting");
lin fitful_A = compoundA (mkA "fitful");
lin fitment_N = mkN "fitment" "fitments";
lin fitness_N = mkN "fitness" ;
lin fitter_N = mkN "fitter" "fitters";
lin fitting_A = compoundA (mkA "fitting");
lin fitting_N = mkN "fitting" "fittings";
lin fivefold_A = compoundA (mkA "fivefold");
lin fivepence_N = mkN "fivepence" "fivepences";
lin fivepenny_A = compoundA (mkA "fivepenny");
lin fiver_N = mkN "fiver" "fivers";
lin fives_N = mkN "fives" "fives";
lin fix_N = mkN "fix" "fixes";
lin fix_V = mkV "fix" "fixes" "fixed" "fixed" "fixing";
lin fix_V2 = mkV2 (mkV "fix" "fixes" "fixed" "fixed" "fixing");
lin fixate_V2 = mkV2 (mkV "fixate" "fixates" "fixated" "fixated" "fixating");
lin fixation_N = mkN "fixation" "fixations";
lin fixative_N = mkN "fixative" "fixatives";
lin fixed_A = compoundA (mkA "fixed");
lin fixture_N = mkN "fixture" "fixtures";
lin fizz_N = mkN "fizz" ;
lin fizz_V = mkV "fizz" "fizzes" "fizzed" "fizzed" "fizzing";
lin fizzle_V = mkV "fizzle" "fizzles" "fizzled" "fizzled" "fizzling";
lin fizzy_A = mkA "fizzy" "fizzier";
lin fjord_N = mkN "fjord" "fjords";
lin flabbergast_V2 = mkV2 (mkV "flabbergast" "flabbergasts" "flabbergasted" "flabbergasted" "flabbergasting");
lin flabbily_Adv = mkAdv "flabbily";
lin flabbiness_N = mkN "flabbiness" ;
lin flabby_A = mkA "flabby" "flabbier";
lin flaccid_A = compoundA (mkA "flaccid");
lin flaccidity_N = mkN "flaccidity" ;
lin flag_N = mkN "flag" "flags";
lin flag_V = mkV "flag" "flags" "flagged" "flagged" "flagging";
lin flag_V2 = mkV2 (mkV "flag" "flags" "flagged" "flagged" "flagging");
lin flag_captain_N = mkN "flag - captain" "flag - captains";
lin flag_day_N = mkN "flag - day" "flag - days";
lin flagellant_N = mkN "flagellant" "flagellants";
lin flagellate_V2 = mkV2 (mkV "flagellate" "flagellates" "flagellated" "flagellated" "flagellating");
lin flagellation_N = mkN "flagellation" "flagellations";
lin flageolet_N = mkN "flageolet" "flageolets";
lin flagon_N = mkN "flagon" "flagons";
lin flagpole_N = mkN "flagpole" "flagpoles";
lin flagrant_A = compoundA (mkA "flagrant");
lin flagship_N = mkN "flagship" "flagships";
lin flagstaff_N = mkN "flagstaff" "flagstaffs";
lin flagstone_N = mkN "flagstone" "flagstones";
lin flail_N = mkN "flail" "flails";
lin flail_V2 = mkV2 (mkV "flail" "flails" "flailed" "flailed" "flailing");
lin flair_N = mkN "flair" "flairs";
lin flak_N = mkN "flak" ;
lin flake_N = mkN "flake" "flakes";
lin flake_V = mkV "flake" "flakes" "flaked" "flaked" "flaking";
lin flakiness_N = mkN "flakiness" ;
lin flaky_A = mkA "flaky" "flakier";
lin flambeau_N = mkN "flambeau" "flambeaus";
lin flamboyance_N = mkN "flamboyance" ;
lin flamboyant_A = compoundA (mkA "flamboyant");
lin flame_N = mkN "flame" "flames";
lin flame_V = mkV "flame" "flames" "flamed" "flamed" "flaming";
lin flamethrower_N = mkN "flamethrower" "flamethrowers";
lin flaming_A = compoundA (mkA "flaming");
lin flamingo_N = mkN "flamingo" "flamingos";
lin flammable_A = compoundA (mkA "flammable");
lin flan_N = mkN "flan" "flans";
lin flange_N = mkN "flange" "flanges";
lin flank_N = mkN "flank" "flanks";
lin flank_V = mkV "flank";
lin flank_V2 = mkV2 (mkV "flank" "flanks" "flanked" "flanked" "flanking");
lin flannel_N = mkN "flannel" "flannels";
lin flannelette_N = mkN "flannelette" ;
lin flap_N = mkN "flap" "flaps";
lin flap_V = mkV "flap" "flaps" "flapped" "flapped" "flapping";
lin flap_V2 = mkV2 (mkV "flap" "flaps" "flapped" "flapped" "flapping");
lin flapjack_N = mkN "flapjack" "flapjacks";
lin flapper_N = mkN "flapper" "flappers";
lin flare_N = mkN "flare" "flares";
lin flare_V = mkV "flare" "flares" "flared" "flared" "flaring";
lin flare_V2 = mkV2 (mkV "flare" "flares" "flared" "flared" "flaring");
lin flare_path_N = mkN "flare - path" "flare - paths";
lin flare_up_N = mkN "flare - up" "flare - ups";
lin flash_N = mkN "flash" "flashes";
lin flash_V = mkV "flash" "flashes" "flashed" "flashed" "flashing";
lin flash_V2 = mkV2 (mkV "flash" "flashes" "flashed" "flashed" "flashing");
lin flashback_N = mkN "flashback" "flashbacks";
lin flashbulb_N = mkN "flashbulb" "flashbulbs";
lin flashgun_N = mkN "flashgun" "flashguns";
lin flashily_Adv = mkAdv "flashily";
lin flashlight_N = mkN "flashlight" "flashlights";
lin flashpoint_N = mkN "flashpoint" "flashpoints";
lin flashy_A = mkA "flashy" "flashier";
lin flask_N = mkN "flask" "flasks";
lin flat_A = mkA "flat" "flatter*";
lin flat_Adv = mkAdv "flat";
lin flat_N = mkN "flat" "flats";
lin flat_bottomed_A = compoundA (mkA "flat - bottomed");
lin flat_car_N = mkN "flat - car" "flat - cars";
lin flat_footed_A = compoundA (mkA "flat - footed");
lin flat_iron_N = mkN "flat - iron" "flat - irons";
lin flatfish_N = mkN "flatfish" "flatfish";
lin flatlet_N = mkN "flatlet" "flatlets";
lin flatness_N = mkN "flatness" ;
lin flatten_V = mkV "flatten" "flattens" "flattened" "flattened" "flattening";
lin flatten_V2 = mkV2 (mkV "flatten" "flattens" "flattened" "flattened" "flattening");
lin flatter_V2 = mkV2 (mkV "flatter" "flatters" "flattered" "flattered" "flattering");
lin flatterer_N = mkN "flatterer" "flatterers";
lin flattery_N = mkN "flattery" "flatteries";
lin flattop_N = mkN "flattop" "flattops";
lin flatulence_N = mkN "flatulence" ;
lin flaunt_V = mkV "flaunt" "flaunts" "flaunted" "flaunted" "flaunting";
lin flaunt_V2 = mkV2 (mkV "flaunt" "flaunts" "flaunted" "flaunted" "flaunting");
lin flautist_N = mkN "flautist" "flautists";
lin flavour_N = mkN "flavour" "flavours";
lin flavour_V2 = mkV2 (mkV "flavour" "flavours" "flavoured" "flavoured" "flavouring");
lin flavouring_N = mkN "flavouring" "flavourings";
lin flavourless_A = compoundA (mkA "flavourless");
lin flaw_N = mkN "flaw" "flaws";
lin flaw_V2 = mkV2 (mkV "flaw");
lin flawed_A = compoundA (mkA "flawed");
lin flawless_A = compoundA (mkA "flawless");
lin flax_N = mkN "flax" ;
lin flaxen_A = compoundA (mkA "flaxen");
lin flay_V2 = mkV2 (mkV "flay" "flays" "flayed" "flayed" "flaying");
lin flea_N = mkN "flea" "fleas";
lin flea_bite_N = mkN "flea - bite" "flea - bites";
lin flea_bitten_A = compoundA (mkA "flea - bitten");
lin fleapit_N = mkN "fleapit" "fleapits";
lin fleck_N = mkN "fleck" "flecks";
lin fleck_V2 = mkV2 (mkV "fleck" "flecks" "flecked" "flecked" "flecking");
lin fledged_A = compoundA (mkA "fledged");
lin fledgeling_N = mkN "fledgeling" "fledgelings";
lin fledgling_N = mkN "fledgling" "fledglings";
lin flee_V = IrregEng.flee_V;
lin flee_V2 = mkV2 (IrregEng.flee_V);
lin fleece_N = mkN "fleece" "fleeces";
lin fleece_V2 = mkV2 (mkV "fleece" "fleeces" "fleeced" "fleeced" "fleecing");
lin fleecy_A = mkA "fleecy" "fleecier";
lin fleet_A = mkA "fleet" "fleeter";
lin fleet_N = mkN "fleet" "fleets";
lin fleet_PN = mkPN "Fleet";
lin fleet_street_PN = mkPN "Fleet street";
lin fleeting_A = compoundA (mkA "fleeting");
lin fleetness_N = mkN "fleetness" ;
lin fleetwood_PN = mkPN "Fleetwood";
lin flemish_A = compoundA (mkA "flemish");
lin flemish_N = mkN "flemish" ;
lin flesh_N = mkN "flesh" ;
lin flesh_wound_N = mkN "flesh - wound" "flesh - wounds";
lin fleshly_A = compoundA (mkA "fleshly");
lin fleshy_A = mkA "fleshy" "fleshier";
lin fleur_de_lis_N = mkN (variants {"fleur - de - lis"; "fleur - de - lys"}) "fleur - de - les";
lin flex_N = mkN "flex" "flexes";
lin flex_V2 = mkV2 (mkV "flex" "flexes" "flexed" "flexed" "flexing");
lin flexibility_N = mkN "flexibility" ;
lin flexible_A = compoundA (mkA "flexible");
lin flibbertigibbet_N = mkN "flibbertigibbet" "flibbertigibbets";
lin flick_N = mkN "flick" "flicks";
lin flick_V2 = mkV2 (mkV "flick" "flicks" "flicked" "flicked" "flicking");
lin flick_knife_N = mkN "flick - knife" "flick - knives";
lin flicker_N = mkN "flicker" "flickers";
lin flicker_V = mkV "flicker" "flickers" "flickered" "flickered" "flickering";
lin flier_N = mkN "flier" "fliers";
lin flight_N = mkN "flight" "flights";
lin flight_V2 = mkV2 (mkV "flight" "flights" "flighted" "flighted" "flighting");
lin flightless_A = compoundA (mkA "flightless");
lin flighty_A = compoundA (mkA "flighty");
lin flimsily_Adv = mkAdv "flimsily";
lin flimsiness_N = mkN "flimsiness" ;
lin flimsy_A = mkA "flimsy" "flimsier";
lin flimsy_N = mkN "flimsy" ;
lin flinch_V = mkV "flinch" "flinches" "flinched" "flinched" "flinching";
lin fling_N = mkN "fling" "flings";
lin fling_V = IrregEng.fling_V;
lin fling_V2 = mkV2 (IrregEng.fling_V);
lin flint_N = mkN "flint" "flints";
lin flint_PN = mkPN "Flint";
lin flintstone_N = mkN "flintstone" ;
lin flinty_A = mkA "flinty" "flintier";
lin flip_A = compoundA (mkA "flip");
lin flip_N = mkN "flip" "flips";
lin flip_V = mkV "flip" "flips" "flipped" "flipped" "flipping";
lin flip_V2 = mkV2 (mkV "flip" "flips" "flipped" "flipped" "flipping");
lin flippancy_N = mkN "flippancy" "flippancies";
lin flippant_A = compoundA (mkA "flippant");
lin flipper_N = mkN "flipper" "flippers";
lin flirt_N = mkN "flirt" "flirts";
lin flirt_V = mkV "flirt" "flirts" "flirted" "flirted" "flirting";
lin flirtation_N = mkN "flirtation" "flirtations";
lin flirtatious_A = compoundA (mkA "flirtatious");
lin flit_N = mkN "flit" "flits";
lin flit_V = mkV "flit" "flits" "flitted" "flitted" "flitting";
lin float_N = mkN "float" "floats";
lin float_V = mkV "float" "floats" "floated" "floated" "floating";
lin float_V2 = mkV2 (mkV "float" "floats" "floated" "floated" "floating");
lin float_VS = mkVS (mkV "float" "floats" "floated" "floated" "floating");
lin floatation_N = mkN "floatation" "floatations";
lin floating_A = compoundA (mkA "floating");
lin flock_N = mkN "flock" "flocks";
lin flock_V = mkV "flock" "flocks" "flocked" "flocked" "flocking";
lin flock_V2V = mkV2V (mkV "flock" "flocks" "flocked" "flocked" "flocking") noPrep to_Prep ;
lin floe_N = mkN "floe" "floes";
lin flog_V2 = mkV2 (mkV "flog" "flogs" "flogged" "flogged" "flogging");
lin flogging_N = mkN "flogging" "floggings";
lin flood_N = mkN "flood" "floods";
lin flood_V = mkV "flood" "floods" "flooded" "flooded" "flooding";
lin flood_V2 = mkV2 (mkV "flood" "floods" "flooded" "flooded" "flooding");
lin flood_tide_N = mkN "flood - tide" "flood - tides";
lin floodgate_N = mkN "floodgate" "floodgates";
lin floodlight_V2 = mkV2 (mkV "floodlight" "floodlights" "floodlighted" "floodlighted" "floodlighting");
lin floor_N = mkN "floor" "floors";
lin floor_V2 = mkV2 (mkV "floor" "floors" "floored" "floored" "flooring");
lin floor_walker_N = mkN "floor - walker" "floor - walkers";
lin floorboard_N = mkN "floorboard" "floorboards";
lin flooring_N = mkN "flooring" ;
lin floozie_N = mkN "floozie" "floozies";
lin floozy_N = mkN "floozy" "floozies";
lin flop_Adv = mkAdv "flop";
lin flop_N = mkN "flop" "flops";
lin flop_V = mkV "flop" "flops" "flopped" "flopped" "flopping";
lin flop_V2 = mkV2 (mkV "flop" "flops" "flopped" "flopped" "flopping");
lin floppy_A = mkA "floppy" "floppier";
lin flora_PN = mkPN "Flora";
lin floral_A = compoundA (mkA "floral");
lin florence_PN = mkPN "Florence";
lin floriculture_N = mkN "floriculture" ;
lin florid_A = compoundA (mkA "florid");
lin florida_PN = mkPN "Florida";
lin florin_N = mkN "florin" "florins";
lin florist_N = mkN "florist" "florists";
lin florrie_PN = mkPN "Florrie";
lin floss_N = mkN "floss" ;
lin flotation_N = mkN "flotation" "flotations";
lin flotilla_N = mkN "flotilla" "flotillas";
lin flotsam_N = mkN "flotsam" ;
lin flounce_N = mkN "flounce" "flounces";
lin flounce_V = mkV "flounce" "flounces" "flounced" "flounced" "flouncing";
lin flounce_V2 = mkV2 (mkV "flounce" "flounces" "flounced" "flounced" "flouncing");
lin flounder_N = mkN "flounder" "flounders";
lin flounder_V = mkV "flounder" "flounders" "floundered" "floundered" "floundering";
lin flour_N = mkN "flour" ;
lin flour_V2 = mkV2 (mkV "flour" "flours" "floured" "floured" "flouring");
lin flourish_N = mkN "flourish" "flourishes";
lin flourish_V = mkV "flourish" "flourishes" "flourished" "flourished" "flourishing";
lin flourish_V2 = mkV2 (mkV "flourish" "flourishes" "flourished" "flourished" "flourishing");
lin floury_A = mkA "floury" "flourier";
lin flout_V2 = mkV2 (mkV "flout" "flouts" "flouted" "flouted" "flouting");
lin flow_N = mkN "flow";
lin flow_V = mkV "flow" "flows" "flowed" "flowed" "flowing";
lin flower_N = mkN "flower" "flowers";
lin flower_V = mkV "flower" "flowers" "flowered" "flowered" "flowering";
lin flower_girl_N = mkN "flower - girl" "flower - girls";
lin flowerbed_N = mkN "flowerbed" "flowerbeds";
lin flowered_A = compoundA (mkA "flowered");
lin flowerless_A = compoundA (mkA "flowerless");
lin flowerpot_N = mkN "flowerpot" "flowerpots";
lin flowery_A = mkA "flowery" "flowerier";
lin flu_N = mkN "flu" ;
lin fluctuate_V = mkV "fluctuate" "fluctuates" "fluctuated" "fluctuated" "fluctuating";
lin fluctuation_N = mkN "fluctuation" "fluctuations";
lin flue_N = mkN "flue" "flues";
lin fluency_N = mkN "fluency" ;
lin fluent_A = compoundA (mkA "fluent");
lin fluff_N = mkN "fluff" ;
lin fluff_V2 = mkV2 (mkV "fluff" "fluffs" "fluffed" "fluffed" "fluffing");
lin fluffy_A = mkA "fluffy" "fluffier";
lin fluid_A = compoundA (mkA "fluid");
lin fluid_N = mkN "fluid" "fluids";
lin fluidity_N = mkN "fluidity" "fluidities";
lin fluke_N = mkN "fluke" "flukes";
lin flume_N = mkN "flume" "flumes";
lin flummox_V2 = mkV2 (mkV "flummox" "flummoxes" "flummoxed" "flummoxed" "flummoxing");
lin flunk_V = mkV "flunk" "flunks" "flunked" "flunked" "flunking";
lin flunk_V2 = mkV2 (mkV "flunk" "flunks" "flunked" "flunked" "flunking");
lin flunkey_N = mkN "flunkey" "flunkeys";
lin flunky_N = mkN "flunky" "flunkies";
lin fluorescence_N = mkN "fluorescence" "fluorescences";
lin fluorescent_A = compoundA (mkA "fluorescent");
lin fluoridate_V2 = mkV2 (mkV "fluoridate" "fluoridates" "fluoridated" "fluoridated" "fluoridating");
lin fluoridation_N = mkN "fluoridation" "fluoridations";
lin fluoride_N = mkN "fluoride" "fluorides";
lin fluoridization_N = mkN "fluoridization" "fluoridizations";
lin fluoridize_V2 = mkV2 (mkV "fluoridize" "fluoridizes" "fluoridized" "fluoridized" "fluoridizing");
lin fluorine_N = mkN "fluorine" ;
lin flurry_N = mkN "flurry" "flurries";
lin flurry_V2 = mkV2 (mkV "flurry" "flurries" "flurried" "flurried" "flurrying");
lin flush_A = compoundA (mkA "flush");
lin flush_N = mkN "flush" "flushes";
lin flush_V = mkV "flush" "flushes" "flushed" "flushed" "flushing";
lin flush_V2 = mkV2 (mkV "flush" "flushes" "flushed" "flushed" "flushing");
lin fluster_N = mkN "fluster" "flusters";
lin fluster_V2 = mkV2 (mkV "fluster" "flusters" "flustered" "flustered" "flustering");
lin flute_N = mkN "flute" "flutes";
lin flute_V = mkV "flute" "flutes" "fluted" "fluted" "fluting";
lin flute_V2 = mkV2 (mkV "flute" "flutes" "fluted" "fluted" "fluting");
lin fluting_N = mkN "fluting" ;
lin flutist_N = mkN "flutist" "flutists";
lin flutter_N = mkN "flutter" "flutters";
lin flutter_V = mkV "flutter" "flutters" "fluttered" "fluttered" "fluttering";
lin flutter_V2 = mkV2 (mkV "flutter" "flutters" "fluttered" "fluttered" "fluttering");
lin fluvial_A = compoundA (mkA "fluvial");
lin flux_N = mkN "flux" "fluxes";
lin fly_A = compoundA (mkA "fly");
lin fly_N = mkN "fly" "flies";
lin fly_V = IrregEng.fly_V;
lin fly_V2 = mkV2 (IrregEng.fly_V);
lin fly_VS = mkVS (IrregEng.fly_V);
lin fly_fish_V = mkV "fly - fish" "fly - fishes" "fly - fished" "fly - fished" "fly - fishing";
lin fly_fishing_N = mkN "fly - fishing" ;
lin fly_swat_N = mkN "fly - swat" "fly - swats";
lin fly_swatter_N = mkN "fly - swatter" "fly - swatters";
lin flyblown_A = compoundA (mkA "flyblown");
lin flycatcher_N = mkN "flycatcher" "flycatchers";
lin flyer_N = mkN "flyer" "flyers";
lin flying_A = compoundA (mkA "flying");
lin flying_bomb_N = mkN "flying - bomb" "flying - bombs";
lin flying_fish_N = mkN "flying - fish" "flying - fish";
lin flying_fox_N = mkN "flying - fox" "flying - foxes";
lin flying_squad_N = mkN "flying - squad" "flying - squads";
lin flyleaf_N = mkN "flyleaf" "flyleaves" {- FIXME: guessed plural form -};
lin flyover_N = mkN "flyover" "flyovers";
lin flypaper_N = mkN "flypaper" "flypapers";
lin flypast_N = mkN "flypast" "flypasts";
lin flytrap_N = mkN "flytrap" "flytraps";
lin flyweight_N = mkN "flyweight" "flyweights";
lin flywheel_N = mkN "flywheel" "flywheels";
lin fm_N = mkN "fm" ;
lin fo'c'sle_N = mkN "fo'c'sle" "fo'c'sles";
lin fo_N = mkN "fo" ;
lin foal_N = mkN "foal" "foals";
lin foal_V = mkV "foal" "foals" "foaled" "foaled" "foaling";
lin foam_N = mkN "foam" "foams";
lin foam_V = mkV "foam" "foams" "foamed" "foamed" "foaming";
lin foam_rubber_N = mkN "foam - rubber" ;
lin foamy_A = mkA "foamy" "foamier";
lin fob_V2 = mkV2 (mkV "fob" "fobs" "fobbed" "fobbed" "fobbing");
lin focal_A = compoundA (mkA "focal");
lin focus_N = mkN "focus" "focuses";
lin focus_V = mkV "focus" "focuses" "focused" "focused" "focusing";
lin focus_V2 = mkV2 (mkV "focus" "focuses" "focused" "focused" "focusing");
lin fodder_N = mkN "fodder" ;
lin foe_N = mkN "foe" "foes";
lin foetal_A = compoundA (mkA "foetal");
lin foetus_N = mkN "foetus" "foetuses";
lin fog_N = mkN "fog" "fogs";
lin fog_V2 = mkV2 (mkV "fog" "fogs" "fogged" "fogged" "fogging");
lin fogbank_N = mkN "fogbank" "fogbanks";
lin fogbound_A = compoundA (mkA "fogbound");
lin fogey_N = mkN "fogey" "fogeys";
lin foggia_PN = mkPN "Foggia";
lin foggy_A = mkA "foggy" "foggier";
lin foghorn_N = mkN "foghorn" "foghorns";
lin foglamp_N = mkN "foglamp" "foglamps";
lin fogsignal_N = mkN "fogsignal" "fogsignals";
lin foible_N = mkN "foible" "foibles";
lin foil_N = mkN "foil" "foils";
lin foil_V2 = mkV2 (mkV "foil" "foils" "foiled" "foiled" "foiling");
lin foist_V2 = mkV2 (mkV "foist" "foists" "foisted" "foisted" "foisting");
lin fold_N = mkN "fold" "folds";
lin fold_V = mkV "fold" "folds" "folded" "folded" "folding";
lin fold_V2 = mkV2 (mkV "fold" "folds" "folded" "folded" "folding");
lin folder_N = mkN "folder" "folders";
lin foliage_N = mkN "foliage" ;
lin folio_N = mkN "folio" "folios";
lin folk_N = mkN "folk" "folks";
lin folk_dance_N = mkN "folk - dance" "folk - dances";
lin folkestone_PN = mkPN "Folkestone";
lin folklore_N = mkN "folklore" ;
lin folksong_N = mkN "folksong" "folksongs";
lin folksy_A = compoundA (mkA "folksy");
lin folktale_N = mkN "folktale" "folktales";
lin follow_V = mkV "follow" "follows" "followed" "followed" "following";
lin follow_V2 = mkV2 (mkV "follow" "follows" "followed" "followed" "following");
lin follow_VS = mkVS (mkV "follow" "follows" "followed" "followed" "following");
lin follow_on_N = mkN "follow - on" "follow - ons";
lin follow_through_N = mkN "follow - through" "follow - throughs";
lin follow_up_N = mkN "follow - up" "follow - ups";
lin follower_N = mkN "follower" "followers";
lin following_A = compoundA (mkA "following");
lin following_N = mkN "following" "followings";
lin folly_N = mkN "folly" "follies";
lin foment_V2 = mkV2 (mkV "foment" "foments" "fomented" "fomented" "fomenting");
lin fomentation_N = mkN "fomentation" "fomentations";
lin fond_A = mkA "fond" "fonder";
lin fondant_N = mkN "fondant" "fondants";
lin fondle_V2 = mkV2 (mkV "fondle" "fondles" "fondled" "fondled" "fondling");
lin fondness_N = mkN "fondness" ;
lin font_N = mkN "font" "fonts";
lin foochow_PN = mkPN "Foochow";
lin food_N = mkN "food" "foods";
lin foodless_A = compoundA (mkA "foodless");
lin foodstuff_N = mkN "foodstuff" "foodstuffs";
lin fool_N = mkN "fool" "fools";
lin fool_V = mkV "fool" "fools" "fooled" "fooled" "fooling";
lin fool_V2 = mkV2 (mkV "fool" "fools" "fooled" "fooled" "fooling");
lin foolery_N = mkN "foolery" ;
lin foolhardiness_N = mkN "foolhardiness" ;
lin foolhardy_A = compoundA (mkA "foolhardy");
lin foolish_A = compoundA (mkA "foolish");
lin foolishness_N = mkN "foolishness" ;
lin foolproof_A = compoundA (mkA "foolproof");
lin foolscap_N = mkN "foolscap" ;
lin foot_N = mkN "foot" "feet" {- FIXME: guessed plural form -};
lin foot_V = mkV "foot" "foots" "footed" "footed" "footing";
lin foot_V2 = mkV2 (mkV "foot" "foots" "footed" "footed" "footing");
lin foot_and_mouth_A = compoundA (mkA "foot - and - mouth");
lin foot_and_mouth_N = mkN "foot - and - mouth" ;
lin foot_bath_N = mkN "foot - bath" "foot - baths";
lin foot_pound_N = mkN "foot - pound" "foot - pounds";
lin foot_race_N = mkN "foot - race" "foot - races";
lin foot_rot_N = mkN "foot - rot" ;
lin footage_N = mkN "footage" ;
lin football_N = mkN "football" "footballs";
lin footballer_N = mkN "footballer" "footballers";
lin footboard_N = mkN "footboard" "footboards";
lin footbridge_N = mkN "footbridge" "footbridges";
lin footed_A = compoundA (mkA "footed");
lin footer_N = mkN "footer" "footers";
lin footfall_N = mkN "footfall" "footfalls";
lin footfault_N = mkN "footfault" "footfaults";
lin foothold_N = mkN "foothold" "footholds";
lin footing_N = mkN "footing" "IRREG";
lin footle_V = mkV "footle" "footles" "footled" "footled" "footling";
lin footle_V2 = mkV2 (mkV "footle" "footles" "footled" "footled" "footling");
lin footling_A = compoundA (mkA "footling");
lin footloose_A = compoundA (mkA "footloose");
lin footman_N = mkN "footman" "footmen" {- FIXME: guessed plural form -};
lin footmark_N = mkN "footmark" "footmarks";
lin footnote_N = mkN "footnote" "footnotes";
lin footpath_N = mkN "footpath" "footpaths";
lin footplate_N = mkN "footplate" "footplates";
lin footprint_N = mkN "footprint" "footprints";
lin footslog_V = mkV "footslog" "footslogs" "footslogged" "footslogged" "footslogging";
lin footslogger_N = mkN "footslogger" "footsloggers";
lin footsore_A = compoundA (mkA "footsore");
lin footstep_N = mkN "footstep" "footsteps";
lin footstool_N = mkN "footstool" "footstools";
lin footsure_A = compoundA (mkA "footsure");
lin footwear_N = mkN "footwear" ;
lin footwork_N = mkN "footwork" ;
lin fop_N = mkN "fop" "fops";
lin foppish_A = compoundA (mkA "foppish");
lin for_Prep = mkPrep "for";
lin forage_N = mkN "forage" ;
lin forage_V = mkV "forage" "forages" "foraged" "foraged" "foraging";
lin foray_N = mkN "foray" "forays";
lin foray_V = mkV "foray" "forays" "forayed" "forayed" "foraying";
lin forbear_N = mkN "forbear" "forbears";
lin forbear_V = mkV "for" IrregEng.bear_V;
lin forbear_V2 = mkV2 (mkV "for" IrregEng.bear_V);
lin forbearance_N = mkN "forbearance" ;
lin forbid_V2 = mkV2 (IrregEng.forbid_V);
lin forbidding_A = compoundA (mkA "forbidding");
lin force_N = mkN "force" "forces";
lin force_V = mkV "force";
lin force_V2 = mkV2 (mkV "force");
lin force_V2V = mkV2V (mkV "force" "forces" "forced" "forced" "forcing") noPrep to_Prep;
lin force_VS = mkVS (mkV "force");
lin force_feed_V2 = mkV2 (mkV "force-" IrregEng.feed_V);
lin force_land_V = mkV "force - land" "force - lands" "force - landed" "force - landed" "force - landing";
lin force_land_V2 = mkV2 (mkV "force - land" "force - lands" "force - landed" "force - landed" "force - landing");
lin force_majeure_N = mkN "force majeure" ;
lin forceful_A = compoundA (mkA "forceful");
lin forcefulness_N = mkN "forcefulness" ;
lin forcemeat_N = mkN "forcemeat" ;
lin forcible_A = compoundA (mkA "forcible");
lin ford_N = mkN "ford" "fords";
lin ford_V2 = mkV2 (mkV "ford" "fords" "forded" "forded" "fording");
lin fordable_A = compoundA (mkA "fordable");
lin fore_A = compoundA (mkA "fore");
lin fore_Adv = mkAdv "fore";
lin fore_N = mkN "fore" ;
lin forearm_N = mkN "forearm" "forearms";
lin forearm_V2 = mkV2 (mkV "forearm" "forearms" "forearmed" "forearmed" "forearming");
lin forebode_V2 = mkV2 (mkV "forebode" "forebodes" "foreboded" "foreboded" "foreboding");
lin foreboding_N = mkN "foreboding" "forebodings";
lin forecast_N = mkN "forecast" "forecasts";
lin forecast_V = mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting";
lin forecast_V2 = mkV2 (mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting");
lin forecast_VS = mkVS (mkV "forecast" "forecasts" "forecasted" "forecasted" "forecasting");
lin forecaster_N = mkN "forecaster" "forecasters";
lin forecastle_N = mkN "forecastle" "forecastles";
lin foreclose_V = mkV "foreclose" "forecloses" "foreclosed" "foreclosed" "foreclosing";
lin foreclose_V2 = mkV2 (mkV "foreclose" "forecloses" "foreclosed" "foreclosed" "foreclosing");
lin foreclosure_N = mkN "foreclosure" "foreclosures";
lin forecourt_N = mkN "forecourt" "forecourts";
lin foredoom_V2 = mkV2 (mkV "foredoom" "foredooms" "foredoomed" "foredoomed" "foredooming");
lin forefather_N = mkN "forefather" "forefathers";
lin forefinger_N = mkN "forefinger" "forefingers";
lin forefoot_N = mkN "forefoot" "forefeet" {- FIXME: guessed plural form -};
lin forefront_N = mkN "forefront" "forefronts";
lin foregather_V = mkV "foregather" "foregathers" "foregathered" "foregathered" "foregathering";
lin forego_V = mkV "fore" IrregEng.go_V;
lin forego_V2 = mkV2 (mkV "fore" IrregEng.go_V);
lin foregoing_A = compoundA (mkA "foregoing");
lin foregone_A = compoundA (mkA "foregone");
lin foreground_N = mkN "foreground" "foregrounds";
lin forehand_A = compoundA (mkA "forehand");
lin forehead_N = mkN "forehead" "foreheads";
lin foreign_A = compoundA (mkA "foreign");
lin foreigner_N = mkN "foreigner" "foreigners";
lin foreknow_V = mkV "fore" IrregEng.know_V;
lin foreknow_V2 = mkV2 (mkV "fore" IrregEng.know_V);
lin foreknowledge_N = mkN "foreknowledge" ;
lin foreland_N = mkN "foreland" "forelands";
lin foreleg_N = mkN "foreleg" "forelegs";
lin forelock_N = mkN "forelock" "forelocks";
lin foreman_N = mkN "foreman" "foremen" {- FIXME: guessed plural form -};
lin foremast_N = mkN "foremast" "foremasts";
lin foremost_A = compoundA (mkA "foremost");
lin foremost_Adv = mkAdv "foremost";
lin forename_N = mkN "forename" "forenames";
lin forenoon_N = mkN "forenoon" "forenoons";
lin forensic_A = compoundA (mkA "forensic");
lin foreordain_V2 = mkV2 (mkV "foreordain" "foreordains" "foreordained" "foreordained" "foreordaining");
lin forerunner_N = mkN "forerunner" "forerunners";
lin foresail_N = mkN "foresail" "foresails";
lin foresee_V2 = mkV2 (mkV "fore" IrregEng.see_V);
lin foreseeable_A = compoundA (mkA "foreseeable");
lin foreshadow_V2 = mkV2 (mkV "foreshadow" "foreshadows" "foreshadowed" "foreshadowed" "foreshadowing");
lin foreshore_N = mkN "foreshore" "foreshores";
lin foreshorten_V2 = mkV2 (mkV "foreshorten" "foreshortens" "foreshortened" "foreshortened" "foreshortening");
lin foresight_N = mkN "foresight" ;
lin foreskin_N = mkN "foreskin" "foreskins";
lin forest_N = mkN "forest" "forests";
lin forestall_V2 = mkV2 (mkV "forestall" "forestalls" "forestalled" "forestalled" "forestalling");
lin forester_N = mkN "forester" "foresters";
lin forestry_N = mkN "forestry" ;
lin foreswear_V2 = mkV2 (mkV "fore" IrregEng.swear_V);
lin foretaste_N = mkN "foretaste" "foretastes";
lin foretell_V2 = mkV2 (mkV "fore" IrregEng.tell_V);
lin forethought_N = mkN "forethought" ;
lin foretop_N = mkN "foretop" "foretops";
lin forever_Adv = mkAdv "forever";
lin forewarn_V2 = mkV2 (mkV "forewarn" "forewarns" "forewarned" "forewarned" "forewarning");
lin forewoman_N = mkN "forewoman" "forewomen" {- FIXME: guessed plural form -};
lin foreword_N = mkN "foreword" "forewords";
lin forfar_PN = mkPN "Forfar";
lin forfeit_N = mkN "forfeit" "forfeits";
lin forfeit_V2 = mkV2 (mkV "forfeit" "forfeits" "forfeited" "forfeited" "forfeiting");
lin forfeiture_N = mkN "forfeiture" ;
lin forgather_V = mkV "forgather" "forgathers" "forgathered" "forgathered" "forgathering";
lin forge_N = mkN "forge" "forges";
lin forge_V = mkV "forge" "forges" "forged" "forged" "forging";
lin forge_V2 = mkV2 (mkV "forge" "forges" "forged" "forged" "forging");
lin forger_N = mkN "forger" "forgers";
lin forgery_N = mkN "forgery" "forgeries";
lin forget_V = IrregEng.forget_V;
lin forget_V2 = mkV2 (IrregEng.forget_V);
lin forget_VS = mkVS (IrregEng.forget_V);
lin forget_me_not_N = mkN "forget - me - not" "forget - me - nots";
lin forgetful_A = compoundA (mkA "forgetful");
lin forgetfulness_N = mkN "forgetfulness" ;
lin forging_N = mkN "forging" "forgings";
lin forgivable_A = compoundA (mkA "forgivable");
lin forgive_V = IrregEng.forgive_V;
lin forgive_V2 = mkV2 (IrregEng.forgive_V);
lin forgiveness_N = mkN "forgiveness" ;
lin forgiving_A = compoundA (mkA "forgiving");
lin forgo_V2 = mkV2 (mkV "for" IrregEng.go_V);
lin fork_N = mkN "fork" "forks";
lin fork_V = mkV "fork" "forks" "forked" "forked" "forking";
lin fork_V2 = mkV2 (mkV "fork" "forks" "forked" "forked" "forking");
lin forked_A = compoundA (mkA "forked");
lin forli_PN = mkPN "Forli";
lin forlorn_A = compoundA (mkA "forlorn");
lin forlornness_N = mkN "forlornness" ;
lin form_N = mkN "form" "forms";
lin form_V = mkV "form" "forms" "formed" "formed" "forming";
lin form_V2 = mkV2 (mkV "form" "forms" "formed" "formed" "forming");
lin formal_A = compoundA (mkA "formal");
lin formaldehyde_N = mkN "formaldehyde" ;
lin formalin_N = mkN "formalin" ;
lin formalism_N = mkN "formalism" ;
lin formality_N = mkN "formality" "formalities";
lin formalize_V2 = mkV2 (mkV "formalize" "formalizes" "formalized" "formalized" "formalizing");
lin format_N = mkN "format" "formats";
lin formation_N = mkN "formation" "formations";
lin formative_A = compoundA (mkA "formative");
lin formby_PN = mkPN "Formby";
lin former_A = compoundA (mkA "former");
lin formic_A = compoundA (mkA "formic");
lin formica_N = mkN "formica" ;
lin formidable_A = compoundA (mkA "formidable");
lin formless_A = compoundA (mkA "formless");
lin formosa_PN = mkPN "Formosa";
lin formula_N = mkN "formula" "formulas";
lin formulate_V2 = mkV2 (mkV "formulate" "formulates" "formulated" "formulated" "formulating");
lin formulation_N = mkN "formulation" "formulations";
lin fornicate_V = mkV "fornicate" "fornicates" "fornicated" "fornicated" "fornicating";
lin fornication_N = mkN "fornication" ;
lin forrader_Adv = mkAdv "forrader";
lin forsake_V2 = mkV2 (IrregEng.forsake_V);
lin forsooth_Adv = mkAdv "forsooth";
lin forswear_V2 = mkV2 (mkV "for" IrregEng.swear_V);
lin forsythia_N = mkN "forsythia" ;
lin fort_N = mkN "fort" "forts";
lin fort_lauderdale_PN = mkPN "Fort lauderdale";
lin fort_william_PN = mkPN "Fort william";
lin fort_worth_PN = mkPN "Fort worth";
lin fortaleza_PN = mkPN "Fortaleza";
lin forte_A = compoundA (mkA "forte");
lin forte_Adv = mkAdv "forte";
lin forte_N = mkN "forte" "fortes";
lin forth_Adv = mkAdv "forth";
lin forthcoming_A = compoundA (mkA "forthcoming");
lin forthright_A = compoundA (mkA "forthright");
lin forthwith_Adv = mkAdv "forthwith";
lin fortieth_A = compoundA (mkA "fortieth");
lin fortieth_N = mkN "fortieth" "fortieths";
lin fortification_N = mkN "fortification" "fortifications";
lin fortify_V2 = mkV2 (mkV "fortify" "fortifies" "fortified" "fortified" "fortifying");
lin fortissimo_A = compoundA (mkA "fortissimo");
lin fortissimo_Adv = mkAdv "fortissimo";
lin fortitude_N = mkN "fortitude" ;
lin fortnight_N = mkN "fortnight" "fortnights";
lin fortnightly_A = compoundA (mkA "fortnightly");
lin fortnightly_Adv = mkAdv "fortnightly";
lin fortress_N = mkN "fortress" "fortresses";
lin fortuitous_A = compoundA (mkA "fortuitous");
lin fortunate_A = compoundA (mkA "fortunate");
lin fortune_N = mkN "fortune" "fortunes";
lin forty_A = compoundA (mkA "forty");
lin forty_N = mkN "forty" "forties";
lin fortyish_A = compoundA (mkA "fortyish");
lin forum_N = mkN "forum" "forums";
lin forward_A = compoundA (mkA "forward");
lin forward_Adv = mkAdv "forward";
lin forward_N = mkN "forward" "forwards";
lin forward_V2 = mkV2 (mkV "forward" "forwards" "forwarded" "forwarded" "forwarding");
lin forwardness_N = mkN "forwardness" ;
lin forwards_Adv = mkAdv "forwards";
lin fosse_N = mkN "fosse" "fosses";
lin fossil_N = mkN "fossil" "fossils";
lin fossilization_N = mkN "fossilization" "fossilizations";
lin fossilize_V = mkV "fossilize" "fossilizes" "fossilized" "fossilized" "fossilizing";
lin fossilize_V2 = mkV2 (mkV "fossilize" "fossilizes" "fossilized" "fossilized" "fossilizing");
lin foster_V2 = mkV2 (mkV "foster" "fosters" "fostered" "fostered" "fostering");
lin foster_brother_N = mkN "foster - brother" "foster - brothers";
lin foster_child_N = mkN "foster - child" "foster - children" {- FIXME: guessed plural form -};
lin foster_father_N = mkN "foster - father" "foster - fathers";
lin foster_mother_N = mkN "foster - mother" "foster - mothers";
lin foster_parent_N = mkN "foster - parent" "foster - parents";
lin foster_sister_N = mkN "foster - sister" "foster - sisters";
lin foul_A = mkA "foul" "fouler";
lin foul_N = mkN "foul" "fouls";
lin foul_V = mkV "foul" "fouls" "fouled" "fouled" "fouling";
lin foul_V2 = mkV2 (mkV "foul" "fouls" "fouled" "fouled" "fouling");
lin foul_mouthed_A = compoundA (mkA "foul - mouthed");
lin foul_spoken_A = compoundA (mkA "foul - spoken");
lin foulness_N = mkN "foulness" ;
lin found_V2 = mkV2 (mkV "found" "founds" "founded" "founded" "founding");
lin foundation_N = mkN "foundation" "foundations";
lin foundation_stone_N = mkN "foundation - stone" "foundation - stones";
lin founder_N = mkN "founder" "founders";
lin founder_V = mkV "founder" "founders" "foundered" "foundered" "foundering";
lin founder_V2 = mkV2 (mkV "founder" "founders" "foundered" "foundered" "foundering");
lin foundling_N = mkN "foundling" "foundlings";
lin foundress_N = mkN "foundress" "foundresses";
lin foundry_N = mkN "foundry" "foundries";
lin fount_N = mkN "fount" "founts";
lin fountain_N = mkN "fountain" "fountains";
lin fountain_head_N = mkN "fountain - head" "fountain - heads";
lin fountain_pen_N = mkN "fountain - pen" "fountain - pens";
lin four_in_hand_N = mkN "four - in - hand" "four - in - hands";
lin four_part_A = compoundA (mkA "four - part");
lin four_ply_A = compoundA (mkA "four - ply");
lin four_poster_N = mkN "four - poster" "four - posters";
lin four_pounder_N = mkN "four - pounder" "four - pounders";
lin four_wheeler_N = mkN "four - wheeler" "four - wheelers";
lin fourfold_A = compoundA (mkA "fourfold");
lin fourfold_Adv = mkAdv "fourfold";
lin fourpence_N = mkN "fourpence" "fourpences";
lin fourpenny_A = compoundA (mkA "fourpenny");
lin fourscore_A = compoundA (mkA "fourscore");
lin fourscore_N = mkN "fourscore";
lin foursome_N = mkN "foursome" "foursomes";
lin foursquare_A = compoundA (mkA "foursquare");
lin fowey_PN = mkPN "Fowey";
lin fowl_N = mkN "fowl" "fowls";
lin fowl_V = mkV "fowl" "fowls" "fowled" "fowled" "fowling";
lin fowl_run_N = mkN "fowl - run" "fowl - runs";
lin fowler_N = mkN "fowler" "fowlers";
lin fowlingpiece_N = mkN "fowlingpiece" "fowlingpieces";
lin fowlpest_N = mkN "fowlpest" ;
lin fox_N = mkN "fox" "foxes";
lin fox_V2 = mkV2 (mkV "fox" "foxes" "foxed" "foxed" "foxing");
lin fox_terrier_N = mkN "fox - terrier" "fox - terriers";
lin foxglove_N = mkN "foxglove" "foxgloves";
lin foxhole_N = mkN "foxhole" "foxholes";
lin foxhound_N = mkN "foxhound" "foxhounds";
lin foxhunt_N = mkN "foxhunt" "foxhunts";
lin foxhunt_V = mkV "foxhunt" "foxhunts" "foxhunted" "foxhunted" "foxhunting";
lin foxhunter_N = mkN "foxhunter" "foxhunters";
lin foxtrot_N = mkN "foxtrot" "foxtrots";
lin foxy_A = mkA "foxy" "foxier";
lin foyer_N = mkN "foyer" "foyers";
lin fr_PN = mkPN "Fr";
lin fracas_N = mkN "fracas" (variants {"fracases"; "fracas"});
lin fraction_N = mkN "fraction" "fractions";
lin fractional_A = compoundA (mkA "fractional");
lin fractious_A = compoundA (mkA "fractious");
lin fractiousness_N = mkN "fractiousness" ;
lin fracture_N = mkN "fracture" "fractures";
lin fracture_V = mkV "fracture" "fractures" "fractured" "fractured" "fracturing";
lin fracture_V2 = mkV2 (mkV "fracture" "fractures" "fractured" "fractured" "fracturing");
lin fragile_A = compoundA (mkA "fragile");
lin fragility_N = mkN "fragility" ;
lin fragment_N = mkN "fragment" "fragments";
lin fragment_V = mkV "fragment" "fragments" "fragmented" "fragmented" "fragmenting";
lin fragment_V2 = mkV2 (mkV "fragment" "fragments" "fragmented" "fragmented" "fragmenting");
lin fragmentary_A = compoundA (mkA "fragmentary");
lin fragmentation_N = mkN "fragmentation" "fragmentations";
lin fragrance_N = mkN "fragrance" "fragrances";
lin fragrant_A = compoundA (mkA "fragrant");
lin frail_A = mkA "frail" "frailer";
lin frailty_N = mkN "frailty" "frailties";
lin frame_N = mkN "frame" "frames";
lin frame_V = mkV "frame" "frames" "framed" "framed" "framing";
lin frame_V2 = mkV2 (mkV "frame" "frames" "framed" "framed" "framing");
lin frame_up_N = mkN "frame - up" "frame - ups";
lin framework_N = mkN "framework" "frameworks";
lin frampton_cotterell_PN = mkPN "Frampton cotterell";
lin fran_PN = mkPN "Fran";
lin franc_N = mkN "franc" "francs";
lin france_PN = mkPN "France";
lin frances_PN = mkPN "Frances";
lin franchise_N = mkN "franchise" "franchises";
lin francis_PN = mkPN "Francis";
lin franciscan_A = compoundA (mkA "franciscan");
lin franciscan_N = mkN "franciscan" "franciscans";
lin frank_A = mkA "frank" "franker";
lin frank_N = mkN "frank" "franks";
lin frank_PN = mkPN "Frank";
lin frank_V2 = mkV2 (mkV "frank" "franks" "franked" "franked" "franking");
lin frankfurt_PN = mkPN "Frankfurt";
lin frankfurter_N = mkN "frankfurter" "frankfurters";
lin frankie_PN = mkPN "Frankie";
lin frankincense_N = mkN "frankincense" ;
lin franking_machine_N = mkN "franking - machine" "franking - machines";
lin franklin_N = mkN "franklin" "franklins";
lin frankness_N = mkN "frankness" ;
lin frantic_A = compoundA (mkA "frantic");
lin frantically_Adv = mkAdv "frantically";
lin fraserburgh_PN = mkPN "Fraserburgh";
lin fraternal_A = compoundA (mkA "fraternal");
lin fraternity_N = mkN "fraternity" "fraternities";
lin fraternization_N = mkN "fraternization" ;
lin fraternize_V = mkV "fraternize" "fraternizes" "fraternized" "fraternized" "fraternizing";
lin fratricide_N = mkN "fratricide" "fratricides";
lin frau_N = mkN "frau" "fraus";
lin fraud_N = mkN "fraud" "frauds";
lin fraudulent_A = compoundA (mkA "fraudulent");
lin fraught_A = compoundA (mkA "fraught");
lin fraulein_N = mkN "fräulein" "fräuleins";
lin fray_N = mkN "fray" "frays";
lin fray_V = mkV "fray" "frays" "frayed" "frayed" "fraying";
lin fray_V2 = mkV2 (mkV "fray" "frays" "frayed" "frayed" "fraying");
lin frazzle_N = mkN "frazzle" "frazzles";
lin freak_N = mkN "freak" "freaks";
lin freak_V = mkV "freak" "freaks" "freaked" "freaked" "freaking";
lin freak_V2 = mkV2 (mkV "freak" "freaks" "freaked" "freaked" "freaking");
lin freak_out_N = mkN "freak - out" "freak - outs";
lin freakish_A = compoundA (mkA "freakish");
lin freakishness_N = mkN "freakishness" ;
lin freaky_A = mkA "freaky" "freakier";
lin freckle_N = mkN "freckle" "freckles";
lin freckle_V = mkV "freckle" "freckles" "freckled" "freckled" "freckling";
lin freckle_V2 = mkV2 (mkV "freckle" "freckles" "freckled" "freckled" "freckling");
lin freckleton_PN = mkPN "Freckleton";
lin fred_PN = mkPN "Fred";
lin freda_PN = mkPN "Freda";
lin freddie_PN = mkPN "Freddie";
lin freddy_PN = mkPN "Freddy";
lin frederick_PN = mkPN "Frederick";
lin frederiksberg_PN = mkPN "Frederiksberg";
lin free_A = mkA "free" "freer";
lin free_V2 = mkV2 (mkV "free" "frees" "freed" "freed" "freeing");
lin free_V2V = mkV2V (mkV "free") noPrep to_Prep ;
lin free_and_easy_A = compoundA (mkA "free - and - easy");
lin free_for_all_N = mkN "free - for - all" "free - for - alls";
lin free_handed_A = compoundA (mkA "free - handed");
lin free_list_N = mkN "free - list" "free - lists";
lin free_liver_N = mkN "free - liver" "free - livers";
lin free_living_N = mkN "free - living" ;
lin free_range_A = compoundA (mkA "free - range");
lin free_spoken_A = compoundA (mkA "free - spoken");
lin free_standing_A = compoundA (mkA "free - standing");
lin free_thinker_N = mkN "free - thinker" "free - thinkers";
lin free_thinking_A = compoundA (mkA "free - thinking");
lin free_thought_N = mkN "free - thought" ;
lin free_trader_N = mkN "free - trader" "free - traders";
lin freebooter_N = mkN "freebooter" "freebooters";
lin freeborn_A = compoundA (mkA "freeborn");
lin freedman_N = mkN "freedman" "freedmen" {- FIXME: guessed plural form -};
lin freedom_N = mkN "freedom" "freedoms";
lin freehand_A = compoundA (mkA "freehand");
lin freehold_N = mkN "freehold" "freeholds";
lin freeholder_N = mkN "freeholder" "freeholders";
lin freelance_N = mkN "freelance" "freelances";
lin freelance_V = mkV "freelance" "freelances" "freelanced" "freelanced" "freelancing";
lin freeman_N = mkN "freeman" "freemen" {- FIXME: guessed plural form -};
lin freemason_N = mkN "freemason" "freemasons";
lin freemasonry_N = mkN "freemasonry" ;
lin freesia_N = mkN "freesia" "freesias";
lin freestone_N = mkN "freestone" ;
lin freestyle_N = mkN "freestyle" ;
lin freeway_N = mkN "freeway" "freeways";
lin freewheel_V = mkV "freewheel" "freewheels" "freewheeled" "freewheeled" "freewheeling";
lin freewill_A = compoundA (mkA "freewill");
lin freeze_N = mkN "freeze" "freezes";
lin freeze_V = IrregEng.freeze_V;
lin freeze_V2 = mkV2 (IrregEng.freeze_V);
lin freezer_N = mkN "freezer" "freezers";
lin freezing_mixture_N = mkN "freezing - mixture" "freezing - mixtures";
lin freezing_point_N = mkN "freezing - point" "freezing - points";
lin freiburg_PN = mkPN "Freiburg";
lin freight_N = mkN "freight" ;
lin freight_V2 = mkV2 (mkV "freight" "freights" "freighted" "freighted" "freighting");
lin freight_train_N = mkN "freight - train" "freight - trains";
lin freighter_N = mkN "freighter" "freighters";
lin freightliner_N = mkN "freightliner" "freightliners";
lin french_A = compoundA (mkA "French");
lin french_N = mkN "french" ;
lin frenchman_N = mkN "frenchman" "frenchmen" {- FIXME: guessed plural form -};
lin frenchwoman_N = mkN "frenchwoman" "frenchwomen" {- FIXME: guessed plural form -};
lin frenetic_A = compoundA (mkA "frenetic");
lin frenzied_A = compoundA (mkA "frenzied");
lin frenzy_N = mkN "frenzy" ;
lin frequency_N = mkN "frequency" "frequencies";
lin frequent_A = compoundA (mkA "frequent");
lin frequent_V2 = mkV2 (mkV "frequent" "frequents" "frequented" "frequented" "frequenting");
lin fresco_N = mkN "fresco" "frescos";
lin fresco_V2 = mkV2 (mkV "fresco" "frescos" "frescoed" "frescoed" "frescoing");
lin fresh_A = mkA "fresh" "fresher";
lin fresh_Adv = mkAdv "fresh";
lin freshen_V = mkV "freshen" "freshens" "freshened" "freshened" "freshening";
lin freshen_V2 = mkV2 (mkV "freshen" "freshens" "freshened" "freshened" "freshening");
lin fresher_N = mkN "fresher" "freshers";
lin freshman_N = mkN "freshman" "freshmen" {- FIXME: guessed plural form -};
lin freshness_N = mkN "freshness" ;
lin freshwater_A = compoundA (mkA "freshwater");
lin freshwater_PN = mkPN "Freshwater";
lin fret_N = mkN "fret" "frets";
lin fret_V = mkV "fret" "frets" "fretted" "fretted" "fretting";
lin fret_V2 = mkV2 (mkV "fret" "frets" "fretted" "fretted" "fretting");
lin fret_VS = mkVS (mkV "fret" "frets" "fretted" "fretted" "fretting");
lin fretful_A = compoundA (mkA "fretful");
lin fretsaw_N = mkN "fretsaw" "fretsaws";
lin fretwork_N = mkN "fretwork" ;
lin freudian_A = compoundA (mkA "freudian");
lin fri_PN = mkPN "Fri";
lin friability_N = mkN "friability" ;
lin friable_A = compoundA (mkA "friable");
lin friar_N = mkN "friar" "friars";
lin fricassee_N = mkN "fricassee" "fricassees";
lin fricassee_V2 = mkV2 (mkV "fricas" IrregEng.see_V);
lin fricative_A = compoundA (mkA "fricative");
lin fricative_N = mkN "fricative" "fricatives";
lin friction_N = mkN "friction" "frictions";
lin friday_N = mkN "Friday" "Fridays";
lin friday_PN = mkPN "Friday";
lin fridge_N = mkN "fridge" "fridges";
lin friend_N = mkN "friend" "friends";
lin friendless_A = compoundA (mkA "friendless");
lin friendlessness_N = mkN "friendlessness" ;
lin friendliness_N = mkN "friendliness" ;
lin friendly_A = mkA "friendly" "friendlier";
lin friendship_N = mkN "friendship" "friendships";
lin frier_N = mkN "frier" "friers";
lin frieze_N = mkN "frieze" "friezes";
lin frigate_N = mkN "frigate" "frigates";
lin fright_N = mkN "fright" "frights";
lin fright_V2 = mkV2 (mkV "fright" "frights" "frighted" "frighted" "frighting");
lin frighten_V2 = mkV2 (mkV "frighten" "frightens" "frightened" "frightened" "frightening");
lin frightened_A = compoundA (mkA "frightened");
lin frightening_A = compoundA (mkA "frightening");
lin frightful_A = compoundA (mkA "frightful");
lin frightfulness_N = mkN "frightfulness" ;
lin frigid_A = compoundA (mkA "frigid");
lin frigidity_N = mkN "frigidity" ;
lin frill_N = mkN "frill" "frills";
lin frilled_A = compoundA (mkA "frilled");
lin frilly_A = mkA "frilly" "frillier";
lin fringe_N = mkN "fringe" "fringes";
lin fringe_V2 = mkV2 (mkV "fringe" "fringes" "fringed" "fringed" "fringing");
lin frinton_PN = mkPN "Frinton";
lin frippery_N = mkN "frippery" "fripperies";
lin frisk_V = mkV "frisk" "frisks" "frisked" "frisked" "frisking";
lin frisk_V2 = mkV2 (mkV "frisk" "frisks" "frisked" "frisked" "frisking");
lin friskily_Adv = mkAdv "friskily";
lin frisky_A = mkA "frisky" "friskier";
lin frisson_N = mkN "frisson" "frissons";
lin fritter_N = mkN "fritter" "fritters";
lin fritter_V2 = mkV2 (mkV "fritter" "fritters" "frittered" "frittered" "frittering");
lin frivol_V = mkV "frivol" "frivols" "frivolled" "frivolled" "frivolling";
lin frivol_V2 = mkV2 (mkV "frivol" "frivols" "frivolled" "frivolled" "frivolling");
lin frivolity_N = mkN "frivolity" "frivolities";
lin frivolous_A = compoundA (mkA "frivolous");
lin frizz_V2 = mkV2 (mkV "frizz" "frizzes" "frizzed" "frizzed" "frizzing");
lin frizzle_V = mkV "frizzle" "frizzles" "frizzled" "frizzled" "frizzling";
lin frizzle_V2 = mkV2 (mkV "frizzle" "frizzles" "frizzled" "frizzled" "frizzling");
lin frizzy_A = mkA "frizzy" "frizzier";
lin fro_Adv = mkAdv "fro";
lin frock_N = mkN "frock" "frocks";
lin frock_coat_N = mkN "frock - coat" "frock - coats";
lin frodsham_PN = mkPN "Frodsham";
lin frog_N = mkN "frog" "frogs";
lin frogman_N = mkN "frogman" "frogmen" {- FIXME: guessed plural form -};
lin frogmarch_V2 = mkV2 (mkV "frogmarch" "frogmarches" "frogmarched" "frogmarched" "frogmarching");
lin frolic_N = mkN "frolic" "frolics";
lin frolic_V = mkV "frolic" "frolics" "frolicked" "frolicked" "frolicking";
lin frolicsome_A = compoundA (mkA "frolicsome");
lin from_Prep = mkPrep "from";
lin frome_PN = mkPN "Frome";
lin frond_N = mkN "frond" "fronds";
lin front_N = mkN "front" "fronts";
lin front_V = mkV "front" "fronts" "fronted" "fronted" "fronting";
lin front_V2 = mkV2 (mkV "front" "fronts" "fronted" "fronted" "fronting");
lin front_bench_N = mkN "front - bench" "front - benches";
lin front_bencher_N = mkN "front - bencher" "front - benchers";
lin frontage_N = mkN "frontage" "frontages";
lin frontal_A = compoundA (mkA "frontal");
lin frontier_N = mkN "frontier" "frontiers";
lin frontiersman_N = mkN "frontiersman" "frontiersmen" {- FIXME: guessed plural form -};
lin frontispiece_N = mkN "frontispiece" "frontispieces";
lin frost_N = mkN "frost" "frosts";
lin frost_V = mkV "frost" "frosts" "frosted" "frosted" "frosting";
lin frost_V2 = mkV2 (mkV "frost" "frosts" "frosted" "frosted" "frosting");
lin frost_bound_A = compoundA (mkA "frost - bound");
lin frostbite_N = mkN "frostbite" ;
lin frostbitten_A = compoundA (mkA "frostbitten");
lin frostily_Adv = mkAdv "frostily";
lin frostiness_N = mkN "frostiness" ;
lin frosting_N = mkN "frosting" ;
lin frosty_A = mkA "frosty" "frostier";
lin froth_N = mkN "froth" ;
lin froth_V = mkV "froth" "froths" "frothed" "frothed" "frothing";
lin frothily_Adv = mkAdv "frothily";
lin frothiness_N = mkN "frothiness" ;
lin frothy_A = mkA "frothy" "frothier";
lin froward_A = compoundA (mkA "froward");
lin frown_N = mkN "frown" "frowns";
lin frown_V = mkV "frown" "frowns" "frowned" "frowned" "frowning";
lin frowningly_Adv = mkAdv "frowningly";
lin frowsty_A = compoundA (mkA "frowsty");
lin frowzy_A = compoundA (mkA "frowzy");
lin frs_N = mkN "frs" ;
lin fructification_N = mkN "fructification" ;
lin fructify_V = mkV "fructify" "fructifies" "fructified" "fructified" "fructifying";
lin fructify_V2 = mkV2 (mkV "fructify" "fructifies" "fructified" "fructified" "fructifying");
lin frugal_A = compoundA (mkA "frugal");
lin frugality_N = mkN "frugality" "frugalities";
lin fruit_N = mkN "fruit" "fruits";
lin fruit_V = mkV "fruit" "fruits" "fruited" "fruited" "fruiting";
lin fruit_fly_N = mkN "fruit - fly" "fruit - flies";
lin fruitcake_N = mkN "fruitcake" "fruitcakes";
lin fruiterer_N = mkN "fruiterer" "fruiterers";
lin fruitful_A = compoundA (mkA "fruitful");
lin fruitfulness_N = mkN "fruitfulness" ;
lin fruition_N = mkN "fruition" ;
lin fruitless_A = compoundA (mkA "fruitless");
lin fruitlessness_N = mkN "fruitlessness" ;
lin fruity_A = mkA "fruity" "fruitier";
lin frump_N = mkN "frump" "frumps";
lin frumpish_A = compoundA (mkA "frumpish");
lin frumpy_A = mkA "frumpy" "frumpier";
lin frustrate_V2 = mkV2 (mkV "frustrate" "frustrates" "frustrated" "frustrated" "frustrating");
lin frustration_N = mkN "frustration" "frustrations";
lin fry_N = mkN "fry" "fry";
lin fry_V = mkV "fry" "fries" "fried" "fried" "frying";
lin fry_V2 = mkV2 (mkV "fry" "fries" "fried" "fried" "frying");
lin fry_pan_N = mkN "fry - pan" "fry - pans";
lin fryer_N = mkN "fryer" "fryers";
lin frying_pan_N = mkN "frying - pan" "frying - pans";
lin ft_PN = mkPN "FT";
lin fuchsia_N = mkN "fuchsia" "fuchsias";
lin fuck_V = mkV "fuck" "fucks" "fucked" "fucked" "fucking";
lin fuck_V2 = mkV2 (mkV "fuck" "fucks" "fucked" "fucked" "fucking");
lin fuck_all_N = mkN "fuck - all" ;
lin fucker_N = mkN "fucker" "fuckers";
lin fucking_A = compoundA (mkA "fucking");
lin fuddle_V2 = mkV2 (mkV "fuddle" "fuddles" "fuddled" "fuddled" "fuddling");
lin fuddy_duddy_N = mkN "fuddy - duddy" "fuddy - duddies";
lin fudge_N = mkN "fudge" "fudges";
lin fuel_N = mkN "fuel" "fuels";
lin fuel_V = variants {mkV "fuel" "fuels" "fueled" "fueled" "fueling";   -- US
                       mkV "fuel" "fuels" "fuelled" "fuelled" "fuelling";
                      };
lin fuel_V2 = mkV2 (variants {mkV "fuel" "fuels" "fueled" "fueled" "fueling";   -- US
                              mkV "fuel" "fuels" "fuelled" "fuelled" "fuelling";
                             });
lin fug_N = mkN "fug" "fugs";
lin fuggy_A = mkA "fuggy" "fuggier";
lin fugitive_A = compoundA (mkA "fugitive");
lin fugitive_N = mkN "fugitive" "fugitives";
lin fugue_N = mkN "fugue" "fugues";
lin fuhrer_N = mkN "führer" "führers";
lin fulcrum_N = mkN "fulcrum" "fulcrums";
lin fulfil_V2 = mkV2 (mkV "fulfil" "fulfils" "fulfilled" "fulfilled" "fulfilling");
lin fulfill_V2 = mkV2 (mkV "fulfill");
lin fulfilment_N = mkN "fulfilment" "fulfilments";
lin full_A = mkA "full" "fuller";
lin full_blooded_A = compoundA (mkA "full - blooded");
lin full_blown_A = compoundA (mkA "full - blown");
lin full_dress_A = compoundA (mkA "full - dress");
lin full_fashioned_A = compoundA (mkA "full - fashioned");
lin full_fledged_A = compoundA (mkA "full - fledged");
lin full_grown_A = compoundA (mkA "full - grown");
lin full_length_A = compoundA (mkA "full - length");
lin full_page_A = compoundA (mkA "full - page");
lin full_scale_A = compoundA (mkA "full - scale");
lin full_time_A = compoundA (mkA "full - time");
lin full_time_Adv = mkAdv "full - time";
lin fullback_N = mkN "fullback" "fullbacks";
lin fuller_N = mkN "fuller" "fullers";
lin fullness_N = mkN "fullness" ;
lin fully_Adv = mkAdv "fully";
lin fully_fashioned_A = compoundA (mkA "fully - fashioned");
lin fully_fledged_A = compoundA (mkA "fully - fledged");
lin fully_grown_A = compoundA (mkA "fully - grown");
lin fulmar_N = mkN "fulmar" "fulmars";
lin fulminate_V = mkV "fulminate" "fulminates" "fulminated" "fulminated" "fulminating";
lin fulmination_N = mkN "fulmination" "fulminations";
lin fulsome_A = compoundA (mkA "fulsome");
lin fulsomeness_N = mkN "fulsomeness" ;
lin fumble_V = mkV "fumble" "fumbles" "fumbled" "fumbled" "fumbling";
lin fumble_V2 = mkV2 (mkV "fumble" "fumbles" "fumbled" "fumbled" "fumbling");
lin fumbler_N = mkN "fumbler" "fumblers";
lin fume_N = mkN "fume" "fumes";
lin fume_V = mkV "fume" "fumes" "fumed" "fumed" "fuming";
lin fume_V2 = mkV2 (mkV "fume" "fumes" "fumed" "fumed" "fuming");
lin fumigate_V2 = mkV2 (mkV "fumigate" "fumigates" "fumigated" "fumigated" "fumigating");
lin fumigation_N = mkN "fumigation" "fumigations";
lin fun_N = mkN "fun" ;
lin function_N = mkN "function" "functions";
lin function_V = mkV "function" "functions" "functioned" "functioned" "functioning";
lin functional_A = compoundA (mkA "functional");
lin functionalism_N = mkN "functionalism" ;
lin functionalist_N = mkN "functionalist" "functionalists";
lin functionary_N = mkN "functionary" "functionaries";
lin fund_N = mkN "fund" "funds";
lin fund_V2 = mkV2 (mkV "fund" "funds" "funded" "funded" "funding");
lin fundamental_A = compoundA (mkA "fundamental");
lin fundamental_N = mkN "fundamental" "fundamentals";
lin fundamentalism_N = mkN "fundamentalism" ;
lin fundamentalist_N = mkN "fundamentalist" "fundamentalists";
lin funeral_N = mkN "funeral" "funerals";
lin funereal_A = compoundA (mkA "funereal");
lin funfair_N = mkN "funfair" "funfairs";
lin fungicide_N = mkN "fungicide" "fungicides";
lin fungoid_A = compoundA (mkA "fungoid");
lin fungous_A = compoundA (mkA "fungous");
lin fungus_N = mkN "fungus" "funguses";
lin funicular_N = mkN "funicular" "funiculars";
lin funk_N = mkN "funk" "funks";
lin funk_V = mkV "funk" "funks" "funked" "funked" "funking";
lin funk_V2 = mkV2 (mkV "funk" "funks" "funked" "funked" "funking");
lin funky_A = mkA "funky" "funkier";
lin funnel_N = mkN "funnel" "funnels";
lin funnel_V = mkV "funnel" "funnels" "funnelled" "funnelled" "funnelling";
lin funnel_V2 = mkV2 (mkV "funnel" "funnels" "funnelled" "funnelled" "funnelling");
lin funnily_Adv = mkAdv "funnily";
lin funniness_N = mkN "funniness" ;
lin funny_A = mkA "funny" "funnier";
lin funny_bone_N = mkN "funny - bone" "funny - bones";
lin fur_N = mkN "fur" "furs";
lin furbelow_N = mkN "furbelow" "furbelows";
lin furbish_V2 = mkV2 (mkV "furbish" "furbishes" "furbished" "furbished" "furbishing");
lin furious_A = compoundA (mkA "furious");
lin furl_V = mkV "furl" "furls" "furled" "furled" "furling";
lin furl_V2 = mkV2 (mkV "furl" "furls" "furled" "furled" "furling");
lin furlong_N = mkN "furlong" "furlongs";
lin furlough_N = mkN "furlough" "furloughs";
lin furnace_N = mkN "furnace" "furnaces";
lin furnish_V2 = mkV2 (mkV "furnish" "furnishes" "furnished" "furnished" "furnishing");
lin furniture_N = mkN "furniture" ;
lin furore_N = mkN "furore" "furores";
lin furrier_N = mkN "furrier" "furriers";
lin furrow_N = mkN "furrow" "furrows";
lin furrow_V = mkV "furrow";
lin furrow_V2 = mkV2 (mkV "furrow" "furrows" "furrowed" "furrowed" "furrowing");
lin furry_A = mkA "furry" "furrier";
lin furth_PN = mkPN "Furth";
lin further_Adv = mkAdv "further";
lin further_V2 = mkV2 (mkV "further" "furthers" "furthered" "furthered" "furthering");
lin furtherance_N = mkN "furtherance" ;
lin furthermore_Adv = mkAdv "furthermore";
lin furthermost_A = compoundA (mkA "furthermost");
lin furthest_A = compoundA (mkA "furthest");
lin furthest_Adv = mkAdv "furthest";
lin furtive_A = compoundA (mkA "furtive");
lin furtiveness_N = mkN "furtiveness" ;
lin fury_N = mkN "fury" "furies";
lin furze_N = mkN "furze" ;
lin fuse_N = mkN "fuse" "fuses";
lin fuse_V = mkV "fuse" "fuses" "fused" "fused" "fusing";
lin fuse_V2 = mkV2 (mkV "fuse" "fuses" "fused" "fused" "fusing");
lin fuselage_N = mkN "fuselage" "fuselages";
lin fushun_PN = mkPN "Fushun";
lin fusilier_N = mkN "fusilier" "fusiliers";
lin fusillade_N = mkN "fusillade" "fusillades";
lin fusion_N = mkN "fusion" "fusions";
lin fuss_N = mkN "fuss" "fusses";
lin fuss_V = mkV "fuss" "fusses" "fussed" "fussed" "fussing";
lin fuss_V2 = mkV2 (mkV "fuss" "fusses" "fussed" "fussed" "fussing");
lin fussily_Adv = mkAdv "fussily";
lin fussiness_N = mkN "fussiness" ;
lin fusspot_N = mkN "fusspot" "fusspots";
lin fussy_A = mkA "fussy" "fussier";
lin fustian_N = mkN "fustian" ;
lin fusty_A = compoundA (mkA "fusty");
lin futile_A = compoundA (mkA "futile");
lin futility_N = mkN "futility" "futilities";
lin future_A = compoundA (mkA "future");
lin future_N = mkN "future" "futures";
lin futureless_A = compoundA (mkA "futureless");
lin futurism_N = mkN "futurism" ;
lin futurist_N = mkN "futurist" "futurists";
lin futurity_N = mkN "futurity" "futurities";
lin fuze_N = mkN "fuze" "fuzes";
lin fuzz_N = mkN "fuzz" ;
lin fuzzy_A = mkA "fuzzy" "fuzzier";
lin fwd_PN = mkPN "Fwd";
lin g_man_N = mkN "g - man" "g - men";
lin gab_N = mkN "gab" ;
lin gabardine_N = mkN "gabardine" ;
lin gabble_N = mkN "gabble" ;
lin gabble_V = mkV "gabble" "gabbles" "gabbled" "gabbled" "gabbling";
lin gabble_V2 = mkV2 (mkV "gabble" "gabbles" "gabbled" "gabbled" "gabbling");
lin gaberdine_N = mkN "gaberdine" ;
lin gable_N = mkN "gable" "gables";
lin gabled_A = compoundA (mkA "gabled");
lin gabon_PN = mkPN "Gabon";
lin gabonese_A = compoundA (mkA "gabonese");
lin gabonese_N = mkN "gabonese" "gabonese";
lin gad_V = mkV "gad" "gads" "gadded" "gadded" "gadding";
lin gadabout_N = mkN "gadabout" "gadabouts";
lin gadfly_N = mkN "gadfly" "gadflies";
lin gadget_N = mkN "gadget" "gadgets";
lin gadgetry_N = mkN "gadgetry" ;
lin gael_N = mkN "gael" "gaels";
lin gaelic_A = compoundA (mkA "gaelic");
lin gaelic_N = mkN "gaelic" "gaelics";
lin gaff_N = mkN "gaff" "gaffs";
lin gaffe_N = mkN "gaffe" "gaffes";
lin gaffer_N = mkN "gaffer" "gaffers";
lin gag_N = mkN "gag" "gags";
lin gag_V = mkV "gag" "gags" "gagged" "gagged" "gagging";
lin gag_V2 = mkV2 (mkV "gag" "gags" "gagged" "gagged" "gagging");
lin gaga_A = compoundA (mkA "gaga");
lin gage_N = mkN "gage" "gages";
lin gage_V2 = mkV2 (mkV "gage" "gages" "gaged" "gaged" "gaging");
lin gaggle_N = mkN "gaggle" "gaggles";
lin gaiety_N = mkN "gaiety" ;
lin gaily_Adv = mkAdv "gaily";
lin gain_N = mkN "gain" "gains";
lin gain_V = mkV "gain" "gains" "gained" "gained" "gaining";
lin gain_V2 = mkV2 (mkV "gain" "gains" "gained" "gained" "gaining");
lin gainful_A = compoundA (mkA "gainful");
lin gainsay_V2 = mkV2 (mkV "gain" IrregEng.say_V);
lin gainsborough_N = mkN "gainsborough" "gainsboroughs";
lin gainsborough_PN = mkPN "Gainsborough";
lin gait_N = mkN "gait" "gaits";
lin gaiter_N = mkN "gaiter" "gaiters";
lin gal_N = mkN "gal" "gals";
lin gala_N = mkN "gala" "galas";
lin galactic_A = compoundA (mkA "galactic");
lin galantine_N = mkN "galantine" "galantines";
lin galashiels_PN = mkPN "Galashiels";
lin galaxy_N = mkN "galaxy" "galaxies";
lin gale_N = mkN "gale" "gales";
lin gall_N = mkN "gall" "galls";
lin gall_V2 = mkV2 (mkV "gall" "galls" "galled" "galled" "galling");
lin gallant_A = compoundA (mkA "gallant");
lin gallant_N = mkN "gallant" "gallants";
lin gallantry_N = mkN "gallantry" "gallantries";
lin galleon_N = mkN "galleon" "galleons";
lin gallery_N = mkN "gallery" "galleries";
lin galley_N = mkN "galley" "galleys";
lin galley_proof_N = mkN "galley - proof" "galley - proofs";
lin galley_slave_N = mkN "galley - slave" "galley - slaves";
lin gallic_A = compoundA (mkA "gallic");
lin gallicism_N = mkN "gallicism" "gallicisms";
lin gallivant_V = mkV "gallivant" "gallivants" "gallivanted" "gallivanted" "gallivanting";
lin gallon_N = mkN "gallon" "gallons";
lin gallop_N = mkN "gallop" "gallops";
lin gallop_V = mkV "gallop" "gallops" "galloped" "galloped" "galloping";
lin gallop_V2 = mkV2 (mkV "gallop" "gallops" "galloped" "galloped" "galloping");
lin galloway_PN = mkPN "Galloway";
lin gallows_bird_N = mkN "gallows - bird" "gallows - birds";
lin gallstone_N = mkN "gallstone" "gallstones";
lin gallup_PN = mkPN "Gallup";
lin galore_Adv = mkAdv "galore";
lin galosh_N = mkN "galosh" "galoshes";
lin galumph_V = mkV "galumph" "galumphs" "galumphed" "galumphed" "galumphing";
lin galvanic_A = compoundA (mkA "galvanic");
lin galvanism_N = mkN "galvanism" ;
lin galvanize_V2 = mkV2 (mkV "galvanize" "galvanizes" "galvanized" "galvanized" "galvanizing");
lin galvanize_VS = mkVS (mkV "galvanize");
lin galway_PN = mkPN "Galway";
lin gambia_PN = mkPN "Gambia";
lin gambian_A = compoundA (mkA "gambian");
lin gambian_N = mkN "gambian" "gambians";
lin gambit_N = mkN "gambit" "gambits";
lin gamble_N = mkN "gamble" "gambles";
lin gamble_V = mkV "gamble" "gambles" "gambled" "gambled" "gambling";
lin gamble_V2 = mkV2 (mkV "gamble" "gambles" "gambled" "gambled" "gambling");
lin gambler_N = mkN "gambler" "gamblers";
lin gambling_N = mkN "gambling" ;
lin gambling_den_N = mkN "gambling - den" "gambling - dens";
lin gamboge_N = mkN "gamboge" ;
lin gambol_N = mkN "gambol" "gambols";
lin gambol_V = mkV "gambol" "gambols" "gambolled" "gambolled" "gambolling";
lin game_A = compoundA (mkA "game");
lin game_N = mkN "game" "games";
lin game_V = mkV "game" "games" "gamed" "gamed" "gaming";
lin game_V2 = mkV2 (mkV "game" "games" "gamed" "gamed" "gaming");
lin game_bag_N = mkN "game - bag" "game - bags";
lin game_bird_N = mkN "game - bird" "game - birds";
lin game_licence_N = mkN "game - licence" "game - licences";
lin gamecock_N = mkN "gamecock" "gamecocks";
lin gamekeeper_N = mkN "gamekeeper" "gamekeepers";
lin games_master_N = mkN "games - master" "games - masters";
lin games_mistress_N = mkN "games - mistress" "games - mistresses";
lin gamesmanship_N = mkN "gamesmanship" ;
lin gaming_house_N = mkN "gaming - house" "gaming - houses";
lin gaming_table_N = mkN "gaming - table" "gaming - tables";
lin gamma_N = mkN "gamma" "gammas";
lin gammon_N = mkN "gammon" "gammons";
lin gammy_A = compoundA (mkA "gammy");
lin gamp_N = mkN "gamp" "gamps";
lin gamut_N = mkN "gamut" "gamuts";
lin gamy_A = mkA "gamy" "gamier";
lin gander_N = mkN "gander" "ganders";
lin gang_N = mkN "gang" "gangs";
lin gang_V = mkV "gang" "gangs" "ganged" "ganged" "ganging";
lin ganger_N = mkN "ganger" "gangers";
lin gangling_A = compoundA (mkA "gangling");
lin ganglion_N = mkN "ganglion" "ganglions";
lin gangplank_N = mkN "gangplank" "gangplanks";
lin gangrene_N = mkN "gangrene" ;
lin gangrene_V = mkV "gangrene" "gangrenes" "gangrened" "gangrened" "gangrening";
lin gangrene_V2 = mkV2 (mkV "gangrene" "gangrenes" "gangrened" "gangrened" "gangrening");
lin gangrenous_A = compoundA (mkA "gangrenous");
lin gangster_N = mkN "gangster" "gangsters";
lin gangway_N = mkN "gangway" "gangways";
lin gannet_N = mkN "gannet" "gannets";
lin gantry_N = mkN "gantry" "gantries";
lin gaol_N = mkN "gaol" "gaols";
lin gaol_V2 = mkV2 (mkV "gaol" "gaols" "gaoled" "gaoled" "gaoling");
lin gaolbird_N = mkN "gaolbird" "gaolbirds";
lin gaolbreak_N = mkN "gaolbreak" "gaolbreaks";
lin gaoler_N = mkN "gaoler" "gaolers";
lin gap_N = mkN "gap" "gaps";
lin gap_toothed_A = compoundA (mkA "gap - toothed");
lin gape_N = mkN "gape" "gapes";
lin gape_V = mkV "gape" "gapes" "gaped" "gaped" "gaping";
lin garage_N = mkN "garage" "garages";
lin garage_V2 = mkV2 (mkV "garage" "garages" "garaged" "garaged" "garaging");
lin garb_N = mkN "garb" ;
lin garb_V2 = mkV2 (mkV "garb" "garbs" "garbed" "garbed" "garbing");
lin garbage_N = mkN "garbage" ;
lin garbage_can_N = mkN "garbage - can" "garbage - cans";
lin garble_V2 = mkV2 (mkV "garble" "garbles" "garbled" "garbled" "garbling");
lin garden_N = mkN "garden" "gardens";
lin garden_V = mkV "garden" "gardens" "gardened" "gardened" "gardening";
lin garden_truck_N = mkN "garden - truck" "garden - trucks";
lin gardener_N = mkN "gardener" "gardeners";
lin gardenia_N = mkN "gardenia" "gardenias";
lin gardening_N = mkN "gardening" ;
lin gareth_PN = mkPN "Gareth";
lin garforth_PN = mkPN "Garforth";
lin gargantuan_A = compoundA (mkA "gargantuan");
lin gargle_N = mkN "gargle" "gargles";
lin gargle_V = mkV "gargle" "gargles" "gargled" "gargled" "gargling";
lin gargle_V2 = mkV2 (mkV "gargle" "gargles" "gargled" "gargled" "gargling");
lin gargoyle_N = mkN "gargoyle" "gargoyles";
lin garish_A = compoundA (mkA "garish");
lin garland_N = mkN "garland" "garlands";
lin garland_V2 = mkV2 (mkV "garland" "garlands" "garlanded" "garlanded" "garlanding");
lin garlic_N = mkN "garlic" ;
lin garment_N = mkN "garment" "garments";
lin garner_N = mkN "garner" "garners";
lin garner_V2 = mkV2 (mkV "garner" "garners" "garnered" "garnered" "garnering");
lin garnet_N = mkN "garnet" "garnets";
lin garnish_N = mkN "garnish" "garnishes";
lin garnish_V2 = mkV2 (mkV "garnish" "garnishes" "garnished" "garnished" "garnishing");
lin garotte_N = mkN "garotte" "garottes";
lin garotte_V2 = mkV2 (mkV "garotte" "garottes" "garotted" "garotted" "garotting");
lin garret_N = mkN "garret" "garrets";
lin garrison_N = mkN "garrison" "garrisons";
lin garrison_V2 = mkV2 (mkV "garrison" "garrisons" "garrisoned" "garrisoned" "garrisoning");
lin garrotte_N = mkN "garrotte" "garrottes";
lin garrotte_V2 = mkV2 (mkV "garrotte" "garrottes" "garrotted" "garrotted" "garrotting");
lin garrowhill_PN = mkPN "Garrowhill";
lin garrulity_N = mkN "garrulity" ;
lin garrulous_A = compoundA (mkA "garrulous");
lin garter_N = mkN "garter" "garters";
lin gary_PN = mkPN "Gary";
lin gas_N = mkN "gas" "gases";
lin gas_V = mkV "gas" "gases" "gassed" "gassed" "gassing";
lin gas_V2 = mkV2 (mkV "gas" "gases" "gassed" "gassed" "gassing");
lin gas_bracket_N = mkN "gas - bracket" "gas - brackets";
lin gas_cooker_N = mkN "gas - cooker" "gas - cookers";
lin gas_engine_N = mkN "gas - engine" "gas - engines";
lin gas_fitter_N = mkN "gas - fitter" "gas - fitters";
lin gas_helmet_N = mkN "gas - helmet" "gas - helmets";
lin gas_holder_N = mkN "gas - holder" "gas - holders";
lin gas_mask_N = mkN "gas - mask" "gas - masks";
lin gas_meter_N = mkN "gas - meter" "gas - meters";
lin gas_oven_N = mkN "gas - oven" "gas - ovens";
lin gas_ring_N = mkN "gas - ring" "gas - rings";
lin gas_station_N = mkN "gas - station" "gas - stations";
lin gas_stove_N = mkN "gas - stove" "gas - stoves";
lin gasbag_N = mkN "gasbag" "gasbags";
lin gaseous_A = compoundA (mkA "gaseous");
lin gash_N = mkN "gash" "gashes";
lin gash_V2 = mkV2 (mkV "gash" "gashes" "gashed" "gashed" "gashing");
lin gasification_N = mkN "gasification" "gasifications";
lin gasify_V = mkV "gasify" "gasifies" "gasified" "gasified" "gasifying";
lin gasify_V2 = mkV2 (mkV "gasify" "gasifies" "gasified" "gasified" "gasifying");
lin gasket_N = mkN "gasket" "gaskets";
lin gaslight_N = mkN "gaslight" ;
lin gasmask_N = mkN "gasmask" "gasmasks";
lin gasolene_N = mkN "gasolene" ;
lin gasoline_N = mkN "gasoline" ;
lin gasometer_N = mkN "gasometer" "gasometers";
lin gasp_N = mkN "gasp" "gasps";
lin gasp_V = mkV "gasp" "gasps" "gasped" "gasped" "gasping";
lin gasp_V2 = mkV2 (mkV "gasp" "gasps" "gasped" "gasped" "gasping");
lin gassy_A = mkA "gassy" "gassier";
lin gastric_A = compoundA (mkA "gastric");
lin gastritis_N = mkN "gastritis" ;
lin gastronomic_A = compoundA (mkA "gastronomic");
lin gastronomy_N = mkN "gastronomy" ;
lin gasworks_N = mkN "gasworks" "gasworks";
lin gate_N = mkN "gate" "gates";
lin gate_V2 = mkV2 (mkV "gate" "gates" "gated" "gated" "gating");
lin gateau_N = mkN "gâteau" "gâteaus";
lin gatecrash_V2 = mkV2 (mkV "gatecrash" "gatecrashes" "gatecrashed" "gatecrashed" "gatecrashing");
lin gatecrasher_N = mkN "gatecrasher" "gatecrashers";
lin gatehouse_N = mkN "gatehouse" "gatehouses";
lin gatepost_N = mkN "gatepost" "gateposts";
lin gateshead_PN = mkPN "Gateshead";
lin gateway_N = mkN "gateway" "gateways";
lin gather_V = mkV "gather" "gathers" "gathered" "gathered" "gathering";
lin gather_V2 = mkV2 (mkV "gather" "gathers" "gathered" "gathered" "gathering");
lin gatherer_N = mkN "gatherer" "gatherers";
lin gathering_N = mkN "gathering" "gatherings";
lin gatt_N = mkN "gatt" ;
lin gauche_A = compoundA (mkA "gauche");
lin gaucherie_N = mkN "gaucherie" "gaucheries";
lin gaucho_N = mkN "gaucho" "gauchos";
lin gaud_N = mkN "gaud" "gauds";
lin gaudily_Adv = mkAdv "gaudily";
lin gaudy_A = mkA "gaudy" "gaudier";
lin gaudy_N = mkN "gaudy" "gaudies";
lin gauge_N = mkN "gauge" "gauges";
lin gauge_V2 = mkV2 (mkV "gauge" "gauges" "gauged" "gauged" "gauging");
lin gaul_N = mkN "gaul" "gauls";
lin gaunt_A = compoundA (mkA "gaunt");
lin gauntlet_N = mkN "gauntlet" "gauntlets";
lin gauntness_N = mkN "gauntness" ;
lin gauze_N = mkN "gauze" ;
lin gauzy_A = mkA "gauzy" "gauzier";
lin gavel_N = mkN "gavel" "gavels";
lin gavin_PN = mkPN "Gavin";
lin gavotte_N = mkN "gavotte" "gavottes";
lin gawk_N = mkN "gawk" "gawks";
lin gawkiness_N = mkN "gawkiness" ;
lin gawky_A = mkA "gawky" "gawkier";
lin gawp_V = mkV "gawp" "gawps" "gawped" "gawped" "gawping";
lin gay_A = mkA "gay" "gayer";
lin gay_N = mkN "gay" "gays";
lin gayness_N = mkN "gayness" ;
lin gaze_N = mkN "gaze";
lin gaze_V = mkV "gaze" "gazes" "gazed" "gazed" "gazing";
lin gazelle_N = mkN "gazelle" "gazelles";
lin gazette_N = mkN "gazette" "gazettes";
lin gazette_V2 = mkV2 (mkV "gazette" "gazettes" "gazetted" "gazetted" "gazetting");
lin gazetteer_N = mkN "gazetteer" "gazetteers";
lin gazump_V = mkV "gazump" "gazumps" "gazumped" "gazumped" "gazumping";
lin gazump_V2 = mkV2 (mkV "gazump" "gazumps" "gazumped" "gazumped" "gazumping");
lin gb_PN = mkPN "Gb";
lin gcse_N = mkN "gcse" ;
lin gcses_N = mkN "GCSE" "GCSEs" ;
lin gdansk_PN = mkPN "Gdansk";
lin gdn_PN = mkPN "Gdn";
lin gdns_PN = mkPN "Gdns";
lin gear_N = mkN "gear" "gears";
lin gear_V = mkV "gear" "gears" "geared" "geared" "gearing";
lin gear_V2 = mkV2 (mkV "gear" "gears" "geared" "geared" "gearing");
lin gear_case_N = mkN "gear - case" "gear - cases";
lin gearbox_N = mkN "gearbox" "gearboxes";
lin gearshift_N = mkN "gearshift" "gearshifts";
lin gecko_N = mkN "gecko" "geckos";
lin gee_gee_N = mkN "gee - gee" "gee - gees";
lin geezer_N = mkN "geezer" "geezers";
lin geiger_N = mkN "geiger" "geigers";
lin geisha_N = mkN "geisha" "geishas";
lin gel_N = mkN "gel" "gels";
lin gel_V = mkV "gel" "gels" "gelled" "gelled" "gelling";
lin gelatin_N = mkN "gelatin" ;
lin gelatine_N = mkN "gelatine" ;
lin gelatinous_A = compoundA (mkA "gelatinous");
lin geld_V2 = mkV2 (mkV "geld" "gelds" "gelded" "gelded" "gelding");
lin gelding_N = mkN "gelding" "geldings";
lin gelignite_N = mkN "gelignite" ;
lin gelligaer_PN = mkPN "Gelligaer";
lin gelsenkirchen_PN = mkPN "Gelsenkirchen";
lin gem_N = mkN "gem" "gems";
lin gemini_PN = mkPN "Gemini";
lin gemmed_A = compoundA (mkA "gemmed");
lin gen_N = mkN "gen" ;
lin gen_PN = mkPN "Gen";
lin gen_V2 = mkV2 (mkV "gen" "gens" "genned" "genned" "genning");
lin gendarme_N = mkN "gendarme" "gendarmes";
lin gendarmerie_N = mkN "gendarmerie" "gendarmeries";
lin gender_N = mkN "gender" "genders";
lin gene_N = mkN "gene" "genes";
lin gene_PN = mkPN "Gene";
lin genealogical_A = compoundA (mkA "genealogical");
lin genealogist_N = mkN "genealogist" "genealogists";
lin genealogy_N = mkN "genealogy" "genealogies";
lin general_A = compoundA (mkA "general");
lin general_N = mkN "general" "generals";
lin generalissimo_N = mkN "generalissimo" "generalissimos";
lin generality_N = mkN "generality" "generalities";
lin generalization_N = mkN "generalization" "generalizations";
lin generalize_V = mkV "generalize" "generalizes" "generalized" "generalized" "generalizing";
lin generalize_V2 = mkV2 (mkV "generalize" "generalizes" "generalized" "generalized" "generalizing");
lin generate_V2 = mkV2 (mkV "generate" "generates" "generated" "generated" "generating");
lin generation_N = mkN "generation" "generations";
lin generative_A = compoundA (mkA "generative");
lin generator_N = mkN "generator" "generators";
lin generic_A = compoundA (mkA "generic");
lin generically_Adv = mkAdv "generically";
lin generosity_N = mkN "generosity" "generosities";
lin generous_A = compoundA (mkA "generous");
lin genesis_N = mkN "genesis" "geneses" {- FIXME: guessed plural form -};
lin genetic_A = compoundA (mkA "genetic");
lin genetically_Adv = mkAdv "genetically";
lin geneticist_N = mkN "geneticist" "geneticists";
lin genetics_N = mkN "genetics" "genetics";
lin geneva_PN = mkPN "Geneva";
lin genial_A = compoundA (mkA "genial");
lin geniality_N = mkN "geniality" "genialities";
lin genie_N = mkN "genie" "genies";
lin genital_A = compoundA (mkA "genital");
lin genitive_A = compoundA (mkA "genitive");
lin genius_N = mkN "genius" "geniuses";
lin genius_loci_N = mkN "genius loci" "IRREG";
lin genoa_PN = mkPN "Genoa";
lin genocide_N = mkN "genocide" ;
lin genova_PN = mkPN "Genova";
lin genre_N = mkN "genre" "genres";
lin genre_painting_N = mkN "genre - painting" "genre - paintings";
lin gent_N = mkN "gent" "gents";
lin genteel_A = compoundA (mkA "genteel");
lin gentian_N = mkN "gentian" "gentians";
lin gentile_A = compoundA (mkA "gentile");
lin gentile_N = mkN "gentile" "gentiles";
lin gentility_N = mkN "gentility" ;
lin gentle_A = mkA "gentle" "gentler";
lin gentleman_N = mkN "gentleman" "gentlemen" {- FIXME: guessed plural form -};
lin gentleman_at_arms_N = mkN "gentleman - at - arms" "gentlemen-*at - arms";
lin gentlemanly_A = compoundA (mkA "gentlemanly");
lin gentleness_N = mkN "gentleness" ;
lin gentlewoman_N = mkN "gentlewoman" "gentlewomen" {- FIXME: guessed plural form -};
lin gently_Adv = mkAdv "gently";
lin gentry_N = mkN "gentry" "gentry";
lin genuflect_V = mkV "genuflect" "genuflects" "genuflected" "genuflected" "genuflecting";
lin genuflection_N = mkN "genuflection" "genuflections";
lin genuflexion_N = mkN "genuflexion" "genuflexions";
lin genuine_A = compoundA (mkA "genuine");
lin genuineness_N = mkN "genuineness" ;
lin genus_N = mkN "genus" "geni" {- FIXME: guessed plural form -};
lin geocentric_A = compoundA (mkA "geocentric");
lin geoff_PN = mkPN "Geoff";
lin geoffrey_PN = mkPN "Geoffrey";
lin geographer_N = mkN "geographer" "geographers";
lin geographical_A = compoundA (mkA "geographical");
lin geography_N = mkN "geography" ;
lin geological_A = compoundA (mkA "geological");
lin geologist_N = mkN "geologist" "geologists";
lin geology_N = mkN "geology" ;
lin geometric_A = compoundA (mkA "geometric");
lin geometrical_A = compoundA (mkA "geometrical");
lin geometry_N = mkN "geometry" ;
lin geophysical_A = compoundA (mkA "geophysical");
lin geophysics_N = mkN "geophysics" "geophysics";
lin geopolitics_N = mkN "geopolitics" "geopolitics";
lin george_PN = mkPN "George";
lin georgette_N = mkN "georgette" ;
lin georgia_PN = mkPN "Georgia";
lin georgian_A = compoundA (mkA "georgian");
lin georgian_N = mkN "georgian" "georgians";
lin georgie_PN = mkPN "Georgie";
lin gerald_PN = mkPN "Gerald";
lin geraldine_PN = mkPN "Geraldine";
lin geranium_N = mkN "geranium" "geraniums";
lin gerard_PN = mkPN "Gerard";
lin geriatric_A = compoundA (mkA "geriatric");
lin geriatrician_N = mkN "geriatrician" "geriatricians";
lin geriatrics_N = mkN "geriatrics" "geriatrics";
lin germ_N = mkN "germ" "germs";
lin german_A = compoundA (mkA "German");
lin german_N = mkN "German" "Germans";
lin germane_A = compoundA (mkA "germane");
lin germanic_A = compoundA (mkA "germanic");
lin germany_PN = mkPN "Germany";
lin germicide_N = mkN "germicide" "germicides";
lin germinate_V = mkV "germinate" "germinates" "germinated" "germinated" "germinating";
lin germinate_V2 = mkV2 (mkV "germinate" "germinates" "germinated" "germinated" "germinating");
lin germination_N = mkN "germination" ;
lin gerontology_N = mkN "gerontology" ;
lin gerry_PN = mkPN "Gerry";
lin gerrymander_N = mkN "gerrymander" "gerrymanders";
lin gerrymander_V2 = mkV2 (mkV "gerrymander" "gerrymanders" "gerrymandered" "gerrymandered" "gerrymandering");
lin gertie_PN = mkPN "Gertie";
lin gertrude_PN = mkPN "Gertrude";
lin gerund_N = mkN "gerund" "gerunds";
lin gestapo_N = mkN "gestapo" "gestapos";
lin gestation_N = mkN "gestation" "gestations";
lin gesticulate_V = mkV "gesticulate" "gesticulates" "gesticulated" "gesticulated" "gesticulating";
lin gesticulation_N = mkN "gesticulation" "gesticulations";
lin gesture_N = mkN "gesture" "gestures";
lin gesture_V = mkV "gesture" "gestures" "gestured" "gestured" "gesturing";
lin get_V = IrregEng.get_V;
lin get_V2 = mkV2 (IrregEng.get_V);
lin get_V2V = mkV2V (IrregEng.get_V) noPrep to_Prep ;
lin get_VA = mkVA (IrregEng.get_V);
lin get_VV = mkVV (IrregEng.get_V);
lin get_VS = mkVS (IrregEng.get_V);
lin get_at_able_A = compoundA (mkA "get - at - able");
lin get_together_N = mkN "get - together" "get - togethers";
lin get_up_N = mkN "get - up" "get - ups";
lin getaway_N = mkN "getaway" "getaways";
lin geum_N = mkN "geum" "geums";
lin geyser_N = mkN "geyser" "geysers";
lin ghana_PN = mkPN "Ghana";
lin ghanaian_A = compoundA (mkA "ghanaian");
lin ghanaian_N = mkN "ghanaian" "ghanaians";
lin gharry_N = mkN "gharry" "gharries";
lin ghastly_A = mkA "ghastly" "ghastlier";
lin ghat_N = mkN "ghat" "ghats";
lin ghee_N = mkN "ghee" ;
lin ghent_PN = mkPN "Ghent";
lin gherkin_N = mkN "gherkin" "gherkins";
lin ghetto_N = mkN "ghetto" "ghettos";
lin ghost_N = mkN "ghost" "ghosts";
lin ghost_V = mkV "ghost" "ghosts" "ghosted" "ghosted" "ghosting";
lin ghost_V2 = mkV2 (mkV "ghost" "ghosts" "ghosted" "ghosted" "ghosting");
lin ghost_writer_N = mkN "ghost - writer" "ghost - writers";
lin ghostliness_N = mkN "ghostliness" ;
lin ghostly_A = compoundA (mkA "ghostly");
lin ghoul_N = mkN "ghoul" "ghouls";
lin ghoulish_A = compoundA (mkA "ghoulish");
lin ghq_PN = mkPN "Ghq";
lin gi_N = mkN "gi" ;
lin giant_N = mkN "giant" "giants";
lin giantess_N = mkN "giantess" "giantesses";
lin gibber_V = mkV "gibber" "gibbers" "gibbered" "gibbered" "gibbering";
lin gibberish_N = mkN "gibberish" ;
lin gibbet_N = mkN "gibbet" "gibbets";
lin gibbet_V2 = mkV2 (mkV "gibbet" "gibbets" "gibbeted" "gibbeted" "gibbeting");
lin gibbon_N = mkN "gibbon" "gibbons";
lin gibbous_A = compoundA (mkA "gibbous");
lin gibe_N = mkN "gibe" "gibes";
lin gibe_V = mkV "gibe" "gibes" "gibed" "gibed" "gibing";
lin gibingly_Adv = mkAdv "gibingly";
lin gibraltar_PN = mkPN "Gibraltar";
lin gibraltarian_A = compoundA (mkA "gibraltarian");
lin gibraltarian_N = mkN "gibraltarian" "gibraltarians";
lin giddily_Adv = mkAdv "giddily";
lin giddiness_N = mkN "giddiness" ;
lin giddy_A = mkA "giddy" "giddier";
lin giffnock_PN = mkPN "Giffnock";
lin gift_N = mkN "gift" "gifts";
lin gift_V2 = mkV2 (mkV "gift" "gifts" "gifted" "gifted" "gifting");
lin gifted_A = compoundA (mkA "gifted");
lin gig_N = mkN "gig" "gigs";
lin gigantic_A = compoundA (mkA "gigantic");
lin giggle_N = mkN "giggle" "giggles";
lin giggle_V = mkV "giggle" "giggles" "giggled" "giggled" "giggling";
lin gigolo_N = mkN "gigolo" "gigolos";
lin gilbert_PN = mkPN "Gilbert";
lin gilbertian_A = compoundA (mkA "gilbertian");
lin gild_N = mkN "gild" "gilds";
lin gild_V2 = mkV2 (mkV "gild" "gilds" "gilded" "gilded" "gilding");
lin gilder_N = mkN "gilder" "gilders";
lin gilding_N = mkN "gilding" ;
lin giles_PN = mkPN "Giles";
lin gilfach_goch_PN = mkPN "Gilfach goch";
lin gill_N = mkN "gill" "gills";
lin gill_PN = mkPN "Gill";
lin gillian_PN = mkPN "Gillian";
lin gillie_N = mkN "gillie" "gillies";
lin gillingham_PN = mkPN "Gillingham";
lin gilt_N = mkN "gilt" ;
lin gilt_edged_A = compoundA (mkA "gilt - edged");
lin gimcrack_A = compoundA (mkA "gimcrack");
lin gimlet_N = mkN "gimlet" "gimlets";
lin gimmick_N = mkN "gimmick" "gimmicks";
lin gin_N = mkN "gin" "gins";
lin gin_V2 = mkV2 (mkV "gin" "gins" "ginned" "ginned" "ginning");
lin gina_PN = mkPN "Gina";
lin ginger_N = mkN "ginger" ;
lin ginger_V2 = mkV2 (mkV "ginger" "gingers" "gingered" "gingered" "gingering");
lin gingerbread_N = mkN "gingerbread" "gingerbreads";
lin gingerly_A = compoundA (mkA "gingerly");
lin gingerly_Adv = mkAdv "gingerly";
lin gingham_N = mkN "gingham" ;
lin gingko_N = mkN "gingko" "gingkos";
lin ginseng_N = mkN "ginseng" ;
lin gipsy_N = mkN "gipsy" "gipsies";
lin giraffe_N = mkN "giraffe" "giraffes";
lin gird_V = mkV "gird";
lin gird_V2 = mkV2 (mkV "gird" "girds" "girded" "girded" "girding");
lin girder_N = mkN "girder" "girders";
lin girdle_N = mkN "girdle" "girdles";
lin girdle_V2 = mkV2 (mkV "girdle" "girdles" "girdled" "girdled" "girdling");
lin girl_N = mkN "girl" "girls";
lin girlfriend_N = mkN "girlfriend" "girlfriends";
lin girlhood_N = mkN "girlhood" ;
lin girlish_A = compoundA (mkA "girlish");
lin girlishness_N = mkN "girlishness" ;
lin giro_N = mkN "giro" ;
lin girth_N = mkN "girth" "girths";
lin girvan_PN = mkPN "Girvan";
lin gist_N = mkN "gist" "gists";
lin give_N = mkN "give" ;
lin give_V = IrregEng.give_V;
lin give_V2 = mkV2 (IrregEng.give_V);
lin give_V3 = mkV3 (IrregEng.give_V);
lin giveaway_N = mkN "giveaway" "giveaways";
lin giver_N = mkN "giver" "givers";
lin giveth_V2 = mkV2 (mkV "giveth");
lin gizzard_N = mkN "gizzard" "gizzards";
lin glace_A = compoundA (mkA "glacé");
lin glacial_A = compoundA (mkA "glacial");
lin glacier_N = mkN "glacier" "glaciers";
lin glad_A = mkA "glad" "gladder*";
lin gladden_V2 = mkV2 (mkV "gladden" "gladdens" "gladdened" "gladdened" "gladdening");
lin glade_N = mkN "glade" "glades";
lin gladiator_N = mkN "gladiator" "gladiators";
lin gladiatorial_A = compoundA (mkA "gladiatorial");
lin gladiolus_N = mkN "gladiolus" "gladioluses";
lin gladness_N = mkN "gladness" ;
lin gladsome_A = compoundA (mkA "gladsome");
lin gladys_PN = mkPN "Gladys";
lin glamorgan_PN = mkPN "Glamorgan";
lin glamorization_N = mkN "glamorization" ;
lin glamorize_V2 = mkV2 (mkV "glamorize" "glamorizes" "glamorized" "glamorized" "glamorizing");
lin glamorous_A = compoundA (mkA "glamorous");
lin glamour_N = mkN "glamour" ;
lin glance_N = mkN "glance" "glances";
lin glance_V = mkV "glance" "glances" "glanced" "glanced" "glancing";
lin glance_V2 = mkV2 (mkV "glance" "glances" "glanced" "glanced" "glancing");
lin gland_N = mkN "gland" "glands";
lin glanders_N = mkN "glanders" ;
lin glandular_A = compoundA (mkA "glandular");
lin glare_N = mkN "glare" "glares";
lin glare_V = mkV "glare" "glares" "glared" "glared" "glaring";
lin glare_V2 = mkV2 (mkV "glare" "glares" "glared" "glared" "glaring");
lin glaring_A = compoundA (mkA "glaring");
lin glasgow_PN = mkPN "Glasgow";
lin glass_N = mkN "glass" "glasses";
lin glass_V2 = mkV2 (mkV "glass" "glasses" "glassed" "glassed" "glassing");
lin glass_blower_N = mkN "glass - blower" "glass - blowers";
lin glass_cutter_N = mkN "glass - cutter" "glass - cutters";
lin glass_wool_N = mkN "glass - wool" ;
lin glassful_N = mkN "glassful" "glassfuls";
lin glasshouse_N = mkN "glasshouse" "glasshouses";
lin glassware_N = mkN "glassware" ;
lin glassworks_N = mkN "glassworks" "glassworks";
lin glassy_A = mkA "glassy" "glassier";
lin glastonbury_PN = mkPN "Glastonbury";
lin glaswegian_A = compoundA (mkA "glaswegian");
lin glaswegian_N = mkN "glaswegian" "glaswegians";
lin glaucoma_N = mkN "glaucoma" ;
lin glaucous_A = compoundA (mkA "glaucous");
lin glaze_N = mkN "glaze" "glazes";
lin glaze_V = mkV "glaze" "glazes" "glazed" "glazed" "glazing";
lin glaze_V2 = mkV2 (mkV "glaze" "glazes" "glazed" "glazed" "glazing");
lin glazier_N = mkN "glazier" "glaziers";
lin gleam_N = mkN "gleam" "gleams";
lin gleam_V = mkV "gleam" "gleams" "gleamed" "gleamed" "gleaming";
lin glean_V = mkV "glean" "gleans" "gleaned" "gleaned" "gleaning";
lin glean_V2 = mkV2 (mkV "glean" "gleans" "gleaned" "gleaned" "gleaning");
lin gleaner_N = mkN "gleaner" "gleaners";
lin glebe_N = mkN "glebe" "glebes";
lin glee_N = mkN "glee" "glees";
lin gleeful_A = compoundA (mkA "gleeful");
lin glen_N = mkN "glen" "glens";
lin glen_PN = mkPN "Glen";
lin glengarry_N = mkN "glengarry" "glengarries";
lin glenrothes_PN = mkPN "Glenrothes";
lin glib_A = mkA "glib" "glibber*";
lin glibness_N = mkN "glibness" ;
lin glide_N = mkN "glide" "glides";
lin glide_V = mkV "glide" "glides" "glided" "glided" "gliding";
lin glider_N = mkN "glider" "gliders";
lin gliding_N = mkN "gliding" ;
lin glimmer_N = mkN "glimmer" "glimmers";
lin glimmer_V = mkV "glimmer" "glimmers" "glimmered" "glimmered" "glimmering";
lin glimpse_N = mkN "glimpse" "glimpses";
lin glimpse_V2 = mkV2 (mkV "glimpse" "glimpses" "glimpsed" "glimpsed" "glimpsing");
lin glint_N = mkN "glint" "glints";
lin glint_V = mkV "glint" "glints" "glinted" "glinted" "glinting";
lin glissade_N = mkN "glissade" "glissades";
lin glissade_V = mkV "glissade" "glissades" "glissaded" "glissaded" "glissading";
lin glissando_A = compoundA (mkA "glissando");
lin glissando_Adv = mkAdv "glissando";
lin glisten_V = mkV "glisten" "glistens" "glistened" "glistened" "glistening";
lin glister_N = mkN "glister";
lin glister_V = mkV "glister" "glisters" "glistered" "glistered" "glistering";
lin glitter_N = mkN "glitter";
lin glitter_V = mkV "glitter" "glitters" "glittered" "glittered" "glittering";
lin glittering_A = compoundA (mkA "glittering");
lin gloaming_N = mkN "gloaming" "IRREG";
lin gloat_V = mkV "gloat" "gloats" "gloated" "gloated" "gloating";
lin gloat_VS = mkVS (mkV "gloat" "gloats" "gloated" "gloated" "gloating");
lin gloatingly_Adv = mkAdv "gloatingly";
lin global_A = compoundA (mkA "global");
lin globe_N = mkN "globe" "globes";
lin globetrot_V = mkV "globetrot" "globetrots" "globetrotted" "globetrotted" "globetrotting";
lin globetrotter_N = mkN "globetrotter" "globetrotters";
lin globular_A = compoundA (mkA "globular");
lin globule_N = mkN "globule" "globules";
lin glockenspiel_N = mkN "glockenspiel" "glockenspiels";
lin gloom_N = mkN "gloom" "glooms";
lin gloomily_Adv = mkAdv "gloomily";
lin gloomy_A = mkA "gloomy" "gloomier";
lin gloria_PN = mkPN "Gloria";
lin glorification_N = mkN "glorification" ;
lin glorify_V2 = mkV2 (mkV "glorify" "glorifies" "glorified" "glorified" "glorifying");
lin glorious_A = compoundA (mkA "glorious");
lin glory_N = mkN "glory" "glories";
lin glory_V = mkV "glory" "glories" "gloried" "gloried" "glorying";
lin glory_hole_N = mkN "glory - hole" "glory - holes";
lin gloss_N = mkN "gloss" "glosses";
lin gloss_V2 = mkV2 (mkV "gloss" "glosses" "glossed" "glossed" "glossing");
lin glossary_N = mkN "glossary" "glossaries";
lin glossily_Adv = mkAdv "glossily";
lin glossiness_N = mkN "glossiness" ;
lin glossop_PN = mkPN "Glossop";
lin glossy_A = mkA "glossy" "glossier";
lin glottal_A = compoundA (mkA "glottal");
lin glottis_N = mkN "glottis" "glottises";
lin gloucester_PN = mkPN "Gloucester";
lin gloucestershire_PN = mkPN "Gloucestershire";
lin glove_N = mkN "glove" "gloves";
lin glove_compartment_N = mkN "glove - compartment" "glove - compartments";
lin gloved_A = compoundA (mkA "gloved");
lin glow_N = mkN "glow" "IRREG";
lin glow_V = mkV "glow" "glows" "glowed" "glowed" "glowing";
lin glow_worm_N = mkN "glow - worm" "glow - worms";
lin glower_V = mkV "glower" "glowers" "glowered" "glowered" "glowering";
lin gloweringly_Adv = mkAdv "gloweringly";
lin glowing_A = compoundA (mkA "glowing");
lin glucose_N = mkN "glucose" ;
lin glue_N = mkN "glue" "glues";
lin glue_V2 = mkV2 (mkV "glue" "IRREG" "IRREG" "IRREG" "IRREG");
lin gluey_A = compoundA (mkA "gluey");
lin glum_A = mkA "glum" "glummer*";
lin glumness_N = mkN "glumness" ;
lin glusburn_PN = mkPN "Glusburn";
lin glut_N = mkN "glut" "gluts";
lin glut_V2 = mkV2 (mkV "glut" "gluts" "glutted" "glutted" "glutting");
lin gluten_N = mkN "gluten" ;
lin glutinous_A = compoundA (mkA "glutinous");
lin glutton_N = mkN "glutton" "gluttons";
lin gluttonous_A = compoundA (mkA "gluttonous");
lin gluttony_N = mkN "gluttony" ;
lin glycerine_N = mkN "glycerine" ;
lin gmt_PN = mkPN "Gmt";
lin gnarled_A = compoundA (mkA "gnarled");
lin gnash_V = mkV "gnash" "gnashes" "gnashed" "gnashed" "gnashing";
lin gnash_V2 = mkV2 (mkV "gnash" "gnashes" "gnashed" "gnashed" "gnashing");
lin gnat_N = mkN "gnat" "gnats";
lin gnaw_V = mkV "gnaw" "gnaws" "gnawed" "gnawed" "gnawing";
lin gnaw_V2 = mkV2 (mkV "gnaw" "gnaws" "gnawed" "gnawed" "gnawing");
lin gnome_N = mkN "gnome" "gnomes";
lin gnp_N = mkN "gnp" ;
lin gnu_N = mkN "gnu" "gnus";
lin go_N = mkN "go" "gi" {- FIXME: guessed plural form -};
lin go_V = IrregEng.go_V;
lin go_V2 = mkV2 (IrregEng.go_V);
lin go_VA = mkVA (IrregEng.go_V);
lin go_VV = mkVV (IrregEng.go_V);
lin go_VS = mkVS (IrregEng.go_V);
lin go_ahead_N = mkN "go - ahead" "IRREG";
lin go_as_you_please_A = compoundA (mkA "go - as - you - please");
lin go_between_N = mkN "go - between" "go - betweens";
lin go_by_N = mkN "go - by" "IRREG";
lin go_cart_N = mkN "go - cart" "go - carts";
lin go_getter_N = mkN "go - getter" "go - getters";
lin go_kart_N = mkN "go - kart" "go - karts";
lin go_slow_N = mkN "go - slow" "go - slows";
lin go_to_meeting_A = compoundA (mkA "go - to - meeting");
lin goad_N = mkN "goad" "goads";
lin goad_V2 = mkV2 (mkV "goad" "goads" "goaded" "goaded" "goading");
lin goal_N = mkN "goal" "goals";
lin goal_kick_N = mkN "goal - kick" "goal - kicks";
lin goal_line_N = mkN "goal - line" "goal - lines";
lin goalie_N = mkN "goalie" "goalies";
lin goalkeeper_N = mkN "goalkeeper" "goalkeepers";
lin goalless_A = compoundA (mkA "goalless");
lin goalmouth_N = mkN "goalmouth" "goalmouths";
lin goat_N = mkN "goat" "goats";
lin goatee_N = mkN "goatee" "goatees";
lin goatherd_N = mkN "goatherd" "goatherds";
lin goatskin_N = mkN "goatskin" "goatskins";
lin gob_N = mkN "gob" "gobs";
lin gobbet_N = mkN "gobbet" "gobbets";
lin gobble_N = mkN "gobble" "gobbles";
lin gobble_V = mkV "gobble" "gobbles" "gobbled" "gobbled" "gobbling";
lin gobble_V2 = mkV2 (mkV "gobble" "gobbles" "gobbled" "gobbled" "gobbling");
lin gobbledygook_N = mkN "gobbledygook" ;
lin gobbler_N = mkN "gobbler" "gobblers";
lin goblet_N = mkN "goblet" "goblets";
lin goblin_N = mkN "goblin" "goblins";
lin god_N = mkN "god" "gods";
lin god_PN = mkPN "God";
lin god_damn_A = compoundA (mkA "god - damn");
lin god_damned_A = compoundA (mkA "god - damned");
lin godalming_PN = mkPN "Godalming";
lin godchild_N = mkN "godchild" "godchildren" {- FIXME: guessed plural form -};
lin goddam_A = compoundA (mkA "goddam");
lin goddam_Adv = mkAdv "goddam";
lin goddaughter_N = mkN "goddaughter" "goddaughters";
lin goddess_N = mkN "goddess" "goddesses";
lin godfather_N = mkN "godfather" "godfathers";
lin godfearing_A = compoundA (mkA "godfearing");
lin godforsaken_A = compoundA (mkA "godforsaken");
lin godfrey_PN = mkPN "Godfrey";
lin godhead_N = mkN "godhead" ;
lin godless_A = compoundA (mkA "godless");
lin godlessness_N = mkN "godlessness" ;
lin godlike_A = compoundA (mkA "godlike");
lin godliness_N = mkN "godliness" ;
lin godly_A = mkA "godly" "godlier";
lin godmanchester_PN = mkPN "Godmanchester";
lin godmother_N = mkN "godmother" "godmothers";
lin godown_N = mkN "godown" "godowns";
lin godparent_N = mkN "godparent" "godparents";
lin godsend_N = mkN "godsend" "godsends";
lin godson_N = mkN "godson" "godsons";
lin godspeed_N = mkN "godspeed" ;
lin goffs_oak_PN = mkPN "Goffs oak";
lin goggle_V = mkV "goggle" "goggles" "goggled" "goggled" "goggling";
lin goggle_box_N = mkN "goggle - box" "goggle - boxes";
lin goggle_eyed_A = compoundA (mkA "goggle - eyed");
lin going_A = compoundA (mkA "going");
lin going_N = mkN "going" "goings";
lin going_over_N = mkN "going - over" "going - overs";
lin goitre_N = mkN "goitre" "goitres";
lin golbourne_PN = mkPN "Golbourne";
lin gold_N = mkN "gold" ;
lin gold_beater_N = mkN "gold - beater" "gold - beaters";
lin gold_digger_N = mkN "gold - digger" "gold - diggers";
lin gold_dust_N = mkN "gold - dust" ;
lin gold_foil_N = mkN "gold - foil" ;
lin gold_leaf_N = mkN "gold - leaf" ;
lin gold_plate_N = mkN "gold - plate" ;
lin gold_rush_N = mkN "gold - rush" "gold - rushes";
lin golden_A = compoundA (mkA "golden");
lin goldfield_N = mkN "goldfield" "goldfields";
lin goldfinch_N = mkN "goldfinch" "goldfinches";
lin goldfish_N = mkN "goldfish" "goldfish";
lin goldmine_N = mkN "goldmine" "goldmines";
lin goldsmith_N = mkN "goldsmith" "goldsmiths";
lin golf_N = mkN "golf" ;
lin golf_V = mkV "golf" "golfs" "golfed" "golfed" "golfing";
lin golf_ball_N = mkN "golf - ball" "golf - balls";
lin golf_club_N = mkN "golf - club" "golf - clubs";
lin golf_course_N = mkN "golf - course" "golf - courses";
lin golf_links_N = mkN "golf - links" "golf - links";
lin golfer_N = mkN "golfer" "golfers";
lin goliath_N = mkN "goliath" "goliaths";
lin golliwog_N = mkN "golliwog" "golliwogs";
lin golosh_N = mkN "golosh" "goloshes";
lin gondola_N = mkN "gondola" "gondolas";
lin gondolier_N = mkN "gondolier" "gondoliers";
lin goner_N = mkN "goner" "goners";
lin gong_N = mkN "gong" "gongs";
lin gong_V2 = mkV2 (mkV "gong" "gongs" "gonged" "gonged" "gonging");
lin gonorrhea_N = mkN "gonorrhea" ;
lin gonorrhoea_N = mkN "gonorrhoea" ;
lin goo_N = mkN "goo" ;
lin good_A = mkA "good" "goodder*";
lin good_N = mkN "good" ;
lin good_fellowship_N = mkN "good - fellowship" ;
lin good_for_naught_A = compoundA (mkA "good - for - naught");
lin good_for_naught_N = mkN "good - for - naught" "good - for - naughts";
lin good_for_nothing_A = compoundA (mkA "good - for - nothing");
lin good_for_nothing_N = mkN "good - for - nothing" "good - for - nothings";
lin good_humoured_A = compoundA (mkA "good - humoured");
lin good_looking_A = compoundA (mkA "good - looking");
lin good_natured_A = compoundA (mkA "good - natured");
lin good_neighbourliness_N = mkN "good - neighbourliness" ;
lin good_tempered_A = compoundA (mkA "good - tempered");
lin good_time_A = compoundA (mkA "good - time");
lin goodbye_N = mkN "goodbye" "goodbyes";
lin goodish_A = compoundA (mkA "goodish");
lin goodly_A = mkA "goodly" "goodlier";
lin goodness_N = mkN "goodness" ;
lin goodwill_N = mkN "goodwill" ;
lin goody_N = mkN "goody" "goodies";
lin goody_goody_A = compoundA (mkA "goody - goody");
lin goody_goody_N = mkN "goody - goody" "goody - goodies";
lin gooey_A = mkA "gooey" "gooeyyer*";
lin goof_N = mkN "goof" "goofs";
lin goof_V = mkV "goof" "goofs" "goofed" "goofed" "goofing";
lin goof_V2 = mkV2 (mkV "goof" "goofs" "goofed" "goofed" "goofing");
lin goofy_A = mkA "goofy" "goofier";
lin googly_N = mkN "googly" "googlies";
lin goole_PN = mkPN "Goole";
lin goon_N = mkN "goon" "goons";
lin goose_N = mkN "goose" "IRREG";
lin goose_flesh_N = mkN "goose - flesh" ;
lin goose_step_N = mkN "goose - step" "goose - steps";
lin gooseberry_N = mkN "gooseberry" "gooseberries";
lin gopher_N = mkN "gopher" "gophers";
lin gordian_A = compoundA (mkA "gordian");
lin gordon_PN = mkPN "Gordon";
lin gore_N = mkN "gore" ;
lin gore_V2 = mkV2 (mkV "gore" "gores" "gored" "gored" "goring");
lin gorge_N = mkN "gorge" "gorges";
lin gorge_V = mkV "gorge" "gorges" "gorged" "gorged" "gorging";
lin gorge_V2 = mkV2 (mkV "gorge" "gorges" "gorged" "gorged" "gorging");
lin gorgeous_A = compoundA (mkA "gorgeous");
lin gorgon_N = mkN "gorgon" "gorgons";
lin gorgonzola_N = mkN "gorgonzola" ;
lin gorilla_N = mkN "gorilla" "gorillas";
lin gorky_PN = mkPN "Gorky";
lin gormandize_V = mkV "gormandize" "gormandizes" "gormandized" "gormandized" "gormandizing";
lin gormless_A = compoundA (mkA "gormless");
lin gorse_N = mkN "gorse" ;
lin gorseinon_PN = mkPN "Gorseinon";
lin gory_A = mkA "gory" "gorier";
lin gosling_N = mkN "gosling" "goslings";
lin gospel_N = mkN "gospel" "gospels";
lin gosport_PN = mkPN "Gosport";
lin gossamer_N = mkN "gossamer" "gossamers";
lin gossip_N = mkN "gossip" "gossips";
lin gossip_V = mkV "gossip" "gossips" "gossiped" "gossiped" "gossiping";
lin goteborg_PN = mkPN "Goteborg";
lin goth_N = mkN "goth" "goths";
lin gothenburg_PN = mkPN "Gothenburg";
lin gothic_A = compoundA (mkA "gothic");
lin gothic_N = mkN "gothic" ;
lin gottingen_PN = mkPN "Gottingen";
lin gouache_N = mkN "gouache" ;
lin gouge_N = mkN "gouge" "gouges";
lin gouge_V2 = mkV2 (mkV "gouge" "gouges" "gouged" "gouged" "gouging");
lin goulash_N = mkN "goulash" "goulashes";
lin gourd_N = mkN "gourd" "gourds";
lin gourmand_N = mkN "gourmand" "gourmands";
lin gourmet_N = mkN "gourmet" "gourmets";
lin gourock_PN = mkPN "Gourock";
lin gout_N = mkN "gout" ;
lin gouty_A = mkA "gouty" "goutier";
lin gov_PN = mkPN "Gov";
lin govern_V = mkV "govern" "governs" "governed" "governed" "governing";
lin govern_V2 = mkV2 (mkV "govern" "governs" "governed" "governed" "governing");
lin governance_N = mkN "governance" ;
lin governess_N = mkN "governess" "governesses";
lin governing_A = compoundA (mkA "governing");
lin government_N = mkN "government" "governments";
lin governmental_A = compoundA (mkA "governmental");
lin governor_N = mkN "governor" "governors";
lin governor_general_N = mkN "governor - general" "governor - generals";
lin govt_N = mkN "govt" ;
lin gown_N = mkN "gown" "gowns";
lin gown_V2 = mkV2 (mkV "gown" "gowns" "gowned" "gowned" "gowning");
lin gp_N = mkN "gp" "gp's" {- FIXME: no plural form -};
lin grab_N = mkN "grab" "grabs";
lin grab_V = mkV "grab" "grabs" "grabbed" "grabbed" "grabbing";
lin grab_V2 = mkV2 (mkV "grab" "grabs" "grabbed" "grabbed" "grabbing");
lin grabber_N = mkN "grabber" "grabbers";
lin grace_N = mkN "grace" "graces";
lin grace_V2 = mkV2 (mkV "grace" "graces" "graced" "graced" "gracing");
lin graceful_A = compoundA (mkA "graceful");
lin graceless_A = compoundA (mkA "graceless");
lin gracious_A = compoundA (mkA "gracious");
lin graciousness_N = mkN "graciousness" ;
lin gradation_N = mkN "gradation" "gradations";
lin grade_N = mkN "grade" "grades";
lin grade_V2 = mkV2 (mkV "grade" "grades" "graded" "graded" "grading");
lin gradient_N = mkN "gradient" "gradients";
lin gradual_A = compoundA (mkA "gradual");
lin gradualness_N = mkN "gradualness" ;
lin graduate_N = mkN "graduate" "graduates";
lin graduate_V = mkV "graduate" "graduates" "graduated" "graduated" "graduating";
lin graduate_V2 = mkV2 (mkV "graduate" "graduates" "graduated" "graduated" "graduating");
lin graduation_N = mkN "graduation" "graduations";
lin graffito_N = mkN "graffito" "graffiti" {- FIXME: guessed plural form -};
lin graft_N = mkN "graft" "grafts";
lin graft_V = mkV "graft" "grafts" "grafted" "grafted" "grafting";
lin graft_V2 = mkV2 (mkV "graft" "grafts" "grafted" "grafted" "grafting");
lin grail_N = mkN "grail" "grails";
lin grain_N = mkN "grain" "grains";
lin grained_A = compoundA (mkA "grained");
lin gram_N = mkN "gram" "grams";
lin grammar_N = mkN "grammar" "grammars";
lin grammarian_N = mkN "grammarian" "grammarians";
lin grammatical_A = compoundA (mkA "grammatical");
lin gramme_N = mkN "gramme" "grammes";
lin gramophone_N = mkN "gramophone" "gramophones";
lin grampian_PN = mkPN "Grampian";
lin grampus_N = mkN "grampus" "grampuses";
lin granada_PN = mkPN "Granada";
lin granary_N = mkN "granary" "granaries";
lin grand_A = mkA "grand" "grander";
lin grand_prix_N = mkN "grand prix" "grand prices" {- FIXME: guessed plural form -};
lin grandad_N = mkN "grandad" "grandads";
lin grandaunt_N = mkN "grandaunt" "grandaunts";
lin grandchild_N = mkN "grandchild" "grandchildren" {- FIXME: guessed plural form -};
lin granddad_N = mkN "granddad" "granddads";
lin granddaughter_N = mkN "granddaughter" "granddaughters";
lin grandee_N = mkN "grandee" "grandees";
lin grandeur_N = mkN "grandeur" ;
lin grandfather_N = mkN "grandfather" "grandfathers";
lin grandiloquence_N = mkN "grandiloquence" ;
lin grandiloquent_A = compoundA (mkA "grandiloquent");
lin grandiose_A = compoundA (mkA "grandiose");
lin grandma_N = mkN "grandma" "grandmas";
lin grandmother_N = mkN "grandmother" "grandmothers";
lin grandnephew_N = mkN "grandnephew" "grandnephews";
lin grandniece_N = mkN "grandniece" "grandnieces";
lin grandpa_N = mkN "grandpa" "grandpas";
lin grandparent_N = mkN "grandparent" "grandparents";
lin grandson_N = mkN "grandson" "grandsons";
lin grandstand_N = mkN "grandstand" "grandstands";
lin granduncle_N = mkN "granduncle" "granduncles";
lin grange_N = mkN "grange" "granges";
lin grangemouth_PN = mkPN "Grangemouth";
lin granite_N = mkN "granite" ;
lin grannie_N = mkN "grannie" "grannies";
lin granny_N = mkN "granny" "grannies";
lin grant_N = mkN "grant" "grants";
lin grant_V2 = mkV2 (mkV "grant" "grants" "granted" "granted" "granting");
lin grantham_PN = mkPN "Grantham";
lin granular_A = compoundA (mkA "granular");
lin granularity_N = mkN "granularity" ;
lin granulate_V = mkV "granulate" "granulates" "granulated" "granulated" "granulating";
lin granulate_V2 = mkV2 (mkV "granulate" "granulates" "granulated" "granulated" "granulating");
lin granule_N = mkN "granule" "granules";
lin grape_N = mkN "grape" "grapes";
lin grape_sugar_N = mkN "grape - sugar" ;
lin grapefruit_N = mkN "grapefruit" "grapefruit";
lin grapeshot_N = mkN "grapeshot" ;
lin grapevine_N = mkN "grapevine" "grapevines";
lin graph_N = mkN "graph" "graphs";
lin graphic_A = compoundA (mkA "graphic");
lin graphical_A = compoundA (mkA "graphical");
lin graphics_N = mkN "graphics" "graphics";
lin graphite_N = mkN "graphite" ;
lin grapnel_N = mkN "grapnel" "grapnels";
lin grapple_V = mkV "grapple" "grapples" "grappled" "grappled" "grappling";
lin grappling_iron_N = mkN "grappling - iron" "grappling - irons";
lin grasp_N = mkN "grasp" "grasps";
lin grasp_V = mkV "grasp" "grasps" "grasped" "grasped" "grasping";
lin grasp_V2 = mkV2 (mkV "grasp" "grasps" "grasped" "grasped" "grasping");
lin grasping_A = compoundA (mkA "grasping");
lin grass_N = mkN "grass" "grasses";
lin grass_V = mkV "grass" "grasses" "grassed" "grassed" "grassing";
lin grass_V2 = mkV2 (mkV "grass" "grasses" "grassed" "grassed" "grassing");
lin grasshopper_N = mkN "grasshopper" "grasshoppers";
lin grassland_N = mkN "grassland" "grasslands";
lin grassy_A = mkA "grassy" "grassier";
lin grate_N = mkN "grate" "grates";
lin grate_V = mkV "grate" "grates" "grated" "grated" "grating";
lin grate_V2 = mkV2 (mkV "grate" "grates" "grated" "grated" "grating");
lin grateful_A = compoundA (mkA "grateful");
lin gratefulness_N = mkN "gratefulness" ;
lin grater_N = mkN "grater" "graters";
lin gratification_N = mkN "gratification" "gratifications";
lin gratify_V2 = mkV2 (mkV "gratify" "gratifies" "gratified" "gratified" "gratifying");
lin gratifying_A = compoundA (mkA "gratifying");
lin grating_N = mkN "grating" "gratings";
lin gratingly_Adv = mkAdv "gratingly";
lin gratis_A = compoundA (mkA "gratis");
lin gratis_Adv = mkAdv "gratis";
lin gratitude_N = mkN "gratitude" ;
lin gratuitous_A = compoundA (mkA "gratuitous");
lin gratuity_N = mkN "gratuity" "gratuities";
lin grave_A = mkA "grave" "graver";
lin grave_N = mkN "grave" "graves";
lin grave_V2 = mkV2 (mkV "grave" "IRREG" "IRREG" "IRREG" "IRREG");
lin gravel_N = mkN "gravel" ;
lin gravel_V2 = mkV2 (mkV "gravel" "gravels" "gravelled" "gravelled" "gravelling");
lin gravelly_A = compoundA (mkA "gravelly");
lin graven_A = compoundA (mkA "graven");
lin gravenhage_PN = mkPN "Gravenhage";
lin gravesend_PN = mkPN "Gravesend";
lin gravestone_N = mkN "gravestone" "gravestones";
lin graveyard_N = mkN "graveyard" "graveyards";
lin graving_dock_N = mkN "graving dock" "graving docks";
lin gravitate_V = mkV "gravitate" "gravitates" "gravitated" "gravitated" "gravitating";
lin gravitation_N = mkN "gravitation" ;
lin gravity_N = mkN "gravity" ;
lin gravure_N = mkN "gravure" "gravures";
lin gravy_N = mkN "gravy" ;
lin gravy_boat_N = mkN "gravy - boat" "gravy - boats";
lin gray_A = mkA "gray" "grayer";
lin gray_N = mkN "gray" "grays";
lin gray_V = mkV "gray" "grays" "grayed" "grayed" "graying";
lin gray_V2 = mkV2 (mkV "gray" "grays" "grayed" "grayed" "graying");
lin graz_PN = mkPN "Graz";
lin graze_N = mkN "graze" "grazes";
lin graze_V = mkV "graze" "grazes" "grazed" "grazed" "grazing";
lin graze_V2 = mkV2 (mkV "graze" "grazes" "grazed" "grazed" "grazing");
lin grazier_N = mkN "grazier" "graziers";
lin grazing_land_N = mkN "grazing - land" "grazing - lands";
lin grease_N = mkN "grease" ;
lin grease_V2 = mkV2 (mkV "grease" "greases" "greased" "greased" "greasing");
lin grease_gun_N = mkN "grease - gun" "grease - guns";
lin greasepaint_N = mkN "greasepaint" ;
lin greaseproof_A = compoundA (mkA "greaseproof");
lin greaser_N = mkN "greaser" "greasers";
lin greasily_Adv = mkAdv "greasily";
lin greasiness_N = mkN "greasiness" ;
lin greasy_A = mkA "greasy" "greasier";
lin great_A = mkA "great" "greater";
lin great_harwood_PN = mkPN "Great harwood";
lin great_malvern_PN = mkPN "Great malvern";
lin great_shelford_PN = mkPN "Great shelford";
lin great_yarmouth_PN = mkPN "Great yarmouth";
lin greatcoat_N = mkN "greatcoat" "greatcoats";
lin greatness_N = mkN "greatness" ;
lin grebe_N = mkN "grebe" "grebes";
lin grecian_A = compoundA (mkA "grecian");
lin greece_PN = mkPN "Greece";
lin greed_N = mkN "greed" ;
lin greedily_Adv = mkAdv "greedily";
lin greediness_N = mkN "greediness" ;
lin greedy_A = mkA "greedy" "greedier";
lin greek_A = compoundA (mkA "Greek");
lin greek_N = mkN "Greek" "Greeks";
lin green_A = mkA "green" "greener";
lin green_N = mkN "green" "greens";
lin greenback_N = mkN "greenback" "greenbacks";
lin greenery_N = mkN "greenery" ;
lin greeneyed_A = compoundA (mkA "greeneyed");
lin greenfly_N = mkN "greenfly" ;
lin greengage_N = mkN "greengage" "greengages";
lin greengrocer_N = mkN "greengrocer" "greengrocers";
lin greengrocery_N = mkN "greengrocery" "greengroceries";
lin greenhorn_N = mkN "greenhorn" "greenhorns";
lin greenhouse_N = mkN "greenhouse" "greenhouses";
lin greenish_A = compoundA (mkA "greenish");
lin greenishness_N = mkN "greenishness" ;
lin greenock_PN = mkPN "Greenock";
lin greensward_N = mkN "greensward" ;
lin greenwich_PN = mkPN "Greenwich";
lin greenwood_N = mkN "greenwood" "greenwoods";
lin greet_V2 = mkV2 (mkV "greet" "greets" "greeted" "greeted" "greeting");
lin greeting_N = mkN "greeting" "greetings";
lin greg_PN = mkPN "Greg";
lin gregarious_A = compoundA (mkA "gregarious");
lin gregariousness_N = mkN "gregariousness" ;
lin gregorian_A = compoundA (mkA "gregorian");
lin gregory_PN = mkPN "Gregory";
lin gremlin_N = mkN "gremlin" "gremlins";
lin grenada_PN = mkPN "Grenada";
lin grenade_N = mkN "grenade" "grenades";
lin grenadian_A = compoundA (mkA "grenadian");
lin grenadian_N = mkN "grenadian" "grenadians";
lin grenadier_N = mkN "grenadier" "grenadiers";
lin grey_A = mkA "grey" "greyer";
lin grey_N = mkN "grey" "greys";
lin grey_V = mkV "grey" "greys" "greyed" "greyed" "greying";
lin grey_V2 = mkV2 (mkV "grey" "greys" "greyed" "greyed" "greying");
lin grey_headed_A = compoundA (mkA "grey - headed");
lin greybeard_N = mkN "greybeard" "greybeards";
lin greyhound_N = mkN "greyhound" "greyhounds";
lin greyish_A = compoundA (mkA "greyish");
lin grid_N = mkN "grid" "grids";
lin griddle_N = mkN "griddle" "griddles";
lin gridiron_N = mkN "gridiron" "gridirons";
lin grief_N = mkN "grief" "griefs";
lin grievance_N = mkN "grievance" "grievances";
lin grieve_V = mkV "grieve" "grieves" "grieved" "grieved" "grieving";
lin grieve_V2 = mkV2 (mkV "grieve" "grieves" "grieved" "grieved" "grieving");
lin grievous_A = compoundA (mkA "grievous");
lin griffin_N = mkN "griffin" "griffins";
lin griffon_N = mkN "griffon" "griffons";
lin grill_N = mkN "grill" "grills";
lin grill_V = mkV "grill" "grills" "grilled" "grilled" "grilling";
lin grill_V2 = mkV2 (mkV "grill" "grills" "grilled" "grilled" "grilling");
lin grille_N = mkN "grille" "grilles";
lin grillroom_N = mkN "grillroom" "grillrooms";
lin grim_A = mkA "grim" "grimmer*";
lin grimace_N = mkN "grimace" "grimaces";
lin grimace_V = mkV "grimace" "grimaces" "grimaced" "grimaced" "grimacing";
lin grime_N = mkN "grime" ;
lin grime_V2 = mkV2 (mkV "grime" "grimes" "grimed" "grimed" "griming");
lin grimethorpe_PN = mkPN "Grimethorpe";
lin grimness_N = mkN "grimness" ;
lin grimsby_PN = mkPN "Grimsby";
lin grimy_A = mkA "grimy" "grimier";
lin grin_N = mkN "grin" "grins";
lin grin_V = mkV "grin" "grins" "grinned" "grinned" "grinning";
lin grin_V2 = mkV2 (mkV "grin" "grins" "grinned" "grinned" "grinning");
lin grind_N = mkN "grind" "grinds";
lin grind_V = IrregEng.grind_V;
lin grind_V2 = mkV2 (IrregEng.grind_V);
lin grinder_N = mkN "grinder" "grinders";
lin grindstone_N = mkN "grindstone" "grindstones";
lin grinstead_PN = mkPN "Grinstead";
lin grip_N = mkN "grip" "grips";
lin grip_V = mkV "grip" "grips" "gripped" "gripped" "gripping";
lin grip_V2 = mkV2 (mkV "grip" "grips" "gripped" "gripped" "gripping");
lin gripe_VS = mkVS (mkV "gripe");
lin grippe_N = mkN "grippe" "grippes";
lin gripsack_N = mkN "gripsack" "gripsacks";
lin grisly_A = compoundA (mkA "grisly");
lin grist_N = mkN "grist" ;
lin gristle_N = mkN "gristle" ;
lin grit_N = mkN "grit" ;
lin grit_V2 = mkV2 (mkV "grit" "grits" "gritted" "gritted" "gritting");
lin grits_N = mkN "grits" "grits";
lin gritty_A = mkA "gritty" "grittier";
lin grizzle_V = mkV "grizzle" "grizzles" "grizzled" "grizzled" "grizzling";
lin grizzled_A = compoundA (mkA "grizzled");
lin grizzly_N = mkN "grizzly" "grizzlies";
lin groan_N = mkN "groan" "groans";
lin groan_V = mkV "groan" "groans" "groaned" "groaned" "groaning";
lin groan_V2 = mkV2 (mkV "groan" "groans" "groaned" "groaned" "groaning");
lin groat_N = mkN "groat" "groats";
lin grocer_N = mkN "grocer" "grocers";
lin grocery_N = mkN "grocery" "groceries";
lin grog_N = mkN "grog" ;
lin groggy_A = mkA "groggy" "groggier";
lin groin_N = mkN "groin" "groins";
lin groin_V2 = mkV2 (mkV "groin" "groins" "groined" "groined" "groining");
lin groningen_PN = mkPN "Groningen";
lin groom_N = mkN "groom" "grooms";
lin groom_V2 = mkV2 (mkV "groom" "grooms" "groomed" "groomed" "grooming");
lin groove_N = mkN "groove" "grooves";
lin groove_V2 = mkV2 (mkV "groove" "grooves" "grooved" "grooved" "grooving");
lin groover_N = mkN "groover" "groovers";
lin groovy_A = mkA "groovy" "groovier";
lin grope_V = mkV "grope" "gropes" "groped" "groped" "groping";
lin grope_V2 = mkV2 (mkV "grope" "gropes" "groped" "groped" "groping");
lin gropingly_Adv = mkAdv "gropingly";
lin gross_A = compoundA (mkA "gross");
lin gross_N = mkN "gross" "gross";
lin gross_V2 = mkV2 (mkV "gross" "grosses" "grossed" "grossed" "grossing");
lin grossness_N = mkN "grossness" ;
lin grot_N = mkN "grot" "grots";
lin grotesque_A = compoundA (mkA "grotesque");
lin grotesque_N = mkN "grotesque" "grotesques";
lin grotesqueness_N = mkN "grotesqueness" ;
lin grotto_N = mkN "grotto" "grottos";
lin grotty_A = mkA "grotty" "grottier";
lin grouch_N = mkN "grouch" "grouches";
lin grouch_V = mkV "grouch" "grouches" "grouched" "grouched" "grouching";
lin grouchy_A = mkA "grouchy" "grouchier";
lin ground_N = mkN "ground" "grounds";
lin ground_V = mkV "ground" "grounds" "grounded" "grounded" "grounding";
lin ground_V2 = mkV2 (mkV "ground" "grounds" "grounded" "grounded" "grounding");
lin ground_bait_N = mkN "ground - bait" ;
lin ground_fish_N = mkN "ground - fish" "ground - fish";
lin ground_plan_N = mkN "ground - plan" "ground - plans";
lin ground_rent_N = mkN "ground - rent" "ground - rents";
lin grounding_N = mkN "grounding" "groundings";
lin groundless_A = compoundA (mkA "groundless");
lin groundnut_N = mkN "groundnut" "groundnuts";
lin groundsel_N = mkN "groundsel" ;
lin groundsheet_N = mkN "groundsheet" "groundsheets";
lin groundsman_N = mkN "groundsman" "groundsmen" {- FIXME: guessed plural form -};
lin groundwork_N = mkN "groundwork" ;
lin group_N = mkN "group" "groups";
lin group_V = mkV "group" "groups" "grouped" "grouped" "grouping";
lin group_V2 = mkV2 (mkV "group" "groups" "grouped" "grouped" "grouping");
lin grouping_N = mkN "grouping" "groupings";
lin grouse_N = mkN "grouse" "grouse";
lin grouse_V = mkV "grouse" "grouses" "groused" "groused" "grousing";
lin grouse_VS = mkVS (mkV "grouse" "grouses" "groused" "groused" "grousing");
lin grove_N = mkN "grove" "groves";
lin grovel_V = mkV "grovel" "grovels" "grovelled" "grovelled" "grovelling";
lin groveller_N = mkN "groveller" "grovellers";
lin grow_V = IrregEng.grow_V;
lin grow_V2 = mkV2 (IrregEng.grow_V);
lin grow_V2V = mkV2V (IrregEng.grow_V) noPrep to_Prep ;
lin grow_VA = mkVA (IrregEng.grow_V);
lin grow_VS = mkVS (IrregEng.grow_V);
lin grower_N = mkN "grower" "growers";
lin growl_N = mkN "growl" "growls";
lin growl_V = mkV "growl" "growls" "growled" "growled" "growling";
lin growl_V2 = mkV2 (mkV "growl" "growls" "growled" "growled" "growling");
lin growler_N = mkN "growler" "growlers";
lin growlingly_Adv = mkAdv "growlingly";
lin grown_up_A = compoundA (mkA "grown - up");
lin grown_up_N = mkN "grown - up" "grown - ups";
lin growth_N = mkN "growth" "growths";
lin groyne_N = mkN "groyne" "groynes";
lin grub_N = mkN "grub" "grubs";
lin grub_V = mkV "grub" "grubs" "grubbed" "grubbed" "grubbing";
lin grub_V2 = mkV2 (mkV "grub" "grubs" "grubbed" "grubbed" "grubbing");
lin grubbiness_N = mkN "grubbiness" ;
lin grubby_A = mkA "grubby" "grubbier";
lin grudge_N = mkN "grudge" "grudges";
lin grudge_V2 = mkV2 (mkV "grudge" "grudges" "grudged" "grudged" "grudging");
lin grudgingly_Adv = mkAdv "grudgingly";
lin gruel_N = mkN "gruel" ;
lin gruelling_A = compoundA (mkA "gruelling");
lin gruesome_A = compoundA (mkA "gruesome");
lin gruesomeness_N = mkN "gruesomeness" ;
lin gruff_A = mkA "gruff" "gruffer";
lin gruffness_N = mkN "gruffness" ;
lin grumble_N = mkN "grumble" "grumbles";
lin grumble_V = mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling";
lin grumble_V2 = mkV2 (mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling");
lin grumble_VS = mkVS (mkV "grumble" "grumbles" "grumbled" "grumbled" "grumbling");
lin grumbler_N = mkN "grumbler" "grumblers";
lin grumpily_Adv = mkAdv "grumpily";
lin grumpiness_N = mkN "grumpiness" ;
lin grumpy_A = mkA "grumpy" "grumpier";
lin grundyism_N = mkN "grundyism" ;
lin grunt_N = mkN "grunt" "grunts";
lin grunt_V = mkV "grunt" "grunts" "grunted" "grunted" "grunting";
lin grunt_V2 = mkV2 (mkV "grunt" "grunts" "grunted" "grunted" "grunting");
lin gryphon_N = mkN "gryphon" "gryphons";
lin guadalajara_PN = mkPN "Guadalajara";
lin guano_N = mkN "guano" "guanos";
lin guarantee_N = mkN "guarantee" "guarantees";
lin guarantee_V = mkV "guarantee";
lin guarantee_V2 = mkV2 (mkV "guarantee");
lin guarantee_VS = mkVS (mkV "guarantee");
lin guarantor_N = mkN "guarantor" "guarantors";
lin guaranty_N = mkN "guaranty" "guaranties";
lin guard_N = mkN "guard" "guards";
lin guard_V = mkV "guard" "guards" "guarded" "guarded" "guarding";
lin guard_V2 = mkV2 (mkV "guard" "guards" "guarded" "guarded" "guarding");
lin guard_boat_N = mkN "guard - boat" "guard - boats";
lin guarded_A = compoundA (mkA "guarded");
lin guardhouse_N = mkN "guardhouse" "guardhouses";
lin guardian_N = mkN "guardian" "guardians";
lin guardianship_N = mkN "guardianship" "guardianships";
lin guardrail_N = mkN "guardrail" "guardrails";
lin guardroom_N = mkN "guardroom" "guardrooms";
lin guardship_N = mkN "guardship" "guardships";
lin guardsman_N = mkN "guardsman" "guardsmen" {- FIXME: guessed plural form -};
lin guatemala_PN = mkPN "Guatemala";
lin guatemala_city_PN = mkPN "Guatemala city";
lin guatemalan_A = compoundA (mkA "guatemalan");
lin guatemalan_N = mkN "guatemalan" "guatemalans";
lin guava_N = mkN "guava" "guavas";
lin guayaquil_PN = mkPN "Guayaquil";
lin gudgeon_N = mkN "gudgeon" "gudgeons";
lin guelder_rose_N = mkN "guelder rose" "guelder roses";
lin guerilla_N = mkN "guerilla" "guerillas";
lin guerrilla_N = mkN "guerrilla" "guerrillas";
lin guess_N = mkN "guess" "guesses";
lin guess_V = mkV "guess" "guesses" "guessed" "guessed" "guessing";
lin guess_V2 = mkV2 (mkV "guess" "guesses" "guessed" "guessed" "guessing");
lin guess_VS = mkVS (mkV "guess" "guesses" "guessed" "guessed" "guessing");
lin guesstimate_N = mkN "guesstimate" "guesstimates";
lin guesswork_N = mkN "guesswork" ;
lin guest_N = mkN "guest" "guests";
lin guest_night_N = mkN "guest - night" "guest - nights";
lin guesthouse_N = mkN "guesthouse" "guesthouses";
lin guestroom_N = mkN "guestroom" "guestrooms";
lin guffaw_N = mkN "guffaw" "guffaws";
lin guffaw_V = mkV "guffaw" "guffaws" "guffawed" "guffawed" "guffawing";
lin guidance_N = mkN "guidance" ;
lin guide_N = mkN "guide" "guides";
lin guide_V2 = mkV2 (mkV "guide" "guides" "guided" "guided" "guiding");
lin guidebook_N = mkN "guidebook" "guidebooks";
lin guideline_N = mkN "guideline" "guidelines";
lin guild_N = mkN "guild" "guilds";
lin guild_hall_N = mkN "guild - hall" "guild - halls";
lin guilder_N = mkN "guilder" "guilders";
lin guildford_PN = mkPN "Guildford";
lin guildhall_N = mkN "guildhall" "guildhalls";
lin guile_N = mkN "guile" ;
lin guileful_A = compoundA (mkA "guileful");
lin guileless_A = compoundA (mkA "guileless");
lin guillemot_N = mkN "guillemot" "guillemots";
lin guillotine_N = mkN "guillotine" "guillotines";
lin guillotine_V2 = mkV2 (mkV "guillotine" "guillotines" "guillotined" "guillotined" "guillotining");
lin guilt_N = mkN "guilt" ;
lin guiltily_Adv = mkAdv "guiltily";
lin guiltiness_N = mkN "guiltiness" ;
lin guiltless_A = compoundA (mkA "guiltless");
lin guilty_A = mkA "guilty" "guiltier";
lin guinea_N = mkN "guinea" "guineas";
lin guinea_PN = mkPN "Guinea";
lin guinea_fowl_N = mkN "guinea - fowl" "guinea - fowl";
lin guinea_pig_N = mkN "guinea - pig" "guinea - pigs";
lin guinean_A = compoundA (mkA "guinean");
lin guinean_N = mkN "guinean" "guineans";
lin guinness_N = mkN "guinness" "guinnesses";
lin guisborough_PN = mkPN "Guisborough";
lin guise_N = mkN "guise" "guises";
lin guitar_N = mkN "guitar" "guitars";
lin guitarist_N = mkN "guitarist" "guitarists";
lin gulch_N = mkN "gulch" "gulches";
lin gulden_N = mkN "gulden" "guldens";
lin gulf_N = mkN "gulf" "gulfs";
lin gull_N = mkN "gull" "gulls";
lin gull_V2 = mkV2 (mkV "gull" "gulls" "gulled" "gulled" "gulling");
lin gullet_N = mkN "gullet" "gullets";
lin gullibility_N = mkN "gullibility" ;
lin gullible_A = compoundA (mkA "gullible");
lin gully_N = mkN "gully" "gullies";
lin gulp_N = mkN "gulp" "gulps";
lin gulp_V = mkV "gulp" "gulps" "gulped" "gulped" "gulping";
lin gulp_V2 = mkV2 (mkV "gulp" "gulps" "gulped" "gulped" "gulping");
lin gum_N = mkN "gum" "gums";
lin gum_V2 = mkV2 (mkV "gum" "gums" "gummed" "gummed" "gumming");
lin gumbo_N = mkN "gumbo" "gumbos";
lin gumboil_N = mkN "gumboil" "gumboils";
lin gumboot_N = mkN "gumboot" "gumboots";
lin gummy_A = mkA "gummy" "gummier";
lin gumption_N = mkN "gumption" ;
lin gumshoe_N = mkN "gumshoe" "gumshoes";
lin gun_N = mkN "gun" "guns";
lin gun_V2 = mkV2 (mkV "gun" "guns" "gunned" "gunned" "gunning");
lin gun_carriage_N = mkN "gun - carriage" "gun - carriages";
lin gunboat_N = mkN "gunboat" "gunboats";
lin guncotton_N = mkN "guncotton" ;
lin gundog_N = mkN "gundog" "gundogs";
lin gunfire_N = mkN "gunfire" ;
lin gunman_N = mkN "gunman" "gunmen" {- FIXME: guessed plural form -};
lin gunmetal_N = mkN "gunmetal" ;
lin gunner_N = mkN "gunner" "gunners";
lin gunnery_N = mkN "gunnery" ;
lin gunny_N = mkN "gunny" ;
lin gunplay_N = mkN "gunplay" ;
lin gunpoint_N = mkN "gunpoint" "IRREG";
lin gunpowder_N = mkN "gunpowder" ;
lin gunroom_N = mkN "gunroom" "gunrooms";
lin gunrunner_N = mkN "gunrunner" "gunrunners";
lin gunrunning_N = mkN "gunrunning" ;
lin gunshot_N = mkN "gunshot" "gunshots";
lin gunsmith_N = mkN "gunsmith" "gunsmiths";
lin gunwale_N = mkN "gunwale" "gunwales";
lin gurgle_N = mkN "gurgle" "gurgles";
lin gurgle_V = mkV "gurgle" "gurgles" "gurgled" "gurgled" "gurgling";
lin gurkha_N = mkN "gurkha" "gurkhas";
lin guru_N = mkN "guru" "gurus";
lin gush_N = mkN "gush" "gushes";
lin gush_V = mkV "gush" "gushes" "gushed" "gushed" "gushing";
lin gusher_N = mkN "gusher" "gushers";
lin gushes_VS = mkVS (mkV "gushes");
lin gushing_A = compoundA (mkA "gushing");
lin gusset_N = mkN "gusset" "gussets";
lin gusseted_A = compoundA (mkA "gusseted");
lin gust_N = mkN "gust" "gusts";
lin gustation_N = mkN "gustation" ;
lin gusto_N = mkN "gusto" ;
lin gusty_A = mkA "gusty" "gustier";
lin gut_N = mkN "gut" "guts";
lin gut_V2 = mkV2 (mkV "gut" "guts" "gutted" "gutted" "gutting");
lin gutless_A = compoundA (mkA "gutless");
lin gutta_percha_N = mkN "gutta - percha" ;
lin gutter_N = mkN "gutter" "gutters";
lin gutter_V = mkV "gutter" "gutters" "guttered" "guttered" "guttering";
lin guttersnipe_N = mkN "guttersnipe" "guttersnipes";
lin guttural_A = compoundA (mkA "guttural");
lin guttural_N = mkN "guttural" "gutturals";
lin guvnor_N = mkN "guvnor" "guvnors";
lin guy's_PN = mkPN "Guy's";
lin guy_N = mkN "guy" "guys";
lin guy_PN = mkPN "Guy";
lin guy_V2 = mkV2 (mkV "guy" "guys" "guyed" "guyed" "guying");
lin guyana_PN = mkPN "Guyana";
lin guyanese_A = compoundA (mkA "guyanese");
lin guyanese_N = mkN "guyanese" "guyanese";
lin guzzle_V = mkV "guzzle" "guzzles" "guzzled" "guzzled" "guzzling";
lin guzzle_V2 = mkV2 (mkV "guzzle" "guzzles" "guzzled" "guzzled" "guzzling");
lin guzzler_N = mkN "guzzler" "guzzlers";
lin gwen_PN = mkPN "Gwen";
lin gwendoline_PN = mkPN "Gwendoline";
lin gwent_PN = mkPN "Gwent";
lin gwersyllt_PN = mkPN "Gwersyllt";
lin gwynedd_PN = mkPN "Gwynedd";
lin gybe_V = mkV "gybe" "gybes" "gybed" "gybed" "gybing";
lin gybe_V2 = mkV2 (mkV "gybe" "gybes" "gybed" "gybed" "gybing");
lin gym_N = mkN "gym" "gyms";
lin gymkhana_N = mkN "gymkhana" "gymkhanas";
lin gymnasium_N = mkN "gymnasium" "gymnasiums";
lin gymnast_N = mkN "gymnast" "gymnasts";
lin gymnastic_A = compoundA (mkA "gymnastic");
lin gymnastics_N = mkN "gymnastics" "gymnastics";
lin gymslip_N = mkN "gymslip" "gymslips";
lin gynaecological_A = compoundA (mkA "gynaecological");
lin gynaecologist_N = mkN "gynaecologist" "gynaecologists";
lin gynaecology_N = mkN "gynaecology" ;
lin gynecological_A = compoundA (mkA "gynecological");
lin gynecologist_N = mkN "gynecologist" "gynecologists";
lin gyp_N = mkN "gyp" "gyps";
lin gyp_V2 = mkV2 (mkV "gyp" "gyps" "gypped" "gypped" "gypping");
lin gypsum_N = mkN "gypsum" ;
lin gypsy_N = mkN "gypsy" "gypsies";
lin gyrate_V = mkV "gyrate" "gyrates" "gyrated" "gyrated" "gyrating";
lin gyration_N = mkN "gyration" "gyrations";
lin gyro_N = mkN "gyro" "gyros";
lin gyroscope_N = mkN "gyroscope" "gyroscopes";
lin gyroscopic_A = compoundA (mkA "gyroscopic");
lin h'm_V = mkV "h'm" "h'ms" "h'mmed" "h'mmed" "h'mming";
lin h_bomb_N = mkN "h - bomb" "h - bombs";
lin ha'p'orth_N = mkN "ha'p'orth" "ha'p'orths";
lin ha'penny_N = mkN "ha'penny" "ha'pennies";
lin haarlem_PN = mkPN "Haarlem";
lin habeas_corpus_N = mkN "habeas corpus" ;
lin haberdasher_N = mkN "haberdasher" "haberdashers";
lin haberdashery_N = mkN "haberdashery" ;
lin habit_N = mkN "habit" "habits";
lin habitable_A = compoundA (mkA "habitable");
lin habitat_N = mkN "habitat" "habitats";
lin habitation_N = mkN "habitation" "habitations";
lin habitual_A = compoundA (mkA "habitual");
lin habituate_V2 = mkV2 (mkV "habituate" "habituates" "habituated" "habituated" "habituating");
lin habituation_N = mkN "habituation" ;
lin habitude_N = mkN "habitude" ;
lin habitue_N = mkN "habitué" "habitués";
lin hacienda_N = mkN "hacienda" "haciendas";
lin hack_N = mkN "hack" "hacks";
lin hack_V = mkV "hack" "hacks" "hacked" "hacked" "hacking";
lin hack_V2 = mkV2 (mkV "hack" "hacks" "hacked" "hacked" "hacking");
lin hackney_N = mkN "hackney" "hackneys";
lin hackney_PN = mkPN "Hackney";
lin hackneyed_A = compoundA (mkA "hackneyed");
lin hacksaw_N = mkN "hacksaw" "hacksaws";
lin haddington_PN = mkPN "Haddington";
lin haddock_N = mkN "haddock" "haddock";
lin hades_PN = mkPN "Hades";
lin hadji_N = mkN "hadji" "hadjis";
lin haematite_N = mkN "haematite" "haematites";
lin haemoglobin_N = mkN "haemoglobin" ;
lin haemophilia_N = mkN "haemophilia" ;
lin haemophiliac_N = mkN "haemophiliac" "haemophiliacs";
lin haemorrhage_N = mkN "haemorrhage" "haemorrhages";
lin haft_N = mkN "haft" "hafts";
lin hag_N = mkN "hag" "hags";
lin hag_ridden_A = compoundA (mkA "hag - ridden");
lin hagen_PN = mkPN "Hagen";
lin haggard_A = compoundA (mkA "haggard");
lin haggis_N = mkN "haggis" "haggises";
lin haggle_V = mkV "haggle" "haggles" "haggled" "haggled" "haggling";
lin hagiology_N = mkN "hagiology" "hagiologies";
lin hagley_PN = mkPN "Hagley";
lin haha_N = mkN "haha" "hahas";
lin hail_N = mkN "hail" "hails";
lin hail_V = mkV "hail" "hails" "hailed" "hailed" "hailing";
lin hail_V2 = mkV2 (mkV "hail" "hails" "hailed" "hailed" "hailing");
lin hailsham_PN = mkPN "Hailsham";
lin hailstone_N = mkN "hailstone" "hailstones";
lin hailstorm_N = mkN "hailstorm" "hailstorms";
lin haiphong_PN = mkPN "Haiphong";
lin hair's_breadth_N = mkN "hair's - breadth" "hair's - breadths";
lin hair_N = mkN "hair" "hairs";
lin hair_breadth_N = mkN "hair - breadth" "hair - breadths";
lin hair_dye_N = mkN "hair - dye" "hair - dyes";
lin hair_oil_N = mkN "hair - oil" "hair - oils";
lin hair_raising_A = compoundA (mkA "hair - raising");
lin hair_shirt_N = mkN "hair - shirt" "hair - shirts";
lin hair_slide_N = mkN "hair - slide" "hair - slides";
lin hair_trigger_N = mkN "hair - trigger" "hair - triggers";
lin hairbrush_N = mkN "hairbrush" "hairbrushes";
lin haircloth_N = mkN "haircloth" "haircloths";
lin haircut_N = mkN "haircut" "haircuts";
lin hairdo_N = mkN "hairdo" "hairdos";
lin hairdresser_N = mkN "hairdresser" "hairdressers";
lin hairdressing_N = mkN "hairdressing" ;
lin hairiness_N = mkN "hairiness" ;
lin hairless_A = compoundA (mkA "hairless");
lin hairlike_A = compoundA (mkA "hairlike");
lin hairline_N = mkN "hairline" "hairlines";
lin hairnet_N = mkN "hairnet" "hairnets";
lin hairpiece_N = mkN "hairpiece" "hairpieces";
lin hairpin_N = mkN "hairpin" "hairpins";
lin hairsplitting_A = compoundA (mkA "hairsplitting");
lin hairsplitting_N = mkN "hairsplitting" ;
lin hairspring_N = mkN "hairspring" "hairsprings";
lin hairstyle_N = mkN "hairstyle" "hairstyles";
lin hairstylist_N = mkN "hairstylist" "hairstylists";
lin hairy_A = mkA "hairy" "hairier";
lin haiti_PN = mkPN "Haiti";
lin haitian_A = compoundA (mkA "haitian");
lin haitian_N = mkN "haitian" "haitians";
lin hake_N = mkN "hake" "hake";
lin hal_PN = mkPN "Hal";
lin halberd_N = mkN "halberd" "halberds";
lin halberdier_N = mkN "halberdier" "halberdiers";
lin halcyon_A = compoundA (mkA "halcyon");
lin hale_A = compoundA (mkA "hale");
lin halesowen_PN = mkPN "Halesowen";
lin half_N = mkN "half" "halves";
lin half_Predet = ss "half";
lin half_baked_A = compoundA (mkA "half - baked");
lin half_blood_N = mkN "half - blood" "half - bloods";
lin half_breed_N = mkN "half - breed" "half - breeds";
lin half_brother_N = mkN "half - brother" "half - brothers";
lin half_caste_N = mkN "half - caste" "half - castes";
lin half_crazed_A = compoundA (mkA "half - crazed");
lin half_crown_N = mkN "half - crown" "half - crowns";
lin half_hardy_A = compoundA (mkA "half - hardy");
lin half_hearted_A = compoundA (mkA "half - hearted");
lin half_holiday_N = mkN "half - holiday" "half - holidays";
lin half_hour_N = mkN "half - hour" "half - hours";
lin half_hourly_A = compoundA (mkA "half - hourly");
lin half_hourly_Adv = mkAdv "half - hourly";
lin half_length_A = compoundA (mkA "half - length");
lin half_pay_N = mkN "half - pay" ;
lin half_price_Adv = mkAdv "half - price";
lin half_seas_over_A = compoundA (mkA "half - seas - over");
lin half_sister_N = mkN "half - sister" "half - sisters";
lin half_size_A = compoundA (mkA "half - size");
lin half_timbered_A = compoundA (mkA "half - timbered");
lin half_time_N = mkN "half - time" ;
lin half_track_N = mkN "half - track" "half - tracks";
lin half_tracked_A = compoundA (mkA "half - tracked");
lin half_truth_N = mkN "half - truth" "half - truths";
lin half_volley_N = mkN "half - volley" "half - volleys";
lin half_yearly_A = compoundA (mkA "half - yearly");
lin half_yearly_Adv = mkAdv "half - yearly";
lin halfback_N = mkN "halfback" "halfbacks";
lin halfpenny_N = mkN "halfpenny" "halfpennies";
lin halfpennyworth_N = mkN "halfpennyworth" "halfpennyworths";
lin halftone_N = mkN "halftone" "halftones";
lin halfway_A = compoundA (mkA "halfway");
lin halfway_Adv = mkAdv "halfway";
lin halfwit_N = mkN "halfwit" "halfwits";
lin halfwitted_A = compoundA (mkA "halfwitted");
lin halibut_N = mkN "halibut" "halibut";
lin halifax_PN = mkPN "Halifax";
lin halitosis_N = mkN "halitosis" ;
lin hall_N = mkN "hall" "halls";
lin hall_stand_N = mkN "hall - stand" "hall - stands";
lin halle_PN = mkPN "Halle";
lin hallelujah_N = mkN "hallelujah" "hallelujahs";
lin halliard_N = mkN "halliard" "halliards";
lin hallmark_N = mkN "hallmark" "hallmarks";
lin halloo_N = mkN "halloo" "halloos";
lin halloo_V = mkV "halloo" "halloos" "hallooed" "hallooed" "hallooing";
lin hallow_N = mkN "hallow" "hallows";
lin hallow_V2 = mkV2 (mkV "hallow" "hallows" "hallowed" "hallowed" "hallowing");
lin hallowe'en_N = mkN "hallowe'en" "hallowe'ens";
lin hallowe'en_PN = mkPN "Hallowe'en";
lin hallucination_N = mkN "hallucination" "hallucinations";
lin hallucinatory_A = compoundA (mkA "hallucinatory");
lin hallucinogenic_A = compoundA (mkA "hallucinogenic");
lin halma_N = mkN "halma" ;
lin halo_N = mkN "halo" "halos";
lin halstead_PN = mkPN "Halstead";
lin halt_A = compoundA (mkA "halt");
lin halt_N = mkN "halt" "halts";
lin halt_V = mkV "halt" "halts" "halted" "halted" "halting";
lin halt_V2 = mkV2 (mkV "halt" "halts" "halted" "halted" "halting");
lin halter_N = mkN "halter" "halters";
lin haltingly_Adv = mkAdv "haltingly";
lin halve_V2 = mkV2 (mkV "halve" "halves" "halved" "halved" "halving");
lin halyard_N = mkN "halyard" "halyards";
lin ham_N = mkN "ham" "hams";
lin ham_V = mkV "ham" "hams" "hammed" "hammed" "hamming";
lin ham_V2 = mkV2 (mkV "ham" "hams" "hammed" "hammed" "hamming");
lin ham_fisted_A = compoundA (mkA "ham - fisted");
lin ham_handed_A = compoundA (mkA "ham - handed");
lin hamadryad_N = mkN "hamadryad" "hamadryads";
lin hamburg_PN = mkPN "Hamburg";
lin hamburger_N = mkN "hamburger" "hamburgers";
lin hamhung_PN = mkPN "Hamhung";
lin hamilton_PN = mkPN "Hamilton";
lin hamlet_N = mkN "hamlet" "hamlets";
lin hammer_N = mkN "hammer" "hammers";
lin hammer_V = mkV "hammer" "hammers" "hammered" "hammered" "hammering";
lin hammer_V2 = mkV2 (mkV "hammer" "hammers" "hammered" "hammered" "hammering");
lin hammersmith_PN = mkPN "Hammersmith";
lin hammock_N = mkN "hammock" "hammocks";
lin hamper_N = mkN "hamper" "hampers";
lin hamper_V2 = mkV2 (mkV "hamper" "hampers" "hampered" "hampered" "hampering");
lin hampreston_PN = mkPN "Hampreston";
lin hampshire_PN = mkPN "Hampshire";
lin hamster_N = mkN "hamster" "hamsters";
lin hamstring_N = mkN "hamstring" "hamstrings";
lin hamstring_V2 = mkV2 (mkV "ham" IrregEng.string_V);
lin hand_N = mkN "hand" "hands";
lin hand_V2 = mkV2 (mkV "hand" "hands" "handed" "handed" "handing");
lin hand_barrow_N = mkN "hand - barrow" "hand - barrows";
lin hand_carry_V2 = mkV2 (mkV "hand - carry");
lin hand_grenade_N = mkN "hand - grenade" "hand - grenades";
lin hand_luggage_N = mkN "hand - luggage" ;
lin hand_me_down_N = mkN "hand - me - down" "hand - me - downs";
lin hand_organ_N = mkN "hand - organ" "hand - organs";
lin hand_out_N = mkN "hand - out" "hand - outs";
lin hand_picked_A = compoundA (mkA "hand - picked");
lin handbag_N = mkN "handbag" "handbags";
lin handbill_N = mkN "handbill" "handbills";
lin handbook_N = mkN "handbook" "handbooks";
lin handbrake_N = mkN "handbrake" "handbrakes";
lin handcart_N = mkN "handcart" "handcarts";
lin handclap_N = mkN "handclap" "handclaps";
lin handcuff_N = mkN "handcuff" "handcuffs";
lin handcuff_V2 = mkV2 (mkV "handcuff" "handcuffs" "handcuffed" "handcuffed" "handcuffing");
lin handful_N = mkN "handful" "handfuls";
lin handhold_N = mkN "handhold" "handholds";
lin handicap_N = mkN "handicap" "handicaps";
lin handicap_V2 = mkV2 (mkV "handicap" "handicaps" "handicapped" "handicapped" "handicapping");
lin handicraft_N = mkN "handicraft" "handicrafts";
lin handily_Adv = mkAdv "handily";
lin handiness_N = mkN "handiness" ;
lin handiwork_N = mkN "handiwork" "handiworks";
lin handkerchief_N = mkN "handkerchief" "handkerchiefs";
lin handle_N = mkN "handle" "handles";
lin handle_V = mkV "handle";
lin handle_V2 = mkV2 (mkV "handle" "handles" "handled" "handled" "handling");
lin handlebar_N = mkN "handlebar" "handlebars";
lin handler_N = mkN "handler" "handlers";
lin handmade_A = compoundA (mkA "handmade");
lin handmaid_N = mkN "handmaid" "handmaids";
lin handover_N = mkN "handover" "handovers";
lin handrail_N = mkN "handrail" "handrails";
lin handsaw_N = mkN "handsaw" "handsaws";
lin handshake_N = mkN "handshake" "handshakes";
lin handshaking_N = mkN "handshaking" ;
lin handsome_A = compoundA (mkA "handsome");
lin handstand_N = mkN "handstand" "handstands";
lin handwork_N = mkN "handwork" ;
lin handwriting_N = mkN "handwriting" ;
lin handy_A = mkA "handy" "handier";
lin handyman_N = mkN "handyman" "handymen" {- FIXME: guessed plural form -};
lin hang_N = mkN "hang" "IRREG";
lin hang_V = mkV "hang" "hangs" "hanged" "hanged" "hanging";
lin hang_V2 = mkV2 (mkV "hang" "hangs" "hanged" "hanged" "hanging");
lin hang_up_N = mkN "hang - up" "hang - ups";
lin hangar_N = mkN "hangar" "hangars";
lin hangchon_PN = mkPN "Hangchon";
lin hangdog_A = compoundA (mkA "hangdog");
lin hanger_N = mkN "hanger" "hangers";
lin hanger_on_N = mkN "hanger - on" "hangers - on";
lin hanging_N = mkN "hanging" "hangings";
lin hangman_N = mkN "hangman" "hangmen";
lin hangnail_N = mkN "hangnail" "hangnails";
lin hangover_N = mkN "hangover" "hangovers";
lin hank_N = mkN "hank" "hanks";
lin hanker_V = mkV "hanker" "hankers" "hankered" "hankered" "hankering";
lin hankering_N = mkN "hankering" "hankerings";
lin hanky_N = mkN "hanky" "hankies";
lin hanky_panky_N = mkN "hanky - panky" ;
lin hanoi_PN = mkPN "Hanoi";
lin hanover_PN = mkPN "Hanover";
lin hansard_N = mkN "hansard" "hansards";
lin hansom_N = mkN "hansom" "hansoms";
lin hap_N = mkN "hap" "haps";
lin hap_V = mkV "hap" "haps" "happed" "happed" "happing";
lin haphazard_A = compoundA (mkA "haphazard");
lin haphazard_Adv = mkAdv "haphazard";
lin hapless_A = compoundA (mkA "hapless");
lin haply_Adv = mkAdv "haply";
lin happen_V = mkV "happen" "happens" "happened" "happened" "happening";
lin happen_V2 = mkV2 (mkV "happen" "happens" "happened" "happened" "happening");
lin happen_VV = mkVV (mkV "happen" "happens" "happened" "happened" "happening");
lin happening_N = mkN "happening" "happenings";
lin happily_Adv = mkAdv "happily";
lin happiness_N = mkN "happiness" ;
lin happy_A = mkA "happy" "happier";
lin happy_go_lucky_A = compoundA (mkA "happy - go - lucky");
lin hara_kiri_N = mkN "hara - kiri" ;
lin harangue_N = mkN "harangue" "harangues";
lin harangue_V = mkV "harangue" "harangues" "harangued" "harangued" "haranguing";
lin harangue_V2 = mkV2 (mkV "harangue" "harangues" "harangued" "harangued" "haranguing");
lin harass_V2 = mkV2 (mkV "harass" "harasses" "harassed" "harassed" "harassing");
lin harassment_N = mkN "harassment" ;
lin harbin_PN = mkPN "Harbin";
lin harbinger_N = mkN "harbinger" "harbingers";
lin harbor_V2 = mkV2 (mkV "harbor");
lin harbour_N = mkN "harbour" "harbours";
lin harbour_V = mkV "harbour" "harbours" "harboured" "harboured" "harbouring";
lin harbour_V2 = mkV2 (mkV "harbour" "harbours" "harboured" "harboured" "harbouring");
lin harbourage_N = mkN "harbourage" "harbourages";
lin hard_A = mkA "hard" "harder";
lin hard_Adv = mkAdv "hard";
lin hard_baked_A = compoundA (mkA "hard - baked");
lin hard_bitten_A = compoundA (mkA "hard - bitten");
lin hard_boiled_A = compoundA (mkA "hard - boiled");
lin hard_headed_A = compoundA (mkA "hard - headed");
lin hardback_N = mkN "hardback" "hardbacks";
lin hardbacked_A = compoundA (mkA "hardbacked");
lin hardboard_N = mkN "hardboard" ;
lin hardbound_A = compoundA (mkA "hardbound");
lin hardcover_N = mkN "hardcover" "hardcovers";
lin hardcovered_A = compoundA (mkA "hardcovered");
lin harden_V = mkV "harden" "hardens" "hardened" "hardened" "hardening";
lin harden_V2 = mkV2 (mkV "harden" "hardens" "hardened" "hardened" "hardening");
lin hardhearted_A = compoundA (mkA "hardhearted");
lin hardhitting_A = compoundA (mkA "hardhitting");
lin hardihood_N = mkN "hardihood" ;
lin hardiness_N = mkN "hardiness" ;
lin hardliner_N = mkN "hardliner" "hardliners";
lin hardness_N = mkN "hardness" ;
lin hardship_N = mkN "hardship" "hardships";
lin hardtop_N = mkN "hardtop" "hardtops";
lin hardware_N = mkN "hardware" ;
lin hardwood_N = mkN "hardwood" ;
lin hardworking_A = compoundA (mkA "hardworking");
lin hardy_A = mkA "hardy" "hardier";
lin hare_N = mkN "hare" "hares";
lin hare_V = mkV "hare" "hares" "hared" "hared" "haring";
lin harebell_N = mkN "harebell" "harebells";
lin harebrained_A = compoundA (mkA "harebrained");
lin harelip_N = mkN "harelip" "harelips";
lin harem_N = mkN "harem" "harems";
lin haricot_N = mkN "haricot" "haricots";
lin haringey_PN = mkPN "Haringey";
lin hark_V = mkV "hark" "harks" "harked" "harked" "harking";
lin harlequin_N = mkN "harlequin" "harlequins";
lin harlequinade_N = mkN "harlequinade" "harlequinades";
lin harley_street_PN = mkPN "Harley street";
lin harlot_N = mkN "harlot" "harlots";
lin harlow_PN = mkPN "Harlow";
lin harm_N = mkN "harm" ;
lin harm_V2 = mkV2 (mkV "harm" "harms" "harmed" "harmed" "harming");
lin harmattan_N = mkN "harmattan" "harmattans";
lin harmful_A = compoundA (mkA "harmful");
lin harmless_A = compoundA (mkA "harmless");
lin harmonic_N = mkN "harmonic" "harmonics";
lin harmonica_N = mkN "harmonica" "harmonicas";
lin harmonious_A = compoundA (mkA "harmonious");
lin harmonium_N = mkN "harmonium" "harmoniums";
lin harmonization_N = mkN "harmonization" "harmonizations";
lin harmonize_V = mkV "harmonize" "harmonizes" "harmonized" "harmonized" "harmonizing";
lin harmonize_V2 = mkV2 (mkV "harmonize" "harmonizes" "harmonized" "harmonized" "harmonizing");
lin harmony_N = mkN "harmony" "harmonies";
lin harness_N = mkN "harness" "harnesses";
lin harness_V2 = mkV2 (mkV "harness" "harnesses" "harnessed" "harnessed" "harnessing");
lin harold_PN = mkPN "Harold";
lin harp_N = mkN "harp" "harps";
lin harp_V = mkV "harp" "harps" "harped" "harped" "harping";
lin harpenden_PN = mkPN "Harpenden";
lin harper_N = mkN "harper" "harpers";
lin harpist_N = mkN "harpist" "harpists";
lin harpoon_N = mkN "harpoon" "harpoons";
lin harpoon_V2 = mkV2 (mkV "harpoon" "harpoons" "harpooned" "harpooned" "harpooning");
lin harpsichord_N = mkN "harpsichord" "harpsichords";
lin harpsichordist_N = mkN "harpsichordist" "harpsichordists";
lin harpy_N = mkN "harpy" "harpies";
lin harridan_N = mkN "harridan" "harridans";
lin harrier_N = mkN "harrier" "harriers";
lin harriet_PN = mkPN "Harriet";
lin harrogate_PN = mkPN "Harrogate";
lin harrow_N = mkN "harrow" "harrows";
lin harrow_PN = mkPN "Harrow";
lin harrow_V2 = mkV2 (mkV "harrow" "harrows" "harrowed" "harrowed" "harrowing");
lin harry_PN = mkPN "Harry";
lin harry_V2 = mkV2 (mkV "harry" "harries" "harried" "harried" "harrying");
lin harsh_A = mkA "harsh" "harsher";
lin harshness_N = mkN "harshness" ;
lin hart_N = mkN "hart" "harts";
lin hartlepool_PN = mkPN "Hartlepool";
lin hartley_PN = mkPN "Hartley";
lin harum_scarum_A = compoundA (mkA "harum - scarum");
lin harum_scarum_N = mkN "harum - scarum" "harum - scarums";
lin harvest_N = mkN "harvest" "harvests";
lin harvest_V2 = mkV2 (mkV "harvest" "harvests" "harvested" "harvested" "harvesting");
lin harvester_N = mkN "harvester" "harvesters";
lin harvey_PN = mkPN "Harvey";
lin harwich_PN = mkPN "Harwich";
lin harwood_PN = mkPN "Harwood";
lin harworth_PN = mkPN "Harworth";
lin has_been_N = mkN "has - been" "has - beens";
lin hash_N = mkN "hash" ;
lin hash_V2 = mkV2 (mkV "hash" "hashes" "hashed" "hashed" "hashing");
lin hashish_N = mkN "hashish" ;
lin haslemere_PN = mkPN "Haslemere";
lin haslingden_PN = mkPN "Haslingden";
lin hasp_N = mkN "hasp" "hasps";
lin hassle_N = mkN "hassle" "hassles";
lin hassle_V = mkV "hassle" "hassles" "hassled" "hassled" "hassling";
lin hassle_V2 = mkV2 (mkV "hassle" "hassles" "hassled" "hassled" "hassling");
lin hassock_N = mkN "hassock" "hassocks";
lin haste_N = mkN "haste" ;
lin hasten_V = mkV "hasten" "hastens" "hastened" "hastened" "hastening";
lin hasten_V2 = mkV2 (mkV "hasten" "hastens" "hastened" "hastened" "hastening");
lin hastily_Adv = mkAdv "hastily";
lin hastiness_N = mkN "hastiness" ;
lin hastings_PN = mkPN "Hastings";
lin hasty_A = mkA "hasty" "hastier";
lin hat_N = mkN "hat" "hats";
lin hatband_N = mkN "hatband" "hatbands";
lin hatch_N = mkN "hatch" "hatches";
lin hatch_V = mkV "hatch" "hatches" "hatched" "hatched" "hatching";
lin hatch_V2 = mkV2 (mkV "hatch" "hatches" "hatched" "hatched" "hatching");
lin hatchery_N = mkN "hatchery" "hatcheries";
lin hatchet_N = mkN "hatchet" "hatchets";
lin hatching_N = mkN "hatching" ;
lin hatchway_N = mkN "hatchway" "hatchways";
lin hate_N = mkN "hate" "hates";
lin hate_V2 = mkV2 (mkV "hate" "hates" "hated" "hated" "hating");
lin hate_V2V = mkV2V (mkV "hate") noPrep to_Prep ;
lin hate_VS = mkVS (mkV "hate");
lin hateful_A = compoundA (mkA "hateful");
lin hatfield_PN = mkPN "Hatfield";
lin hatful_N = mkN "hatful" "hatfuls";
lin hatless_A = compoundA (mkA "hatless");
lin hatpin_N = mkN "hatpin" "hatpins";
lin hatred_N = mkN "hatred" "hatreds";
lin hatter_N = mkN "hatter" "hatters";
lin hauberk_N = mkN "hauberk" "hauberks";
lin haughtily_Adv = mkAdv "haughtily";
lin haughtiness_N = mkN "haughtiness" ;
lin haughty_A = mkA "haughty" "haughtier";
lin haul_N = mkN "haul" "hauls";
lin haul_V = mkV "haul" "hauls" "hauled" "hauled" "hauling";
lin haul_V2 = mkV2 (mkV "haul" "hauls" "hauled" "hauled" "hauling");
lin haulage_N = mkN "haulage" ;
lin haulier_N = mkN "haulier" "hauliers";
lin haulm_N = mkN "haulm" ;
lin haunch_N = mkN "haunch" "haunches";
lin haunt_N = mkN "haunt" "haunts";
lin haunt_V2 = mkV2 (mkV "haunt" "haunts" "haunted" "haunted" "haunting");
lin hautboy_N = mkN "hautboy" "hautboys";
lin hauteur_N = mkN "hauteur" ;
lin havana_N = mkN "havana" "havanas";
lin havana_PN = mkPN "Havana";
lin have_V = IrregEng.have_V;
lin have_V2 = mkV2 (IrregEng.have_V);
lin have_VS = mkVS (IrregEng.have_V);
lin have_VV = mkVV IrregEng.have_V;
lin haven_N = mkN "haven" "havens";
lin haverfordwest_PN = mkPN "Haverfordwest";
lin haverhill_PN = mkPN "Haverhill";
lin havering_PN = mkPN "Havering";
lin haversack_N = mkN "haversack" "haversacks";
lin havoc_N = mkN "havoc" ;
lin haw_N = mkN "haw" "haws";
lin haw_V = mkV "haw" "haws" "hawed" "hawed" "hawing";
lin haw_haw_N = mkN "haw - haw" "haw - haws";
lin hawaii_PN = mkPN "Hawaii";
lin hawick_PN = mkPN "Hawick";
lin hawk_N = mkN "hawk" "hawks";
lin hawk_V2 = mkV2 (mkV "hawk" "hawks" "hawked" "hawked" "hawking");
lin hawk_eyed_A = compoundA (mkA "hawk - eyed");
lin hawke's_bay_PN = mkPN "Hawke's bay";
lin hawker_N = mkN "hawker" "hawkers";
lin hawser_N = mkN "hawser" "hawsers";
lin hawthorn_N = mkN "hawthorn" "hawthorns";
lin hay_N = mkN "hay" ;
lin haycock_N = mkN "haycock" "haycocks";
lin hayfork_N = mkN "hayfork" "hayforks";
lin hayling_PN = mkPN "Hayling";
lin haymaker_N = mkN "haymaker" "haymakers";
lin haymaking_N = mkN "haymaking" ;
lin hayrick_N = mkN "hayrick" "hayricks";
lin haystack_N = mkN "haystack" "haystacks";
lin haywards_heath_PN = mkPN "Haywards heath";
lin haywire_A = compoundA (mkA "haywire");
lin haywire_N = mkN "haywire" ;
lin hazard_N = mkN "hazard" "hazards";
lin hazard_V2 = mkV2 (mkV "hazard" "hazards" "hazarded" "hazarded" "hazarding");
lin hazardous_A = compoundA (mkA "hazardous");
lin haze_N = mkN "haze" "hazes";
lin haze_V2 = mkV2 (mkV "haze" "hazes" "hazed" "hazed" "hazing");
lin hazel_N = mkN "hazel" "hazels";
lin hazel_PN = mkPN "Hazel";
lin hazily_Adv = mkAdv "hazily";
lin haziness_N = mkN "haziness" ;
lin hazy_A = mkA "hazy" "hazier";
lin he_Pron = mkPron "he" "him" "his" "his" singular P3 masculine ;
lin he_goat_N = mkN "he - goat" "he - goats";
lin he_man_N = mkN "he - man" "he - men";
lin head_N = mkN "head" "heads";
lin head_V = mkV "head" "heads" "headed" "headed" "heading";
lin head_V2 = mkV2 (mkV "head" "heads" "headed" "headed" "heading");
lin head_hunter_N = mkN "head - hunter" "head - hunters";
lin head_on_A = compoundA (mkA "head - on");
lin head_on_Adv = mkAdv "head - on";
lin headache_N = mkN "headache" "headaches";
lin headband_N = mkN "headband" "headbands";
lin headdress_N = mkN "headdress" "headdresses";
lin headed_A = compoundA (mkA "headed");
lin header_N = mkN "header" "headers";
lin headgear_N = mkN "headgear" ;
lin heading_N = mkN "heading" "headings";
lin headlamp_N = mkN "headlamp" "headlamps";
lin headland_N = mkN "headland" "headlands";
lin headless_A = compoundA (mkA "headless");
lin headlight_N = mkN "headlight" "headlights";
lin headline_N = mkN "headline" "headlines";
lin headlong_A = compoundA (mkA "headlong");
lin headlong_Adv = mkAdv "headlong";
lin headman_N = mkN "headman" "headmen" {- FIXME: guessed plural form -};
lin headmaster_N = mkN "headmaster" "headmasters";
lin headmistress_N = mkN "headmistress" "headmistresses";
lin headpiece_N = mkN "headpiece" "headpieces";
lin headrest_N = mkN "headrest" "headrests";
lin headroom_N = mkN "headroom" ;
lin headset_N = mkN "headset" "headsets";
lin headship_N = mkN "headship" "headships";
lin headstall_N = mkN "headstall" "headstalls";
lin headstone_N = mkN "headstone" "headstones";
lin headstrong_A = compoundA (mkA "headstrong");
lin headway_N = mkN "headway" ;
lin headwind_N = mkN "headwind" "headwinds";
lin headword_N = mkN "headword" "headwords";
lin heady_A = mkA "heady" "headier";
lin heal_V = mkV "heal" "heals" "healed" "healed" "healing";
lin heal_V2 = mkV2 (mkV "heal" "heals" "healed" "healed" "healing");
lin healer_N = mkN "healer" "healers";
lin healing_A = compoundA (mkA "healing");
lin health_N = mkN "health" ;
lin healthful_A = compoundA (mkA "healthful");
lin healthily_Adv = mkAdv "healthily";
lin healthy_A = mkA "healthy" "healthier";
lin heanor_PN = mkPN "Heanor";
lin heap_N = mkN "heap" "heaps";
lin heap_V2 = mkV2 (mkV "heap" "heaps" "heaped" "heaped" "heaping");
lin heaps_Adv = mkAdv "heaps";
lin hear_V = IrregEng.hear_V;
lin hear_V2 = mkV2 (IrregEng.hear_V);
lin hear_V2V = mkV2V (IrregEng.hear_V) noPrep to_Prep ;
lin hear_VS = mkVS (IrregEng.hear_V);
lin hearer_N = mkN "hearer" "hearers";
lin hearing_N = mkN "hearing" "hearings";
lin hearing_aid_N = mkN "hearing - aid" "hearing - aids";
lin hearken_V = mkV "hearken" "hearkens" "hearkened" "hearkened" "hearkening";
lin hearsay_N = mkN "hearsay" ;
lin hearse_N = mkN "hearse" "hearses";
lin heart's_ease_N = mkN "heart's - ease" ;
lin heart_N = mkN "heart" "hearts";
lin heart_disease_N = mkN "heart - disease" "heart - diseases";
lin heart_failure_N = mkN "heart - failure" ;
lin heart_rending_A = compoundA (mkA "heart - rending");
lin heartache_N = mkN "heartache" "heartaches";
lin heartbeat_N = mkN "heartbeat" "heartbeats";
lin heartbreak_N = mkN "heartbreak" ;
lin heartbreaking_A = compoundA (mkA "heartbreaking");
lin heartbroken_A = compoundA (mkA "heartbroken");
lin heartburn_N = mkN "heartburn" ;
lin heartburning_N = mkN "heartburning" ;
lin hearted_A = compoundA (mkA "hearted");
lin hearten_V2 = mkV2 (mkV "hearten" "heartens" "heartened" "heartened" "heartening");
lin heartfelt_A = compoundA (mkA "heartfelt");
lin hearth_N = mkN "hearth" "hearths";
lin hearthrug_N = mkN "hearthrug" "hearthrugs";
lin heartily_Adv = mkAdv "heartily";
lin heartless_A = compoundA (mkA "heartless");
lin heartlessness_N = mkN "heartlessness" ;
lin heartsick_A = compoundA (mkA "heartsick");
lin hearty_A = mkA "hearty" "heartier";
lin heat_N = mkN "heat" "heats";
lin heat_V = mkV "heat" "heats" "heated" "heated" "heating";
lin heat_V2 = mkV2 (mkV "heat" "heats" "heated" "heated" "heating");
lin heat_flash_N = mkN "heat - flash" "heat - flashes";
lin heated_A = compoundA (mkA "heated");
lin heater_N = mkN "heater" "heaters";
lin heath_N = mkN "heath" "heaths";
lin heathen_N = mkN "heathen" "heathens";
lin heathenish_A = compoundA (mkA "heathenish");
lin heather_N = mkN "heather" "heathers";
lin heather_PN = mkPN "Heather";
lin heather_mixture_N = mkN "heather - mixture" ;
lin heating_N = mkN "heating" ;
lin heatspot_N = mkN "heatspot" "heatspots";
lin heatstroke_N = mkN "heatstroke" ;
lin heatwave_N = mkN "heatwave" "heatwaves";
lin heave_N = mkN "heave" "heaves";
lin heave_V = mkV "heave" "heaves" "heaved" "heaved" "heaving";
lin heave_V2 = mkV2 (mkV "heave" "heaves" "heaved" "heaved" "heaving");
lin heaven_N = mkN "heaven" "heavens";
lin heavenly_A = compoundA (mkA "heavenly");
lin heavensent_A = compoundA (mkA "heavensent");
lin heavenward_A = compoundA (mkA "heavenward");
lin heavenward_Adv = mkAdv "heavenward";
lin heavenwards_A = compoundA (mkA "heavenwards");
lin heavenwards_Adv = mkAdv "heavenwards";
lin heavily_Adv = mkAdv "heavily";
lin heaviness_N = mkN "heaviness" ;
lin heaviside_PN = mkPN "Heaviside";
lin heavy_A = mkA "heavy" "heavier";
lin heavy_Adv = mkAdv "heavy";
lin heavy_handed_A = compoundA (mkA "heavy - handed");
lin heavy_hearted_A = compoundA (mkA "heavy - hearted");
lin heavy_laden_A = compoundA (mkA "heavy - laden");
lin heavyweight_N = mkN "heavyweight" "heavyweights";
lin hebden_royal_PN = mkPN "Hebden royal";
lin hebdomadal_A = compoundA (mkA "hebdomadal");
lin hebraic_A = compoundA (mkA "hebraic");
lin hebrew_A = compoundA (mkA "hebrew");
lin hebrew_N = mkN "hebrew" "hebrews";
lin hecatomb_N = mkN "hecatomb" "hecatombs";
lin heck_N = mkN "heck" "hecks";
lin heckle_V2 = mkV2 (mkV "heckle" "heckles" "heckled" "heckled" "heckling");
lin heckler_N = mkN "heckler" "hecklers";
lin hectare_N = mkN "hectare" "hectares";
lin hectic_A = compoundA (mkA "hectic");
lin hector_V = mkV "hector" "hectors" "hectored" "hectored" "hectoring";
lin hector_V2 = mkV2 (mkV "hector" "hectors" "hectored" "hectored" "hectoring");
lin hedge_N = mkN "hedge" "hedges";
lin hedge_V = mkV "hedge" "hedges" "hedged" "hedged" "hedging";
lin hedge_V2 = mkV2 (mkV "hedge" "hedges" "hedged" "hedged" "hedging");
lin hedge_end_PN = mkPN "Hedge end";
lin hedge_sparrow_N = mkN "hedge - sparrow" "hedge - sparrows";
lin hedgehog_N = mkN "hedgehog" "hedgehogs";
lin hedgehop_V = mkV "hedgehop" "hedgehops" "hedgehopped" "hedgehopped" "hedgehopping";
lin hedgerow_N = mkN "hedgerow" "hedgerows";
lin hedonism_N = mkN "hedonism" ;
lin hedonist_N = mkN "hedonist" "hedonists";
lin hedonistic_A = compoundA (mkA "hedonistic");
lin heed_N = mkN "heed" ;
lin heed_V2 = mkV2 (mkV "heed" "heeds" "heeded" "heeded" "heeding");
lin heedful_A = compoundA (mkA "heedful");
lin heedless_A = compoundA (mkA "heedless");
lin heehaw_N = mkN "heehaw" "heehaws";
lin heel_N = mkN "heel" "heels";
lin heel_V = mkV "heel" "heels" "heeled" "heeled" "heeling";
lin heel_V2 = mkV2 (mkV "heel" "heels" "heeled" "heeled" "heeling");
lin hefty_A = mkA "hefty" "heftier";
lin hegemony_N = mkN "hegemony" "hegemonies";
lin hegira_N = mkN "hegira" "hegiras";
lin heidelburg_PN = mkPN "Heidelburg";
lin heifer_N = mkN "heifer" "heifers";
lin height_N = mkN "height" "heights";
lin heighten_V = mkV "heighten" "heightens" "heightened" "heightened" "heightening";
lin heighten_V2 = mkV2 (mkV "heighten" "heightens" "heightened" "heightened" "heightening");
lin heinous_A = compoundA (mkA "heinous");
lin heinousness_N = mkN "heinousness" ;
lin heir_N = mkN "heir" "heirs";
lin heiress_N = mkN "heiress" "heiresses";
lin heirloom_N = mkN "heirloom" "heirlooms";
lin hejira_N = mkN "hejira" "hejiras";
lin helen_PN = mkPN "Helen";
lin helensburgh_PN = mkPN "Helensburgh";
lin helicopter_N = mkN "helicopter" "helicopters";
lin heliograph_N = mkN "heliograph" "heliographs";
lin heliograph_V2 = mkV2 (mkV "heliograph" "heliographs" "heliographed" "heliographed" "heliographing");
lin heliotrope_N = mkN "heliotrope" "heliotropes";
lin heliport_N = mkN "heliport" "heliports";
lin helium_N = mkN "helium" ;
lin hell_N = mkN "hell" "hells";
lin hellcat_N = mkN "hellcat" "hellcats";
lin hellene_N = mkN "hellene" "hellenes";
lin hellenic_A = compoundA (mkA "hellenic");
lin hellish_A = compoundA (mkA "hellish");
lin helm_N = mkN "helm" "helms";
lin helmet_N = mkN "helmet" "helmets";
lin helmeted_A = compoundA (mkA "helmeted");
lin helmsman_N = mkN "helmsman" "helmsmen" {- FIXME: guessed plural form -};
lin helot_N = mkN "helot" "helots";
lin help_N = mkN "help" "helps";
lin help_V = mkV "help" "helps" "helped" "helped" "helping";
lin help_V2 = mkV2 (mkV "help" "helps" "helped" "helped" "helping");
lin help_V2V = mkV2V (mkV "help" "helps" "helped" "helped" "helping") noPrep to_Prep ;
lin help_VV = mkVV (mkV "help" "helps" "helped" "helped" "helping");
lin help_VS = mkVS (mkV "help" "helps" "helped" "helped" "helping");
lin helper_N = mkN "helper" "helpers";
lin helpful_A = compoundA (mkA "helpful");
lin helpfulness_N = mkN "helpfulness" ;
lin helping_N = mkN "helping" "helpings";
lin helpless_A = compoundA (mkA "helpless");
lin helplessness_N = mkN "helplessness" ;
lin helpmate_N = mkN "helpmate" "helpmates";
lin helpmeet_N = mkN "helpmeet" "helpmeets";
lin helsinki_PN = mkPN "Helsinki";
lin helston_PN = mkPN "Helston";
lin helter_skelter_Adv = mkAdv "helter - skelter";
lin helter_skelter_N = mkN "helter - skelter" "helter - skelters";
lin helve_N = mkN "helve" "helves";
lin hem_N = mkN "hem" "hems";
lin hem_V = mkV "hem" "hems" "hemmed" "hemmed" "hemming";
lin hem_V2 = mkV2 (mkV "hem" "hems" "hemmed" "hemmed" "hemming");
lin hematite_N = mkN "hematite" "hematites";
lin hemel_hempstead_PN = mkPN "Hemel hempstead";
lin hemisphere_N = mkN "hemisphere" "hemispheres";
lin hemline_N = mkN "hemline" "hemlines";
lin hemlock_N = mkN "hemlock" "hemlocks";
lin hemming_stitch_N = mkN "hemming - stitch" "hemming - stitches";
lin hemoglobin_N = mkN "hemoglobin" ;
lin hemophilia_N = mkN "hemophilia" ;
lin hemophiliac_N = mkN "hemophiliac" "hemophiliacs";
lin hemorrhage_N = mkN "hemorrhage" "hemorrhages";
lin hemorrhage_V = mkV "hemorrhage";
lin hemorrhage_V2 = mkV2 (mkV "hemorrhage");
lin hemp_N = mkN "hemp" ;
lin hempen_A = compoundA (mkA "hempen");
lin hemstitch_N = mkN "hemstitch" "hemstitches";
lin hemstitch_V2 = mkV2 (mkV "hemstitch" "hemstitches" "hemstitched" "hemstitched" "hemstitching");
lin hemsworth_PN = mkPN "Hemsworth";
lin hen_N = mkN "hen" "hens";
lin hen_party_N = mkN "hen - party" "hen - parties";
lin henbane_N = mkN "henbane" ;
lin hence_Adv = mkAdv "hence";
lin henceforth_Adv = mkAdv "henceforth";
lin henceforward_Adv = mkAdv "henceforward";
lin henchman_N = mkN "henchman" "henchmen" {- FIXME: guessed plural form -};
lin hencoop_N = mkN "hencoop" "hencoops";
lin henhouse_N = mkN "henhouse" "henhouses";
lin henley_on_thames_PN = mkPN "Henley - on - thames";
lin henna_N = mkN "henna" ;
lin hennaed_A = compoundA (mkA "hennaed");
lin henpecked_A = compoundA (mkA "henpecked");
lin henroost_N = mkN "henroost" "henroosts";
lin henry_PN = mkPN "Henry";
lin hep_A = compoundA (mkA "hep");
lin hepatitis_N = mkN "hepatitis" ;
lin heptagon_N = mkN "heptagon" "heptagons";
lin herald_N = mkN "herald" "heralds";
lin herald_V2 = mkV2 (mkV "herald" "heralds" "heralded" "heralded" "heralding");
lin heraldic_A = compoundA (mkA "heraldic");
lin heraldry_N = mkN "heraldry" ;
lin herb_N = mkN "herb" "herbs";
lin herb_PN = mkPN "Herb";
lin herbaceous_A = compoundA (mkA "herbaceous");
lin herbage_N = mkN "herbage" ;
lin herbal_A = compoundA (mkA "herbal");
lin herbalist_N = mkN "herbalist" "herbalists";
lin herbert_PN = mkPN "Herbert";
lin herbivorous_A = compoundA (mkA "herbivorous");
lin herculean_A = compoundA (mkA "herculean");
lin herd_N = mkN "herd" "herds";
lin herd_V = mkV "herd" "herds" "herded" "herded" "herding";
lin herd_V2 = mkV2 (mkV "herd" "herds" "herded" "herded" "herding");
lin herdsman_N = mkN "herdsman" "herdsmen" {- FIXME: guessed plural form -};
lin here_Adv = mkAdv "here";
lin hereabouts_Adv = mkAdv "hereabouts";
lin hereafter_Adv = mkAdv "hereafter";
lin hereafter_N = mkN "hereafter" "IRREG";
lin hereby_Adv = mkAdv "hereby";
lin hereditament_N = mkN "hereditament" "hereditaments";
lin hereditary_A = compoundA (mkA "hereditary");
lin heredity_N = mkN "heredity" ;
lin hereford_PN = mkPN "Hereford";
lin herein_Adv = mkAdv "herein";
lin hereinafter_Adv = mkAdv "hereinafter";
lin hereinbefore_Adv = mkAdv "hereinbefore";
lin hereof_Adv = mkAdv "hereof";
lin heresy_N = mkN "heresy" "heresies";
lin heretic_N = mkN "heretic" "heretics";
lin heretical_A = compoundA (mkA "heretical");
lin hereto_Adv = mkAdv "hereto";
lin heretofore_Adv = mkAdv "heretofore";
lin hereupon_Adv = mkAdv "hereupon";
lin herewith_Adv = mkAdv "herewith";
lin heritable_A = compoundA (mkA "heritable");
lin heritage_N = mkN "heritage" "IRREG";
lin hermaphrodite_N = mkN "hermaphrodite" "hermaphrodites";
lin hermetic_A = compoundA (mkA "hermetic");
lin hermetically_Adv = mkAdv "hermetically";
lin hermit_N = mkN "hermit" "hermits";
lin hermitage_N = mkN "hermitage" "hermitages";
lin herne_PN = mkPN "Herne";
lin herne_bay_PN = mkPN "Herne bay";
lin hernia_N = mkN "hernia" "hernias";
lin hero_N = mkN "hero" "heroes";
lin heroic_A = compoundA (mkA "heroic");
lin heroically_Adv = mkAdv "heroically";
lin heroics_N = mkN "heroics" "heroics";
lin heroin_N = mkN "heroin" ;
lin heroine_N = mkN "heroine" "heroines";
lin heroism_N = mkN "heroism" ;
lin heron_N = mkN "heron" "herons";
lin heronry_N = mkN "heronry" "heronries";
lin herr_N = mkN "herr" "IRREG";
lin herring_N = mkN "herring" "herring";
lin herringbone_N = mkN "herringbone" ;
lin hertford_PN = mkPN "Hertford";
lin hertfordshire_PN = mkPN "Hertfordshire";
lin hertz_N = mkN "hertz" "hertz";
lin hertzian_A = compoundA (mkA "hertzian");
lin hesitance_N = mkN "hesitance" "IRREG";
lin hesitancy_N = mkN "hesitancy" ;
lin hesitant_A = compoundA (mkA "hesitant");
lin hesitate_V = mkV "hesitate" "hesitates" "hesitated" "hesitated" "hesitating";
lin hesitate_VV = mkVV (mkV "hesitate" "hesitates" "hesitated" "hesitated" "hesitating");
lin hesitate_VS = mkVS (mkV "hesitate" "hesitates" "hesitated" "hesitated" "hesitating");
lin hesitatingly_Adv = mkAdv "hesitatingly";
lin hesitation_N = mkN "hesitation" "hesitations";
lin hessian_N = mkN "hessian" ;
lin het_up_A = compoundA (mkA "het - up");
lin heterodox_A = compoundA (mkA "heterodox");
lin heterodoxy_N = mkN "heterodoxy" ;
lin heterogeneous_A = compoundA (mkA "heterogeneous");
lin heterosexual_A = compoundA (mkA "heterosexual");
lin heterosexual_N = mkN "heterosexual" "heterosexuals";
lin heterosexuality_N = mkN "heterosexuality" ;
lin hetton_PN = mkPN "Hetton";
lin heuristic_A = compoundA (mkA "heuristic");
lin heuristics_N = mkN "heuristics" "heuristics";
lin hew_V = mkV "hew" "hews" "hewed" "hewed" "hewing";
lin hew_V2 = mkV2 (mkV "hew" "hews" "hewed" "hewed" "hewing");
lin hewer_N = mkN "hewer" "hewers";
lin hexagon_N = mkN "hexagon" "hexagons";
lin hexagonal_A = compoundA (mkA "hexagonal");
lin hexameter_N = mkN "hexameter" "hexameters";
lin hexham_PN = mkPN "Hexham";
lin heyday_N = mkN "heyday" "IRREG";
lin heysham_PN = mkPN "Heysham";
lin heywood_PN = mkPN "Heywood";
lin hi_fi_A = compoundA (mkA "hi - fi");
lin hi_fi_N = mkN "hi - fi" "hi - fis";
lin hiatus_N = mkN "hiatus" "hiatuses";
lin hibernate_V = mkV "hibernate" "hibernates" "hibernated" "hibernated" "hibernating";
lin hibernation_N = mkN "hibernation" ;
lin hibiscus_N = mkN "hibiscus" ;
lin hiccough_N = mkN "hiccough" "hiccoughs";
lin hiccough_V = mkV "hiccough" "hiccoughs" "hiccoughed" "hiccoughed" "hiccoughing";
lin hiccup_N = mkN "hiccup" "hiccups";
lin hiccup_V = mkV "hiccup" "hiccups" "hiccupped" "hiccupped" "hiccupping";
lin hick_A = compoundA (mkA "hick");
lin hick_N = mkN "hick" "hicks";
lin hickory_N = mkN "hickory" "hickories";
lin hide_N = mkN "hide" "hides";
lin hide_V = IrregEng.hide_V;
lin hide_V2 = mkV2 (IrregEng.hide_V);
lin hide_and_seek_N = mkN "hide - and - seek" ;
lin hide_out_N = mkN "hide - out" "hide - outs";
lin hideaway_N = mkN "hideaway" "hideaways";
lin hidebound_A = compoundA (mkA "hidebound");
lin hideous_A = compoundA (mkA "hideous");
lin hiding_N = mkN "hiding" "hidings";
lin hiding_place_N = mkN "hiding - place" "hiding - places";
lin hie_V = mkV "hie" "IRREG" "IRREG" "IRREG" "IRREG";
lin hierarchic_A = compoundA (mkA "hierarchic");
lin hierarchical_A = compoundA (mkA "hierarchical");
lin hierarchy_N = mkN "hierarchy" "hierarchies";
lin hieroglyph_N = mkN "hieroglyph" "hieroglyphs";
lin hieroglyphic_A = compoundA (mkA "hieroglyphic");
lin hieroglyphics_N = mkN "hieroglyphics" "hieroglyphics";
lin higgledy_piggledy_A = compoundA (mkA "higgledy - piggledy");
lin higgledy_piggledy_Adv = mkAdv "higgledy - piggledy";
lin high_A = mkA "high" "higher";
lin high_Adv = mkAdv "high";
lin high_class_A = compoundA (mkA "high - class");
lin high_falutin_A = compoundA (mkA "high - falutin");
lin high_fidelity_A = compoundA (mkA "high - fidelity");
lin high_fidelity_N = mkN "high - fidelity" ;
lin high_frequency_N = mkN "high - frequency" "high - frequencies";
lin high_grade_A = compoundA (mkA "high - grade");
lin high_handed_A = compoundA (mkA "high - handed");
lin high_keyed_A = compoundA (mkA "high - keyed");
lin high_level_A = compoundA (mkA "high - level");
lin high_minded_A = compoundA (mkA "high - minded");
lin high_mindedness_N = mkN "high - mindedness" ;
lin high_necked_A = compoundA (mkA "high - necked");
lin high_octane_A = compoundA (mkA "high - octane");
lin high_pitched_A = compoundA (mkA "high - pitched");
lin high_powered_A = compoundA (mkA "high - powered");
lin high_pressure_N = mkN "high - pressure" ;
lin high_priced_A = compoundA (mkA "high - priced");
lin high_principled_A = compoundA (mkA "high - principled");
lin high_ranking_A = compoundA (mkA "high - ranking");
lin high_rise_A = compoundA (mkA "high - rise");
lin high_sounding_A = compoundA (mkA "high - sounding");
lin high_speed_A = compoundA (mkA "high - speed");
lin high_spen_PN = mkPN "High spen";
lin high_spirited_A = compoundA (mkA "high - spirited");
lin high_tension_A = compoundA (mkA "high - tension");
lin high_toned_A = compoundA (mkA "high - toned");
lin high_up_N = mkN "high - up" "high - ups";
lin high_wycombe_PN = mkPN "High wycombe";
lin highball_N = mkN "highball" "highballs";
lin highborn_A = compoundA (mkA "highborn");
lin highboy_N = mkN "highboy" "highboys";
lin highbrow_A = compoundA (mkA "highbrow");
lin highbrow_N = mkN "highbrow" "highbrows";
lin highflier_N = mkN "highflier" "highfliers";
lin highflown_A = compoundA (mkA "highflown");
lin highflyer_N = mkN "highflyer" "highflyers";
lin highflying_A = compoundA (mkA "highflying");
lin highjack_N = mkN "highjack" "highjacks";
lin highjack_V2 = mkV2 (mkV "highjack" "highjacks" "highjacked" "highjacked" "highjacking");
lin highland_N = mkN "highland" "highlands";
lin highland_PN = mkPN "Highland";
lin highlander_N = mkN "highlander" "highlanders";
lin highlight_N = mkN "highlight" "highlights";
lin highlight_V2 = mkV2 (mkV "highlight" "highlights" "highlighted" "highlighted" "highlighting");
lin highness_N = mkN "highness" "highnesses";
lin highroad_N = mkN "highroad" "highroads";
lin highway_N = mkN "highway" "highways";
lin highwayman_N = mkN "highwayman" "highwaymen" {- FIXME: guessed plural form -};
lin hijack_N = mkN "hijack" "hijacks";
lin hijack_V2 = mkV2 (mkV "hijack" "hijacks" "hijacked" "hijacked" "hijacking");
lin hijacker_N = mkN "hijacker" "hijackers";
lin hike_N = mkN "hike" "hikes";
lin hike_V = mkV "hike" "hikes" "hiked" "hiked" "hiking";
lin hiker_N = mkN "hiker" "hikers";
lin hilarious_A = compoundA (mkA "hilarious");
lin hilarity_N = mkN "hilarity" ;
lin hilary_PN = mkPN "Hilary";
lin hilda_PN = mkPN "Hilda";
lin hill_N = mkN "hill" "hills";
lin hill_billy_N = mkN "hill - billy" "hill - billies";
lin hillingdon_PN = mkPN "Hillingdon";
lin hillock_N = mkN "hillock" "hillocks";
lin hillside_N = mkN "hillside" "hillsides";
lin hilly_A = mkA "hilly" "hillier";
lin hilt_N = mkN "hilt" "hilts";
lin hinckley_PN = mkPN "Hinckley";
lin hind_A = compoundA (mkA "hind");
lin hind_N = mkN "hind" "hinds";
lin hinder_V2 = mkV2 (mkV "hinder" "hinders" "hindered" "hindered" "hindering");
lin hindi_A = compoundA (mkA "hindi");
lin hindi_N = mkN "hindi" ;
lin hindmost_A = compoundA (mkA "hindmost");
lin hindrance_N = mkN "hindrance" "hindrances";
lin hindsight_N = mkN "hindsight" ;
lin hindu_A = compoundA (mkA "hindu");
lin hindu_N = mkN "hindu" "hindus";
lin hinduism_N = mkN "hinduism" ;
lin hindustani_A = compoundA (mkA "hindustani");
lin hindustani_N = mkN "hindustani" "hindustanis";
lin hinge_N = mkN "hinge" "hinges";
lin hinge_V = mkV "hinge" "hinges" "hinged" "hinged" "hinging";
lin hinge_V2 = mkV2 (mkV "hinge" "hinges" "hinged" "hinged" "hinging");
lin hint_N = mkN "hint" "hints";
lin hint_V = mkV "hint" "hints" "hinted" "hinted" "hinting";
lin hint_V2 = mkV2 (mkV "hint" "hints" "hinted" "hinted" "hinting");
lin hint_VS = mkVS (mkV "hint" "hints" "hinted" "hinted" "hinting");
lin hinterland_N = mkN "hinterland" "hinterlands";
lin hip_A = compoundA (mkA "hip");
lin hip_N = mkN "hip" "hips";
lin hip_bath_N = mkN "hip - bath" "hip - baths";
lin hip_flask_N = mkN "hip - flask" "hip - flasks";
lin hip_pocket_N = mkN "hip - pocket" "hip - pockets";
lin hippie_N = mkN "hippie" "hippies";
lin hippo_N = mkN "hippo" "hippos";
lin hippocratic_A = compoundA (mkA "hippocratic");
lin hippodrome_N = mkN "hippodrome" "hippodromes";
lin hippopotamus_N = mkN "hippopotamus" "hippopotamuses";
lin hippy_N = mkN "hippy" "hippies";
lin hire_N = mkN "hire" ;
lin hire_V = mkV "hire";
lin hire_V2 = mkV2 (mkV "hire" "hires" "hired" "hired" "hiring");
lin hire_V2V = mkV2V (mkV "hire") noPrep to_Prep ;
lin hire_VS = mkVS (mkV "hire");
lin hireling_N = mkN "hireling" "hirelings";
lin hiroshima_PN = mkPN "Hiroshima";
lin hirsute_A = compoundA (mkA "hirsute");
lin hiss_N = mkN "hiss" "hisses";
lin hiss_V = mkV "hiss" "hisses" "hissed" "hissed" "hissing";
lin hiss_V2 = mkV2 (mkV "hiss" "hisses" "hissed" "hissed" "hissing");
lin histogram_N = mkN "histogram" "histograms";
lin historian_N = mkN "historian" "historians";
lin historic_A = compoundA (mkA "historic");
lin historical_A = compoundA (mkA "historical");
lin historicize_V2 = mkV2 (mkV "historicize");
lin history_N = mkN "history" "histories";
lin histrionic_A = compoundA (mkA "histrionic");
lin histrionics_N = mkN "histrionics" "histrionics";
lin hit_N = mkN "hit" "hits";
lin hit_V = IrregEng.hit_V;
lin hit_V2 = mkV2 (IrregEng.hit_V);
lin hit_and_run_A = compoundA (mkA "hit - and - run");
lin hitch_N = mkN "hitch" "hitches";
lin hitch_V = mkV "hitch" "hitches" "hitched" "hitched" "hitching";
lin hitch_V2 = mkV2 (mkV "hitch" "hitches" "hitched" "hitched" "hitching");
lin hitchhike_V = mkV "hitchhike" "hitchhikes" "hitchhiked" "hitchhiked" "hitchhiking";
lin hitchhiker_N = mkN "hitchhiker" "hitchhikers";
lin hitchin_PN = mkPN "Hitchin";
lin hither_Adv = mkAdv "hither";
lin hitherto_Adv = mkAdv "hitherto";
lin hive_N = mkN "hive" "hives";
lin hive_V = mkV "hive" "hives" "hived" "hived" "hiving";
lin hive_V2 = mkV2 (mkV "hive" "hives" "hived" "hived" "hiving");
lin hm_PN = mkPN "Hm";
lin hmso_PN = mkPN "Hmso";
lin hoar_A = compoundA (mkA "hoar");
lin hoard_N = mkN "hoard" "hoards";
lin hoard_V = mkV "hoard" "hoards" "hoarded" "hoarded" "hoarding";
lin hoard_V2 = mkV2 (mkV "hoard" "hoards" "hoarded" "hoarded" "hoarding");
lin hoarder_N = mkN "hoarder" "hoarders";
lin hoarding_N = mkN "hoarding" "hoardings";
lin hoarfrost_N = mkN "hoarfrost" ;
lin hoariness_N = mkN "hoariness" ;
lin hoarse_A = mkA "hoarse" "hoarser";
lin hoarseness_N = mkN "hoarseness" ;
lin hoary_A = mkA "hoary" "hoarier";
lin hoax_N = mkN "hoax" "hoaxes";
lin hoax_V2 = mkV2 (mkV "hoax" "hoaxes" "hoaxed" "hoaxed" "hoaxing");
lin hoaxer_N = mkN "hoaxer" "hoaxers";
lin hob_N = mkN "hob" "hobs";
lin hobble_N = mkN "hobble" "hobbles";
lin hobble_V = mkV "hobble" "hobbles" "hobbled" "hobbled" "hobbling";
lin hobble_V2 = mkV2 (mkV "hobble" "hobbles" "hobbled" "hobbled" "hobbling");
lin hobble_skirt_N = mkN "hobble - skirt" "hobble - skirts";
lin hobbledehoy_N = mkN "hobbledehoy" "hobbledehoys";
lin hobby_N = mkN "hobby" "hobbies";
lin hobbyhorse_N = mkN "hobbyhorse" "hobbyhorses";
lin hobgoblin_N = mkN "hobgoblin" "hobgoblins";
lin hobnail_N = mkN "hobnail" "hobnails";
lin hobnailed_A = compoundA (mkA "hobnailed");
lin hobnob_V = mkV "hobnob" "hobnobs" "hobnobbed" "hobnobbed" "hobnobbing";
lin hobo_N = mkN "hobo" "hobos";
lin hobson_PN = mkPN "Hobson";
lin hock_N = mkN "hock" "hocks";
lin hock_V2 = mkV2 (mkV "hock" "hocks" "hocked" "hocked" "hocking");
lin hockey_N = mkN "hockey" ;
lin hockley_PN = mkPN "Hockley";
lin hocus_pocus_N = mkN "hocus - pocus" ;
lin hod_N = mkN "hod" "hods";
lin hoddesdon_PN = mkPN "Hoddesdon";
lin hodgepodge_N = mkN "hodgepodge" ;
lin hoe_N = mkN "hoe" "hoes";
lin hoe_V = mkV "hoe" "IRREG" "IRREG" "IRREG" "IRREG";
lin hoe_V2 = mkV2 (mkV "hoe" "IRREG" "IRREG" "IRREG" "IRREG");
lin hofei_PN = mkPN "Hofei";
lin hog_N = mkN "hog" "hogs";
lin hog_V2 = mkV2 (mkV "hog" "hogs" "hogged" "hogged" "hogging");
lin hoggish_A = compoundA (mkA "hoggish");
lin hogmanay_N = mkN "hogmanay" "hogmanays";
lin hogmanay_PN = mkPN "Hogmanay";
lin hogshead_N = mkN "hogshead" "hogsheads";
lin hogwash_N = mkN "hogwash" ;
lin hoist_N = mkN "hoist" "hoists";
lin hoist_V2 = mkV2 (mkV "hoist" "hoists" "hoisted" "hoisted" "hoisting");
lin hoity_toity_A = compoundA (mkA "hoity - toity");
lin hold_N = mkN "hold" "holds";
lin hold_V = IrregEng.hold_V;
lin hold_V2 = mkV2 (IrregEng.hold_V);
lin hold_V2V = mkV2V (IrregEng.hold_V) noPrep to_Prep ;
lin hold_VS = mkVS (IrregEng.hold_V);
lin hold_up_N = mkN "hold - up" "hold - ups";
lin holdall_N = mkN "holdall" "holdalls";
lin holder_N = mkN "holder" "holders";
lin holding_N = mkN "holding" "holdings";
lin holdup_N = mkN "holdup" "holdups";
lin hole_N = mkN "hole" "holes";
lin hole_V = mkV "hole" "holes" "holed" "holed" "holing";
lin hole_V2 = mkV2 (mkV "hole" "holes" "holed" "holed" "holing");
lin hole_and_corner_A = compoundA (mkA "hole - and - corner");
lin holiday_N = mkN "holiday" "holidays";
lin holiday_V = mkV "holiday" "holidays" "holidayed" "holidayed" "holidaying";
lin holiday_maker_N = mkN "holiday - maker" "holiday - makers";
lin holiness_N = mkN "holiness" ;
lin holland_PN = mkPN "Holland";
lin hollander_A = compoundA (mkA "hollander");
lin hollander_N = mkN "hollander" "hollanders";
lin holler_V = mkV "holler" "hollers" "hollered" "hollered" "hollering";
lin holler_V2 = mkV2 (mkV "holler" "hollers" "hollered" "hollered" "hollering");
lin holloa_N = mkN "holloa" "holloas";
lin hollow_A = compoundA (mkA "hollow");
lin hollow_N = mkN "hollow" "hollows";
lin hollow_V2 = mkV2 (mkV "hollow" "hollows" "hollowed" "hollowed" "hollowing");
lin holly_N = mkN "holly" ;
lin hollyhock_N = mkN "hollyhock" "hollyhocks";
lin hollywood_PN = mkPN "Hollywood";
lin holm_oak_N = mkN "holm - oak" "holm - oaks";
lin holmfirth_PN = mkPN "Holmfirth";
lin holocaust_N = mkN "holocaust" "holocausts";
lin holograph_N = mkN "holograph" "holographs";
lin holster_N = mkN "holster" "holsters";
lin holy_A = mkA "holy" "holier";
lin holy_N = mkN "holy" "holies";
lin holyhead_PN = mkPN "Holyhead";
lin holystone_N = mkN "holystone" ;
lin holystone_V2 = mkV2 (mkV "holystone" "holystones" "holystoned" "holystoned" "holystoning");
lin homage_N = mkN "homage" ;
lin home_Adv = mkAdv "home";
lin home_N = mkN "home" "homes";
lin home_baked_A = compoundA (mkA "home - baked");
lin home_brewed_A = compoundA (mkA "home - brewed");
lin home_cured_A = compoundA (mkA "home - cured");
lin home_farm_N = mkN "home - farm" "home - farms";
lin home_grown_A = compoundA (mkA "home - grown");
lin home_made_A = compoundA (mkA "home - made");
lin homecoming_N = mkN "homecoming" "homecomings";
lin homeland_N = mkN "homeland" "homelands";
lin homeless_A = compoundA (mkA "homeless");
lin homelike_A = compoundA (mkA "homelike");
lin homeliness_N = mkN "homeliness" ;
lin homely_A = mkA "homely" "homelier";
lin homeopath_N = mkN "homeopath" "homeopaths";
lin homeopathic_A = compoundA (mkA "homeopathic");
lin homer_V = mkV "homer";
lin homeric_A = compoundA (mkA "homeric");
lin homesick_A = compoundA (mkA "homesick");
lin homesickness_N = mkN "homesickness" ;
lin homespun_A = compoundA (mkA "homespun");
lin homespun_N = mkN "homespun" ;
lin homestead_N = mkN "homestead" "homesteads";
lin homeward_A = compoundA (mkA "homeward");
lin homeward_Adv = mkAdv "homeward";
lin homewards_Adv = mkAdv "homewards";
lin homework_N = mkN "homework" ;
lin homey_A = compoundA (mkA "homey");
lin homicidal_A = compoundA (mkA "homicidal");
lin homicide_N = mkN "homicide" "homicides";
lin homiletic_A = compoundA (mkA "homiletic");
lin homiletics_N = mkN "homiletics" "homiletics";
lin homily_N = mkN "homily" "homilies";
lin homing_A = compoundA (mkA "homing");
lin hominy_N = mkN "hominy" ;
lin homo_N = mkN "homo" "homos";
lin homo_sapiens_N = mkN "homo sapiens" "IRREG";
lin homoeopath_N = mkN "homoeopath" "homoeopaths";
lin homoeopathy_N = mkN "homoeopathy" ;
lin homogeneity_N = mkN "homogeneity" ;
lin homogeneous_A = compoundA (mkA "homogeneous");
lin homogenize_V2 = mkV2 (mkV "homogenize" "homogenizes" "homogenized" "homogenized" "homogenizing");
lin homograph_N = mkN "homograph" "homographs";
lin homonym_N = mkN "homonym" "homonyms";
lin homophone_N = mkN "homophone" "homophones";
lin homosexual_A = compoundA (mkA "homosexual");
lin homosexual_N = mkN "homosexual" "homosexuals";
lin homosexuality_N = mkN "homosexuality" ;
lin hon_PN = mkPN "Hon";
lin honduran_A = compoundA (mkA "honduran");
lin honduran_N = mkN "honduran" "hondurans";
lin honduras_PN = mkPN "Honduras";
lin hone_N = mkN "hone" "hones";
lin hone_V2 = mkV2 (mkV "hone" "hones" "honed" "honed" "honing");
lin honest_A = compoundA (mkA "honest");
lin honesty_N = mkN "honesty" ;
lin honey_N = mkN "honey" "honeys";
lin honeybee_N = mkN "honeybee" "honeybees";
lin honeycomb_N = mkN "honeycomb" "honeycombs";
lin honeycomb_V2 = mkV2 (mkV "honeycomb" "honeycombs" "honeycombed" "honeycombed" "honeycombing");
lin honeydew_N = mkN "honeydew" ;
lin honeyed_A = compoundA (mkA "honeyed");
lin honeymoon_N = mkN "honeymoon" "honeymoons";
lin honeymoon_V = mkV "honeymoon" "honeymoons" "honeymooned" "honeymooned" "honeymooning";
lin honeysuckle_N = mkN "honeysuckle" ;
lin hong_kong_PN = mkPN "Hong kong";
lin honiton_PN = mkPN "Honiton";
lin honk_N = mkN "honk" "honks";
lin honk_V = mkV "honk" "honks" "honked" "honked" "honking";
lin honor_V2 = mkV2 (mkV "honor");
lin honorarium_N = mkN "honorarium" "honorariums";
lin honorary_A = compoundA (mkA "honorary");
lin honorific_A = compoundA (mkA "honorific");
lin honorific_N = mkN "honorific" "honorifics";
lin honour_N = mkN "honour" "honours";
lin honour_V2 = mkV2 (mkV "honour" "honours" "honoured" "honoured" "honouring");
lin honourable_A = compoundA (mkA "honourable");
lin hoo_PN = mkPN "Hoo";
lin hooch_N = mkN "hooch" ;
lin hood_N = mkN "hood" "hoods";
lin hood_V2 = mkV2 (mkV "hood" "hoods" "hooded" "hooded" "hooding");
lin hoodlum_N = mkN "hoodlum" "hoodlums";
lin hoodoo_N = mkN "hoodoo" "hoodoos";
lin hoodoo_V2 = mkV2 (mkV "hoodoo" "hoodoos" "hoodooed" "hoodooed" "hoodooing");
lin hoodwink_V2 = mkV2 (mkV "hoodwink" "hoodwinks" "hoodwinked" "hoodwinked" "hoodwinking");
lin hooey_N = mkN "hooey" ;
lin hoof_N = mkN "hoof" "hoofs";
lin hook_N = mkN "hook" "hooks";
lin hook_V = mkV "hook" "hooks" "hooked" "hooked" "hooking";
lin hook_V2 = mkV2 (mkV "hook" "hooks" "hooked" "hooked" "hooking");
lin hook_nosed_A = compoundA (mkA "hook - nosed");
lin hook_up_N = mkN "hook - up" "hook - ups";
lin hookah_N = mkN "hookah" "hookahs";
lin hooked_A = compoundA (mkA "hooked");
lin hooker_N = mkN "hooker" "hookers";
lin hookworm_N = mkN "hookworm" "hookworms";
lin hooky_N = mkN "hooky" "IRREG";
lin hooligan_N = mkN "hooligan" "hooligans";
lin hooliganism_N = mkN "hooliganism" ;
lin hoop_N = mkN "hoop" "hoops";
lin hoop_V2 = mkV2 (mkV "hoop" "hoops" "hooped" "hooped" "hooping");
lin hoop_la_N = mkN "hoop - la" ;
lin hoot_N = mkN "hoot" "hoots";
lin hoot_V = mkV "hoot" "hoots" "hooted" "hooted" "hooting";
lin hoot_V2 = mkV2 (mkV "hoot" "hoots" "hooted" "hooted" "hooting");
lin hooter_N = mkN "hooter" "hooters";
lin hoover_N = mkN "hoover" "hoovers";
lin hoover_V2 = mkV2 (mkV "hoover" "hoovers" "hoovered" "hoovered" "hoovering");
lin hop_N = mkN "hop" "hops";
lin hop_V = mkV "hop" "hops" "hopped" "hopped" "hopping";
lin hop_V2 = mkV2 (mkV "hop" "hops" "hopped" "hopped" "hopping");
lin hop_field_N = mkN "hop - field" "hop - fields";
lin hop_garden_N = mkN "hop - garden" "hop - gardens";
lin hop_picker_N = mkN "hop - picker" "hop - pickers";
lin hop_pole_N = mkN "hop - pole" "hop - poles";
lin hope_N = mkN "hope" "hopes";
lin hope_PN = mkPN "Hope";
lin hope_V = mkV "hope" "hopes" "hoped" "hoped" "hoping";
lin hope_VV = mkVV (mkV "hope" "hopes" "hoped" "hoped" "hoping");
lin hope_VS = mkVS (mkV "hope" "hopes" "hoped" "hoped" "hoping");
lin hopeful_A = compoundA (mkA "hopeful");
lin hopefulness_N = mkN "hopefulness" ;
lin hopeless_A = compoundA (mkA "hopeless");
lin hopelessness_N = mkN "hopelessness" ;
lin hopped_up_A = compoundA (mkA "hopped - up");
lin hopper_N = mkN "hopper" "hoppers";
lin hopscotch_N = mkN "hopscotch" ;
lin hopscotch_V = mkV "hopscotch";
lin horace_PN = mkPN "Horace";
lin horde_N = mkN "horde" "hordes";
lin horizon_N = mkN "horizon" "horizons";
lin horizontal_A = compoundA (mkA "horizontal");
lin horley_PN = mkPN "Horley";
lin hormone_N = mkN "hormone" "hormones";
lin horn_N = mkN "horn" "horns";
lin horn_V = mkV "horn" "horns" "horned" "horned" "horning";
lin horn_rimmed_A = compoundA (mkA "horn - rimmed");
lin hornbeam_N = mkN "hornbeam" "hornbeams";
lin hornbill_N = mkN "hornbill" "hornbills";
lin horned_A = compoundA (mkA "horned");
lin hornet_N = mkN "hornet" "hornets";
lin hornless_A = compoundA (mkA "hornless");
lin hornlike_A = compoundA (mkA "hornlike");
lin hornpipe_N = mkN "hornpipe" "hornpipes";
lin hornsea_PN = mkPN "Hornsea";
lin horny_A = mkA "horny" "hornier";
lin horology_N = mkN "horology" ;
lin horoscope_N = mkN "horoscope" "horoscopes";
lin horrible_A = compoundA (mkA "horrible");
lin horrid_A = compoundA (mkA "horrid");
lin horridness_N = mkN "horridness" ;
lin horrific_A = compoundA (mkA "horrific");
lin horrify_V2 = mkV2 (mkV "horrify" "horrifies" "horrified" "horrified" "horrifying");
lin horrifyingly_Adv = mkAdv "horrifyingly";
lin horror_N = mkN "horror" "horrors";
lin horror_stricken_A = compoundA (mkA "horror - stricken");
lin horror_struck_A = compoundA (mkA "horror - struck");
lin hors_de_combat_A = compoundA (mkA "hors de combat");
lin horse_N = mkN "horse" "horses";
lin horse_chestnut_N = mkN "horse - chestnut" "horse - chestnuts";
lin horse_laugh_N = mkN "horse - laugh" "horse - laughs";
lin horse_pond_N = mkN "horse - pond" "horse - ponds";
lin horse_sense_N = mkN "horse - sense" ;
lin horseback_N = mkN "horseback" ;
lin horsebox_N = mkN "horsebox" "horseboxes";
lin horseflesh_N = mkN "horseflesh" ;
lin horsefly_N = mkN "horsefly" "horseflies";
lin horsehair_N = mkN "horsehair" ;
lin horseman_N = mkN "horseman" "horsemen" {- FIXME: guessed plural form -};
lin horsemanship_N = mkN "horsemanship" ;
lin horsemeat_N = mkN "horsemeat" ;
lin horseplay_N = mkN "horseplay" ;
lin horsepower_N = mkN "horsepower" "horsepower";
lin horserace_N = mkN "horserace" "horseraces";
lin horseracing_N = mkN "horseracing" ;
lin horseradish_N = mkN "horseradish" ;
lin horseshoe_N = mkN "horseshoe" "horseshoes";
lin horsewhip_N = mkN "horsewhip" "horsewhips";
lin horsewhip_V2 = mkV2 (mkV "horsewhip" "horsewhips" "horsewhipped" "horsewhipped" "horsewhipping");
lin horsewoman_N = mkN "horsewoman" "horsewomen" {- FIXME: guessed plural form -};
lin horsham_PN = mkPN "Horsham";
lin horsley_PN = mkPN "Horsley";
lin horsy_A = compoundA (mkA "horsy");
lin hortative_A = compoundA (mkA "hortative");
lin horticultural_A = compoundA (mkA "horticultural");
lin horticulture_N = mkN "horticulture" ;
lin horticulturist_N = mkN "horticulturist" "horticulturists";
lin horwich_PN = mkPN "Horwich";
lin hosanna_N = mkN "hosanna" "hosannas";
lin hose_N = mkN "hose" "hoses";
lin hose_V2 = mkV2 (mkV "hose" "hoses" "hosed" "hosed" "hosing");
lin hosepipe_N = mkN "hosepipe" "hosepipes";
lin hosier_N = mkN "hosier" "hosiers";
lin hosiery_N = mkN "hosiery" ;
lin hosp_PN = mkPN "Hosp";
lin hospice_N = mkN "hospice" "hospices";
lin hospitable_A = compoundA (mkA "hospitable");
lin hospital_N = mkN "hospital" "hospitals";
lin hospitality_N = mkN "hospitality" ;
lin hospitalization_N = mkN "hospitalization" "hospitalizations";
lin hospitalize_V2 = mkV2 (mkV "hospitalize" "hospitalizes" "hospitalized" "hospitalized" "hospitalizing");
lin host_N = mkN "host" "IRREG";
lin host_V2 = mkV2 (mkV "host" "hosts" "hosted" "hosted" "hosting");
lin hostage_N = mkN "hostage" "hostages";
lin hostel_N = mkN "hostel" "hostels";
lin hosteller_N = mkN "hosteller" "hostellers";
lin hostelry_N = mkN "hostelry" "hostelries";
lin hostess_N = mkN "hostess" "hostesses";
lin hostile_A = compoundA (mkA "hostile");
lin hostility_N = mkN "hostility" "hostilities";
lin hot_A = mkA "hot" "hotter*";
lin hot_V = mkV "hot" "hots" "hotted" "hotted" "hotting";
lin hot_V2 = mkV2 (mkV "hot" "hots" "hotted" "hotted" "hotting");
lin hot_blooded_A = compoundA (mkA "hot - blooded");
lin hot_headed_A = compoundA (mkA "hot - headed");
lin hot_tempered_A = compoundA (mkA "hot - tempered");
lin hot_water_bottle_N = mkN "hot - water - bottle" "hot - water - bottles";
lin hotbed_N = mkN "hotbed" "hotbeds";
lin hotchpotch_N = mkN "hotchpotch" "hotchpotches";
lin hotel_N = mkN "hotel" "hotels";
lin hotelier_N = mkN "hotelier" "hoteliers";
lin hotfoot_Adv = mkAdv "hotfoot";
lin hotfoot_V = mkV "hotfoot" "hotfoots" "hotfooted" "hotfooted" "hotfooting";
lin hothead_N = mkN "hothead" "hotheads";
lin hothouse_N = mkN "hothouse" "hothouses";
lin hotplate_N = mkN "hotplate" "hotplates";
lin houghton_PN = mkPN "Houghton";
lin hound_N = mkN "hound" "hounds";
lin hound_V2 = mkV2 (mkV "hound" "hounds" "hounded" "hounded" "hounding");
lin hounslow_PN = mkPN "Hounslow";
lin hour_N = mkN "hour" "hours";
lin hourglass_N = mkN "hourglass" "hourglasses";
lin houri_N = mkN "houri" "houris";
lin hourly_A = compoundA (mkA "hourly");
lin hourly_Adv = mkAdv "hourly";
lin house_N = mkN "house" "houses";
lin house_V2 = mkV2 (mkV "house" "houses" "housed" "housed" "housing");
lin house_party_N = mkN "house - party" "house - parties";
lin house_warming_N = mkN "house - warming" "house - warmings";
lin houseboat_N = mkN "houseboat" "houseboats";
lin housebound_A = compoundA (mkA "housebound");
lin housebreaker_N = mkN "housebreaker" "housebreakers";
lin housecoat_N = mkN "housecoat" "housecoats";
lin housecraft_N = mkN "housecraft" ;
lin housedog_N = mkN "housedog" "housedogs";
lin housefather_N = mkN "housefather" "housefathers";
lin housefly_N = mkN "housefly" "houseflies";
lin houseful_N = mkN "houseful" "housefuls";
lin household_N = mkN "household" "households";
lin householder_N = mkN "householder" "householders";
lin housekeeper_N = mkN "housekeeper" "housekeepers";
lin housemaid_N = mkN "housemaid" "housemaids";
lin houseman_N = mkN "houseman" "housemen" {- FIXME: guessed plural form -};
lin housemaster_N = mkN "housemaster" "housemasters";
lin housemother_N = mkN "housemother" "housemothers";
lin houseproud_A = compoundA (mkA "houseproud");
lin houseroom_N = mkN "houseroom" ;
lin housetop_N = mkN "housetop" "housetops";
lin housetrained_A = compoundA (mkA "housetrained");
lin housewife_N = mkN "housewife" "housewives" {- FIXME: guessed plural form -};
lin housewifely_A = compoundA (mkA "housewifely");
lin housewifery_N = mkN "housewifery" ;
lin housework_N = mkN "housework" ;
lin housewrecker_N = mkN "housewrecker" "housewreckers";
lin housing_N = mkN "housing" ;
lin houston_PN = mkPN "Houston";
lin hove_PN = mkPN "Hove";
lin hovel_N = mkN "hovel" "hovels";
lin hover_V = mkV "hover" "hovers" "hovered" "hovered" "hovering";
lin hovercraft_N = mkN "hovercraft" "hovercraft";
lin how_Adv = mkAdv "how";
lin how_d'ye_do_N = mkN "how - d'ye - do" "how - d'ye - dos";
lin howard_PN = mkPN "Howard";
lin howdah_N = mkN "howdah" "howdahs";
lin however_Adv = mkAdv "however";
lin howitzer_N = mkN "howitzer" "howitzers";
lin howl_N = mkN "howl" "howls";
lin howl_V = mkV "howl" "howls" "howled" "howled" "howling";
lin howl_V2 = mkV2 (mkV "howl" "howls" "howled" "howled" "howling");
lin howler_N = mkN "howler" "howlers";
lin howling_A = compoundA (mkA "howling");
lin hoyden_N = mkN "hoyden" "hoydens";
lin hoydenish_A = compoundA (mkA "hoydenish");
lin hoylake_PN = mkPN "Hoylake";
lin hoyland_nether_PN = mkPN "Hoyland nether";
lin hp_N = mkN "hp" ;
lin hq_PN = mkPN "Hq";
lin hrh_PN = mkPN "Hrh";
lin hub_N = mkN "hub" "hubs";
lin hubble_bubble_N = mkN "hubble - bubble" "hubble - bubbles";
lin hubbub_N = mkN "hubbub" ;
lin hubby_N = mkN "hubby" "hubbies";
lin hubert_PN = mkPN "Hubert";
lin hubris_N = mkN "hubris" ;
lin huckaback_N = mkN "huckaback" ;
lin huckleberry_N = mkN "huckleberry" "huckleberries";
lin hucknall_PN = mkPN "Hucknall";
lin huckster_N = mkN "huckster" "hucksters";
lin huddersfield_PN = mkPN "Huddersfield";
lin huddle_N = mkN "huddle" "huddles";
lin huddle_V = mkV "huddle" "huddles" "huddled" "huddled" "huddling";
lin huddle_V2 = mkV2 (mkV "huddle" "huddles" "huddled" "huddled" "huddling");
lin hue_N = mkN "hue" "hues";
lin hued_A = compoundA (mkA "hued");
lin huff_N = mkN "huff" "huffs";
lin huff_V = mkV "huff" "huffs" "huffed" "huffed" "huffing";
lin huffily_Adv = mkAdv "huffily";
lin huffish_A = compoundA (mkA "huffish");
lin huffy_A = mkA "huffy" "huffier";
lin hug_N = mkN "hug" "hugs";
lin hug_V2 = mkV2 (mkV "hug" "hugs" "hugged" "hugged" "hugging");
lin huge_A = compoundA (mkA "huge");
lin hugger_mugger_A = compoundA (mkA "hugger - mugger");
lin hugger_mugger_Adv = mkAdv "hugger - mugger";
lin hugger_mugger_N = mkN "hugger - mugger" "IRREG";
lin hugh_PN = mkPN "Hugh";
lin hughie_PN = mkPN "Hughie";
lin huguenot_N = mkN "huguenot" "huguenots";
lin huhehot_PN = mkPN "Huhehot";
lin hula_N = mkN "hula" "hulas";
lin hulk_N = mkN "hulk" "hulks";
lin hulking_A = compoundA (mkA "hulking");
lin hull_N = mkN "hull" "hulls";
lin hull_V2 = mkV2 (mkV "hull" "hulls" "hulled" "hulled" "hulling");
lin hullabaloo_N = mkN "hullabaloo" "hullabaloos";
lin hum_N = mkN "hum" "hums";
lin hum_V = mkV "hum" "hums" "hummed" "hummed" "humming";
lin hum_V2 = mkV2 (mkV "hum" "hums" "hummed" "hummed" "humming");
lin human_A = compoundA (mkA "human");
lin human_N = mkN "human" "humans";
lin humane_A = compoundA (mkA "humane");
lin humanism_N = mkN "humanism" ;
lin humanist_N = mkN "humanist" "humanists";
lin humanitarian_A = compoundA (mkA "humanitarian");
lin humanitarian_N = mkN "humanitarian" "humanitarians";
lin humanitarianism_N = mkN "humanitarianism" ;
lin humanity_N = mkN "humanity" "humanities";
lin humanize_V = mkV "humanize" "humanizes" "humanized" "humanized" "humanizing";
lin humanize_V2 = mkV2 (mkV "humanize" "humanizes" "humanized" "humanized" "humanizing");
lin humankind_N = mkN "humankind" ;
lin humberside_PN = mkPN "Humberside";
lin humberston_PN = mkPN "Humberston";
lin humble_A = mkA "humble" "humbler";
lin humble_V2 = mkV2 (mkV "humble" "humbles" "humbled" "humbled" "humbling");
lin humbly_Adv = mkAdv "humbly";
lin humbug_N = mkN "humbug" "humbugs";
lin humbug_V2 = mkV2 (mkV "humbug" "humbugs" "humbugged" "humbugged" "humbugging");
lin humdinger_N = mkN "humdinger" "humdingers";
lin humdrum_A = compoundA (mkA "humdrum");
lin humerus_N = mkN "humerus" "humeruses";
lin humid_A = compoundA (mkA "humid");
lin humidify_V2 = mkV2 (mkV "humidify" "humidifies" "humidified" "humidified" "humidifying");
lin humidity_N = mkN "humidity" ;
lin humiliate_V2 = mkV2 (mkV "humiliate" "humiliates" "humiliated" "humiliated" "humiliating");
lin humiliation_N = mkN "humiliation" "humiliations";
lin humility_N = mkN "humility" ;
lin humming_top_N = mkN "humming - top" "humming - tops";
lin hummingbird_N = mkN "hummingbird" "hummingbirds";
lin hummock_N = mkN "hummock" "hummocks";
lin humorist_N = mkN "humorist" "humorists";
lin humorous_A = compoundA (mkA "humorous");
lin humour_N = mkN "humour" "humours";
lin humour_V2 = mkV2 (mkV "humour" "humours" "humoured" "humoured" "humouring");
lin humourist_N = mkN "humourist" "humourists";
lin humourless_A = compoundA (mkA "humourless");
lin hump_N = mkN "hump" "humps";
lin hump_V2 = mkV2 (mkV "hump" "humps" "humped" "humped" "humping");
lin humpback_N = mkN "humpback" "humpbacks";
lin humpbacked_A = compoundA (mkA "humpbacked");
lin humphrey_PN = mkPN "Humphrey";
lin humus_N = mkN "humus" ;
lin hun_N = mkN "hun" "huns";
lin hunch_N = mkN "hunch" "hunches";
lin hunch_V2 = mkV2 (mkV "hunch" "hunches" "hunched" "hunched" "hunching");
lin hunchback_A = compoundA (mkA "hunchback");
lin hunchback_N = mkN "hunchback" "hunchbacks";
lin hunchbacked_A = compoundA (mkA "hunchbacked");
lin hundredfold_Adv = mkAdv "hundredfold";
lin hundredweight_N = mkN "hundredweight" "hundredweights";
lin hungarian_A = compoundA (mkA "Hungarian");
lin hungarian_N = mkN "Hungarian" "Hungarians";
lin hungary_PN = mkPN "Hungary";
lin hunger_N = mkN "hunger" ;
lin hunger_V = mkV "hunger" "hungers" "hungered" "hungered" "hungering";
lin hunger_march_N = mkN "hunger - march" "hunger - marches";
lin hunger_marcher_N = mkN "hunger - marcher" "hunger - marchers";
lin hungrily_Adv = mkAdv "hungrily";
lin hungry_A = mkA "hungry" "hungrier";
lin hunk_N = mkN "hunk" "hunks";
lin hunt_N = mkN "hunt" "hunts";
lin hunt_V = mkV "hunt" "hunts" "hunted" "hunted" "hunting";
lin hunt_V2 = mkV2 (mkV "hunt" "hunts" "hunted" "hunted" "hunting");
lin hunter_N = mkN "hunter" "hunters";
lin hunting_N = mkN "hunting" ;
lin hunting_crop_N = mkN "hunting - crop" "hunting - crops";
lin huntingdon_PN = mkPN "Huntingdon";
lin huntress_N = mkN "huntress" "huntresses";
lin huntsman_N = mkN "huntsman" "huntsmen" {- FIXME: guessed plural form -};
lin hurdle_N = mkN "hurdle" "hurdles";
lin hurdle_V = mkV "hurdle" "hurdles" "hurdled" "hurdled" "hurdling";
lin hurdle_V2 = mkV2 (mkV "hurdle" "hurdles" "hurdled" "hurdled" "hurdling");
lin hurdler_N = mkN "hurdler" "hurdlers";
lin hurdy_gurdy_N = mkN "hurdy - gurdy" "hurdy - gurdies";
lin hurl_N = mkN "hurl" "hurls";
lin hurl_V2 = mkV2 (mkV "hurl" "hurls" "hurled" "hurled" "hurling");
lin hurling_N = mkN "hurling" ;
lin hurly_burly_N = mkN "hurly - burly" ;
lin hurrah_V = mkV "hurrah" "hurrahs" "hurrahed" "hurrahed" "hurrahing";
lin hurricane_N = mkN "hurricane" "hurricanes";
lin hurried_A = compoundA (mkA "hurried");
lin hurry_N = mkN "hurry" "hurries";
lin hurry_V = mkV "hurry" "hurries" "hurried" "hurried" "hurrying";
lin hurry_V2 = mkV2 (mkV "hurry" "hurries" "hurried" "hurried" "hurrying");
lin hurry_V2V = mkV2V (mkV "hurry" "hurries" "hurried" "hurried" "hurrying") noPrep to_Prep ;
lin hurstpierpoint_PN = mkPN "Hurstpierpoint";
lin hurt_N = mkN "hurt" ;
lin hurt_V = IrregEng.hurt_V;
lin hurt_V2 = mkV2 (IrregEng.hurt_V);
lin hurt_VS = mkVS (IrregEng.hurt_V);
lin hurtful_A = compoundA (mkA "hurtful");
lin hurtle_V = mkV "hurtle" "hurtles" "hurtled" "hurtled" "hurtling";
lin husband_N = mkN "husband" "husbands";
lin husband_V2 = mkV2 (mkV "husband" "husbands" "husbanded" "husbanded" "husbanding");
lin husbandman_N = mkN "husbandman" "husbandmen" {- FIXME: guessed plural form -};
lin husbandry_N = mkN "husbandry" ;
lin hush_N = mkN "hush" "hushes";
lin hush_V = mkV "hush" "hushes" "hushed" "hushed" "hushing";
lin hush_V2 = mkV2 (mkV "hush" "hushes" "hushed" "hushed" "hushing");
lin hush_hush_A = compoundA (mkA "hush - hush");
lin hush_money_N = mkN "hush - money" ;
lin husk_N = mkN "husk" "husks";
lin husk_V2 = mkV2 (mkV "husk" "husks" "husked" "husked" "husking");
lin huskily_Adv = mkAdv "huskily";
lin huskiness_N = mkN "huskiness" ;
lin husky_A = mkA "husky" "huskier";
lin husky_N = mkN "husky" "huskies";
lin hussar_N = mkN "hussar" "hussars";
lin hussy_N = mkN "hussy" "hussies";
lin hustle_N = mkN "hustle" "IRREG";
lin hustle_V = mkV "hustle" "hustles" "hustled" "hustled" "hustling";
lin hustle_V2 = mkV2 (mkV "hustle" "hustles" "hustled" "hustled" "hustling");
lin hustler_N = mkN "hustler" "hustlers";
lin hut_N = mkN "hut" "huts";
lin hutch_N = mkN "hutch" "hutches";
lin hutment_N = mkN "hutment" "hutments";
lin hutted_A = compoundA (mkA "hutted");
lin hwainan_PN = mkPN "Hwainan";
lin hyacinth_N = mkN "hyacinth" "hyacinths";
lin hyaena_N = mkN "hyaena" "hyaenas";
lin hybrid_A = compoundA (mkA "hybrid");
lin hybrid_N = mkN "hybrid" "hybrids";
lin hybridize_V = mkV "hybridize" "hybridizes" "hybridized" "hybridized" "hybridizing";
lin hybridize_V2 = mkV2 (mkV "hybridize" "hybridizes" "hybridized" "hybridized" "hybridizing");
lin hyde_PN = mkPN "Hyde";
lin hyderabad_PN = mkPN "Hyderabad";
lin hydra_N = mkN "hydra" "hydras";
lin hydrangea_N = mkN "hydrangea" "hydrangeas";
lin hydrant_N = mkN "hydrant" "hydrants";
lin hydrate_N = mkN "hydrate" "hydrates";
lin hydrate_V = mkV "hydrate" "hydrates" "hydrated" "hydrated" "hydrating";
lin hydrate_V2 = mkV2 (mkV "hydrate" "hydrates" "hydrated" "hydrated" "hydrating");
lin hydraulic_A = compoundA (mkA "hydraulic");
lin hydraulics_N = mkN "hydraulics" "hydraulics";
lin hydrocarbon_N = mkN "hydrocarbon" "hydrocarbons";
lin hydrochloric_A = compoundA (mkA "hydrochloric");
lin hydroelectric_A = compoundA (mkA "hydroelectric");
lin hydrofoil_N = mkN "hydrofoil" "hydrofoils";
lin hydrogen_N = mkN "hydrogen" ;
lin hydropathic_A = compoundA (mkA "hydropathic");
lin hydropathy_N = mkN "hydropathy" ;
lin hydrophobia_N = mkN "hydrophobia" ;
lin hydroplane_N = mkN "hydroplane" "hydroplanes";
lin hydroponics_N = mkN "hydroponics" "hydroponics";
lin hyena_N = mkN "hyena" "hyenas";
lin hygiene_N = mkN "hygiene" ;
lin hygienic_A = compoundA (mkA "hygienic");
lin hygienically_Adv = mkAdv "hygienically";
lin hymen_N = mkN "hymen" "hymens";
lin hymn_N = mkN "hymn" "hymns";
lin hymn_V2 = mkV2 (mkV "hymn" "hymns" "hymned" "hymned" "hymning");
lin hymnal_N = mkN "hymnal" "hymnals";
lin hype_V2 = mkV2 (mkV "hype");
lin hyperbola_N = mkN "hyperbola" "hyperbolas";
lin hyperbole_N = mkN "hyperbole" "hyperboles";
lin hyperbolic_A = compoundA (mkA "hyperbolic");
lin hypercritical_A = compoundA (mkA "hypercritical");
lin hypermarket_N = mkN "hypermarket" "hypermarkets";
lin hypersensitive_A = compoundA (mkA "hypersensitive");
lin hyphen_N = mkN "hyphen" "hyphens";
lin hyphen_V2 = mkV2 (mkV "hyphen" "hyphens" "hyphened" "hyphened" "hyphening");
lin hyphenate_V2 = mkV2 (mkV "hyphenate" "hyphenates" "hyphenated" "hyphenated" "hyphenating");
lin hypnosis_N = mkN "hypnosis" "hypnoses" {- FIXME: guessed plural form -};
lin hypnotic_A = compoundA (mkA "hypnotic");
lin hypnotism_N = mkN "hypnotism" ;
lin hypnotist_N = mkN "hypnotist" "hypnotists";
lin hypnotize_V2 = mkV2 (mkV "hypnotize" "hypnotizes" "hypnotized" "hypnotized" "hypnotizing");
lin hypo_N = mkN "hypo" ;
lin hypochondria_N = mkN "hypochondria" "hypochondrias";
lin hypochondriac_A = compoundA (mkA "hypochondriac");
lin hypochondriac_N = mkN "hypochondriac" "hypochondriacs";
lin hypochondriacal_A = compoundA (mkA "hypochondriacal");
lin hypocrisy_N = mkN "hypocrisy" "hypocrisies";
lin hypocrite_N = mkN "hypocrite" "hypocrites";
lin hypocritical_A = compoundA (mkA "hypocritical");
lin hypodermic_A = compoundA (mkA "hypodermic");
lin hypodermic_N = mkN "hypodermic" "hypodermics";
lin hypotenuse_N = mkN "hypotenuse" "hypotenuses";
lin hypothecate_V2 = mkV2 (mkV "hypothecate" "hypothecates" "hypothecated" "hypothecated" "hypothecating");
lin hypothesis_N = mkN "hypothesis" "hypotheses" {- FIXME: guessed plural form -};
lin hypothesize_V2 = mkV2 (mkV "hypothesize");
lin hypothetical_A = compoundA (mkA "hypothetical");
lin hyssop_N = mkN "hyssop" ;
lin hysteria_N = mkN "hysteria" ;
lin hysterical_A = compoundA (mkA "hysterical");
lin hysterics_N = mkN "hysterics" "hysterics";
lin hythe_PN = mkPN "Hythe";
lin i_Pron  = mkPron "I" "me" "my" "mine" singular P1 human;
lin iamb_N = mkN "iamb" "iambs";
lin iambic_A = compoundA (mkA "iambic");
lin iambics_N = mkN "iambics" "iambics";
lin iambus_N = mkN "iambus" "iambuses";
lin ian_PN = mkPN "Ian";
lin iba_N = mkN "iba" ;
lin ibadan_PN = mkPN "Ibadan";
lin ibex_N = mkN "ibex" "ibexes";
lin ibid_PN = mkPN "Ibid";
lin ibidem_Adv = mkAdv "ibidem";
lin ibis_N = mkN "ibis" "ibises";
lin icbm_N = mkN "icbm" ;
lin ice_N = mkN "ice" "ices";
lin ice_V = mkV "ice" "ices" "iced" "iced" "icing";
lin ice_V2 = mkV2 (mkV "ice" "ices" "iced" "iced" "icing");
lin ice_axe_N = mkN "ice - axe" "ice - axes";
lin ice_cream_N = mkN "ice - cream" "ice - creams";
lin ice_lolly_N = mkN "ice - lolly" "ice - lollies";
lin ice_show_N = mkN "ice - show" "ice - shows";
lin ice_skate_N = mkN "ice - skate" "ice - skates";
lin ice_skate_V = mkV "ice - skate" "ice - skates" "ice - skated" "ice - skated" "ice - skating";
lin ice_skating_N = mkN "ice - skating" ;
lin ice_tray_N = mkN "ice - tray" "ice - trays";
lin iceberg_N = mkN "iceberg" "icebergs";
lin iceboat_N = mkN "iceboat" "iceboats";
lin icebound_A = compoundA (mkA "icebound");
lin icebox_N = mkN "icebox" "iceboxes";
lin icebreaker_N = mkN "icebreaker" "icebreakers";
lin icecap_N = mkN "icecap" "icecaps";
lin icecube_N = mkN "icecube" "icecubes";
lin icefall_N = mkN "icefall" "icefalls";
lin icefield_N = mkN "icefield" "icefields";
lin icefloe_N = mkN "icefloe" "icefloes";
lin icefree_A = compoundA (mkA "icefree");
lin icehouse_N = mkN "icehouse" "icehouses";
lin iceland_PN = mkPN "Iceland";
lin icelander_A = compoundA (mkA "icelander");
lin icelander_N = mkN "icelander" "icelanders";
lin icelandic_A = compoundA (mkA "icelandic");
lin icelandic_N = mkN "icelandic" ;
lin iceman_N = mkN "iceman" "icemen" {- FIXME: guessed plural form -};
lin icepack_N = mkN "icepack" "icepacks";
lin icepick_N = mkN "icepick" "icepicks";
lin icerink_N = mkN "icerink" "icerinks";
lin ichneumon_N = mkN "ichneumon" "ichneumons";
lin ichneumon_fly_N = mkN "ichneumon - fly" "ichneumon - flies";
lin icicle_N = mkN "icicle" "icicles";
lin icily_Adv = mkAdv "icily";
lin icing_N = mkN "icing" ;
lin icon_N = mkN "icon" "icons";
lin iconoclast_N = mkN "iconoclast" "iconoclasts";
lin icy_A = mkA "icy" "icier";
lin id_N = mkN "id" "IRREG";
lin ida_PN = mkPN "Ida";
lin idaho_PN = mkPN "Idaho";
lin idea_N = mkN "idea" "ideas";
lin ideal_A = compoundA (mkA "ideal");
lin ideal_N = mkN "ideal" "ideals";
lin idealism_N = mkN "idealism" ;
lin idealist_N = mkN "idealist" "idealists";
lin idealistic_A = compoundA (mkA "idealistic");
lin idealization_N = mkN "idealization" "idealizations";
lin idealize_V2 = mkV2 (mkV "idealize" "idealizes" "idealized" "idealized" "idealizing");
lin idem_PN = mkPN "Idem";
lin identical_A = compoundA (mkA "identical");
lin identifiable_A = compoundA (mkA "identifiable");
lin identification_N = mkN "identification" ;
lin identify_V = mkV "identify";
lin identify_V2 = mkV2 (mkV "identify" "identifies" "identified" "identified" "identifying");
lin identikit_N = mkN "identikit" "identikits";
lin identity_N = mkN "identity" "identities";
lin ideogram_N = mkN "ideogram" "ideograms";
lin ideograph_N = mkN "ideograph" "ideographs";
lin ideographic_A = compoundA (mkA "ideographic");
lin ideological_A = compoundA (mkA "ideological");
lin ideology_N = mkN "ideology" "ideologies";
lin idiocy_N = mkN "idiocy" "idiocies";
lin idiolect_N = mkN "idiolect" "idiolects";
lin idiom_N = mkN "idiom" "idioms";
lin idiomatic_A = compoundA (mkA "idiomatic");
lin idiomatically_Adv = mkAdv "idiomatically";
lin idiosyncrasy_N = mkN "idiosyncrasy" "idiosyncrasies";
lin idiosyncratic_A = compoundA (mkA "idiosyncratic");
lin idiot_N = mkN "idiot" "idiots";
lin idiotic_A = compoundA (mkA "idiotic");
lin idiotically_Adv = mkAdv "idiotically";
lin idle_A = mkA "idle" "idler";
lin idle_V = mkV "idle" "idles" "idled" "idled" "idling";
lin idle_V2 = mkV2 (mkV "idle" "idles" "idled" "idled" "idling");
lin idleness_N = mkN "idleness" ;
lin idler_N = mkN "idler" "idlers";
lin idly_Adv = mkAdv "idly";
lin idol_N = mkN "idol" "idols";
lin idolater_N = mkN "idolater" "idolaters";
lin idolatress_N = mkN "idolatress" "idolatresses";
lin idolatrous_A = compoundA (mkA "idolatrous");
lin idolatry_N = mkN "idolatry" "idolatries";
lin idolization_N = mkN "idolization" "idolizations";
lin idolize_V2 = mkV2 (mkV "idolize" "idolizes" "idolized" "idolized" "idolizing");
lin idyll_N = mkN "idyll" "idylls";
lin idyllic_A = compoundA (mkA "idyllic");
lin ie_PN = mkPN "IE";
lin if_Subj = mkSubj "if";
lin igloo_N = mkN "igloo" "igloos";
lin igneous_A = compoundA (mkA "igneous");
lin ignis_fatuus_N = mkN "ignis fatuus" "ignis fatui" {- FIXME: guessed plural form -};
lin ignite_V = mkV "ignite" "ignites" "ignited" "ignited" "igniting";
lin ignite_V2 = mkV2 (mkV "ignite" "ignites" "ignited" "ignited" "igniting");
lin ignition_N = mkN "ignition" ;
lin ignoble_A = compoundA (mkA "ignoble");
lin ignominious_A = compoundA (mkA "ignominious");
lin ignominy_N = mkN "ignominy" "ignominies";
lin ignoramus_N = mkN "ignoramus" "ignoramuses";
lin ignorance_N = mkN "ignorance" ;
lin ignorant_A = compoundA (mkA "ignorant");
lin ignore_V = mkV "ignore";
lin ignore_V2 = mkV2 (mkV "ignore" "ignores" "ignored" "ignored" "ignoring");
lin iguana_N = mkN "iguana" "iguanas";
lin ikon_N = mkN "ikon" "ikons";
lin ilex_N = mkN "ilex" "ilexes";
lin ilfracombe_PN = mkPN "Ilfracombe";
lin ilk_N = mkN "ilk" ;
lin ilkeston_PN = mkPN "Ilkeston";
lin ilkley_PN = mkPN "Ilkley";
lin ill_A = compoundA (mkA "ill");
lin ill_Adv = mkAdv "ill";
lin ill_N = mkN "ill" "ills";
lin ill_advised_A = compoundA (mkA "ill - advised");
lin ill_affected_A = compoundA (mkA "ill - affected");
lin ill_bred_A = compoundA (mkA "ill - bred");
lin ill_breeding_N = mkN "ill - breeding" ;
lin ill_disposed_A = compoundA (mkA "ill - disposed");
lin ill_fated_A = compoundA (mkA "ill - fated");
lin ill_favoured_A = compoundA (mkA "ill - favoured");
lin ill_gotten_A = compoundA (mkA "ill - gotten");
lin ill_judged_A = compoundA (mkA "ill - judged");
lin ill_mannered_A = compoundA (mkA "ill - mannered");
lin ill_natured_A = compoundA (mkA "ill - natured");
lin ill_omened_A = compoundA (mkA "ill - omened");
lin ill_starred_A = compoundA (mkA "ill - starred");
lin ill_timed_A = compoundA (mkA "ill - timed");
lin ill_treat_V2 = mkV2 (mkV "ill - treat" "ill - treats" "ill - treated" "ill - treated" "ill - treating");
lin ill_treatment_N = mkN "ill - treatment" ;
lin ill_usage_N = mkN "ill - usage" ;
lin ill_use_V2 = mkV2 (mkV "ill - use" "ill - uses" "ill - used" "ill - used" "ill - using");
lin illegal_A = compoundA (mkA "illegal");
lin illegality_N = mkN "illegality" "illegalities";
lin illegibility_N = mkN "illegibility" ;
lin illegible_A = compoundA (mkA "illegible");
lin illegitimacy_N = mkN "illegitimacy" ;
lin illegitimate_A = compoundA (mkA "illegitimate");
lin illegitimate_N = mkN "illegitimate" "illegitimate";
lin illiberal_A = compoundA (mkA "illiberal");
lin illiberality_N = mkN "illiberality" ;
lin illicit_A = compoundA (mkA "illicit");
lin illimitable_A = compoundA (mkA "illimitable");
lin illinois_PN = mkPN "Illinois";
lin illiteracy_N = mkN "illiteracy" "illiteracies";
lin illiterate_A = compoundA (mkA "illiterate");
lin illiterate_N = mkN "illiterate" "illiterates";
lin illness_N = mkN "illness" "illnesses";
lin illogical_A = compoundA (mkA "illogical");
lin illogicality_N = mkN "illogicality" "illogicalities";
lin illogicalness_N = mkN "illogicalness" ;
lin illume_V2 = mkV2 (mkV "illume" "illumes" "illumed" "illumed" "illuming");
lin illuminate_V2 = mkV2 (mkV "illuminate" "illuminates" "illuminated" "illuminated" "illuminating");
lin illumination_N = mkN "illumination" "illuminations";
lin illumine_V2 = mkV2 (mkV "illumine" "illumines" "illumined" "illumined" "illumining");
lin illusion_N = mkN "illusion" "illusions";
lin illusionist_N = mkN "illusionist" "illusionists";
lin illusive_A = compoundA (mkA "illusive");
lin illusory_A = compoundA (mkA "illusory");
lin illustrate_V = mkV "illustrate";
lin illustrate_V2 = mkV2 (mkV "illustrate" "illustrates" "illustrated" "illustrated" "illustrating");
lin illustrate_VS = mkVS (mkV "illustrate");
lin illustration_N = mkN "illustration" "illustrations";
lin illustrative_A = compoundA (mkA "illustrative");
lin illustrator_N = mkN "illustrator" "illustrators";
lin illustrious_A = compoundA (mkA "illustrious");
lin ilo_N = mkN "ilo" ;
lin image_N = mkN "image" "images";
lin image_V2 = mkV2 (mkV "image" "images" "imaged" "imaged" "imaging");
lin imagery_N = mkN "imagery" ;
lin imaginable_A = compoundA (mkA "imaginable");
lin imaginary_A = compoundA (mkA "imaginary");
lin imagination_N = mkN "imagination" "imaginations";
lin imaginative_A = compoundA (mkA "imaginative");
lin imagine_V = mkV "imagine";
lin imagine_V2 = mkV2 (mkV "imagine" "imagines" "imagined" "imagined" "imagining");
lin imagine_VS = mkVS (mkV "imagine");
lin imam_N = mkN "imam" "imams";
lin imbalance_N = mkN "imbalance" "imbalances";
lin imbecile_A = compoundA (mkA "imbecile");
lin imbecile_N = mkN "imbecile" "imbeciles";
lin imbecility_N = mkN "imbecility" "imbecilities";
lin imbed_V2 = mkV2 (mkV "imbed" "imbeds" "imbedded" "imbedded" "imbedding");
lin imbibe_V2 = mkV2 (mkV "imbibe" "imbibes" "imbibed" "imbibed" "imbibing");
lin imbroglio_N = mkN "imbroglio" "imbroglios";
lin imbue_V2 = mkV2 (mkV "imbue" "imbues" "imbued" "imbued" "imbuing");
lin imf_N = mkN "imf" ;
lin imitate_V2 = mkV2 (mkV "imitate" "imitates" "imitated" "imitated" "imitating");
lin imitation_N = mkN "imitation" "imitations";
lin imitative_A = compoundA (mkA "imitative");
lin imitator_N = mkN "imitator" "imitators";
lin immaculate_A = compoundA (mkA "immaculate");
lin immanence_N = mkN "immanence" "immanences";
lin immanent_A = compoundA (mkA "immanent");
lin immaterial_A = compoundA (mkA "immaterial");
lin immature_A = compoundA (mkA "immature");
lin immaturity_N = mkN "immaturity" ;
lin immeasurable_A = compoundA (mkA "immeasurable");
lin immediacy_N = mkN "immediacy" ;
lin immediate_A = compoundA (mkA "immediate");
lin immemorial_A = compoundA (mkA "immemorial");
lin immense_A = compoundA (mkA "immense");
lin immensity_N = mkN "immensity" "immensities";
lin immerse_V2 = mkV2 (mkV "immerse" "immerses" "immersed" "immersed" "immersing");
lin immersion_N = mkN "immersion" "immersions";
lin immigrant_N = mkN "immigrant" "immigrants";
lin immigrate_V = mkV "immigrate" "immigrates" "immigrated" "immigrated" "immigrating";
lin immigration_N = mkN "immigration" "immigrations";
lin imminence_N = mkN "imminence" ;
lin imminent_A = compoundA (mkA "imminent");
lin immingham_PN = mkPN "Immingham";
lin immobile_A = compoundA (mkA "immobile");
lin immobility_N = mkN "immobility" ;
lin immobilization_N = mkN "immobilization" ;
lin immobilize_V2 = mkV2 (mkV "immobilize" "immobilizes" "immobilized" "immobilized" "immobilizing");
lin immoderate_A = compoundA (mkA "immoderate");
lin immodest_A = compoundA (mkA "immodest");
lin immodesty_N = mkN "immodesty" "immodesties";
lin immolate_V2 = mkV2 (mkV "immolate" "immolates" "immolated" "immolated" "immolating");
lin immolation_N = mkN "immolation" "immolations";
lin immoral_A = compoundA (mkA "immoral");
lin immorality_N = mkN "immorality" "immoralities";
lin immortal_A = compoundA (mkA "immortal");
lin immortal_N = mkN "immortal" "immortals";
lin immortality_N = mkN "immortality" ;
lin immortalize_V2 = mkV2 (mkV "immortalize" "immortalizes" "immortalized" "immortalized" "immortalizing");
lin immovable_A = compoundA (mkA "immovable");
lin immune_A = compoundA (mkA "immune");
lin immunity_N = mkN "immunity" ;
lin immunization_N = mkN "immunization" ;
lin immunize_V2 = mkV2 (mkV "immunize" "immunizes" "immunized" "immunized" "immunizing");
lin immunology_N = mkN "immunology" ;
lin immure_V2 = mkV2 (mkV "immure" "immures" "immured" "immured" "immuring");
lin immutability_N = mkN "immutability" ;
lin immutable_A = compoundA (mkA "immutable");
lin imp_N = mkN "imp" "imps";
lin impact_N = mkN "impact" "impacts";
lin impact_V2 = mkV2 (mkV "impact" "impacts" "impacted" "impacted" "impacting");
lin impair_V2 = mkV2 (mkV "impair" "impairs" "impaired" "impaired" "impairing");
lin impairment_N = mkN "impairment" "impairments";
lin impala_N = mkN "impala" "impalas";
lin impale_V2 = mkV2 (mkV "impale" "impales" "impaled" "impaled" "impaling");
lin impalement_N = mkN "impalement" "impalements";
lin impalpable_A = compoundA (mkA "impalpable");
lin impanel_V2 = mkV2 (mkV "impanel" "impanels" "impanelled" "impanelled" "impanelling");
lin impart_V2 = mkV2 (mkV "impart" "imparts" "imparted" "imparted" "imparting");
lin impartial_A = compoundA (mkA "impartial");
lin impartiality_N = mkN "impartiality" ;
lin impassable_A = compoundA (mkA "impassable");
lin impasse_N = mkN "impasse" "impasses";
lin impassioned_A = compoundA (mkA "impassioned");
lin impassive_A = compoundA (mkA "impassive");
lin impassiveness_N = mkN "impassiveness" ;
lin impassivity_N = mkN "impassivity" ;
lin impatience_N = mkN "impatience" ;
lin impatient_A = compoundA (mkA "impatient");
lin impeach_V2 = mkV2 (mkV "impeach" "impeaches" "impeached" "impeached" "impeaching");
lin impeachment_N = mkN "impeachment" "impeachments";
lin impeccable_A = compoundA (mkA "impeccable");
lin impecunious_A = compoundA (mkA "impecunious");
lin impede_V2 = mkV2 (mkV "impede" "impedes" "impeded" "impeded" "impeding");
lin impediment_N = mkN "impediment" "impediments";
lin impel_V2 = mkV2 (mkV "impel" "impels" "impelled" "impelled" "impelling");
lin impeller_N = mkN "impeller" "impellers";
lin impend_V = mkV "impend" "impends" "impended" "impended" "impending";
lin impenetrable_A = compoundA (mkA "impenetrable");
lin impenitence_N = mkN "impenitence" ;
lin impenitent_A = compoundA (mkA "impenitent");
lin imperative_A = compoundA (mkA "imperative");
lin imperceptible_A = compoundA (mkA "imperceptible");
lin imperfect_A = compoundA (mkA "imperfect");
lin imperfect_N = mkN "imperfect" "IRREG";
lin imperfection_N = mkN "imperfection" "imperfections";
lin imperial_A = compoundA (mkA "imperial");
lin imperial_N = mkN "imperial" "imperials";
lin imperialism_N = mkN "imperialism" ;
lin imperialist_N = mkN "imperialist" "imperialists";
lin imperialistic_A = compoundA (mkA "imperialistic");
lin imperil_V2 = mkV2 (mkV "imperil" "imperils" "imperilled" "imperilled" "imperilling");
lin imperile_V2 = mkV2 (mkV "imperile");
lin imperious_A = compoundA (mkA "imperious");
lin imperiousness_N = mkN "imperiousness" ;
lin imperishable_A = compoundA (mkA "imperishable");
lin impermanence_N = mkN "impermanence" ;
lin impermanent_A = compoundA (mkA "impermanent");
lin impermeable_A = compoundA (mkA "impermeable");
lin impersonal_A = compoundA (mkA "impersonal");
lin impersonate_V2 = mkV2 (mkV "impersonate" "impersonates" "impersonated" "impersonated" "impersonating");
lin impersonation_N = mkN "impersonation" "impersonations";
lin impersonator_N = mkN "impersonator" "impersonators";
lin impertinence_N = mkN "impertinence" "impertinences";
lin impertinent_A = compoundA (mkA "impertinent");
lin imperturbability_N = mkN "imperturbability" ;
lin imperturbable_A = compoundA (mkA "imperturbable");
lin impervious_A = compoundA (mkA "impervious");
lin impetigo_N = mkN "impetigo" ;
lin impetuosity_N = mkN "impetuosity" "impetuosities";
lin impetuous_A = compoundA (mkA "impetuous");
lin impetus_N = mkN "impetus" "impeti" {- FIXME: guessed plural form -};
lin impiety_N = mkN "impiety" "impieties";
lin impinge_V = mkV "impinge" "impinges" "impinged" "impinged" "impinging";
lin impingement_N = mkN "impingement" "impingements";
lin impious_A = compoundA (mkA "impious");
lin impish_A = compoundA (mkA "impish");
lin impishness_N = mkN "impishness" ;
lin implacable_A = compoundA (mkA "implacable");
lin implant_V2 = mkV2 (mkV "implant" "implants" "implanted" "implanted" "implanting");
lin implausibility_N = mkN "implausibility" ;
lin implausible_A = compoundA (mkA "implausible");
lin implement_N = mkN "implement" "implements";
lin implement_V2 = mkV2 (mkV "implement" "implements" "implemented" "implemented" "implementing");
lin implementation_N = mkN "implementation" "implementations";
lin implicate_V2 = mkV2 (mkV "implicate" "implicates" "implicated" "implicated" "implicating");
lin implication_N = mkN "implication" "implications";
lin implicit_A = compoundA (mkA "implicit");
lin implore_V2 = mkV2 (mkV "implore" "implores" "implored" "implored" "imploring");
lin implore_VS = mkVS (mkV "implore");
lin imploringly_Adv = mkAdv "imploringly";
lin implosion_N = mkN "implosion" "implosions";
lin imply_V = mkV "imply";
lin imply_V2 = mkV2 (mkV "imply" "implies" "implied" "implied" "implying");
lin imply_VS = mkVS (mkV "imply");
lin impolite_A = compoundA (mkA "impolite");
lin impoliteness_N = mkN "impoliteness" ;
lin impolitic_A = compoundA (mkA "impolitic");
lin imponderable_A = compoundA (mkA "imponderable");
lin imponderable_N = mkN "imponderable" "imponderables";
lin import_N = mkN "import" "imports";
lin import_V2 = mkV2 (mkV "import" "imports" "imported" "imported" "importing");
lin importance_N = mkN "importance" ;
lin important_A = compoundA (mkA "important");
lin importation_N = mkN "importation" "importations";
lin importer_N = mkN "importer" "importers";
lin importunate_A = compoundA (mkA "importunate");
lin importune_V2 = mkV2 (mkV "importune" "importunes" "importuned" "importuned" "importuning");
lin importunity_N = mkN "importunity" ;
lin impose_V = mkV "impose" "imposes" "imposed" "imposed" "imposing";
lin impose_V2 = mkV2 (mkV "impose" "imposes" "imposed" "imposed" "imposing");
lin imposing_A = compoundA (mkA "imposing");
lin imposition_N = mkN "imposition" "impositions";
lin impossibility_N = mkN "impossibility" "impossibilities";
lin impossible_A = compoundA (mkA "impossible");
lin impostor_N = mkN "impostor" "impostors";
lin imposture_N = mkN "imposture" "impostures";
lin impotence_N = mkN "impotence" ;
lin impotent_A = compoundA (mkA "impotent");
lin impound_V2 = mkV2 (mkV "impound" "impounds" "impounded" "impounded" "impounding");
lin impoverish_V2 = mkV2 (mkV "impoverish" "impoverishes" "impoverished" "impoverished" "impoverishing");
lin impoverishment_N = mkN "impoverishment" "impoverishments";
lin impracticability_N = mkN "impracticability" ;
lin impracticable_A = compoundA (mkA "impracticable");
lin impracticableness_N = mkN "impracticableness" ;
lin impractical_A = compoundA (mkA "impractical");
lin imprecate_V2 = mkV2 (mkV "imprecate" "imprecates" "imprecated" "imprecated" "imprecating");
lin imprecation_N = mkN "imprecation" "imprecations";
lin imprecise_A = compoundA (mkA "imprecise");
lin imprecision_N = mkN "imprecision" ;
lin impregnability_N = mkN "impregnability" ;
lin impregnable_A = compoundA (mkA "impregnable");
lin impregnate_V2 = mkV2 (mkV "impregnate" "impregnates" "impregnated" "impregnated" "impregnating");
lin impresario_N = mkN "impresario" "impresarios";
lin impress_N = mkN "impress" "impresses";
lin impress_V = mkV "impress";
lin impress_V2 = mkV2 (mkV "impress" "impresses" "impressed" "impressed" "impressing");
lin impression_N = mkN "impression" "impressions";
lin impressionable_A = compoundA (mkA "impressionable");
lin impressionism_N = mkN "impressionism" ;
lin impressionist_N = mkN "impressionist" "impressionists";
lin impressionistic_A = compoundA (mkA "impressionistic");
lin impressive_A = compoundA (mkA "impressive");
lin impressiveness_N = mkN "impressiveness" ;
lin imprimatur_N = mkN "imprimatur" "imprimaturs";
lin imprint_N = mkN "imprint" "imprints";
lin imprint_V2 = mkV2 (mkV "imprint" "imprints" "imprinted" "imprinted" "imprinting");
lin imprison_V2 = mkV2 (mkV "imprison" "imprisons" "imprisoned" "imprisoned" "imprisoning");
lin imprisonment_N = mkN "imprisonment" ;
lin improbability_N = mkN "improbability" "improbabilities";
lin improbable_A = compoundA (mkA "improbable");
lin impromptu_A = compoundA (mkA "impromptu");
lin impromptu_Adv = mkAdv "impromptu";
lin impromptu_N = mkN "impromptu" "impromptus";
lin improper_A = compoundA (mkA "improper");
lin impropriety_N = mkN "impropriety" "improprieties";
lin improve_V = mkV "improve" "improves" "improved" "improved" "improving";
lin improve_V2 = mkV2 (mkV "improve" "improves" "improved" "improved" "improving");
lin improvement_N = mkN "improvement" "improvements";
lin improver_N = mkN "improver" "improvers";
lin improvidence_N = mkN "improvidence" ;
lin improvident_A = compoundA (mkA "improvident");
lin improvisation_N = mkN "improvisation" "improvisations";
lin improvise_V = mkV "improvise" "improvises" "improvised" "improvised" "improvising";
lin improvise_V2 = mkV2 (mkV "improvise" "improvises" "improvised" "improvised" "improvising");
lin imprudence_N = mkN "imprudence" "imprudences";
lin imprudent_A = compoundA (mkA "imprudent");
lin impudence_N = mkN "impudence" ;
lin impudent_A = compoundA (mkA "impudent");
lin impugn_V2 = mkV2 (mkV "impugn" "impugns" "impugned" "impugned" "impugning");
lin impulse_N = mkN "impulse" "impulses";
lin impulse_buy_V = mkV "impulse-" IrregEng.buy_V;
lin impulse_buy_V2 = mkV2 (mkV "impulse-" IrregEng.buy_V);
lin impulsion_N = mkN "impulsion" "impulsions";
lin impulsive_A = compoundA (mkA "impulsive");
lin impulsiveness_N = mkN "impulsiveness" ;
lin impunity_N = mkN "impunity" ;
lin impure_A = compoundA (mkA "impure");
lin impurity_N = mkN "impurity" "impurities";
lin imputation_N = mkN "imputation" "imputations";
lin impute_V2 = mkV2 (mkV "impute" "imputes" "imputed" "imputed" "imputing");
lin in_Adv = mkAdv "in";
lin in_N = mkN "in" "ins";
lin in_Prep = mkPrep "in";
lin in_chief_A = compoundA (mkA "in - chief");
lin in_fighting_N = mkN "in - fighting" ;
lin in_loco_parentis_Adv = mkAdv "in loco parentis";
lin in_patient_N = mkN "in - patient" "in - patients";
lin in_service_A = compoundA (mkA "in - service");
lin in_situ_Adv = mkAdv "in situ";
lin in_toto_Adv = mkAdv "in toto";
lin in_tray_N = mkN "in - tray" "in - trays";
lin inability_N = mkN "inability" ;
lin inaccessibility_N = mkN "inaccessibility" ;
lin inaccessible_A = compoundA (mkA "inaccessible");
lin inaccuracy_N = mkN "inaccuracy" "inaccuracies";
lin inaccurate_A = compoundA (mkA "inaccurate");
lin inaction_N = mkN "inaction" ;
lin inactivate_V2 = mkV2 (mkV "inactivate" "inactivates" "inactivated" "inactivated" "inactivating");
lin inactive_A = compoundA (mkA "inactive");
lin inactivity_N = mkN "inactivity" ;
lin inadequacy_N = mkN "inadequacy" "inadequacies";
lin inadequate_A = compoundA (mkA "inadequate");
lin inadmissible_A = compoundA (mkA "inadmissible");
lin inadvertence_N = mkN "inadvertence" "inadvertences";
lin inadvertent_A = compoundA (mkA "inadvertent");
lin inadvisability_N = mkN "inadvisability" ;
lin inadvisable_A = compoundA (mkA "inadvisable");
lin inalienable_A = compoundA (mkA "inalienable");
lin inane_A = compoundA (mkA "inane");
lin inanimate_A = compoundA (mkA "inanimate");
lin inanition_N = mkN "inanition" ;
lin inanity_N = mkN "inanity" "inanities";
lin inapplicable_A = compoundA (mkA "inapplicable");
lin inappreciable_A = compoundA (mkA "inappreciable");
lin inappropriate_A = compoundA (mkA "inappropriate");
lin inappropriateness_N = mkN "inappropriateness" ;
lin inapt_A = compoundA (mkA "inapt");
lin inaptitude_N = mkN "inaptitude" ;
lin inarticulate_A = compoundA (mkA "inarticulate");
lin inasmuch_as_Adv = mkAdv "inasmuch as";
lin inattention_N = mkN "inattention" ;
lin inattentive_A = compoundA (mkA "inattentive");
lin inaudibility_N = mkN "inaudibility" ;
lin inaudible_A = compoundA (mkA "inaudible");
lin inaugural_A = compoundA (mkA "inaugural");
lin inaugural_N = mkN "inaugural" "inaugurals";
lin inaugurate_V2 = mkV2 (mkV "inaugurate" "inaugurates" "inaugurated" "inaugurated" "inaugurating");
lin inauguration_N = mkN "inauguration" "inaugurations";
lin inauspicious_A = compoundA (mkA "inauspicious");
lin inboard_A = compoundA (mkA "inboard");
lin inborn_A = compoundA (mkA "inborn");
lin inbound_A = compoundA (mkA "inbound");
lin inbred_A = compoundA (mkA "inbred");
lin inbreeding_N = mkN "inbreeding" ;
lin inbuilt_A = compoundA (mkA "inbuilt");
lin inc_PN = mkPN "Inc";
lin incalculable_A = compoundA (mkA "incalculable");
lin incandescence_N = mkN "incandescence" ;
lin incandescent_A = compoundA (mkA "incandescent");
lin incantation_N = mkN "incantation" "incantations";
lin incapability_N = mkN "incapability" ;
lin incapable_A = compoundA (mkA "incapable");
lin incapacitate_V2 = mkV2 (mkV "incapacitate" "incapacitates" "incapacitated" "incapacitated" "incapacitating");
lin incapacity_N = mkN "incapacity" ;
lin incarcerate_V2 = mkV2 (mkV "incarcerate" "incarcerates" "incarcerated" "incarcerated" "incarcerating");
lin incarceration_N = mkN "incarceration" "incarcerations";
lin incarnate_A = compoundA (mkA "incarnate");
lin incarnate_V2 = mkV2 (mkV "incarnate" "incarnates" "incarnated" "incarnated" "incarnating");
lin incarnation_N = mkN "incarnation" "incarnations";
lin incautious_A = compoundA (mkA "incautious");
lin incendiarism_N = mkN "incendiarism" ;
lin incendiary_N = mkN "incendiary" "incendiaries";
lin incense_N = mkN "incense" ;
lin incense_V2 = mkV2 (mkV "incense" "incenses" "incensed" "incensed" "incensing");
lin incentive_N = mkN "incentive" "incentives";
lin inception_N = mkN "inception" "inceptions";
lin incertitude_N = mkN "incertitude" ;
lin incessant_A = compoundA (mkA "incessant");
lin incest_N = mkN "incest" ;
lin incestuous_A = compoundA (mkA "incestuous");
lin inch_N = mkN "inch" "inches";
lin inch_V = mkV "inch" "inches" "inched" "inched" "inching";
lin inch_V2 = mkV2 (mkV "inch" "inches" "inched" "inched" "inching");
lin inchoate_A = compoundA (mkA "inchoate");
lin inchoative_A = compoundA (mkA "inchoative");
lin inchon_PN = mkPN "Inchon";
lin incidence_N = mkN "incidence" "incidences";
lin incident_A = compoundA (mkA "incident");
lin incident_N = mkN "incident" "incidents";
lin incidental_A = compoundA (mkA "incidental");
lin incinerate_V2 = mkV2 (mkV "incinerate" "incinerates" "incinerated" "incinerated" "incinerating");
lin incineration_N = mkN "incineration" ;
lin incinerator_N = mkN "incinerator" "incinerators";
lin incipient_A = compoundA (mkA "incipient");
lin incise_V2 = mkV2 (mkV "incise" "incises" "incised" "incised" "incising");
lin incision_N = mkN "incision" "incisions";
lin incisive_A = compoundA (mkA "incisive");
lin incisor_N = mkN "incisor" "incisors";
lin incite_V2 = mkV2 (mkV "incite" "incites" "incited" "incited" "inciting");
lin incitement_N = mkN "incitement" "incitements";
lin incivility_N = mkN "incivility" "incivilities";
lin incl_PN = mkPN "Incl";
lin inclemency_N = mkN "inclemency" ;
lin inclement_A = compoundA (mkA "inclement");
lin inclination_N = mkN "inclination" "inclinations";
lin incline_N = mkN "incline" "inclines";
lin incline_V = mkV "incline" "inclines" "inclined" "inclined" "inclining";
lin incline_V2 = mkV2 (mkV "incline" "inclines" "inclined" "inclined" "inclining");
lin incline_V2V = mkV2V (mkV "incline" "inclines" "inclined" "inclined" "inclining") noPrep to_Prep ;
lin inclose_V2 = mkV2 (mkV "inclose" "incloses" "inclosed" "inclosed" "inclosing");
lin inclosure_N = mkN "inclosure" "inclosures";
lin include_V = mkV "include";
lin include_V2 = mkV2 (mkV "include" "includes" "included" "included" "including");
lin include_VS = mkVS (mkV "include");
lin include_VV = ingVV (mkV "include");
lin inclusion_N = mkN "inclusion" ;
lin inclusive_A = compoundA (mkA "inclusive");
lin incognito_A = compoundA (mkA "incognito");
lin incognito_Adv = mkAdv "incognito";
lin incoherence_N = mkN "incoherence" ;
lin incoherent_A = compoundA (mkA "incoherent");
lin incombustible_A = compoundA (mkA "incombustible");
lin income_N = mkN "income" "incomes";
lin income_tax_N = mkN "income - tax" "income - taxes";
lin incoming_A = compoundA (mkA "incoming");
lin incommensurable_A = compoundA (mkA "incommensurable");
lin incommensurate_A = compoundA (mkA "incommensurate");
lin incommode_V2 = mkV2 (mkV "incommode" "incommodes" "incommoded" "incommoded" "incommoding");
lin incommunicado_A = compoundA (mkA "incommunicado");
lin incomparable_A = compoundA (mkA "incomparable");
lin incompatibility_N = mkN "incompatibility" "incompatibilities";
lin incompatible_A = compoundA (mkA "incompatible");
lin incompetence_N = mkN "incompetence" ;
lin incompetency_N = mkN "incompetency" ;
lin incompetent_A = compoundA (mkA "incompetent");
lin incomplete_A = compoundA (mkA "incomplete");
lin incomprehensibility_N = mkN "incomprehensibility" ;
lin incomprehensible_A = compoundA (mkA "incomprehensible");
lin incomprehension_N = mkN "incomprehension" ;
lin incompressible_A = compoundA (mkA "incompressible");
lin inconceivable_A = compoundA (mkA "inconceivable");
lin inconclusive_A = compoundA (mkA "inconclusive");
lin incongruity_N = mkN "incongruity" "incongruities";
lin incongruous_A = compoundA (mkA "incongruous");
lin inconsequent_A = compoundA (mkA "inconsequent");
lin inconsequential_A = compoundA (mkA "inconsequential");
lin inconsiderable_A = compoundA (mkA "inconsiderable");
lin inconsiderate_A = compoundA (mkA "inconsiderate");
lin inconsistency_N = mkN "inconsistency" "inconsistencies";
lin inconsistent_A = compoundA (mkA "inconsistent");
lin inconsolable_A = compoundA (mkA "inconsolable");
lin inconspicuous_A = compoundA (mkA "inconspicuous");
lin inconstancy_N = mkN "inconstancy" "inconstancies";
lin inconstant_A = compoundA (mkA "inconstant");
lin incontestable_A = compoundA (mkA "incontestable");
lin incontinence_N = mkN "incontinence" ;
lin incontinent_A = compoundA (mkA "incontinent");
lin incontrovertible_A = compoundA (mkA "incontrovertible");
lin inconvenience_N = mkN "inconvenience" "inconveniences";
lin inconvenience_V2 = mkV2 (mkV "inconvenience" "inconveniences" "inconvenienced" "inconvenienced" "inconveniencing");
lin inconvenient_A = compoundA (mkA "inconvenient");
lin inconvertibility_N = mkN "inconvertibility" ;
lin inconvertible_A = compoundA (mkA "inconvertible");
lin incorporate_A = compoundA (mkA "incorporate");
lin incorporate_V = mkV "incorporate" "incorporates" "incorporated" "incorporated" "incorporating";
lin incorporate_V2 = mkV2 (mkV "incorporate" "incorporates" "incorporated" "incorporated" "incorporating");
lin incorporation_N = mkN "incorporation" ;
lin incorporeal_A = compoundA (mkA "incorporeal");
lin incorrect_A = compoundA (mkA "incorrect");
lin incorrectness_N = mkN "incorrectness" ;
lin incorrigible_A = compoundA (mkA "incorrigible");
lin incorruptibility_N = mkN "incorruptibility" ;
lin incorruptible_A = compoundA (mkA "incorruptible");
lin increase_N = mkN "increase" "increases";
lin increase_V = mkV "increase" "increases" "increased" "increased" "increasing";
lin increase_V2 = mkV2 (mkV "increase" "increases" "increased" "increased" "increasing");
lin increasingly_Adv = mkAdv "increasingly";
lin incredibility_N = mkN "incredibility" ;
lin incredible_A = compoundA (mkA "incredible");
lin incredulity_N = mkN "incredulity" ;
lin incredulous_A = compoundA (mkA "incredulous");
lin increment_N = mkN "increment" "increments";
lin incremental_A = compoundA (mkA "incremental");
lin incriminate_V2 = mkV2 (mkV "incriminate" "incriminates" "incriminated" "incriminated" "incriminating");
lin incrustation_N = mkN "incrustation" "incrustations";
lin incubate_V = mkV "incubate" "incubates" "incubated" "incubated" "incubating";
lin incubate_V2 = mkV2 (mkV "incubate" "incubates" "incubated" "incubated" "incubating");
lin incubation_N = mkN "incubation" "incubations";
lin incubator_N = mkN "incubator" "incubators";
lin incubus_N = mkN "incubus" "incubuses";
lin inculcate_V2 = mkV2 (mkV "inculcate" "inculcates" "inculcated" "inculcated" "inculcating");
lin inculpate_V2 = mkV2 (mkV "inculpate" "inculpates" "inculpated" "inculpated" "inculpating");
lin incumbency_N = mkN "incumbency" "incumbencies";
lin incumbent_A = compoundA (mkA "incumbent");
lin incumbent_N = mkN "incumbent" "incumbents";
lin incur_V2 = mkV2 (mkV "incur" "incurs" "incurred" "incurred" "incurring");
lin incurable_A = compoundA (mkA "incurable");
lin incurable_N = mkN "incurable" "incurables";
lin incurious_A = compoundA (mkA "incurious");
lin incursion_N = mkN "incursion" "incursions";
lin incurved_A = compoundA (mkA "incurved");
lin indebted_A = compoundA (mkA "indebted");
lin indebtedness_N = mkN "indebtedness" ;
lin indecency_N = mkN "indecency" "indecencies";
lin indecent_A = compoundA (mkA "indecent");
lin indecipherable_A = compoundA (mkA "indecipherable");
lin indecision_N = mkN "indecision" ;
lin indecisive_A = compoundA (mkA "indecisive");
lin indecorous_A = compoundA (mkA "indecorous");
lin indecorum_N = mkN "indecorum" ;
lin indeed_Adv = mkAdv "indeed";
lin indefatigable_A = compoundA (mkA "indefatigable");
lin indefeasible_A = compoundA (mkA "indefeasible");
lin indefensible_A = compoundA (mkA "indefensible");
lin indefinable_A = compoundA (mkA "indefinable");
lin indefinite_A = compoundA (mkA "indefinite");
lin indelible_A = compoundA (mkA "indelible");
lin indelicacy_N = mkN "indelicacy" "indelicacies";
lin indelicate_A = compoundA (mkA "indelicate");
lin indemnification_N = mkN "indemnification" "indemnifications";
lin indemnify_V2 = mkV2 (mkV "indemnify" "indemnifies" "indemnified" "indemnified" "indemnifying");
lin indemnity_N = mkN "indemnity" "indemnities";
lin indent_N = mkN "indent" "indents";
lin indent_V = mkV "indent" "indents" "indented" "indented" "indenting";
lin indent_V2 = mkV2 (mkV "indent" "indents" "indented" "indented" "indenting");
lin indentation_N = mkN "indentation" "indentations";
lin indenture_N = mkN "indenture" "indentures";
lin indenture_V2 = mkV2 (mkV "indenture" "indentures" "indentured" "indentured" "indenturing");
lin independence_N = mkN "independence" ;
lin independent_A = compoundA (mkA "independent");
lin independent_N = mkN "independent" "independents";
lin indescribable_A = compoundA (mkA "indescribable");
lin indestructibility_N = mkN "indestructibility" ;
lin indestructible_A = compoundA (mkA "indestructible");
lin indeterminable_A = compoundA (mkA "indeterminable");
lin indeterminacy_N = mkN "indeterminacy" ;
lin indeterminate_A = compoundA (mkA "indeterminate");
lin index_N = mkN "index" "indexes";
lin index_V2 = mkV2 (mkV "index" "indexes" "indexed" "indexed" "indexing");
lin indexer_N = mkN "indexer" "indexers";
lin india_PN = mkPN "India";
lin india_rubber_N = mkN "india - rubber" "india - rubbers";
lin indiaman_N = mkN "indiaman" "indiamen" {- FIXME: guessed plural form -};
lin indian_A = compoundA (mkA "indian");
lin indian_N = mkN "indian" "indians";
lin indiana_PN = mkPN "Indiana";
lin indianapolis_PN = mkPN "Indianapolis";
lin indicate_V = mkV "indicate";
lin indicate_V2 = mkV2 (mkV "indicate" "indicates" "indicated" "indicated" "indicating");
lin indicate_VS = mkVS (mkV "indicate");
lin indication_N = mkN "indication" "indications";
lin indicative_A = compoundA (mkA "indicative");
lin indicator_N = mkN "indicator" "indicators";
lin indict_V = mkV "indict";
lin indict_V2 = mkV2 (mkV "indict" "indicts" "indicted" "indicted" "indicting");
lin indictable_A = compoundA (mkA "indictable");
lin indictment_N = mkN "indictment" "indictments";
lin indies_PN = mkPN "Indies";
lin indifference_N = mkN "indifference" ;
lin indifferent_A = compoundA (mkA "indifferent");
lin indigence_N = mkN "indigence" ;
lin indigenous_A = compoundA (mkA "indigenous");
lin indigent_A = compoundA (mkA "indigent");
lin indigestible_A = compoundA (mkA "indigestible");
lin indigestion_N = mkN "indigestion" ;
lin indignant_A = compoundA (mkA "indignant");
lin indignation_N = mkN "indignation" ;
lin indignity_N = mkN "indignity" "indignities";
lin indigo_N = mkN "indigo" ;
lin indirect_A = compoundA (mkA "indirect");
lin indirectness_N = mkN "indirectness" ;
lin indiscernible_A = compoundA (mkA "indiscernible");
lin indiscipline_N = mkN "indiscipline" ;
lin indiscreet_A = compoundA (mkA "indiscreet");
lin indiscrete_A = compoundA (mkA "indiscrete");
lin indiscretion_N = mkN "indiscretion" "indiscretions";
lin indiscriminate_A = compoundA (mkA "indiscriminate");
lin indispensability_N = mkN "indispensability" ;
lin indispensable_A = compoundA (mkA "indispensable");
lin indisposed_A = compoundA (mkA "indisposed");
lin indisposition_N = mkN "indisposition" "indispositions";
lin indisputable_A = compoundA (mkA "indisputable");
lin indissoluble_A = compoundA (mkA "indissoluble");
lin indistinct_A = compoundA (mkA "indistinct");
lin indistinctness_N = mkN "indistinctness" ;
lin indistinguishable_A = compoundA (mkA "indistinguishable");
lin indite_V2 = mkV2 (mkV "indite" "indites" "indited" "indited" "inditing");
lin individual_A = compoundA (mkA "individual");
lin individual_N = mkN "individual" "individuals";
lin individualism_N = mkN "individualism" ;
lin individualist_N = mkN "individualist" "individualists";
lin individualistic_A = compoundA (mkA "individualistic");
lin individuality_N = mkN "individuality" "individualities";
lin individualize_V2 = mkV2 (mkV "individualize" "individualizes" "individualized" "individualized" "individualizing");
lin indivisible_A = compoundA (mkA "indivisible");
lin indo_european_A = compoundA (mkA "indo - european");
lin indoctrinate_V2 = mkV2 (mkV "indoctrinate" "indoctrinates" "indoctrinated" "indoctrinated" "indoctrinating");
lin indoctrination_N = mkN "indoctrination" ;
lin indolence_N = mkN "indolence" ;
lin indolent_A = compoundA (mkA "indolent");
lin indomitable_A = compoundA (mkA "indomitable");
lin indonesia_PN = mkPN "Indonesia";
lin indonesian_A = compoundA (mkA "indonesian");
lin indonesian_N = mkN "indonesian" "indonesians";
lin indoor_A = compoundA (mkA "indoor");
lin indoors_Adv = mkAdv "indoors";
lin indore_PN = mkPN "Indore";
lin indorse_V2 = mkV2 (mkV "indorse" "indorses" "indorsed" "indorsed" "indorsing");
lin indrawn_A = compoundA (mkA "indrawn");
lin indubitable_A = compoundA (mkA "indubitable");
lin induce_V2 = mkV2 (mkV "induce" "induces" "induced" "induced" "inducing");
lin induce_V2V = mkV2V (mkV "induce") noPrep to_Prep ;
lin inducement_N = mkN "inducement" "inducements";
lin induct_V2 = mkV2 (mkV "induct" "inducts" "inducted" "inducted" "inducting");
lin induction_N = mkN "induction" "inductions";
lin inductive_A = compoundA (mkA "inductive");
lin indue_V2 = mkV2 (mkV "indue" "indues" "indued" "indued" "induing");
lin indulge_V = mkV "indulge" "indulges" "indulged" "indulged" "indulging";
lin indulge_V2 = mkV2 (mkV "indulge" "indulges" "indulged" "indulged" "indulging");
lin indulgence_N = mkN "indulgence" "indulgences";
lin indulgent_A = compoundA (mkA "indulgent");
lin industrial_A = compoundA (mkA "industrial");
lin industrialism_N = mkN "industrialism" ;
lin industrialist_N = mkN "industrialist" "industrialists";
lin industrialization_N = mkN "industrialization" ;
lin industrialized_A = compoundA (mkA "industrialized");
lin industrious_A = compoundA (mkA "industrious");
lin industry_N = mkN "industry" "industries";
lin indwelling_A = compoundA (mkA "indwelling");
lin inebriate_A = compoundA (mkA "inebriate");
lin inebriate_N = mkN "inebriate" "inebriates";
lin inebriate_V2 = mkV2 (mkV "inebriate" "inebriates" "inebriated" "inebriated" "inebriating");
lin inebriation_N = mkN "inebriation" "inebriations";
lin inebriety_N = mkN "inebriety" ;
lin inedible_A = compoundA (mkA "inedible");
lin ineffable_A = compoundA (mkA "ineffable");
lin ineffective_A = compoundA (mkA "ineffective");
lin ineffectiveness_N = mkN "ineffectiveness" ;
lin ineffectual_A = compoundA (mkA "ineffectual");
lin ineffectuality_N = mkN "ineffectuality" ;
lin inefficiency_N = mkN "inefficiency" "inefficiencies";
lin inefficient_A = compoundA (mkA "inefficient");
lin inelastic_A = compoundA (mkA "inelastic");
lin inelegance_N = mkN "inelegance" "inelegances";
lin inelegant_A = compoundA (mkA "inelegant");
lin ineligibility_N = mkN "ineligibility" ;
lin ineligible_A = compoundA (mkA "ineligible");
lin ineluctable_A = compoundA (mkA "ineluctable");
lin inept_A = compoundA (mkA "inept");
lin ineptitude_N = mkN "ineptitude" "ineptitudes";
lin inequality_N = mkN "inequality" "inequalities";
lin inequitable_A = compoundA (mkA "inequitable");
lin inequity_N = mkN "inequity" "inequities";
lin ineradicable_A = compoundA (mkA "ineradicable");
lin inert_A = compoundA (mkA "inert");
lin inertia_N = mkN "inertia" ;
lin inescapable_A = compoundA (mkA "inescapable");
lin inessential_A = compoundA (mkA "inessential");
lin inessential_N = mkN "inessential" "inessentials";
lin inestimable_A = compoundA (mkA "inestimable");
lin inevitability_N = mkN "inevitability" ;
lin inevitable_A = compoundA (mkA "inevitable");
lin inexact_A = compoundA (mkA "inexact");
lin inexactitude_N = mkN "inexactitude" "inexactitudes";
lin inexcusable_A = compoundA (mkA "inexcusable");
lin inexhaustible_A = compoundA (mkA "inexhaustible");
lin inexorable_A = compoundA (mkA "inexorable");
lin inexpediency_N = mkN "inexpediency" ;
lin inexpedient_A = compoundA (mkA "inexpedient");
lin inexpensive_A = compoundA (mkA "inexpensive");
lin inexperience_N = mkN "inexperience" ;
lin inexperienced_A = compoundA (mkA "inexperienced");
lin inexpert_A = compoundA (mkA "inexpert");
lin inexpiable_A = compoundA (mkA "inexpiable");
lin inexplicable_A = compoundA (mkA "inexplicable");
lin inexpressible_A = compoundA (mkA "inexpressible");
lin inextinguishable_A = compoundA (mkA "inextinguishable");
lin inextricable_A = compoundA (mkA "inextricable");
lin infallibility_N = mkN "infallibility" ;
lin infallible_A = compoundA (mkA "infallible");
lin infamous_A = compoundA (mkA "infamous");
lin infamy_N = mkN "infamy" "infamies";
lin infancy_N = mkN "infancy" "infancies";
lin infant_N = mkN "infant" "infants";
lin infanticide_N = mkN "infanticide" ;
lin infantile_A = compoundA (mkA "infantile");
lin infantilism_N = mkN "infantilism" ;
lin infantry_N = mkN "infantry" "infantries";
lin infantryman_N = mkN "infantryman" "infantrymen" {- FIXME: guessed plural form -};
lin infatuate_V2 = mkV2 (mkV "infatuate" "infatuates" "infatuated" "infatuated" "infatuating");
lin infatuation_N = mkN "infatuation" "infatuations";
lin infect_V = mkV "infect";
lin infect_V2 = mkV2 (mkV "infect" "infects" "infected" "infected" "infecting");
lin infection_N = mkN "infection" "infections";
lin infectious_A = compoundA (mkA "infectious");
lin infer_V2 = mkV2 (mkV "infer" "infers" "inferred" "inferred" "inferring");
lin inference_N = mkN "inference" "inferences";
lin inferential_A = compoundA (mkA "inferential");
lin inferior_A = compoundA (mkA "inferior");
lin inferior_N = mkN "inferior" "inferiors";
lin inferiority_N = mkN "inferiority" ;
lin infernal_A = compoundA (mkA "infernal");
lin inferno_N = mkN "inferno" "infernos";
lin infertile_A = compoundA (mkA "infertile");
lin infertility_N = mkN "infertility" ;
lin infest_V2 = mkV2 (mkV "infest" "infests" "infested" "infested" "infesting");
lin infestation_N = mkN "infestation" "infestations";
lin infidel_N = mkN "infidel" "infidels";
lin infidelity_N = mkN "infidelity" "infidelities";
lin infield_N = mkN "infield" ;
lin infiltrate_V = mkV "infiltrate" "infiltrates" "infiltrated" "infiltrated" "infiltrating";
lin infiltrate_V2 = mkV2 (mkV "infiltrate" "infiltrates" "infiltrated" "infiltrated" "infiltrating");
lin infiltration_N = mkN "infiltration" ;
lin infinite_A = compoundA (mkA "infinite");
lin infinitesimal_A = compoundA (mkA "infinitesimal");
lin infinitive_A = compoundA (mkA "infinitive");
lin infinitive_N = mkN "infinitive" "infinitives";
lin infinitude_N = mkN "infinitude" "infinitudes";
lin infinity_N = mkN "infinity" ;
lin infirm_A = compoundA (mkA "infirm");
lin infirmary_N = mkN "infirmary" "infirmaries";
lin infirmity_N = mkN "infirmity" "infirmities";
lin inflame_V = mkV "inflame" "inflames" "inflamed" "inflamed" "inflaming";
lin inflame_V2 = mkV2 (mkV "inflame" "inflames" "inflamed" "inflamed" "inflaming");
lin inflammable_A = compoundA (mkA "inflammable");
lin inflammation_N = mkN "inflammation" "inflammations";
lin inflammatory_A = compoundA (mkA "inflammatory");
lin inflatable_A = compoundA (mkA "inflatable");
lin inflate_V = mkV "inflate" "inflates" "inflated" "inflated" "inflating";
lin inflate_V2 = mkV2 (mkV "inflate" "inflates" "inflated" "inflated" "inflating");
lin inflation_N = mkN "inflation" ;
lin inflationary_A = compoundA (mkA "inflationary");
lin inflect_V2 = mkV2 (mkV "inflect" "inflects" "inflected" "inflected" "inflecting");
lin inflection_N = mkN "inflection" "inflections";
lin inflectional_A = compoundA (mkA "inflectional");
lin inflexibility_N = mkN "inflexibility" ;
lin inflexible_A = compoundA (mkA "inflexible");
lin inflexion_N = mkN "inflexion" "inflexions";
lin inflict_V2 = mkV2 (mkV "inflict" "inflicts" "inflicted" "inflicted" "inflicting");
lin infliction_N = mkN "infliction" "inflictions";
lin inflorescence_N = mkN "inflorescence" ;
lin inflow_N = mkN "inflow" "inflows";
lin influence_N = mkN "influence" "influences";
lin influence_V2 = mkV2 (mkV "influence" "influences" "influenced" "influenced" "influencing");
lin influential_A = compoundA (mkA "influential");
lin influenza_N = mkN "influenza" ;
lin influx_N = mkN "influx" "influxes";
lin info_N = mkN "info" ;
lin inform_V = mkV "inform" "informs" "informed" "informed" "informing";
lin inform_V2 = mkV2 (mkV "inform" "informs" "informed" "informed" "informing");
lin informal_A = compoundA (mkA "informal");
lin informality_N = mkN "informality" "informalities";
lin informant_N = mkN "informant" "informants";
lin information_N = mkN "information" ;
lin informative_A = compoundA (mkA "informative");
lin informer_N = mkN "informer" "informers";
lin infra_Adv = mkAdv "infra";
lin infra_dig_A = compoundA (mkA "infra dig");
lin infra_red_A = compoundA (mkA "infra - red");
lin infraction_N = mkN "infraction" "infractions";
lin infrastructure_N = mkN "infrastructure" "infrastructures";
lin infrequency_N = mkN "infrequency" ;
lin infrequent_A = compoundA (mkA "infrequent");
lin infringe_V = mkV "infringe" "infringes" "infringed" "infringed" "infringing";
lin infringe_V2 = mkV2 (mkV "infringe" "infringes" "infringed" "infringed" "infringing");
lin infringement_N = mkN "infringement" "infringements";
lin infuriate_V2 = mkV2 (mkV "infuriate" "infuriates" "infuriated" "infuriated" "infuriating");
lin infuse_V = mkV "infuse" "infuses" "infused" "infused" "infusing";
lin infuse_V2 = mkV2 (mkV "infuse" "infuses" "infused" "infused" "infusing");
lin infusion_N = mkN "infusion" "infusions";
lin ingatestone_PN = mkPN "Ingatestone";
lin ingathering_N = mkN "ingathering" "ingatherings";
lin ingenious_A = compoundA (mkA "ingenious");
lin ingenue_N = mkN "ingénue" "ingénues";
lin ingenuity_N = mkN "ingenuity" ;
lin ingenuous_A = compoundA (mkA "ingenuous");
lin ingenuousness_N = mkN "ingenuousness" ;
lin ingest_V2 = mkV2 (mkV "ingest" "ingests" "ingested" "ingested" "ingesting");
lin ingle_nook_N = mkN "ingle - nook" "ingle - nooks";
lin inglorious_A = compoundA (mkA "inglorious");
lin ingoing_A = compoundA (mkA "ingoing");
lin ingot_N = mkN "ingot" "ingots";
lin ingraft_V2 = mkV2 (mkV "ingraft" "ingrafts" "ingrafted" "ingrafted" "ingrafting");
lin ingrained_A = compoundA (mkA "ingrained");
lin ingratiate_V2 = mkV2 (mkV "ingratiate" "ingratiates" "ingratiated" "ingratiated" "ingratiating");
lin ingratiatingly_Adv = mkAdv "ingratiatingly";
lin ingratitude_N = mkN "ingratitude" ;
lin ingredient_N = mkN "ingredient" "ingredients";
lin ingress_N = mkN "ingress" ;
lin ingrid_PN = mkPN "Ingrid";
lin ingrowing_A = compoundA (mkA "ingrowing");
lin inhabit_V2 = mkV2 (mkV "inhabit" "inhabits" "inhabited" "inhabited" "inhabiting");
lin inhabitable_A = compoundA (mkA "inhabitable");
lin inhabitant_N = mkN "inhabitant" "inhabitants";
lin inhalation_N = mkN "inhalation" "inhalations";
lin inhale_V = mkV "inhale" "inhales" "inhaled" "inhaled" "inhaling";
lin inhale_V2 = mkV2 (mkV "inhale" "inhales" "inhaled" "inhaled" "inhaling");
lin inhaler_N = mkN "inhaler" "inhalers";
lin inharmonious_A = compoundA (mkA "inharmonious");
lin inherent_A = compoundA (mkA "inherent");
lin inherit_V = mkV "inherit" "inherits" "inherited" "inherited" "inheriting";
lin inherit_V2 = mkV2 (mkV "inherit" "inherits" "inherited" "inherited" "inheriting");
lin inheritance_N = mkN "inheritance" "inheritances";
lin inheritor_N = mkN "inheritor" "inheritors";
lin inhibit_V2 = mkV2 (mkV "inhibit" "inhibits" "inhibited" "inhibited" "inhibiting");
lin inhibition_N = mkN "inhibition" "inhibitions";
lin inhibitor_N = mkN "inhibitor" "inhibitors";
lin inhibitory_A = compoundA (mkA "inhibitory");
lin inhospitable_A = compoundA (mkA "inhospitable");
lin inhuman_A = compoundA (mkA "inhuman");
lin inhumane_A = compoundA (mkA "inhumane");
lin inhumanity_N = mkN "inhumanity" "inhumanities";
lin inimical_A = compoundA (mkA "inimical");
lin inimitable_A = compoundA (mkA "inimitable");
lin iniquitous_A = compoundA (mkA "iniquitous");
lin iniquity_N = mkN "iniquity" "iniquities";
lin initial_A = compoundA (mkA "initial");
lin initial_N = mkN "initial" "initials";
lin initial_V2 = mkV2 (mkV "initial" "initials" "initialled" "initialled" "initialling");
lin initiate_A = compoundA (mkA "initiate");
lin initiate_N = mkN "initiate" "initiates";
lin initiate_V2 = mkV2 (mkV "initiate" "initiates" "initiated" "initiated" "initiating");
lin initiation_N = mkN "initiation" ;
lin initiative_N = mkN "initiative" "initiatives";
lin inject_V2 = mkV2 (mkV "inject" "injects" "injected" "injected" "injecting");
lin injection_N = mkN "injection" "injections";
lin injudicious_A = compoundA (mkA "injudicious");
lin injunction_N = mkN "injunction" "injunctions";
lin injure_V2 = mkV2 (mkV "injure" "injures" "injured" "injured" "injuring");
lin injured_A = compoundA (mkA "injured");
lin injurious_A = compoundA (mkA "injurious");
lin injury_N = mkN "injury" "injuries";
lin injustice_N = mkN "injustice" "injustices";
lin ink_N = mkN "ink" "inks";
lin ink_V2 = mkV2 (mkV "ink" "inks" "inked" "inked" "inking");
lin ink_bottle_N = mkN "ink - bottle" "ink - bottles";
lin ink_pad_N = mkN "ink - pad" "ink - pads";
lin ink_pot_N = mkN "ink - pot" "ink - pots";
lin inkling_N = mkN "inkling" "inklings";
lin inkstand_N = mkN "inkstand" "inkstands";
lin inkwell_N = mkN "inkwell" "inkwells";
lin inky_A = mkA "inky" "inkier";
lin inland_A = compoundA (mkA "inland");
lin inland_Adv = mkAdv "inland";
lin inlay_N = mkN "inlay" "inlays";
lin inlay_V2 = mkV2 (mkV "in" IrregEng.lay_V);
lin inlet_N = mkN "inlet" "inlets";
lin inmate_N = mkN "inmate" "inmates";
lin inmost_A = compoundA (mkA "inmost");
lin inn_N = mkN "inn" "inns";
lin innate_A = compoundA (mkA "innate");
lin inner_A = compoundA (mkA "inner");
lin innermost_A = compoundA (mkA "innermost");
lin inning_N = mkN "inning" "innings";
lin innings_N = mkN "innings" "innings";
lin innkeeper_N = mkN "innkeeper" "innkeepers";
lin innocence_N = mkN "innocence" ;
lin innocent_A = compoundA (mkA "innocent");
lin innocent_N = mkN "innocent" "innocents";
lin innocuous_A = compoundA (mkA "innocuous");
lin innovate_V = mkV "innovate" "innovates" "innovated" "innovated" "innovating";
lin innovate_V2 = mkV2 (mkV "innovate" "innovates" "innovated" "innovated" "innovating");
lin innovation_N = mkN "innovation" "innovations";
lin innovator_N = mkN "innovator" "innovators";
lin innsbruck_PN = mkPN "Innsbruck";
lin innuendo_N = mkN "innuendo" "innuendoes";
lin innumerable_A = compoundA (mkA "innumerable");
lin inoculate_V2 = mkV2 (mkV "inoculate" "inoculates" "inoculated" "inoculated" "inoculating");
lin inoculation_N = mkN "inoculation" "inoculations";
lin inoffensive_A = compoundA (mkA "inoffensive");
lin inoperable_A = compoundA (mkA "inoperable");
lin inoperative_A = compoundA (mkA "inoperative");
lin inopportune_A = compoundA (mkA "inopportune");
lin inordinate_A = compoundA (mkA "inordinate");
lin inorganic_A = compoundA (mkA "inorganic");
lin inorganically_Adv = mkAdv "inorganically";
lin inpouring_A = compoundA (mkA "inpouring");
lin inpouring_N = mkN "inpouring" "inpourings";
lin input_N = mkN "input" "inputs";
lin inquest_N = mkN "inquest" "inquests";
lin inquietude_N = mkN "inquietude" ;
lin inquire_V = mkV "inquire" "inquires" "inquired" "inquired" "inquiring";
lin inquire_V2 = mkV2 (mkV "inquire" "inquires" "inquired" "inquired" "inquiring");
lin inquirer_N = mkN "inquirer" "inquirers";
lin inquiring_A = compoundA (mkA "inquiring");
lin inquiry_N = mkN "inquiry" "inquiries";
lin inquisition_N = mkN "inquisition" "inquisitions";
lin inquisitive_A = compoundA (mkA "inquisitive");
lin inquisitiveness_N = mkN "inquisitiveness" ;
lin inquisitor_N = mkN "inquisitor" "inquisitors";
lin inquisitorial_A = compoundA (mkA "inquisitorial");
lin inroad_N = mkN "inroad" "inroads";
lin inrush_N = mkN "inrush" "inrushes";
lin insane_A = compoundA (mkA "insane");
lin insanitary_A = compoundA (mkA "insanitary");
lin insanity_N = mkN "insanity" ;
lin insatiable_A = compoundA (mkA "insatiable");
lin insatiate_A = compoundA (mkA "insatiate");
lin inscribe_V2 = mkV2 (mkV "inscribe" "inscribes" "inscribed" "inscribed" "inscribing");
lin inscription_N = mkN "inscription" "inscriptions";
lin inscrutable_A = compoundA (mkA "inscrutable");
lin insect_N = mkN "insect" "insects";
lin insect_powder_N = mkN "insect - powder" "insect - powders";
lin insecticide_N = mkN "insecticide" "insecticides";
lin insectivorous_A = compoundA (mkA "insectivorous");
lin insecure_A = compoundA (mkA "insecure");
lin insecurity_N = mkN "insecurity" ;
lin inseminate_V2 = mkV2 (mkV "inseminate" "inseminates" "inseminated" "inseminated" "inseminating");
lin insemination_N = mkN "insemination" ;
lin insensate_A = compoundA (mkA "insensate");
lin insensibility_N = mkN "insensibility" ;
lin insensible_A = compoundA (mkA "insensible");
lin insensitive_A = compoundA (mkA "insensitive");
lin insensitivity_N = mkN "insensitivity" ;
lin insentient_A = compoundA (mkA "insentient");
lin inseparable_A = compoundA (mkA "inseparable");
lin insert_N = mkN "insert" "inserts";
lin insert_V2 = mkV2 (mkV "insert" "inserts" "inserted" "inserted" "inserting");
lin insertion_N = mkN "insertion" "insertions";
lin inset_N = mkN "inset" "insets";
lin inset_V2 = mkV2 (mkV "in" IrregEng.set_V);
lin inshore_A = compoundA (mkA "inshore");
lin inshore_Adv = mkAdv "inshore";
lin inside_A = compoundA (mkA "inside");
lin inside_Adv = mkAdv "inside";
lin inside_N = mkN "inside" "insides";
lin inside_Prep = mkPrep "inside";
lin insider_N = mkN "insider" "insiders";
lin insidious_A = compoundA (mkA "insidious");
lin insidiousness_N = mkN "insidiousness" ;
lin insight_N = mkN "insight" "insights";
lin insignificance_N = mkN "insignificance" ;
lin insignificant_A = compoundA (mkA "insignificant");
lin insincere_A = compoundA (mkA "insincere");
lin insincerity_N = mkN "insincerity" ;
lin insinuate_V2 = mkV2 (mkV "insinuate" "insinuates" "insinuated" "insinuated" "insinuating");
lin insinuatingly_Adv = mkAdv "insinuatingly";
lin insinuation_N = mkN "insinuation" "insinuations";
lin insipid_A = compoundA (mkA "insipid");
lin insipidity_N = mkN "insipidity" ;
lin insipidness_N = mkN "insipidness" ;
lin insist_V = mkV "insist" "insists" "insisted" "insisted" "insisting";
lin insist_V2 = mkV2 (mkV "insist" "insists" "insisted" "insisted" "insisting");
lin insist_VS = mkVS (mkV "insist" "insists" "insisted" "insisted" "insisting");
lin insistence_N = mkN "insistence" ;
lin insistent_A = compoundA (mkA "insistent");
lin insofar_Adv = mkAdv "insofar";
lin insole_N = mkN "insole" "insoles";
lin insolence_N = mkN "insolence" ;
lin insolent_A = compoundA (mkA "insolent");
lin insoluble_A = compoundA (mkA "insoluble");
lin insolvency_N = mkN "insolvency" ;
lin insolvent_A = compoundA (mkA "insolvent");
lin insolvent_N = mkN "insolvent" "insolvents";
lin insomnia_N = mkN "insomnia" ;
lin insomniac_N = mkN "insomniac" "insomniacs";
lin insomuch_Adv = mkAdv "insomuch";
lin insouciance_N = mkN "insouciance" ;
lin insouciant_A = compoundA (mkA "insouciant");
lin inspan_V2 = mkV2 (mkV "inspan" "inspans" "inspanned" "inspanned" "inspanning");
lin inspect_V2 = mkV2 (mkV "inspect" "inspects" "inspected" "inspected" "inspecting");
lin inspection_N = mkN "inspection" "inspections";
lin inspector_N = mkN "inspector" "inspectors";
lin inspectorate_N = mkN "inspectorate" "inspectorates";
lin inspiration_N = mkN "inspiration" "inspirations";
lin inspirational_A = compoundA (mkA "inspirational");
lin inspire_V2 = mkV2 (mkV "inspire" "inspires" "inspired" "inspired" "inspiring");
lin inspire_V2V = mkV2V (mkV "inspire") noPrep to_Prep ;
lin inspired_A = compoundA (mkA "inspired");
lin inst_PN = mkPN "Inst";
lin instability_N = mkN "instability" "instabilities";
lin install_V = mkV "install";
lin install_V2 = mkV2 (mkV "install" "installs" "installed" "installed" "installing");
lin installation_N = mkN "installation" "installations";
lin instalment_N = mkN "instalment" "instalments";
lin instance_N = mkN "instance" "instances";
lin instance_V2 = mkV2 (mkV "instance" "instances" "instanced" "instanced" "instancing");
lin instant_A = compoundA (mkA "instant");
lin instant_N = mkN "instant" "instants";
lin instantaneous_A = compoundA (mkA "instantaneous");
lin instead_Adv = mkAdv "instead";
lin instep_N = mkN "instep" "insteps";
lin instigate_V2 = mkV2 (mkV "instigate" "instigates" "instigated" "instigated" "instigating");
lin instigation_N = mkN "instigation" "instigations";
lin instigator_N = mkN "instigator" "instigators";
lin instil_V2 = mkV2 (mkV "instil" "instils" "instilled" "instilled" "instilling");
lin instillation_N = mkN "instillation" "instillations";
lin instinct_A = compoundA (mkA "instinct");
lin instinct_N = mkN "instinct" "instincts";
lin instinctive_A = compoundA (mkA "instinctive");
lin institute_N = mkN "institute" "institutes";
lin institute_V2 = mkV2 (mkV "institute" "institutes" "instituted" "instituted" "instituting");
lin institution_N = mkN "institution" "institutions";
lin institutional_A = compoundA (mkA "institutional");
lin institutionalize_V2 = mkV2 (mkV "institutionalize" "institutionalizes" "institutionalized" "institutionalized" "institutionalizing");
lin instruct_V2 = mkV2 (mkV "instruct" "instructs" "instructed" "instructed" "instructing");
lin instruction_N = mkN "instruction" "instructions";
lin instructional_A = compoundA (mkA "instructional");
lin instructive_A = compoundA (mkA "instructive");
lin instructor_N = mkN "instructor" "instructors";
lin instructress_N = mkN "instructress" "instructresses";
lin instrument_N = mkN "instrument" "instruments";
lin instrumental_A = compoundA (mkA "instrumental");
lin instrumentalist_N = mkN "instrumentalist" "instrumentalists";
lin instrumentality_N = mkN "instrumentality" ;
lin instrumentation_N = mkN "instrumentation" ;
lin insubordinate_A = compoundA (mkA "insubordinate");
lin insubordination_N = mkN "insubordination" "insubordinations";
lin insubstantial_A = compoundA (mkA "insubstantial");
lin insufferable_A = compoundA (mkA "insufferable");
lin insufficiency_N = mkN "insufficiency" ;
lin insufficient_A = compoundA (mkA "insufficient");
lin insular_A = compoundA (mkA "insular");
lin insularism_N = mkN "insularism" ;
lin insularity_N = mkN "insularity" ;
lin insulate_V2 = mkV2 (mkV "insulate" "insulates" "insulated" "insulated" "insulating");
lin insulation_N = mkN "insulation" ;
lin insulator_N = mkN "insulator" "insulators";
lin insulin_N = mkN "insulin" ;
lin insult_N = mkN "insult" "insults";
lin insult_V2 = mkV2 (mkV "insult" "insults" "insulted" "insulted" "insulting");
lin insulting_A = compoundA (mkA "insulting");
lin insuperable_A = compoundA (mkA "insuperable");
lin insupportable_A = compoundA (mkA "insupportable");
lin insurance_N = mkN "insurance" "insurances";
lin insure_V = mkV "insure" "insures" "insured" "insured" "insuring";
lin insure_V2 = mkV2 (mkV "insure" "insures" "insured" "insured" "insuring");
lin insure_VS = mkVS (mkV "insure" "insures" "insured" "insured" "insuring");
lin insurgent_A = compoundA (mkA "insurgent");
lin insurgent_N = mkN "insurgent" "insurgents";
lin insurmountable_A = compoundA (mkA "insurmountable");
lin insurrection_N = mkN "insurrection" "insurrections";
lin intact_A = compoundA (mkA "intact");
lin intaglio_N = mkN "intaglio" "intaglios";
lin intake_N = mkN "intake" "intakes";
lin intangibility_N = mkN "intangibility" ;
lin intangible_A = compoundA (mkA "intangible");
lin intangibles_N = mkN "intangibles" "intangibless";
lin integer_N = mkN "integer" "integers";
lin integral_A = compoundA (mkA "integral");
lin integrate_V = mkV "integrate";
lin integrate_V2 = mkV2 (mkV "integrate" "integrates" "integrated" "integrated" "integrating");
lin integration_N = mkN "integration" ;
lin integrity_N = mkN "integrity" ;
lin integument_N = mkN "integument" "integuments";
lin intellect_N = mkN "intellect" "intellects";
lin intellectual_A = compoundA (mkA "intellectual");
lin intellectual_N = mkN "intellectual" "intellectuals";
lin intelligence_N = mkN "intelligence" ;
lin intelligent_A = compoundA (mkA "intelligent");
lin intelligentsia_N = mkN "intelligentsia" "intelligentsias";
lin intelligibility_N = mkN "intelligibility" ;
lin intelligible_A = compoundA (mkA "intelligible");
lin intemperance_N = mkN "intemperance" ;
lin intemperate_A = compoundA (mkA "intemperate");
lin intend_V = mkV "intend";
lin intend_V2 = mkV2 (mkV "intend" "intends" "intended" "intended" "intending");
lin intend_VV = mkVV (mkV "intend");
lin intend_VS = mkVS (mkV "intend");
lin intense_A = compoundA (mkA "intense");
lin intensification_N = mkN "intensification" "intensifications";
lin intensify_V = mkV "intensify" "intensifies" "intensified" "intensified" "intensifying";
lin intensify_V2 = mkV2 (mkV "intensify" "intensifies" "intensified" "intensified" "intensifying");
lin intensity_N = mkN "intensity" "intensities";
lin intensive_A = compoundA (mkA "intensive");
lin intent_A = compoundA (mkA "intent");
lin intent_N = mkN "intent" "intents";
lin intention_N = mkN "intention" "intentions";
lin intentional_A = compoundA (mkA "intentional");
lin intentness_N = mkN "intentness" ;
lin inter_V2 = mkV2 (mkV "inter" "inters" "interred" "interred" "interring");
lin inter_alia_Adv = mkAdv "inter alia";
lin interact_V = mkV "interact" "interacts" "interacted" "interacted" "interacting";
lin interaction_N = mkN "interaction" "interactions";
lin interactive_A = compoundA (mkA "interactive");
lin interbreed_V = mkV "inter" IrregEng.breed_V;
lin interbreed_V2 = mkV2 (mkV "inter" IrregEng.breed_V);
lin intercalary_A = compoundA (mkA "intercalary");
lin intercede_V = mkV "intercede" "intercedes" "interceded" "interceded" "interceding";
lin intercept_V2 = mkV2 (mkV "intercept" "intercepts" "intercepted" "intercepted" "intercepting");
lin interception_N = mkN "interception" "interceptions";
lin interceptor_N = mkN "interceptor" "interceptors";
lin intercession_N = mkN "intercession" "intercessions";
lin interchange_N = mkN "interchange" "interchanges";
lin interchange_V2 = mkV2 (mkV "interchange" "interchanges" "interchanged" "interchanged" "interchanging");
lin interchangeable_A = compoundA (mkA "interchangeable");
lin intercollegiate_A = compoundA (mkA "intercollegiate");
lin intercom_N = mkN "intercom" "intercoms";
lin intercommunicate_V = mkV "intercommunicate" "intercommunicates" "intercommunicated" "intercommunicated" "intercommunicating";
lin intercommunication_N = mkN "intercommunication" ;
lin intercommunion_N = mkN "intercommunion" "intercommunions";
lin interconnect_V = mkV "interconnect" "interconnects" "interconnected" "interconnected" "interconnecting";
lin interconnect_V2 = mkV2 (mkV "interconnect" "interconnects" "interconnected" "interconnected" "interconnecting");
lin interconnectedness_N = mkN "interconnectedness" ;
lin interconnection_N = mkN "interconnection" "interconnections";
lin intercontinental_A = compoundA (mkA "intercontinental");
lin intercourse_N = mkN "intercourse" ;
lin interdenominational_A = compoundA (mkA "interdenominational");
lin interdepartmental_A = compoundA (mkA "interdepartmental");
lin interdependence_N = mkN "interdependence" "interdependences";
lin interdependent_A = compoundA (mkA "interdependent");
lin interdict_N = mkN "interdict" "interdicts";
lin interdict_V2 = mkV2 (mkV "interdict" "interdicts" "interdicted" "interdicted" "interdicting");
lin interdiction_N = mkN "interdiction" "interdictions";
lin interdisciplinary_A = compoundA (mkA "interdisciplinary");
lin interest_N = mkN "interest" "interests";
lin interest_V = mkV "interest";
lin interest_V2 = mkV2 (mkV "interest" "interests" "interested" "interested" "interesting");
lin interested_A = compoundA (mkA "interested");
lin interesting_A = compoundA (mkA "interesting");
lin interface_N = mkN "interface" "interfaces";
lin interfere_V = mkV "interfere" "interferes" "interfered" "interfered" "interfering";
lin interference_N = mkN "interference" ;
lin interim_N = mkN "interim" ;
lin interior_A = compoundA (mkA "interior");
lin interior_N = mkN "interior" "interiors";
lin interject_V2 = mkV2 (mkV "interject" "interjects" "interjected" "interjected" "interjecting");
lin interjection_N = mkN "interjection" "interjections";
lin interlace_V = mkV "interlace" "interlaces" "interlaced" "interlaced" "interlacing";
lin interlace_V2 = mkV2 (mkV "interlace" "interlaces" "interlaced" "interlaced" "interlacing");
lin interlard_V2 = mkV2 (mkV "interlard" "interlards" "interlarded" "interlarded" "interlarding");
lin interleave_V2 = mkV2 (mkV "interleave" "interleaves" "interleaved" "interleaved" "interleaving");
lin interlink_V = mkV "interlink" "interlinks" "interlinked" "interlinked" "interlinking";
lin interlink_V2 = mkV2 (mkV "interlink" "interlinks" "interlinked" "interlinked" "interlinking");
lin interlock_V = mkV "interlock" "interlocks" "interlocked" "interlocked" "interlocking";
lin interlock_V2 = mkV2 (mkV "interlock" "interlocks" "interlocked" "interlocked" "interlocking");
lin interlocutor_N = mkN "interlocutor" "interlocutors";
lin interloper_N = mkN "interloper" "interlopers";
lin interlude_N = mkN "interlude" "interludes";
lin intermarriage_N = mkN "intermarriage" "intermarriages";
lin intermarry_V = mkV "intermarry" "intermarries" "intermarried" "intermarried" "intermarrying";
lin intermediary_N = mkN "intermediary" "intermediaries";
lin intermediate_A = compoundA (mkA "intermediate");
lin intermediate_N = mkN "intermediate" "intermediates";
lin interment_N = mkN "interment" "interments";
lin intermezzo_N = mkN "intermezzo" "intermezzos";
lin interminable_A = compoundA (mkA "interminable");
lin intermingle_V = mkV "intermingle" "intermingles" "intermingled" "intermingled" "intermingling";
lin intermingle_V2 = mkV2 (mkV "intermingle" "intermingles" "intermingled" "intermingled" "intermingling");
lin intermission_N = mkN "intermission" "intermissions";
lin intermittent_A = compoundA (mkA "intermittent");
lin intermix_V = mkV "intermix" "intermixes" "intermixed" "intermixed" "intermixing";
lin intermix_V2 = mkV2 (mkV "intermix" "intermixes" "intermixed" "intermixed" "intermixing");
lin intermixture_N = mkN "intermixture" "intermixtures";
lin intern_N = mkN "intern" "interns";
lin intern_V2 = mkV2 (mkV "intern" "interns" "interned" "interned" "interning");
lin internal_A = compoundA (mkA "internal");
lin internalize_V2 = mkV2 (mkV "internalize" "internalizes" "internalized" "internalized" "internalizing");
lin international_A = compoundA (mkA "international");
lin international_N = mkN "international" "internationals";
lin internationale_N = mkN "internationale" "internationales";
lin internationalism_N = mkN "internationalism" ;
lin internationalist_N = mkN "internationalist" "internationalists";
lin internationalization_N = mkN "internationalization" "internationalizations";
lin internationalize_V2 = mkV2 (mkV "internationalize" "internationalizes" "internationalized" "internationalized" "internationalizing");
lin interne_N = mkN "interne" "internes";
lin internecine_A = compoundA (mkA "internecine");
lin internee_N = mkN "internee" "internees";
lin internment_N = mkN "internment" ;
lin interpellate_V2 = mkV2 (mkV "interpellate" "interpellates" "interpellated" "interpellated" "interpellating");
lin interpellation_N = mkN "interpellation" "interpellations";
lin interphone_N = mkN "interphone" "interphones";
lin interplanetary_A = compoundA (mkA "interplanetary");
lin interplay_N = mkN "interplay" ;
lin interpol_PN = mkPN "Interpol";
lin interpolate_V2 = mkV2 (mkV "interpolate" "interpolates" "interpolated" "interpolated" "interpolating");
lin interpolation_N = mkN "interpolation" "interpolations";
lin interpose_V = mkV "interpose" "interposes" "interposed" "interposed" "interposing";
lin interpose_V2 = mkV2 (mkV "interpose" "interposes" "interposed" "interposed" "interposing");
lin interposition_N = mkN "interposition" "interpositions";
lin interpret_V = mkV "interpret" "interprets" "interpreted" "interpreted" "interpreting";
lin interpret_V2 = mkV2 (mkV "interpret" "interprets" "interpreted" "interpreted" "interpreting");
lin interpretation_N = mkN "interpretation" "interpretations";
lin interpretative_A = compoundA (mkA "interpretative");
lin interpreter_N = mkN "interpreter" "interpreters";
lin interracial_A = compoundA (mkA "interracial");
lin interregnum_N = mkN "interregnum" "interregnums";
lin interrelate_V = mkV "interrelate" "interrelates" "interrelated" "interrelated" "interrelating";
lin interrelate_V2 = mkV2 (mkV "interrelate" "interrelates" "interrelated" "interrelated" "interrelating");
lin interrelation_N = mkN "interrelation" "interrelations";
lin interrelationship_N = mkN "interrelationship" "interrelationships";
lin interrogate_V2 = mkV2 (mkV "interrogate" "interrogates" "interrogated" "interrogated" "interrogating");
lin interrogation_N = mkN "interrogation" "interrogations";
lin interrogative_A = compoundA (mkA "interrogative");
lin interrogative_N = mkN "interrogative" "interrogatives";
lin interrogator_N = mkN "interrogator" "interrogators";
lin interrogatory_A = compoundA (mkA "interrogatory");
lin interrupt_V = mkV "interrupt" "interrupts" "interrupted" "interrupted" "interrupting";
lin interrupt_V2 = mkV2 (mkV "interrupt" "interrupts" "interrupted" "interrupted" "interrupting");
lin interrupter_N = mkN "interrupter" "interrupters";
lin interruption_N = mkN "interruption" "interruptions";
lin intersect_V = mkV "intersect" "intersects" "intersected" "intersected" "intersecting";
lin intersect_V2 = mkV2 (mkV "intersect" "intersects" "intersected" "intersected" "intersecting");
lin intersection_N = mkN "intersection" "intersections";
lin intersperse_V2 = mkV2 (mkV "intersperse" "intersperses" "interspersed" "interspersed" "interspersing");
lin interstate_A = compoundA (mkA "interstate");
lin interstellar_A = compoundA (mkA "interstellar");
lin interstice_N = mkN "interstice" "interstices";
lin intertribal_A = compoundA (mkA "intertribal");
lin intertwine_V = mkV "intertwine" "intertwines" "intertwined" "intertwined" "intertwining";
lin intertwine_V2 = mkV2 (mkV "intertwine" "intertwines" "intertwined" "intertwined" "intertwining");
lin interval_N = mkN "interval" "intervals";
lin intervene_V = mkV "intervene" "intervenes" "intervened" "intervened" "intervening";
lin intervene_V2V = mkV2V (mkV "intervene" "intervenes" "intervened" "intervened" "intervening") noPrep to_Prep ;
lin intervention_N = mkN "intervention" "interventions";
lin interview_N = mkN "interview" "interviews";
lin interview_V2 = mkV2 (mkV "interview" "interviews" "interviewed" "interviewed" "interviewing");
lin interviewer_N = mkN "interviewer" "interviewers";
lin interweave_V2 = mkV2 (mkV "inter" IrregEng.weave_V);
lin intestate_A = compoundA (mkA "intestate");
lin intestinal_A = compoundA (mkA "intestinal");
lin intestine_N = mkN "intestine" "intestines";
lin intimacy_N = mkN "intimacy" "intimacies";
lin intimate_A = compoundA (mkA "intimate");
lin intimate_N = mkN "intimate" "intimates";
lin intimate_V2 = mkV2 (mkV "intimate" "intimates" "intimated" "intimated" "intimating");
lin intimation_N = mkN "intimation" "intimations";
lin intimidate_V2 = mkV2 (mkV "intimidate" "intimidates" "intimidated" "intimidated" "intimidating");
lin intimidation_N = mkN "intimidation" ;
lin into_Prep = mkPrep "into";
lin intolerable_A = compoundA (mkA "intolerable");
lin intolerance_N = mkN "intolerance" ;
lin intolerant_A = compoundA (mkA "intolerant");
lin intonation_N = mkN "intonation" ;
lin intone_V = mkV "intone" "intones" "intoned" "intoned" "intoning";
lin intone_V2 = mkV2 (mkV "intone" "intones" "intoned" "intoned" "intoning");
lin intoxicant_A = compoundA (mkA "intoxicant");
lin intoxicant_N = mkN "intoxicant" "intoxicants";
lin intoxicate_V2 = mkV2 (mkV "intoxicate" "intoxicates" "intoxicated" "intoxicated" "intoxicating");
lin intoxication_N = mkN "intoxication" ;
lin intra_uterine_A = compoundA (mkA "intra - uterine");
lin intractability_N = mkN "intractability" ;
lin intractable_A = compoundA (mkA "intractable");
lin intramural_A = compoundA (mkA "intramural");
lin intransigence_N = mkN "intransigence" ;
lin intransigent_A = compoundA (mkA "intransigent");
lin intransitive_A = compoundA (mkA "intransitive");
lin intravenous_A = compoundA (mkA "intravenous");
lin intrench_V2 = mkV2 (mkV "intrench" "intrenches" "intrenched" "intrenched" "intrenching");
lin intrepid_A = compoundA (mkA "intrepid");
lin intrepidity_N = mkN "intrepidity" "intrepidities";
lin intricacy_N = mkN "intricacy" "intricacies";
lin intricate_A = compoundA (mkA "intricate");
lin intrigue_N = mkN "intrigue" "intrigues";
lin intrigue_V = mkV "intrigue" "intrigues" "intrigued" "intrigued" "intriguing";
lin intrigue_V2 = mkV2 (mkV "intrigue" "intrigues" "intrigued" "intrigued" "intriguing");
lin intrinsic_A = compoundA (mkA "intrinsic");
lin intrinsically_Adv = mkAdv "intrinsically";
lin intro_N = mkN "intro" "intri" {- FIXME: guessed plural form -};
lin introduce_V2 = mkV2 (mkV "introduce" "introduces" "introduced" "introduced" "introducing");
lin introduction_N = mkN "introduction" "introductions";
lin introductory_A = compoundA (mkA "introductory");
lin introspect_V = mkV "introspect" "introspects" "introspected" "introspected" "introspecting";
lin introspection_N = mkN "introspection" ;
lin introspective_A = compoundA (mkA "introspective");
lin introversion_N = mkN "introversion" ;
lin introvert_N = mkN "introvert" "introverts";
lin introvert_V2 = mkV2 (mkV "introvert" "introverts" "introverted" "introverted" "introverting");
lin intrude_V = mkV "intrude" "intrudes" "intruded" "intruded" "intruding";
lin intrude_V2 = mkV2 (mkV "intrude" "intrudes" "intruded" "intruded" "intruding");
lin intruder_N = mkN "intruder" "intruders";
lin intrusion_N = mkN "intrusion" "intrusions";
lin intrusive_A = compoundA (mkA "intrusive");
lin intrust_V2 = mkV2 (mkV "intrust" "intrusts" "intrusted" "intrusted" "intrusting");
lin intuit_V = mkV "intuit" "intuits" "intuited" "intuited" "intuiting";
lin intuit_V2 = mkV2 (mkV "intuit" "intuits" "intuited" "intuited" "intuiting");
lin intuition_N = mkN "intuition" "intuitions";
lin intuitive_A = compoundA (mkA "intuitive");
lin intumescence_N = mkN "intumescence" ;
lin inundate_V2 = mkV2 (mkV "inundate" "inundates" "inundated" "inundated" "inundating");
lin inundation_N = mkN "inundation" "inundations";
lin inure_V2 = mkV2 (mkV "inure" "inures" "inured" "inured" "inuring");
lin invade_V2 = mkV2 (mkV "invade" "invades" "invaded" "invaded" "invading");
lin invader_N = mkN "invader" "invaders";
lin invalid_A = compoundA (mkA "invalid");
lin invalid_N = mkN "invalid" "invalids";
lin invalid_V2 = mkV2 (mkV "invalid" "invalids" "invalided" "invalided" "invaliding");
lin invalidate_V2 = mkV2 (mkV "invalidate" "invalidates" "invalidated" "invalidated" "invalidating");
lin invalidation_N = mkN "invalidation" "invalidations";
lin invalidism_N = mkN "invalidism" ;
lin invalidity_N = mkN "invalidity" ;
lin invaluable_A = compoundA (mkA "invaluable");
lin invariable_A = compoundA (mkA "invariable");
lin invasion_N = mkN "invasion" "invasions";
lin invasive_A = compoundA (mkA "invasive");
lin invective_N = mkN "invective" ;
lin inveigh_V = mkV "inveigh" "inveighs" "inveighed" "inveighed" "inveighing";
lin inveigle_V2 = mkV2 (mkV "inveigle" "inveigles" "inveigled" "inveigled" "inveigling");
lin invent_V = mkV "invent";
lin invent_V2 = mkV2 (mkV "invent" "invents" "invented" "invented" "inventing");
lin invention_N = mkN "invention" "inventions";
lin inventive_A = compoundA (mkA "inventive");
lin inventor_N = mkN "inventor" "inventors";
lin inventory_N = mkN "inventory" "inventories";
lin inverkeithing_PN = mkPN "Inverkeithing";
lin inverness_PN = mkPN "Inverness";
lin inverse_A = compoundA (mkA "inverse");
lin inverse_N = mkN "inverse" ;
lin inversion_N = mkN "inversion" "inversions";
lin invert_V2 = mkV2 (mkV "invert" "inverts" "inverted" "inverted" "inverting");
lin invertebrate_A = compoundA (mkA "invertebrate");
lin invertebrate_N = mkN "invertebrate" "invertebrates";
lin inverurie_PN = mkPN "Inverurie";
lin invest_V = mkV "invest" "invests" "invested" "invested" "investing";
lin invest_V2 = mkV2 (mkV "invest" "invests" "invested" "invested" "investing");
lin investigate_V = mkV "investigate";
lin investigate_V2 = mkV2 (mkV "investigate" "investigates" "investigated" "investigated" "investigating");
lin investigation_N = mkN "investigation" "investigations";
lin investigator_N = mkN "investigator" "investigators";
lin investiture_N = mkN "investiture" "investitures";
lin investment_N = mkN "investment" "investments";
lin investor_N = mkN "investor" "investors";
lin inveterate_A = compoundA (mkA "inveterate");
lin invidious_A = compoundA (mkA "invidious");
lin invigilate_V = mkV "invigilate" "invigilates" "invigilated" "invigilated" "invigilating";
lin invigilation_N = mkN "invigilation" "invigilations";
lin invigilator_N = mkN "invigilator" "invigilators";
lin invigorate_V2 = mkV2 (mkV "invigorate" "invigorates" "invigorated" "invigorated" "invigorating");
lin invincibility_N = mkN "invincibility" ;
lin invincible_A = compoundA (mkA "invincible");
lin inviolable_A = compoundA (mkA "inviolable");
lin inviolate_A = compoundA (mkA "inviolate");
lin invisibility_N = mkN "invisibility" ;
lin invisible_A = compoundA (mkA "invisible");
lin invitation_N = mkN "invitation" "invitations";
lin invite_N = mkN "invite" "invites";
lin invite_V2 = mkV2 (mkV "invite" "invites" "invited" "invited" "inviting");
lin invite_V2V = mkV2V (mkV "invite") noPrep to_Prep ;
lin inviting_A = compoundA (mkA "inviting");
lin invocation_N = mkN "invocation" "invocations";
lin invoice_N = mkN "invoice" "invoices";
lin invoice_V2 = mkV2 (mkV "invoice" "invoices" "invoiced" "invoiced" "invoicing");
lin invoke_V2 = mkV2 (mkV "invoke" "invokes" "invoked" "invoked" "invoking");
lin involuntary_A = compoundA (mkA "involuntary");
lin involute_A = compoundA (mkA "involute");
lin involution_N = mkN "involution" "involutions";
lin involve_V = mkV "involve";
lin involve_V2 = mkV2 (mkV "involve" "involves" "involved" "involved" "involving");
lin involve_VS = mkVS (mkV "involve");
lin involved_A = compoundA (mkA "involved");
lin involvement_N = mkN "involvement" "involvements";
lin invulnerable_A = compoundA (mkA "invulnerable");
lin inward_A = compoundA (mkA "inward");
lin inward_Adv = mkAdv "inward";
lin inwardness_N = mkN "inwardness" ;
lin inwards_Adv = mkAdv "inwards";
lin inwrought_A = compoundA (mkA "inwrought");
lin iodine_N = mkN "iodine" ;
lin ion_N = mkN "ion" "ions";
lin ionic_A = compoundA (mkA "ionic");
lin ionization_N = mkN "ionization" ;
lin ionize_V = mkV "ionize" "ionizes" "ionized" "ionized" "ionizing";
lin ionize_V2 = mkV2 (mkV "ionize" "ionizes" "ionized" "ionized" "ionizing");
lin ionosphere_N = mkN "ionosphere" "ionospheres";
lin iota_N = mkN "iota" "iotas";
lin iou_N = mkN "IOU" "IOUs" ;
lin iowa_PN = mkPN "Iowa";
lin ipse_dixit_N = mkN "ipse dixit" "ipse dixits";
lin ipso_facto_Adv = mkAdv "ipso facto";
lin ipswich_PN = mkPN "Ipswich";
lin iq_N = mkN "iq" ;
lin ira_N = mkN "ira" ;
lin iran_PN = mkPN "Iran";
lin iranian_A = compoundA (mkA "iranian");
lin iranian_N = mkN "iranian" "iranians";
lin iraq_PN = mkPN "Iraq";
lin iraqi_A = compoundA (mkA "iraqi");
lin iraqi_N = mkN "iraqi" "iraqis";
lin irascibility_N = mkN "irascibility" ;
lin irascible_A = compoundA (mkA "irascible");
lin irate_A = compoundA (mkA "irate");
lin ire_N = mkN "ire" ;
lin ireful_A = compoundA (mkA "ireful");
lin ireland_PN = mkPN "Ireland";
lin irene_PN = mkPN "Irene";
lin iridescence_N = mkN "iridescence" ;
lin iridescent_A = compoundA (mkA "iridescent");
lin iridium_N = mkN "iridium" ;
lin iris_N = mkN "iris" "irises";
lin iris_PN = mkPN "Iris";
lin irish_A = compoundA (mkA "irish");
lin irish_N = mkN "irish" ;
lin irishman_N = mkN "irishman" "irishmen" {- FIXME: guessed plural form -};
lin irishwoman_N = mkN "irishwoman" "irishwomen" {- FIXME: guessed plural form -};
lin irk_V2 = mkV2 (mkV "irk" "irks" "irked" "irked" "irking");
lin irksome_A = compoundA (mkA "irksome");
lin iron_N = mkN "iron" "irons";
lin iron_V = mkV "iron" "irons" "ironed" "ironed" "ironing";
lin iron_V2 = mkV2 (mkV "iron" "irons" "ironed" "ironed" "ironing");
lin iron_foundry_N = mkN "iron - foundry" "iron - foundries";
lin iron_grey_A = compoundA (mkA "iron - grey");
lin iron_grey_N = mkN "iron - grey" ;
lin ironclad_A = compoundA (mkA "ironclad");
lin ironic_A = compoundA (mkA "ironic");
lin ironical_A = compoundA (mkA "ironical");
lin ironing_board_N = mkN "ironing - board" "ironing - boards";
lin ironmonger_N = mkN "ironmonger" "ironmongers";
lin ironmongery_N = mkN "ironmongery" "ironmongeries";
lin ironmould_N = mkN "ironmould" "ironmoulds";
lin ironside_N = mkN "ironside" "ironsides";
lin ironware_N = mkN "ironware" ;
lin ironwork_N = mkN "ironwork" "ironworks";
lin ironworks_N = mkN "ironworks" "ironworks";
lin irony_N = mkN "irony" "ironies";
lin irradiate_V2 = mkV2 (mkV "irradiate" "irradiates" "irradiated" "irradiated" "irradiating");
lin irrational_A = compoundA (mkA "irrational");
lin irreconcilable_A = compoundA (mkA "irreconcilable");
lin irrecoverable_A = compoundA (mkA "irrecoverable");
lin irredeemable_A = compoundA (mkA "irredeemable");
lin irredentist_N = mkN "irredentist" "irredentists";
lin irreducible_A = compoundA (mkA "irreducible");
lin irrefutable_A = compoundA (mkA "irrefutable");
lin irregular_A = compoundA (mkA "irregular");
lin irregular_N = mkN "irregular" "irregulars";
lin irregularity_N = mkN "irregularity" "irregularities";
lin irrelevance_N = mkN "irrelevance" "irrelevances";
lin irrelevancy_N = mkN "irrelevancy" "irrelevancies";
lin irrelevant_A = compoundA (mkA "irrelevant");
lin irreligious_A = compoundA (mkA "irreligious");
lin irremediable_A = compoundA (mkA "irremediable");
lin irremovable_A = compoundA (mkA "irremovable");
lin irreparable_A = compoundA (mkA "irreparable");
lin irreplaceable_A = compoundA (mkA "irreplaceable");
lin irrepressible_A = compoundA (mkA "irrepressible");
lin irreproachable_A = compoundA (mkA "irreproachable");
lin irresistible_A = compoundA (mkA "irresistible");
lin irresolute_A = compoundA (mkA "irresolute");
lin irresolution_N = mkN "irresolution" ;
lin irrespective_A = compoundA (mkA "irrespective");
lin irresponsibility_N = mkN "irresponsibility" ;
lin irresponsible_A = compoundA (mkA "irresponsible");
lin irretrievable_A = compoundA (mkA "irretrievable");
lin irreverence_N = mkN "irreverence" ;
lin irreverent_A = compoundA (mkA "irreverent");
lin irreversibility_N = mkN "irreversibility" ;
lin irreversible_A = compoundA (mkA "irreversible");
lin irrevocable_A = compoundA (mkA "irrevocable");
lin irridentism_N = mkN "irridentism" ;
lin irrigate_V2 = mkV2 (mkV "irrigate" "irrigates" "irrigated" "irrigated" "irrigating");
lin irrigation_N = mkN "irrigation" ;
lin irritability_N = mkN "irritability" ;
lin irritable_A = compoundA (mkA "irritable");
lin irritant_A = compoundA (mkA "irritant");
lin irritant_N = mkN "irritant" "irritants";
lin irritate_V2 = mkV2 (mkV "irritate" "irritates" "irritated" "irritated" "irritating");
lin irritation_N = mkN "irritation" "irritations";
lin irruption_N = mkN "irruption" "irruptions";
lin irthlingborough_PN = mkPN "Irthlingborough";
lin irvine_PN = mkPN "Irvine";
lin isaac_PN = mkPN "Isaac";
lin isabel_PN = mkPN "Isabel";
lin isabella_PN = mkPN "Isabella";
lin isinglass_N = mkN "isinglass" ;
lin islam_N = mkN "islam" ;
lin islamic_A = compoundA (mkA "islamic");
lin island_N = mkN "island" "islands";
lin islander_N = mkN "islander" "islanders";
lin isle_N = mkN "isle" "isles";
lin islet_N = mkN "islet" "islets";
lin islington_PN = mkPN "Islington";
lin ism_N = mkN "ism" "isms";
lin isobar_N = mkN "isobar" "isobars";
lin isobel_PN = mkPN "Isobel";
lin isolate_V2 = mkV2 (mkV "isolate" "isolates" "isolated" "isolated" "isolating");
lin isolation_N = mkN "isolation" ;
lin isolationism_N = mkN "isolationism" ;
lin isolationist_N = mkN "isolationist" "isolationists";
lin isosceles_A = compoundA (mkA "isosceles");
lin isotherm_N = mkN "isotherm" "isotherms";
lin isotope_N = mkN "isotope" "isotopes";
lin israel_PN = mkPN "Israel";
lin israeli_A = compoundA (mkA "israeli");
lin israeli_N = mkN "israeli" "israelis";
lin issue_N = mkN "issue" "issues";
lin issue_V = mkV "issue" "issues" "issued" "issued" "issuing";
lin issue_V2 = mkV2 (mkV "issue" "issues" "issued" "issued" "issuing");
lin istanbul_PN = mkPN "Istanbul";
lin isthmus_N = mkN "isthmus" "isthmuses";
lin it_Pron  = mkPron "it" "it" "its" "its" singular P3 nonhuman;
lin italian_A = compoundA (mkA "Italian");
lin italian_N = mkN "Italian" "Italians";
lin italic_A = compoundA (mkA "italic");
lin italicize_V2 = mkV2 (mkV "italicize" "italicizes" "italicized" "italicized" "italicizing");
lin italy_PN = mkPN "Italy";
lin itch_N = mkN "itch" "itches";
lin itch_V = mkV "itch" "itches" "itched" "itched" "itching";
lin itchy_A = mkA "itchy" "itchier";
lin item_Adv = mkAdv "item";
lin item_N = mkN "item" "items";
lin itemize_V2 = mkV2 (mkV "itemize" "itemizes" "itemized" "itemized" "itemizing");
lin iterate_V2 = mkV2 (mkV "iterate" "iterates" "iterated" "iterated" "iterating");
lin iteration_N = mkN "iteration" "iterations";
lin itinerant_A = compoundA (mkA "itinerant");
lin itinerary_N = mkN "itinerary" "itineraries";
lin itv_N = mkN "itv" ;
lin iud_N = mkN "iud" ;
lin ivan_PN = mkPN "Ivan";
lin iver_PN = mkPN "Iver";
lin ivied_A = compoundA (mkA "ivied");
lin ivor_PN = mkPN "Ivor";
lin ivory_N = mkN "ivory" ;
lin ivy_N = mkN "ivy" "ivies";
lin ivy_PN = mkPN "Ivy";
lin izmir_PN = mkPN "Izmir";
lin jab_N = mkN "jab" "jabs";
lin jab_V = mkV "jab" "jabs" "jabbed" "jabbed" "jabbing";
lin jab_V2 = mkV2 (mkV "jab" "jabs" "jabbed" "jabbed" "jabbing");
lin jabalpur_PN = mkPN "Jabalpur";
lin jabber_N = mkN "jabber" ;
lin jabber_V = mkV "jabber" "jabbers" "jabbered" "jabbered" "jabbering";
lin jabber_V2 = mkV2 (mkV "jabber" "jabbers" "jabbered" "jabbered" "jabbering");
lin jabberer_N = mkN "jabberer" "jabberers";
lin jabot_N = mkN "jabot" "jabots";
lin jack_N = mkN "jack" "jacks";
lin jack_PN = mkPN "Jack";
lin jack_V2 = mkV2 (mkV "jack" "jacks" "jacked" "jacked" "jacking");
lin jack_in_the_box_N = mkN "jack - in - the - box" "jack - in - the - boxes";
lin jack_knife_N = mkN "jack - knife" "jack - knives";
lin jack_knife_V = mkV "jack - knife" "jack - knifes" "jack - knifed" "jack - knifed" "jack - knifing";
lin jack_o'_lantern_N = mkN "jack - o'-lantern" "jack - o'-lanterns";
lin jack_plane_N = mkN "jack - plane" "jack - planes";
lin jackal_N = mkN "jackal" "jackals";
lin jackanapes_N = mkN "jackanapes" "IRREG";
lin jackass_N = mkN "jackass" "jackasses";
lin jackboot_N = mkN "jackboot" "jackboots";
lin jackdaw_N = mkN "jackdaw" "jackdaws";
lin jacket_N = mkN "jacket" "jackets";
lin jackie_PN = mkPN "Jackie";
lin jackpot_N = mkN "jackpot" "jackpots";
lin jacksonville_PN = mkPN "Jacksonville";
lin jacob_PN = mkPN "Jacob";
lin jacobean_A = compoundA (mkA "jacobean");
lin jacobin_A = compoundA (mkA "jacobin");
lin jacobin_N = mkN "jacobin" "jacobins";
lin jacobinism_N = mkN "jacobinism" ;
lin jacobite_N = mkN "jacobite" "jacobites";
lin jacqueline_PN = mkPN "Jacqueline";
lin jade_N = mkN "jade" "jades";
lin jaded_A = compoundA (mkA "jaded");
lin jag_N = mkN "jag" "jags";
lin jag_V2 = mkV2 (mkV "jag" "jags" "jagged" "jagged" "jagging");
lin jagged_A = compoundA (mkA "jagged");
lin jaggy_A = mkA "jaggy" "jaggier";
lin jaguar_N = mkN "jaguar" "jaguars";
lin jail_N = mkN "jail" "jails";
lin jail_V2 = mkV2 (mkV "jail" "jails" "jailed" "jailed" "jailing");
lin jailer_N = mkN "jailer" "jailers";
lin jailor_N = mkN "jailor" "jailors";
lin jaipur_PN = mkPN "Jaipur";
lin jakarta_PN = mkPN "Jakarta";
lin jake_PN = mkPN "Jake";
lin jakes_N = mkN "jakes" "IRREG";
lin jalopy_N = mkN "jalopy" "jalopies";
lin jam_N = mkN "jam" "jams";
lin jam_V = mkV "jam" "jams" "jammed" "jammed" "jamming";
lin jam_V2 = mkV2 (mkV "jam" "jams" "jammed" "jammed" "jamming");
lin jam_VS = mkVS (mkV "jam" "jams" "jammed" "jammed" "jamming");
lin jamaica_PN = mkPN "Jamaica";
lin jamaican_A = compoundA (mkA "jamaican");
lin jamaican_N = mkN "jamaican" "jamaicans";
lin jamb_N = mkN "jamb" "jambs";
lin jamboree_N = mkN "jamboree" "jamborees";
lin james_PN = mkPN "James";
lin jamjar_N = mkN "jamjar" "jamjars";
lin jampack_V2 = mkV2 (mkV "jampack" "jampacks" "jampacked" "jampacked" "jampacking");
lin jampot_N = mkN "jampot" "jampots";
lin jan_PN = mkPN "Jan";
lin jane_PN = mkPN "Jane";
lin janet_PN = mkPN "Janet";
lin jangle_N = mkN "jangle" ;
lin jangle_V = mkV "jangle" "jangles" "jangled" "jangled" "jangling";
lin jangle_V2 = mkV2 (mkV "jangle" "jangles" "jangled" "jangled" "jangling");
lin janice_PN = mkPN "Janice";
lin janie_PN = mkPN "Janie";
lin janitor_N = mkN "janitor" "janitors";
lin january_N = mkN "january" "januaries";
lin january_PN = mkPN "January";
lin janus_PN = mkPN "Janus";
lin japan_PN = mkPN "Japan";
lin japan_V2 = mkV2 (mkV "japan" "japans" "japanned" "japanned" "japanning");
lin japanese_A = compoundA (mkA "Japanese");
lin japanese_N = mkN "Japanese" "Japanese";
lin jape_N = mkN "jape" "japes";
lin japonica_N = mkN "japonica" ;
lin jar_N = mkN "jar" "jars";
lin jar_V = mkV "jar" "jars" "jarred" "jarred" "jarring";
lin jar_V2 = mkV2 (mkV "jar" "jars" "jarred" "jarred" "jarring");
lin jarful_N = mkN "jarful" "jarfuls";
lin jargon_N = mkN "jargon" ;
lin jarring_A = compoundA (mkA "jarring");
lin jarrow_PN = mkPN "Jarrow";
lin jasmine_N = mkN "jasmine" ;
lin jason_PN = mkPN "Jason";
lin jasper_N = mkN "jasper" ;
lin jaundice_N = mkN "jaundice" ;
lin jaundice_V2 = mkV2 (mkV "jaundice" "jaundices" "jaundiced" "jaundiced" "jaundicing");
lin jaunt_N = mkN "jaunt" "jaunts";
lin jaunt_V = mkV "jaunt" "jaunts" "jaunted" "jaunted" "jaunting";
lin jauntily_Adv = mkAdv "jauntily";
lin jauntiness_N = mkN "jauntiness" ;
lin jaunting_car_N = mkN "jaunting - car" "jaunting - cars";
lin jaunty_A = mkA "jaunty" "jauntier";
lin java_PN = mkPN "Java";
lin javanese_A = compoundA (mkA "javanese");
lin javanese_N = mkN "javanese" "javanese";
lin javelin_N = mkN "javelin" "javelins";
lin jaw_N = mkN "jaw" "jaws";
lin jaw_V = mkV "jaw" "jaws" "jawed" "jawed" "jawing";
lin jawbone_N = mkN "jawbone" "jawbones";
lin jawbreaker_N = mkN "jawbreaker" "jawbreakers";
lin jay_N = mkN "jay" "jays";
lin jaywalk_V = mkV "jaywalk" "jaywalks" "jaywalked" "jaywalked" "jaywalking";
lin jaywalker_N = mkN "jaywalker" "jaywalkers";
lin jazz_N = mkN "jazz" ;
lin jazz_V2 = mkV2 (mkV "jazz" "jazzes" "jazzed" "jazzed" "jazzing");
lin jazzy_A = mkA "jazzy" "jazzier";
lin jc_PN = mkPN "Jc";
lin jealous_A = compoundA (mkA "jealous");
lin jealousy_N = mkN "jealousy" "jealousies";
lin jean_N = mkN "jean" ;
lin jean_PN = mkPN "Jean";
lin jeanie_PN = mkPN "Jeanie";
lin jedburgh_PN = mkPN "Jedburgh";
lin jeep_N = mkN "jeep" "jeeps";
lin jeer_N = mkN "jeer" "jeers";
lin jeer_V = mkV "jeer" "jeers" "jeered" "jeered" "jeering";
lin jeer_V2 = mkV2 (mkV "jeer" "jeers" "jeered" "jeered" "jeering");
lin jeeringly_Adv = mkAdv "jeeringly";
lin jeff_PN = mkPN "Jeff";
lin jeffrey_PN = mkPN "Jeffrey";
lin jehovah_PN = mkPN "Jehovah";
lin jejune_A = compoundA (mkA "jejune");
lin jejuneness_N = mkN "jejuneness" ;
lin jekyll_and_hyde_PN = mkPN "Jekyll - and - hyde";
lin jell_V = mkV "jell" "jells" "jelled" "jelled" "jelling";
lin jell_V2 = mkV2 (mkV "jell" "jells" "jelled" "jelled" "jelling");
lin jellaba_N = mkN "jellaba" "jellabas";
lin jellied_A = compoundA (mkA "jellied");
lin jelly_N = mkN "jelly" "jellies";
lin jelly_V = mkV "jelly" "jellies" "jellied" "jellied" "jellying";
lin jelly_V2 = mkV2 (mkV "jelly" "jellies" "jellied" "jellied" "jellying");
lin jellyfish_N = mkN "jellyfish" "jellyfish";
lin jemmy_N = mkN "jemmy" "jemmies";
lin jennifer_PN = mkPN "Jennifer";
lin jenny_N = mkN "jenny" "jennies";
lin jenny_PN = mkPN "Jenny";
lin jeopardize_V2 = mkV2 (mkV "jeopardize" "jeopardizes" "jeopardized" "jeopardized" "jeopardizing");
lin jeopardy_N = mkN "jeopardy" ;
lin jerboa_N = mkN "jerboa" "jerboas";
lin jeremiad_N = mkN "jeremiad" "jeremiads";
lin jeremy_PN = mkPN "Jeremy";
lin jerk_N = mkN "jerk" "jerks";
lin jerk_V = mkV "jerk" "jerks" "jerked" "jerked" "jerking";
lin jerk_V2 = mkV2 (mkV "jerk" "jerks" "jerked" "jerked" "jerking");
lin jerkily_Adv = mkAdv "jerkily";
lin jerkin_N = mkN "jerkin" "jerkins";
lin jerkiness_N = mkN "jerkiness" ;
lin jerky_A = mkA "jerky" "jerkier";
lin jerome_PN = mkPN "Jerome";
lin jerry_N = mkN "jerry" "jerries";
lin jerry_PN = mkPN "Jerry";
lin jerry_builder_N = mkN "jerry - builder" "jerry - builders";
lin jerry_building_N = mkN "jerry - building" ;
lin jerry_built_A = compoundA (mkA "jerry - built");
lin jersey_N = mkN "jersey" "jerseys";
lin jersey_PN = mkPN "Jersey";
lin jess_PN = mkPN "Jess";
lin jessica_PN = mkPN "Jessica";
lin jessie_PN = mkPN "Jessie";
lin jest_N = mkN "jest" "jests";
lin jest_V = mkV "jest" "jests" "jested" "jested" "jesting";
lin jester_N = mkN "jester" "jesters";
lin jesting_A = compoundA (mkA "jesting");
lin jesuit_N = mkN "jesuit" "jesuits";
lin jesuitical_A = compoundA (mkA "jesuitical");
lin jesus_PN = mkPN "Jesus";
lin jet_N = mkN "jet" "jets";
lin jet_V = mkV "jet" "jets" "jetted" "jetted" "jetting";
lin jet_V2 = mkV2 (mkV "jet" "jets" "jetted" "jetted" "jetting");
lin jet_black_A = compoundA (mkA "jet - black");
lin jet_propelled_A = compoundA (mkA "jet - propelled");
lin jetsam_N = mkN "jetsam" ;
lin jettison_V2 = mkV2 (mkV "jettison" "jettisons" "jettisoned" "jettisoned" "jettisoning");
lin jetty_N = mkN "jetty" "jetties";
lin jew_N = mkN "jew" "jews";
lin jewel_N = mkN "jewel" "jewels";
lin jewel_V2 = mkV2 (mkV "jewel" "jewels" "jewelled" "jewelled" "jewelling");
lin jeweller_N = mkN "jeweller" "jewellers";
lin jewellery_N = mkN "jewellery" ;
lin jewelry_N = mkN "jewelry" ;
lin jewess_N = mkN "jewess" "jewesses";
lin jewish_A = compoundA (mkA "jewish");
lin jezebel_N = mkN "jezebel" "jezebels";
lin jib_N = mkN "jib" "jibs";
lin jib_V = mkV "jib" "jibs" "jibbed" "jibbed" "jibbing";
lin jib_boom_N = mkN "jib - boom" "jib - booms";
lin jibe_N = mkN "jibe" "jibes";
lin jibe_V = mkV "jibe" "jibes" "jibed" "jibed" "jibing";
lin jiffy_N = mkN "jiffy" "jiffies";
lin jig_N = mkN "jig" "jigs";
lin jig_V = mkV "jig" "jigs" "jigged" "jigged" "jigging";
lin jig_V2 = mkV2 (mkV "jig" "jigs" "jigged" "jigged" "jigging");
lin jigger_N = mkN "jigger" "jiggers";
lin jiggered_A = compoundA (mkA "jiggered");
lin jiggery_pokery_N = mkN "jiggery - pokery" ;
lin jiggle_N = mkN "jiggle" "jiggles";
lin jiggle_V = mkV "jiggle" "jiggles" "jiggled" "jiggled" "jiggling";
lin jiggle_V2 = mkV2 (mkV "jiggle" "jiggles" "jiggled" "jiggled" "jiggling");
lin jigsaw_N = mkN "jigsaw" "jigsaws";
lin jihad_N = mkN "jihad" "jihads";
lin jill_PN = mkPN "Jill";
lin jilt_N = mkN "jilt" "jilts";
lin jilt_V2 = mkV2 (mkV "jilt" "jilts" "jilted" "jilted" "jilting");
lin jim_PN = mkPN "Jim";
lin jim_crow_N = mkN "jim crow" "IRREG";
lin jimmy_N = mkN "jimmy" "jimmies";
lin jimmy_PN = mkPN "Jimmy";
lin jingle_N = mkN "jingle" "jingles";
lin jingle_V = mkV "jingle" "jingles" "jingled" "jingled" "jingling";
lin jingle_V2 = mkV2 (mkV "jingle" "jingles" "jingled" "jingled" "jingling");
lin jingo_N = mkN "jingo" "jingoes";
lin jingoism_N = mkN "jingoism" ;
lin jingoist_N = mkN "jingoist" "jingoists";
lin jingoistic_A = compoundA (mkA "jingoistic");
lin jinks_N = mkN "jinks" ;
lin jinn_N = mkN "jinn" "jinns";
lin jinx_N = mkN "jinx" "jinxes";
lin jitney_N = mkN "jitney" "jitneys";
lin jitterbug_N = mkN "jitterbug" "jitterbugs";
lin jittery_A = compoundA (mkA "jittery");
lin jive_N = mkN "jive" "jives";
lin jive_V = mkV "jive" "jives" "jived" "jived" "jiving";
lin jnr_PN = mkPN "Jnr";
lin jo_PN = mkPN "Jo";
lin joan_PN = mkPN "Joan";
lin joanie_PN = mkPN "Joanie";
lin joann_PN = mkPN "Joann";
lin joanna_PN = mkPN "Joanna";
lin joanne_PN = mkPN "Joanne";
lin job_N = mkN "job" "jobs";
lin job_PN = mkPN "Job";
lin job_V = mkV "job" "jobs" "jobbed" "jobbed" "jobbing";
lin job_V2 = mkV2 (mkV "job" "jobs" "jobbed" "jobbed" "jobbing");
lin jobber_N = mkN "jobber" "jobbers";
lin jobbery_N = mkN "jobbery" ;
lin jocelyn_PN = mkPN "Jocelyn";
lin jockey_N = mkN "jockey" "jockeys";
lin jockey_V = mkV "jockey" "jockeys" "jockeyed" "jockeyed" "jockeying";
lin jockey_V2 = mkV2 (mkV "jockey" "jockeys" "jockeyed" "jockeyed" "jockeying");
lin jocose_A = compoundA (mkA "jocose");
lin jocoseness_N = mkN "jocoseness" ;
lin jocosity_N = mkN "jocosity" ;
lin jocular_A = compoundA (mkA "jocular");
lin jocularity_N = mkN "jocularity" "jocularities";
lin jocund_A = compoundA (mkA "jocund");
lin jocundity_N = mkN "jocundity" "jocundities";
lin joe_PN = mkPN "Joe";
lin joey_PN = mkPN "Joey";
lin jog_N = mkN "jog" "jogs";
lin jog_V = mkV "jog" "jogs" "jogged" "jogged" "jogging";
lin jog_V2 = mkV2 (mkV "jog" "jogs" "jogged" "jogged" "jogging");
lin jog_trot_N = mkN "jog - trot" "jog - trots";
lin jogger_N = mkN "jogger" "joggers";
lin jogging_N = mkN "jogging" ;
lin joggle_N = mkN "joggle" "joggles";
lin joggle_V = mkV "joggle" "joggles" "joggled" "joggled" "joggling";
lin joggle_V2 = mkV2 (mkV "joggle" "joggles" "joggled" "joggled" "joggling");
lin johannesburg_PN = mkPN "Johannesburg";
lin john_PN = mkPN "John";
lin john_bull_N = mkN "john bull" "IRREG";
lin johnny_PN = mkPN "Johnny";
lin johnstone_PN = mkPN "Johnstone";
lin joie_de_vivre_N = mkN "joie de vivre" ;
lin join_N = mkN "join" "joins";
lin join_V = mkV "join" "joins" "joined" "joined" "joining";
lin join_V2 = mkV2 (mkV "join" "joins" "joined" "joined" "joining");
lin joiner_N = mkN "joiner" "joiners";
lin joinery_N = mkN "joinery" ;
lin joint_A = compoundA (mkA "joint");
lin joint_N = mkN "joint" "joints";
lin joint_V2 = mkV2 (mkV "joint" "joints" "jointed" "jointed" "jointing");
lin jointure_N = mkN "jointure" "jointures";
lin joist_N = mkN "joist" "joists";
lin joke_N = mkN "joke" "jokes";
lin joke_V = mkV "joke" "jokes" "joked" "joked" "joking";
lin joke_VS = mkVS (mkV "joke" "jokes" "joked" "joked" "joking");
lin joker_N = mkN "joker" "jokers";
lin jokingly_Adv = mkAdv "jokingly";
lin jollification_N = mkN "jollification" "jollifications";
lin jollity_N = mkN "jollity" "jollities";
lin jolly_A = mkA "jolly" "jollier";
lin jolly_Adv = mkAdv "jolly";
lin jolly_V2 = mkV2 (mkV "jolly" "jollies" "jollied" "jollied" "jollying");
lin jollyboat_N = mkN "jollyboat" "jollyboats";
lin jolt_N = mkN "jolt" "jolts";
lin jolt_V = mkV "jolt" "jolts" "jolted" "jolted" "jolting";
lin jolt_V2 = mkV2 (mkV "jolt" "jolts" "jolted" "jolted" "jolting");
lin jolty_A = mkA "jolty" "joltier";
lin jonah_PN = mkPN "Jonah";
lin jonathan_PN = mkPN "Jonathan";
lin jonquil_N = mkN "jonquil" "jonquils";
lin jordan_PN = mkPN "Jordan";
lin jordanian_A = compoundA (mkA "Jordanian");
lin jordanian_N = mkN "Jordanian" "Jordanians";
lin joseph_PN = mkPN "Joseph";
lin josephine_PN = mkPN "Josephine";
lin josh_PN = mkPN "Josh";
lin joshua_PN = mkPN "Joshua";
lin joss_N = mkN "joss" "josses";
lin joss_house_N = mkN "joss - house" "joss - houses";
lin joss_stick_N = mkN "joss - stick" "joss - sticks";
lin jostle_V = mkV "jostle" "jostles" "jostled" "jostled" "jostling";
lin jostle_V2 = mkV2 (mkV "jostle" "jostles" "jostled" "jostled" "jostling");
lin jot_N = mkN "jot" "jots";
lin jot_V2 = mkV2 (mkV "jot" "jots" "jotted" "jotted" "jotting");
lin jotter_N = mkN "jotter" "jotters";
lin joule_N = mkN "joule" "joules";
lin journal_N = mkN "journal" "journals";
lin journalese_N = mkN "journalese" ;
lin journalism_N = mkN "journalism" ;
lin journalist_N = mkN "journalist" "journalists";
lin journalistic_A = compoundA (mkA "journalistic");
lin journalistically_Adv = mkAdv "journalistically";
lin journey_N = mkN "journey" "journeys";
lin journey_V = mkV "journey" "journeys" "journeyed" "journeyed" "journeying";
lin journeyman_N = mkN "journeyman" "journeymen" {- FIXME: guessed plural form -};
lin joust_N = mkN "joust" "jousts";
lin joust_V = mkV "joust" "jousts" "jousted" "jousted" "jousting";
lin jove_PN = mkPN "Jove";
lin jovial_A = compoundA (mkA "jovial");
lin joviality_N = mkN "joviality" "jovialities";
lin jowl_N = mkN "jowl" "jowls";
lin jowly_A = mkA "jowly" "jowlier";
lin joy_N = mkN "joy" "joys";
lin joy_PN = mkPN "Joy";
lin joy_V = mkV "joy" "joys" "joyed" "joyed" "joying";
lin joy_ride_N = mkN "joy - ride" "joy - rides";
lin joy_stick_N = mkN "joy - stick" "joy - sticks";
lin joyce_PN = mkPN "Joyce";
lin joyful_A = compoundA (mkA "joyful");
lin joyfulness_N = mkN "joyfulness" ;
lin joyless_A = compoundA (mkA "joyless");
lin joylessness_N = mkN "joylessness" ;
lin joyous_A = compoundA (mkA "joyous");
lin joyousness_N = mkN "joyousness" ;
lin jp_N = mkN "jp" ;
lin ju_jitsu_N = mkN "ju - jitsu" ;
lin jubilant_A = compoundA (mkA "jubilant");
lin jubilation_N = mkN "jubilation" "jubilations";
lin jubilee_N = mkN "jubilee" "jubilees";
lin judaic_A = compoundA (mkA "judaic");
lin judaism_N = mkN "judaism" ;
lin judas_N = mkN "judas" "judases";
lin judas_PN = mkPN "Judas";
lin judder_V = mkV "judder" "judders" "juddered" "juddered" "juddering";
lin judge_N = mkN "judge" "judges";
lin judge_V = mkV "judge" "judges" "judged" "judged" "judging";
lin judge_V2 = mkV2 (mkV "judge" "judges" "judged" "judged" "judging");
lin judge_V2V = mkV2V (mkV "judge" "judges" "judged" "judged" "judging") noPrep to_Prep ;
lin judge_VS = mkVS (mkV "judge" "judges" "judged" "judged" "judging");
lin judgement_N = mkN "judgement" "judgements";
lin judicature_N = mkN "judicature" "judicatures";
lin judicial_A = compoundA (mkA "judicial");
lin judiciary_N = mkN "judiciary" "judiciaries";
lin judicious_A = compoundA (mkA "judicious");
lin judiciousness_N = mkN "judiciousness" ;
lin judith_PN = mkPN "Judith";
lin judo_N = mkN "judo" ;
lin judy_PN = mkPN "Judy";
lin jug_N = mkN "jug" "jugs";
lin jug_V2 = mkV2 (mkV "jug" "jugs" "jugged" "jugged" "jugging");
lin jugful_N = mkN "jugful" "jugfuls";
lin juggernaut_N = mkN "juggernaut" "juggernauts";
lin juggle_V = mkV "juggle" "juggles" "juggled" "juggled" "juggling";
lin juggle_V2 = mkV2 (mkV "juggle" "juggles" "juggled" "juggled" "juggling");
lin juggler_N = mkN "juggler" "jugglers";
lin jugular_A = compoundA (mkA "jugular");
lin juice_N = mkN "juice" "juices";
lin juiciness_N = mkN "juiciness" ;
lin juicy_A = mkA "juicy" "juicier";
lin juju_N = mkN "juju" "jujus";
lin jujube_N = mkN "jujube" "jujubes";
lin jukebox_N = mkN "jukebox" "jukeboxes";
lin jul_PN = mkPN "Jul";
lin julep_N = mkN "julep" "juleps";
lin julia_PN = mkPN "Julia";
lin julian_A = compoundA (mkA "julian");
lin julian_PN = mkPN "Julian";
lin julie_PN = mkPN "Julie";
lin juliet_PN = mkPN "Juliet";
lin july_N = mkN "july" "IRREG";
lin jumble_N = mkN "jumble" "jumbles";
lin jumble_V = mkV "jumble" "jumbles" "jumbled" "jumbled" "jumbling";
lin jumble_V2 = mkV2 (mkV "jumble" "jumbles" "jumbled" "jumbled" "jumbling");
lin jumble_sale_N = mkN "jumble - sale" "jumble - sales";
lin jumbo_A = compoundA (mkA "jumbo");
lin jump_N = mkN "jump" "jumps";
lin jump_V = mkV "jump" "jumps" "jumped" "jumped" "jumping";
lin jump_V2 = mkV2 (mkV "jump" "jumps" "jumped" "jumped" "jumping");
lin jump_V2V = mkV2V (mkV "jump" "jumps" "jumped" "jumped" "jumping") noPrep to_Prep ;
lin jump_VV = mkVV (mkV "jump" "jumps" "jumped" "jumped" "jumping") ;
lin jumped_up_A = compoundA (mkA "jumped - up");
lin jumper_N = mkN "jumper" "jumpers";
lin jumpiness_N = mkN "jumpiness" ;
lin jumpy_A = mkA "jumpy" "jumpier";
lin jun_PN = mkPN "Jun";
lin junction_N = mkN "junction" "junctions";
lin juncture_N = mkN "juncture" "junctures";
lin june_N = mkN "june" "junes";
lin june_PN = mkPN "June";
lin jungle_N = mkN "jungle" "jungles";
lin jungly_A = mkA "jungly" "junglier";
lin junior_A = compoundA (mkA "junior");
lin junior_N = mkN "junior" "juniors";
lin juniper_N = mkN "juniper" "junipers";
lin junk_N = mkN "junk" "junks";
lin junk_V2 = mkV2 (mkV "junk");
lin junk_shop_N = mkN "junk - shop" "junk - shops";
lin junket_N = mkN "junket" "junkets";
lin junket_V = mkV "junket" "junkets" "junketed" "junketed" "junketing";
lin junketing_N = mkN "junketing" ;
lin junkie_N = mkN "junkie" "junkies";
lin junky_N = mkN "junky" "junkies";
lin junoesque_A = compoundA (mkA "junoesque");
lin junta_N = mkN "junta" "juntas";
lin jupiter_PN = mkPN "Jupiter";
lin juridical_A = compoundA (mkA "juridical");
lin jurisdiction_N = mkN "jurisdiction" ;
lin jurisprudence_N = mkN "jurisprudence" ;
lin jurist_N = mkN "jurist" "jurists";
lin juror_N = mkN "juror" "jurors";
lin jury_N = mkN "jury" "juries";
lin jury_box_N = mkN "jury - box" "jury - boxes";
lin jury_mast_N = mkN "jury - mast" "jury - masts";
lin jury_rigge_V2 = mkV2 (mkV "jury - rigge");
lin juryman_N = mkN "juryman" "jurymen" {- FIXME: guessed plural form -};
lin just_Adv = mkAdv "just";
lin just_Predet = {s="just"};
lin justice_N = mkN "justice" "justices";
lin justiciary_N = mkN "justiciary" "justiciaries";
lin justifiable_A = compoundA (mkA "justifiable");
lin justification_N = mkN "justification" "justifications";
lin justify_V2 = mkV2 (mkV "justify" "justifies" "justified" "justified" "justifying");
lin justify_VV = ingVV (mkV "justify" "justifies" "justified" "justified" "justifying");
lin justin_PN = mkPN "Justin";
lin justness_N = mkN "justness" ;
lin jut_V = mkV "jut" "juts" "jutted" "jutted" "jutting";
lin jute_N = mkN "jute" ;
lin juvenile_A = compoundA (mkA "juvenile");
lin juvenile_N = mkN "juvenile" "juveniles";
lin juxtapose_V2 = mkV2 (mkV "juxtapose" "juxtaposes" "juxtaposed" "juxtaposed" "juxtaposing");
lin juxtaposition_N = mkN "juxtaposition" ;
lin kaffir_N = mkN "kaffir" "kaffirs";
lin kail_N = mkN "kail" ;
lin kaiser_N = mkN "kaiser" "kaisers";
lin kakemono_N = mkN "kakemono" "kakemonos";
lin kale_N = mkN "kale" ;
lin kaleidoscope_N = mkN "kaleidoscope" "kaleidoscopes";
lin kaleidoscopic_A = compoundA (mkA "kaleidoscopic");
lin kalgan_PN = mkPN "Kalgan";
lin kampong_N = mkN "kampong" "kampongs";
lin kampuchea_PN = mkPN "Kampuchea";
lin kampuchean_A = compoundA (mkA "kampuchean");
lin kampuchean_N = mkN "kampuchean" "kampucheans";
lin kangaroo_N = mkN "kangaroo" "kangaroos";
lin kanpur_PN = mkPN "Kanpur";
lin kansas_PN = mkPN "Kansas";
lin kansas_city_PN = mkPN "Kansas city";
lin kaohsiung_PN = mkPN "Kaohsiung";
lin kaolin_N = mkN "kaolin" ;
lin kapok_N = mkN "kapok" ;
lin kaput_A = compoundA (mkA "kaput");
lin karachi_PN = mkPN "Karachi";
lin karaganda_PN = mkPN "Karaganda";
lin karat_N = mkN "karat" "karats";
lin karate_N = mkN "karate" ;
lin karen_PN = mkPN "Karen";
lin karlsruhe_PN = mkPN "Karlsruhe";
lin karma_N = mkN "karma" "karmas";
lin kashmir_PN = mkPN "Kashmir";
lin kashmiri_A = compoundA (mkA "kashmiri");
lin kashmiri_N = mkN "kashmiri" "kashmiris";
lin kassel_PN = mkPN "Kassel";
lin kate_PN = mkPN "Kate";
lin kath_PN = mkPN "Kath";
lin katherine_PN = mkPN "Katherine";
lin kathy_PN = mkPN "Kathy";
lin katie_PN = mkPN "Katie";
lin katowice_PN = mkPN "Katowice";
lin kava_N = mkN "kava" ;
lin kay_PN = mkPN "Kay";
lin kayak_N = mkN "kayak" "kayaks";
lin kazan_PN = mkPN "Kazan";
lin kebab_N = mkN "kebab" "kebabs";
lin kedgeree_N = mkN "kedgeree" ;
lin keel_N = mkN "keel" "keels";
lin keel_V = mkV "keel" "keels" "keeled" "keeled" "keeling";
lin keel_V2 = mkV2 (mkV "keel" "keels" "keeled" "keeled" "keeling");
lin keen_A = mkA "keen" "keener";
lin keen_N = mkN "keen" "keens";
lin keen_V = mkV "keen" "keens" "keened" "keened" "keening";
lin keen_V2 = mkV2 (mkV "keen" "keens" "keened" "keened" "keening");
lin keenness_N = mkN "keenness" ;
lin keep_N = mkN "keep" "keeps";
lin keep_V = IrregEng.keep_V;
lin keep_V2 = mkV2 (IrregEng.keep_V);
lin keep_VA = mkVA (IrregEng.keep_V);
lin keep_VS = mkVS (IrregEng.keep_V);
lin keeper_N = mkN "keeper" "keepers";
lin keeping_N = mkN "keeping" ;
lin keepsake_N = mkN "keepsake" "keepsakes";
lin keg_N = mkN "keg" "kegs";
lin keighley_PN = mkPN "Keighley";
lin keith_PN = mkPN "Keith";
lin kelp_N = mkN "kelp" ;
lin kelso_PN = mkPN "Kelso";
lin kelt_N = mkN "kelt" "kelts";
lin kelty_PN = mkPN "Kelty";
lin kemsing_PN = mkPN "Kemsing";
lin ken_N = mkN "ken" ;
lin ken_PN = mkPN "Ken";
lin ken_V2 = mkV2 (mkV "ken" "kens" "kenned" "kenned" "kenning");
lin kendal_PN = mkPN "Kendal";
lin kenilworth_PN = mkPN "Kenilworth";
lin kennel_N = mkN "kennel" "kennels";
lin kennel_V = mkV "kennel" "kennels" "kennelled" "kennelled" "kennelling";
lin kennel_V2 = mkV2 (mkV "kennel" "kennels" "kennelled" "kennelled" "kennelling");
lin kenneth_PN = mkPN "Kenneth";
lin kenny_PN = mkPN "Kenny";
lin kensington_PN = mkPN "Kensington";
lin kent_PN = mkPN "Kent";
lin kentucky_PN = mkPN "Kentucky";
lin kenya_PN = mkPN "Kenya";
lin kenyan_A = compoundA (mkA "kenyan");
lin kenyan_N = mkN "kenyan" "kenyans";
lin kepi_N = mkN "kepi" "kepis";
lin kerb_N = mkN "kerb" "kerbs";
lin kerbstone_N = mkN "kerbstone" "kerbstones";
lin kerchief_N = mkN "kerchief" "kerchiefs";
lin kernel_N = mkN "kernel" "kernels";
lin kerosene_N = mkN "kerosene" ;
lin kerry_PN = mkPN "Kerry";
lin kestrel_N = mkN "kestrel" "kestrels";
lin ketch_N = mkN "ketch" "ketches";
lin ketchup_N = mkN "ketchup" ;
lin kettering_PN = mkPN "Kettering";
lin kettle_N = mkN "kettle" "kettles";
lin kettledrum_N = mkN "kettledrum" "kettledrums";
lin kevin_PN = mkPN "Kevin";
lin key_A = mkA "key";
lin key_N = mkN "key";
lin key_V2 = mkV2 (mkV "key" "keys" "keyed" "keyed" "keying");
lin keyboard_N = mkN "keyboard" "keyboards";
lin keyhole_N = mkN "keyhole" "keyholes";
lin keyless_A = compoundA (mkA "keyless");
lin keynote_N = mkN "keynote" "keynotes";
lin keynsham_PN = mkPN "Keynsham";
lin keyring_N = mkN "keyring" "keyrings";
lin keystone_N = mkN "keystone" "keystones";
lin keyword_N = mkN "keyword" "keywords";
lin keyworth_PN = mkPN "Keyworth";
lin kg_N = mkN "kg" "kg";
lin kgb_N = mkN "kgb" ;
lin khaki_A = compoundA (mkA "khaki");
lin khaki_N = mkN "khaki" ;
lin khalka_N = mkN "khalka" ;
lin khan_N = mkN "khan" "khans";
lin kharkov_PN = mkPN "Kharkov";
lin khartoum_PN = mkPN "Khartoum";
lin khmer_N = mkN "khmer" ;
lin kibbutz_N = mkN "kibbutz" "IRREG";
lin kibbutznik_N = mkN "kibbutznik" "kibbutzniks";
lin kick_N = mkN "kick" "kicks";
lin kick_V = mkV "kick" "kicks" "kicked" "kicked" "kicking";
lin kick_V2 = mkV2 (mkV "kick" "kicks" "kicked" "kicked" "kicking");
lin kick_start_N = mkN "kick - start" "kick - starts";
lin kick_starter_N = mkN "kick - starter" "kick - starters";
lin kickback_N = mkN "kickback" "kickbacks";
lin kickoff_N = mkN "kickoff" "kickoffs";
lin kid_N = mkN "kid" "kids";
lin kid_V = mkV "kid" "kids" "kidded" "kidded" "kidding";
lin kid_V2 = mkV2 (mkV "kid" "kids" "kidded" "kidded" "kidding");
lin kidderminster_PN = mkPN "Kidderminster";
lin kiddy_N = mkN "kiddy" "kiddies";
lin kidlington_PN = mkPN "Kidlington";
lin kidnap_V2 = mkV2 (mkV "kidnap" "kidnaps" "kidnapped" "kidnapped" "kidnapping");
lin kidnapper_N = mkN "kidnapper" "kidnappers";
lin kidney_N = mkN "kidney" "kidneys";
lin kidney_bean_N = mkN "kidney - bean" "kidney - beans";
lin kidsgrove_PN = mkPN "Kidsgrove";
lin kiev_PN = mkPN "Kiev";
lin kilbirnie_PN = mkPN "Kilbirnie";
lin kildare_PN = mkPN "Kildare";
lin kilkenny_PN = mkPN "Kilkenny";
lin kill_N = mkN "kill" "IRREG";
lin kill_V = mkV "kill" "kills" "killed" "killed" "killing";
lin kill_V2 = mkV2 (mkV "kill" "kills" "killed" "killed" "killing");
lin killarney_PN = mkPN "Killarney";
lin killer_N = mkN "killer" "killers";
lin killing_A = compoundA (mkA "killing");
lin killing_N = mkN "killing" "killings";
lin killjoy_N = mkN "killjoy" "killjoys";
lin kilmarnock_PN = mkPN "Kilmarnock";
lin kiln_N = mkN "kiln" "kilns";
lin kilo_N = mkN "kilo" "kilos";
lin kilocycle_N = mkN "kilocycle" "kilocycles";
lin kilogram_N = mkN "kilogram" "kilograms";
lin kilolitre_N = mkN "kilolitre" "kilolitres";
lin kilometre_N = mkN "kilometre" "kilometres";
lin kilowatt_N = mkN "kilowatt" "kilowatts";
lin kilsyth_PN = mkPN "Kilsyth";
lin kilt_N = mkN "kilt" "kilts";
lin kilwinning_PN = mkPN "Kilwinning";
lin kimberley_PN = mkPN "Kimberley";
lin kimono_N = mkN "kimono" "kimonos";
lin kind_A = mkA "kind" "kinder";
lin kind_N = mkN "kind" "kinds";
lin kind_hearted_A = compoundA (mkA "kind - hearted");
lin kinda_Adv = mkAdv "kinda";
lin kindergarten_N = mkN "kindergarten" "kindergartens";
lin kindle_V = mkV "kindle" "kindles" "kindled" "kindled" "kindling";
lin kindle_V2 = mkV2 (mkV "kindle" "kindles" "kindled" "kindled" "kindling");
lin kindling_N = mkN "kindling" ;
lin kindly_A = mkA "kindly" "kindlier";
lin kindness_N = mkN "kindness" "kindnesses";
lin kindred_A = compoundA (mkA "kindred");
lin kindred_N = mkN "kindred" ;
lin kinetic_A = compoundA (mkA "kinetic");
lin kinetics_N = mkN "kinetics" "kinetics";
lin king's_lynn_PN = mkPN "King's lynn";
lin king_N = mkN "king" "kings";
lin king_size_A = compoundA (mkA "king - size");
lin king_sized_A = compoundA (mkA "king - sized");
lin kingcup_N = mkN "kingcup" "kingcups";
lin kingdom_N = mkN "kingdom" "kingdoms";
lin kingfisher_N = mkN "kingfisher" "kingfishers";
lin kinglike_A = compoundA (mkA "kinglike");
lin kingly_A = compoundA (mkA "kingly");
lin kingpin_N = mkN "kingpin" "kingpins";
lin kingsbury_PN = mkPN "Kingsbury";
lin kingship_N = mkN "kingship" ;
lin kingsteignton_PN = mkPN "Kingsteignton";
lin kingston_PN = mkPN "Kingston";
lin kingston_upon_hull_PN = mkPN "Kingston upon hull";
lin kingston_upon_thames_PN = mkPN "Kingston upon thames";
lin kink_N = mkN "kink" "kinks";
lin kink_V = mkV "kink" "kinks" "kinked" "kinked" "kinking";
lin kink_V2 = mkV2 (mkV "kink" "kinks" "kinked" "kinked" "kinking");
lin kinky_A = mkA "kinky" "kinkier";
lin kinshasa_PN = mkPN "Kinshasa";
lin kinship_N = mkN "kinship" ;
lin kinsman_N = mkN "kinsman" "kinsmen" {- FIXME: guessed plural form -};
lin kinswoman_N = mkN "kinswoman" "kinswomen" {- FIXME: guessed plural form -};
lin kiosk_N = mkN "kiosk" "kiosks";
lin kip_N = mkN "kip" "kips";
lin kip_V = mkV "kip" "kips" "kipped" "kipped" "kipping";
lin kippax_PN = mkPN "Kippax";
lin kipper_N = mkN "kipper" "kippers";
lin kirin_PN = mkPN "Kirin";
lin kirk_N = mkN "kirk" "kirks";
lin kirkby_PN = mkPN "Kirkby";
lin kirkby_in_ashfield_PN = mkPN "Kirkby in ashfield";
lin kirkcaldy_PN = mkPN "Kirkcaldy";
lin kirkham_PN = mkPN "Kirkham";
lin kirkintilloch_PN = mkPN "Kirkintilloch";
lin kirkwall_PN = mkPN "Kirkwall";
lin kirsch_N = mkN "kirsch" ;
lin kirtle_N = mkN "kirtle" "kirtles";
lin kismet_N = mkN "kismet" ;
lin kiss_N = mkN "kiss" "kisses";
lin kiss_V = mkV "kiss" "kisses" "kissed" "kissed" "kissing";
lin kiss_V2 = mkV2 (mkV "kiss" "kisses" "kissed" "kissed" "kissing");
lin kisser_N = mkN "kisser" "kissers";
lin kit_N = mkN "kit" "kits";
lin kit_V2 = mkV2 (mkV "kit" "kits" "kitted" "kitted" "kitting");
lin kitakyushu_PN = mkPN "Kitakyushu";
lin kitbag_N = mkN "kitbag" "kitbags";
lin kitchen_N = mkN "kitchen" "kitchens";
lin kitchenette_N = mkN "kitchenette" "kitchenettes";
lin kite_N = mkN "kite" "kites";
lin kite_balloon_N = mkN "kite - balloon" "kite - balloons";
lin kitsch_A = compoundA (mkA "kitsch");
lin kitten_N = mkN "kitten" "kittens";
lin kittenish_A = compoundA (mkA "kittenish");
lin kitty_N = mkN "kitty" "kitties";
lin kitty_PN = mkPN "Kitty";
lin kiwi_N = mkN "kiwi" "kiwis";
lin klaxon_N = mkN "klaxon" "klaxons";
lin kleenex_N = mkN "kleenex" "kleenexes";
lin kleptomania_N = mkN "kleptomania" ;
lin kleptomaniac_N = mkN "kleptomaniac" "kleptomaniacs";
lin km_N = mkN "km" "km";
lin knack_N = mkN "knack" "knacks";
lin knacker_N = mkN "knacker" "knackers";
lin knap_V2 = mkV2 (mkV "knap" "knaps" "knapped" "knapped" "knapping");
lin knapsack_N = mkN "knapsack" "knapsacks";
lin knaresborough_PN = mkPN "Knaresborough";
lin knave_N = mkN "knave" "knaves";
lin knavery_N = mkN "knavery" "knaveries";
lin knavish_A = compoundA (mkA "knavish");
lin knead_V = mkV "knead";
lin knead_V2 = mkV2 (mkV "knead" "kneads" "kneaded" "kneaded" "kneading");
lin knee_N = mkN "knee" "knees";
lin knee_deep_A = compoundA (mkA "knee - deep");
lin knee_deep_Adv = mkAdv "knee - deep";
lin knee_high_A = compoundA (mkA "knee - high");
lin knee_high_Adv = mkAdv "knee - high";
lin kneecap_N = mkN "kneecap" "kneecaps";
lin kneel_V = mkV "kneel" "kneels" "kneeled" "kneeled" "kneeling";
lin knell_N = mkN "knell" "IRREG";
lin knesset_N = mkN "knesset" "knessets";
lin knick_knack_N = mkN "knick - knack" "knick - knacks";
lin knife_N = mkN "knife" "knives";
lin knife_V2 = mkV2 (mkV "knife" "knifes" "knifed" "knifed" "knifing");
lin knife_edge_N = mkN "knife - edge" "knife - edges";
lin knight_N = mkN "knight" "knights";
lin knight_V2 = mkV2 (mkV "knight" "knights" "knighted" "knighted" "knighting");
lin knight_errant_N = mkN "knight - errant" "knights - errant";
lin knighthood_N = mkN "knighthood" "knighthoods";
lin knightly_A = compoundA (mkA "knightly");
lin knit_V = mkV "knit" "knits" "knitted" "knitted" "knitting";
lin knit_V2 = mkV2 (mkV "knit" "knits" "knitted" "knitted" "knitting");
lin knitter_N = mkN "knitter" "knitters";
lin knitting_N = mkN "knitting" ;
lin knitting_machine_N = mkN "knitting - machine" "knitting - machines";
lin knitting_needle_N = mkN "knitting - needle" "knitting - needles";
lin knitwear_N = mkN "knitwear" ;
lin knob_N = mkN "knob" "knobs";
lin knobble_N = mkN "knobble" "knobbles";
lin knobbly_A = mkA "knobbly" "knobblier";
lin knobkerrie_N = mkN "knobkerrie" "knobkerries";
lin knock_N = mkN "knock" "knocks";
lin knock_V = mkV "knock" "knocks" "knocked" "knocked" "knocking";
lin knock_V2 = mkV2 (mkV "knock" "knocks" "knocked" "knocked" "knocking");
lin knock_kneed_A = compoundA (mkA "knock - kneed");
lin knock_on_N = mkN "knock - on" "knock - ons";
lin knockabout_A = compoundA (mkA "knockabout");
lin knockdown_A = compoundA (mkA "knockdown");
lin knocker_N = mkN "knocker" "knockers";
lin knockout_A = compoundA (mkA "knockout");
lin knockout_N = mkN "knockout" "knockouts";
lin knoll_N = mkN "knoll" "knolls";
lin knot_N = mkN "knot" "knots";
lin knot_V = mkV "knot" "knots" "knotted" "knotted" "knotting";
lin knot_V2 = mkV2 (mkV "knot" "knots" "knotted" "knotted" "knotting");
lin knothole_N = mkN "knothole" "knotholes";
lin knottingley_PN = mkPN "Knottingley";
lin knotty_A = mkA "knotty" "knottier";
lin knout_N = mkN "knout" "knouts";
lin know_N = mkN "know" "knows";
lin know_V = mkV "know" "knows" "knew" "known" "knowing";
lin know_V2 = mkV2 (mkV "know" "knows" "knew" "known" "knowing");
lin know_V2V = mkV2V (mkV "know" "knows" "knew" "known" "knowing") noPrep to_Prep ;
lin know_VS = mkVS (mkV "know" "knows" "knew" "known" "knowing");
lin know_all_N = mkN "know - all" "know - alls";
lin know_how_N = mkN "know - how" ;
lin knowing_A = compoundA (mkA "knowing");
lin knowledge_N = mkN "knowledge" ;
lin knowledgeable_A = compoundA (mkA "knowledgeable");
lin knuckle_N = mkN "knuckle" "knuckles";
lin knuckle_V = mkV "knuckle" "knuckles" "knuckled" "knuckled" "knuckling";
lin knutsford_PN = mkPN "Knutsford";
lin ko_N = mkN "ko" ;
lin koala_N = mkN "koala" "koalas";
lin kobe_PN = mkPN "Kobe";
lin koblenz_PN = mkPN "Koblenz";
lin kobo_N = mkN "kobo" "kobos";
lin kohl_N = mkN "kohl" ;
lin kohlrabi_N = mkN "kohlrabi" "kohlrabis";
lin kola_N = mkN "kola" "kolas";
lin kola_nut_N = mkN "kola - nut" "kola - nuts";
lin koln_PN = mkPN "Koln";
lin kookaburra_N = mkN "kookaburra" "kookaburras";
lin kopeck_N = mkN "kopeck" "kopecks";
lin kopje_N = mkN "kopje" "kopjes";
lin koppie_N = mkN "koppie" "koppies";
lin koran_N = mkN "koran" "korans";
lin koranic_A = compoundA (mkA "koranic");
lin korea_PN = mkPN "Korea";
lin korean_A = compoundA (mkA "korean");
lin korean_N = mkN "korean" "koreans";
lin kosher_A = compoundA (mkA "kosher");
lin kosher_N = mkN "kosher" ;
lin kotow_N = mkN "kotow" "kotows";
lin kotow_V = mkV "kotow" "kotows" "kotowed" "kotowed" "kotowing";
lin koumiss_N = mkN "koumiss" ;
lin kowtow_N = mkN "kowtow" "kowtows";
lin kowtow_V = mkV "kowtow" "kowtows" "kowtowed" "kowtowed" "kowtowing";
lin kraal_N = mkN "kraal" "kraals";
lin krakow_PN = mkPN "Krakow";
lin krasnoyarsk_PN = mkPN "Krasnoyarsk";
lin krefeld_PN = mkPN "Krefeld";
lin kremlin_N = mkN "kremlin" "kremlins";
lin krivoi_rog_PN = mkPN "Krivoi rog";
lin krona_N = mkN "krona" "kronae" {- FIXME: guessed plural form -};
lin krone_N = mkN "krone" "IRREG";
lin kudos_N = mkN "kudos" ;
lin kumis_N = mkN "kumis" ;
lin kummel_N = mkN "kümmel" ;
lin kung_fu_N = mkN "kung fu" ;
lin kunming_PN = mkPN "Kunming";
lin kuwait_PN = mkPN "Kuwait";
lin kuwait_city_PN = mkPN "Kuwait city";
lin kuwaiti_A = compoundA (mkA "kuwaiti");
lin kuwaiti_N = mkN "kuwaiti" "kuwaitis";
lin kuybyshev_PN = mkPN "Kuybyshev";
lin kvass_N = mkN "kvass" ;
lin kw_N = mkN "kw" "kw";
lin kwacha_N = mkN "kwacha" "kwacha";
lin kweiyang_PN = mkPN "Kweiyang";
lin kwela_N = mkN "kwela" ;
lin kyoto_PN = mkPN "Kyoto";
lin l_plate_N = mkN "l - plate" "l - plates";
lin la_N = mkN "la" "lae" {- FIXME: guessed plural form -};
lin la_PN = mkPN "La";
lin la_di_da_A = compoundA (mkA "la - di - da");
lin la_habana_PN = mkPN "La habana";
lin la_paz_PN = mkPN "La paz";
lin la_plata_PN = mkPN "La plata";
lin la_spezia_PN = mkPN "La spezia";
lin laager_N = mkN "laager" "laagers";
lin lab_N = mkN "lab" "labs";
lin lab_PN = mkPN "Lab";
lin label_N = mkN "label" "labels";
lin label_V = mkV "label";
lin label_V2 = mkV2 (mkV "label" "labels" "labelled" "labelled" "labelling");
lin label_VS = mkVS (mkV "label");
lin labial_A = compoundA (mkA "labial");
lin labor_V = mkV "labor" "labors" "labored" "labored" "laboring";
lin laboratory_N = mkN "laboratory" "laboratories";
lin laborious_A = compoundA (mkA "laborious");
lin labour_N = mkN "labour" "labours";
lin labour_V = mkV "labour" "labours" "laboured" "laboured" "labouring";
lin labour_V2 = mkV2 (mkV "labour" "labours" "laboured" "laboured" "labouring");
lin labour_saving_A = compoundA (mkA "labour - saving");
lin laboured_A = compoundA (mkA "laboured");
lin labourer_N = mkN "labourer" "labourers";
lin labourite_N = mkN "labourite" "labourites";
lin labrador_PN = mkPN "Labrador";
lin laburnum_N = mkN "laburnum" "laburnums";
lin labyrinth_N = mkN "labyrinth" "labyrinths";
lin labyrinthine_A = compoundA (mkA "labyrinthine");
lin lace_N = mkN "lace" "laces";
lin lace_V = mkV "lace" "laces" "laced" "laced" "lacing";
lin lace_V2 = mkV2 (mkV "lace" "laces" "laced" "laced" "lacing");
lin lacerate_V2 = mkV2 (mkV "lacerate" "lacerates" "lacerated" "lacerated" "lacerating");
lin laceration_N = mkN "laceration" "lacerations";
lin lachrymal_A = compoundA (mkA "lachrymal");
lin lachrymose_A = compoundA (mkA "lachrymose");
lin lack_N = mkN "lack" ;
lin lack_V = mkV "lack" "lacks" "lacked" "lacked" "lacking";
lin lack_V2 = mkV2 (mkV "lack" "lacks" "lacked" "lacked" "lacking");
lin lack_lustre_A = compoundA (mkA "lack - lustre");
lin lackadaisical_A = compoundA (mkA "lackadaisical");
lin lackey_N = mkN "lackey" "lackeys";
lin laconic_A = compoundA (mkA "laconic");
lin laconically_Adv = mkAdv "laconically";
lin laconicism_N = mkN "laconicism" "laconicisms";
lin laconism_N = mkN "laconism" "laconisms";
lin lacquer_N = mkN "lacquer" "lacquers";
lin lacquer_V2 = mkV2 (mkV "lacquer" "lacquers" "lacquered" "lacquered" "lacquering");
lin lacrosse_N = mkN "lacrosse" ;
lin lactic_A = compoundA (mkA "lactic");
lin lacuna_N = mkN "lacuna" "lacunas";
lin lacy_A = mkA "lacy" "lacier";
lin lad_N = mkN "lad" "lads";
lin ladder_N = mkN "ladder" "ladders";
lin ladder_V = mkV "ladder" "ladders" "laddered" "laddered" "laddering";
lin ladder_proof_A = compoundA (mkA "ladder - proof");
lin laddie_N = mkN "laddie" "laddies";
lin lade_V2 = mkV2 (mkV "lade" "IRREG" "IRREG" "IRREG" "IRREG");
lin laden_A = compoundA (mkA "laden");
lin lading_N = mkN "lading" ;
lin ladle_N = mkN "ladle" "ladles";
lin ladle_V2 = mkV2 (mkV "ladle" "ladles" "ladled" "ladled" "ladling");
lin lady's_maid_N = mkN "lady's - maid" "lady's - maids";
lin lady_N = mkN "lady" "ladies";
lin lady_chapel_N = mkN "lady - chapel" "lady - chapels";
lin lady_in_waiting_N = mkN "lady - in - waiting" "ladies - in - waiting";
lin lady_killer_N = mkN "lady - killer" "lady - killers";
lin ladybird_N = mkN "ladybird" "ladybirds";
lin ladylike_A = compoundA (mkA "ladylike");
lin ladyship_N = mkN "ladyship" "ladyships";
lin lag_N = mkN "lag" "lags";
lin lag_V = mkV "lag" "lags" "lagged" "lagged" "lagging";
lin lag_V2 = mkV2 (mkV "lag" "lags" "lagged" "lagged" "lagging");
lin lager_N = mkN "lager" "lagers";
lin laggard_N = mkN "laggard" "laggards";
lin lagging_N = mkN "lagging" ;
lin lagoon_N = mkN "lagoon" "lagoons";
lin lagos_PN = mkPN "Lagos";
lin lahore_PN = mkPN "Lahore";
lin laic_A = compoundA (mkA "laic");
lin laicize_V2 = mkV2 (mkV "laicize" "laicizes" "laicized" "laicized" "laicizing");
lin lair_N = mkN "lair" "lairs";
lin laird_N = mkN "laird" "lairds";
lin laissez_faire_N = mkN "laissez - faire" ;
lin laity_N = mkN "laity" "laities";
lin lake_N = mkN "lake" "lakes";
lin lakenheath_PN = mkPN "Lakenheath";
lin lakh_N = mkN "lakh" "lakhs";
lin lam_V = mkV "lam" "lams" "lammed" "lammed" "lamming";
lin lam_V2 = mkV2 (mkV "lam" "lams" "lammed" "lammed" "lamming");
lin lama_N = mkN "lama" "lamas";
lin lamasery_N = mkN "lamasery" "lamaseries";
lin lamb_N = mkN "lamb" "lambs";
lin lamb_V = mkV "lamb" "lambs" "lambed" "lambed" "lambing";
lin lambaste_V2 = mkV2 (mkV "lambaste" "lambastes" "lambasted" "lambasted" "lambasting");
lin lambency_N = mkN "lambency" ;
lin lambent_A = compoundA (mkA "lambent");
lin lambeth_PN = mkPN "Lambeth";
lin lambkin_N = mkN "lambkin" "lambkins";
lin lambskin_N = mkN "lambskin" "lambskins";
lin lame_A = mkA "lame" "lamer";
lin lame_N = mkN "lamé" ;
lin lame_V2 = mkV2 (mkV "lame" "lames" "lamed" "lamed" "laming");
lin lameness_N = mkN "lameness" ;
lin lament_N = mkN "lament" "laments";
lin lament_V = mkV "lament" "laments" "lamented" "lamented" "lamenting";
lin lament_V2 = mkV2 (mkV "lament" "laments" "lamented" "lamented" "lamenting");
lin lament_VS = mkVS (mkV "lament" "laments" "lamented" "lamented" "lamenting");
lin lamentable_A = compoundA (mkA "lamentable");
lin lamentation_N = mkN "lamentation" "lamentations";
lin laminate_V = mkV "laminate" "laminates" "laminated" "laminated" "laminating";
lin laminate_V2 = mkV2 (mkV "laminate" "laminates" "laminated" "laminated" "laminating");
lin lammas_N = mkN "lammas" "lammases";
lin lammas_PN = mkPN "Lammas";
lin lamp_N = mkN "lamp" "lamps";
lin lamp_black_N = mkN "lamp - black" ;
lin lamplight_N = mkN "lamplight" ;
lin lamplighter_N = mkN "lamplighter" "lamplighters";
lin lamplit_A = compoundA (mkA "lamplit");
lin lampoon_N = mkN "lampoon" "lampoons";
lin lampoon_V2 = mkV2 (mkV "lampoon" "lampoons" "lampooned" "lampooned" "lampooning");
lin lamppost_N = mkN "lamppost" "lampposts";
lin lamprey_N = mkN "lamprey" "lampreys";
lin lampshade_N = mkN "lampshade" "lampshades";
lin lanark_PN = mkPN "Lanark";
lin lancashire_PN = mkPN "Lancashire";
lin lancaster_PN = mkPN "Lancaster";
lin lancastrian_A = compoundA (mkA "lancastrian");
lin lancastrian_N = mkN "lancastrian" "lancastrians";
lin lance_N = mkN "lance" "lances";
lin lance_V2 = mkV2 (mkV "lance" "lances" "lanced" "lanced" "lancing");
lin lance_corporal_N = mkN "lance - corporal" "lance - corporals";
lin lancer_N = mkN "lancer" "lancers";
lin lancet_N = mkN "lancet" "lancets";
lin lanchow_PN = mkPN "Lanchow";
lin lancing_PN = mkPN "Lancing";
lin land_N = mkN "land" "lands";
lin land_V = mkV "land" "lands" "landed" "landed" "landing";
lin land_V2 = mkV2 (mkV "land" "lands" "landed" "landed" "landing");
lin land_agent_N = mkN "land - agent" "land - agents";
lin landau_N = mkN "landau" "landaus";
lin landed_A = compoundA (mkA "landed");
lin landfall_N = mkN "landfall" "landfalls";
lin landgrave_N = mkN "landgrave" "landgraves";
lin landholder_N = mkN "landholder" "landholders";
lin landing_N = mkN "landing" "landings";
lin landing_craft_N = mkN "landing - craft" "landing - craft";
lin landing_field_N = mkN "landing - field" "landing - fields";
lin landing_gear_N = mkN "landing - gear" ;
lin landing_net_N = mkN "landing - net" "landing - nets";
lin landing_party_N = mkN "landing - party" "landing - parties";
lin landing_place_N = mkN "landing - place" "landing - places";
lin landing_stage_N = mkN "landing - stage" "landing - stages";
lin landing_strip_N = mkN "landing - strip" "landing - strips";
lin landlady_N = mkN "landlady" "landladies";
lin landless_A = compoundA (mkA "landless");
lin landlocked_A = compoundA (mkA "landlocked");
lin landlord_N = mkN "landlord" "landlords";
lin landlubber_N = mkN "landlubber" "landlubbers";
lin landmark_N = mkN "landmark" "landmarks";
lin landmine_N = mkN "landmine" "landmines";
lin landowner_N = mkN "landowner" "landowners";
lin landrover_N = mkN "landrover" "landrovers";
lin landscape_N = mkN "landscape" "landscapes";
lin landscape_V2 = mkV2 (mkV "landscape" "landscapes" "landscaped" "landscaped" "landscaping");
lin landslide_N = mkN "landslide" "landslides";
lin landslip_N = mkN "landslip" "landslips";
lin landsman_N = mkN "landsman" "landsmen" {- FIXME: guessed plural form -};
lin landward_Adv = mkAdv "landward";
lin lane_N = mkN "lane" "lanes";
lin langsyne_Adv = mkAdv "langsyne";
lin langsyne_N = mkN "langsyne" ;
lin language_N = mkN "language" "languages";
lin languid_A = compoundA (mkA "languid");
lin languish_V = mkV "languish" "languishes" "languished" "languished" "languishing";
lin languor_N = mkN "languor" ;
lin languorous_A = compoundA (mkA "languorous");
lin langur_N = mkN "langur" "langurs";
lin lank_A = compoundA (mkA "lank");
lin lanky_A = mkA "lanky" "lankier";
lin lanolin_N = mkN "lanolin" ;
lin lantern_N = mkN "lantern" "lanterns";
lin lantern_jawed_A = compoundA (mkA "lantern - jawed");
lin lanyard_N = mkN "lanyard" "lanyards";
lin lao_N = mkN "lao" ;
lin laos_PN = mkPN "Laos";
lin laotian_A = compoundA (mkA "laotian");
lin laotian_N = mkN "laotian" "laotians";
lin lap_N = mkN "lap" "laps";
lin lap_V = mkV "lap" "laps" "lapped" "lapped" "lapping";
lin lap_V2 = mkV2 (mkV "lap" "laps" "lapped" "lapped" "lapping");
lin lap_dog_N = mkN "lap - dog" "lap - dogs";
lin lapel_N = mkN "lapel" "lapels";
lin lapidary_A = compoundA (mkA "lapidary");
lin lapidary_N = mkN "lapidary" "lapidaries";
lin lapis_lazuli_N = mkN "lapis lazuli" "lapis lazulis";
lin lapse_N = mkN "lapse" "lapses";
lin lapse_V = mkV "lapse" "lapses" "lapsed" "lapsed" "lapsing";
lin lapwing_N = mkN "lapwing" "lapwings";
lin larboard_A = compoundA (mkA "larboard");
lin larboard_N = mkN "larboard" ;
lin larceny_N = mkN "larceny" "larcenies";
lin larch_N = mkN "larch" "larches";
lin lard_N = mkN "lard" ;
lin lard_V2 = mkV2 (mkV "lard" "lards" "larded" "larded" "larding");
lin larder_N = mkN "larder" "larders";
lin large_A = mkA "large" "larger";
lin large_Adv = mkAdv "large";
lin large_N = mkN "large" ;
lin large_scale_A = compoundA (mkA "large - scale");
lin largeness_N = mkN "largeness" ;
lin largesse_N = mkN "largesse" ;
lin largish_A = compoundA (mkA "largish");
lin largo_N = mkN "largo" "largos";
lin largs_PN = mkPN "Largs";
lin lariat_N = mkN "lariat" "lariats";
lin lark_N = mkN "lark" "larks";
lin lark_V = mkV "lark" "larks" "larked" "larked" "larking";
lin larkhall_PN = mkPN "Larkhall";
lin larkspur_N = mkN "larkspur" "larkspurs";
lin larn_V = mkV "larn" "larns" "larned" "larned" "larning";
lin larn_V2 = mkV2 (mkV "larn" "larns" "larned" "larned" "larning");
lin larne_PN = mkPN "Larne";
lin larry_PN = mkPN "Larry";
lin larva_N = mkN "larva" "larvae" {- FIXME: guessed plural form -};
lin larval_A = compoundA (mkA "larval");
lin laryngitis_N = mkN "laryngitis" ;
lin larynx_N = mkN "larynx" "larynxes";
lin las_palmas_PN = mkPN "Las palmas";
lin lascar_N = mkN "lascar" "lascars";
lin lascivious_A = compoundA (mkA "lascivious");
lin lasciviousness_N = mkN "lasciviousness" ;
lin laser_N = mkN "laser" "lasers";
lin lash_N = mkN "lash" "lashes";
lin lash_V = mkV "lash" "lashes" "lashed" "lashed" "lashing";
lin lash_V2 = mkV2 (mkV "lash" "lashes" "lashed" "lashed" "lashing");
lin lash_up_N = mkN "lash - up" "lash - ups";
lin lashing_N = mkN "lashing" "lashings";
lin lass_N = mkN "lass" "lasses";
lin lassie_N = mkN "lassie" "lassies";
lin lassitude_N = mkN "lassitude" ;
lin lasso_N = mkN "lasso" "lassos";
lin lasso_V2 = mkV2 (mkV "lasso" "lassos" "lassoed" "lassoed" "lassoing");
lin last_A = irregAdv (mkA "last") "last";
lin last_V = mkV "last" "lasts" "lasted" "lasted" "lasting";
lin last_V2 = mkV2 (mkV "last" "lasts" "lasted" "lasted" "lasting");
lin lasting_A = compoundA (mkA "lasting");
lin lat_N = mkN "lat" ;
lin latch_N = mkN "latch" "latches";
lin latch_V = mkV "latch" "latches" "latched" "latched" "latching";
lin latch_V2 = mkV2 (mkV "latch" "latches" "latched" "latched" "latching");
lin latchkey_N = mkN "latchkey" "latchkeys";
lin late_A = mkA "late" "later";
lin late_Adv = mkAdv "late";
lin lateen_A = compoundA (mkA "lateen");
lin latent_A = compoundA (mkA "latent");
lin lateral_A = compoundA (mkA "lateral");
lin laterite_N = mkN "laterite" ;
lin latex_N = mkN "latex" ;
lin lath_N = mkN "lath" "laths";
lin lathe_N = mkN "lathe" "lathes";
lin lather_N = mkN "lather" ;
lin lather_V = mkV "lather" "lathers" "lathered" "lathered" "lathering";
lin lather_V2 = mkV2 (mkV "lather" "lathers" "lathered" "lathered" "lathering");
lin lathi_N = mkN "lathi" "lathis";
lin latin_A = compoundA (mkA "latin");
lin latin_N = mkN "latin" "latins";
lin latinist_N = mkN "latinist" "latinists";
lin latinize_V2 = mkV2 (mkV "latinize" "latinizes" "latinized" "latinized" "latinizing");
lin latish_A = compoundA (mkA "latish");
lin latitude_N = mkN "latitude" "latitudes";
lin latitudes_N = mkN "latitudes" "latitudess";
lin latitudinal_A = compoundA (mkA "latitudinal");
lin latitudinarian_A = compoundA (mkA "latitudinarian");
lin latitudinarian_N = mkN "latitudinarian" "latitudinarians";
lin latrine_N = mkN "latrine" "latrines";
lin latter_A = compoundA (mkA "latter");
lin latter_day_A = compoundA (mkA "latter - day");
lin lattice_N = mkN "lattice" "lattices";
lin latticed_A = compoundA (mkA "latticed");
lin laud_V2 = mkV2 (mkV "laud" "lauds" "lauded" "lauded" "lauding");
lin laudable_A = compoundA (mkA "laudable");
lin laudanum_N = mkN "laudanum" ;
lin laudatory_A = compoundA (mkA "laudatory");
lin laugh_N = mkN "laugh" "laughs";
lin laugh_V = mkV "laugh" "laughs" "laughed" "laughed" "laughing";
lin laugh_V2 = mkV2 (mkV "laugh" "laughs" "laughed" "laughed" "laughing");
lin laugh_VS = mkVS (mkV "laugh" "laughs" "laughed" "laughed" "laughing");
lin laughable_A = compoundA (mkA "laughable");
lin laughing_A = compoundA (mkA "laughing");
lin laughing_gas_N = mkN "laughing - gas" ;
lin laughing_stock_N = mkN "laughing - stock" "laughing - stocks";
lin laughter_N = mkN "laughter" ;
lin launch_N = mkN "launch" "launches";
lin launch_V = mkV "launch" "launches" "launched" "launched" "launching";
lin launch_V2 = mkV2 (mkV "launch" "launches" "launched" "launched" "launching");
lin launcher_N = mkN "launcher" "launchers";
lin launching_pad_N = mkN "launching - pad" "launching - pads";
lin launching_site_N = mkN "launching - site" "launching - sites";
lin launder_V = mkV "launder" "launders" "laundered" "laundered" "laundering";
lin launder_V2 = mkV2 (mkV "launder" "launders" "laundered" "laundered" "laundering");
lin launderette_N = mkN "launderette" "launderettes";
lin laundress_N = mkN "laundress" "laundresses";
lin laundry_N = mkN "laundry" "laundries";
lin laundryman_N = mkN "laundryman" "laundrymen" {- FIXME: guessed plural form -};
lin laundrywoman_N = mkN "laundrywoman" "laundrywomen" {- FIXME: guessed plural form -};
lin laura_PN = mkPN "Laura";
lin laureate_A = compoundA (mkA "laureate");
lin laureate_N = mkN "laureate" "laureates";
lin laurel_N = mkN "laurel" "laurels";
lin laurelled_A = compoundA (mkA "laurelled");
lin laurence_PN = mkPN "Laurence";
lin lausanne_PN = mkPN "Lausanne";
lin lav_N = mkN "lav" "lavs";
lin lava_N = mkN "lava" ;
lin lavatory_N = mkN "lavatory" "lavatories";
lin lave_V2 = mkV2 (mkV "lave" "laves" "laved" "laved" "laving");
lin lavender_N = mkN "lavender" ;
lin lavish_A = compoundA (mkA "lavish");
lin lavish_V2 = mkV2 (mkV "lavish" "lavishes" "lavished" "lavished" "lavishing");
lin law_N = mkN "law" "laws";
lin law_abiding_A = compoundA (mkA "law - abiding");
lin law_officer_N = mkN "law - officer" "law - officers";
lin lawbreaker_N = mkN "lawbreaker" "lawbreakers";
lin lawful_A = compoundA (mkA "lawful");
lin lawgiver_N = mkN "lawgiver" "lawgivers";
lin lawless_A = compoundA (mkA "lawless");
lin lawlessness_N = mkN "lawlessness" ;
lin lawmaker_N = mkN "lawmaker" "lawmakers";
lin lawmaking_N = mkN "lawmaking" ;
lin lawn_N = mkN "lawn" "lawns";
lin lawn_mower_N = mkN "lawn - mower" "lawn - mowers";
lin lawrence_PN = mkPN "Lawrence";
lin lawyer_N = mkN "lawyer" "lawyers";
lin lax_A = compoundA (mkA "lax");
lin laxative_A = compoundA (mkA "laxative");
lin laxative_N = mkN "laxative" "laxatives";
lin laxity_N = mkN "laxity" "laxities";
lin lay_A = compoundA (mkA "lay");
lin lay_N = mkN "lay" "lays";
lin lay_V = IrregEng.lay_V;
lin lay_V2 = mkV2 (IrregEng.lay_V);
lin lay_VS = mkVS (IrregEng.lay_V);
lin lay_figure_N = mkN "lay figure" "lay figures";
lin lay_off_N = mkN "lay - off" "lay - offs";
lin lay_out_N = mkN "lay - out" "lay - outs";
lin layabout_N = mkN "layabout" "layabouts";
lin layby_N = mkN "layby" "laybys";
lin layer_N = mkN "layer" "layers";
lin layer_V2 = mkV2 (mkV "layer" "layers" "layered" "layered" "layering");
lin layer_cake_N = mkN "layer - cake" "layer - cakes";
lin layette_N = mkN "layette" "layettes";
lin layman_N = mkN "layman" "laymen" {- FIXME: guessed plural form -};
lin layover_N = mkN "layover" "layovers";
lin lazar_N = mkN "lazar" "lazars";
lin lazaret_N = mkN "lazaret" "lazarets";
lin lazarette_N = mkN "lazarette" "lazarettes";
lin lazaretto_N = mkN "lazaretto" "lazarettos";
lin lazarus_N = mkN "lazarus" "lazari" {- FIXME: guessed plural form -};
lin lazarus_PN = mkPN "Lazarus";
lin laze_V = mkV "laze" "lazes" "lazed" "lazed" "lazing";
lin laze_V2 = mkV2 (mkV "laze" "lazes" "lazed" "lazed" "lazing");
lin lazily_Adv = mkAdv "lazily";
lin laziness_N = mkN "laziness" ;
lin lazy_A = mkA "lazy" "lazier";
lin lazybones_N = mkN "lazybones" "IRREG";
lin lb_N = mkN "lb" "lbs" ;
lin lbw_PN = mkPN "Lbw";
lin le_havre_PN = mkPN "Le havre";
lin le_mans_PN = mkPN "Le mans";
lin lea_N = mkN "lea" "leas" ;
lin leach_V2 = mkV2 (mkV "leach" "leaches" "leached" "leached" "leaching");
lin lead_N = mkN "lead" "leads";
lin lead_V = IrregEng.lead_V;
lin lead_V2 = mkV2 (IrregEng.lead_V);
lin lead_V2V = mkV2V (IrregEng.lead_V) noPrep to_Prep ;
lin lead_VS = mkVS (IrregEng.lead_V);
lin lead_in_N = mkN "lead - in" "lead - ins";
lin lead_ore_N = mkN "lead - ore" ;
lin leaded_A = compoundA (mkA "leaded");
lin leaden_A = compoundA (mkA "leaden");
lin leader_N = mkN "leader" "leaders";
lin leaderless_A = compoundA (mkA "leaderless");
lin leadership_N = mkN "leadership" ;
lin leading_A = compoundA (mkA "leading");
lin leading_N = mkN "leading" ;
lin leading_rein_N = mkN "leading - rein" "leading - reins";
lin leaf_N = mkN "leaf" "leaves";
lin leaf_V = mkV "leaf" "leafs" "leafed" "leafed" "leafing";
lin leaf_bud_N = mkN "leaf - bud" "leaf - buds";
lin leaf_mould_N = mkN "leaf - mould" ;
lin leafless_A = compoundA (mkA "leafless");
lin leaflet_N = mkN "leaflet" "leaflets";
lin leafy_A = mkA "leafy" "leafier";
lin league_N = mkN "league" "leagues";
lin league_V = mkV "league" "leagues" "leagued" "leagued" "leaguing";
lin league_V2 = mkV2 (mkV "league" "leagues" "leagued" "leagued" "leaguing");
lin leak_N = mkN "leak" "leaks";
lin leak_V = mkV "leak" "leaks" "leaked" "leaked" "leaking";
lin leak_V2 = mkV2 (mkV "leak" "leaks" "leaked" "leaked" "leaking");
lin leakage_N = mkN "leakage" "leakages";
lin leaky_A = mkA "leaky" "leakier";
lin leal_A = compoundA (mkA "leal");
lin leamington_spa_PN = mkPN "Leamington spa";
lin lean_A = mkA "lean" "leaner";
lin lean_N = mkN "lean" ;
lin lean_V = mkV "lean" "leans" "leaned" "leaned" "leaning";
lin lean_V2 = mkV2 (mkV "lean" "leans" "leaned" "leaned" "leaning");
lin lean_to_N = mkN "lean - to" "lean - tos";
lin leaning_N = mkN "leaning" "leanings";
lin leanness_N = mkN "leanness" ;
lin leap_N = mkN "leap" "leaps";
lin leap_V = mkV "leap" "leaps" "leaped" "leaped" "leaping";
lin leap_V2 = mkV2 (mkV "leap" "leaps" "leaped" "leaped" "leaping");
lin leap_year_N = mkN "leap - year" "leap - years";
lin leapfrog_N = mkN "leapfrog" ;
lin leapfrog_V2 = mkV2 (mkV "leapfrog" "leapfrogs" "leapfrogged" "leapfrogged" "leapfrogging");
lin learn_V = mkV "learn" "learns" "learned" "learned" "learning";
lin learn_V2 = mkV2 (mkV "learn" "learns" "learned" "learned" "learning");
lin learn_VV = mkVV (mkV "learn" "learns" "learned" "learned" "learning");
lin learn_VS = mkVS (mkV "learn" "learns" "learned" "learned" "learning");
lin learned_A = compoundA (mkA "learned");
lin learner_N = mkN "learner" "learners";
lin learning_N = mkN "learning" ;
lin lease_N = mkN "lease" "leases";
lin lease_V2 = mkV2 (mkV "lease" "leases" "leased" "leased" "leasing");
lin lease_lend_N = mkN "lease - lend" ;
lin leasehold_A = compoundA (mkA "leasehold");
lin leasehold_N = mkN "leasehold" "leaseholds";
lin leaseholder_N = mkN "leaseholder" "leaseholders";
lin leash_N = mkN "leash" "leashes";
lin least_A = compoundA (mkA "least");
lin least_Adv = mkAdv "least";
lin least_N = mkN "least" "IRREG";
lin leastways_Adv = mkAdv "leastways";
lin leastwise_Adv = mkAdv "leastwise";
lin leather_N = mkN "leather" "leathers";
lin leather_jacket_N = mkN "leather - jacket" "leather - jackets";
lin leatherette_N = mkN "leatherette" ;
lin leatherhead_PN = mkPN "Leatherhead";
lin leatherneck_N = mkN "leatherneck" "leathernecks";
lin leatherwork_N = mkN "leatherwork" ;
lin leathery_A = compoundA (mkA "leathery");
lin leave_N = mkN "leave" "leaves";
lin leave_V = IrregEng.leave_V;
lin leave_V2 = mkV2 (IrregEng.leave_V);
lin leave_V2V = mkV2V (IrregEng.leave_V) noPrep to_Prep ;
lin leave_VV = mkVV (IrregEng.leave_V);
lin leave_VS = mkVS (IrregEng.leave_V);
lin leave_taking_N = mkN "leave - taking" "leave - takings";
lin leaven_N = mkN "leaven" ;
lin leaven_V2 = mkV2 (mkV "leaven" "leavens" "leavened" "leavened" "leavening");
lin lebanese_A = compoundA (mkA "lebanese");
lin lebanese_N = mkN "lebanese" "lebanese";
lin lebanon_PN = mkPN "Lebanon";
lin lecher_N = mkN "lecher" "lechers";
lin lecherous_A = compoundA (mkA "lecherous");
lin lechery_N = mkN "lechery" "lecheries";
lin lectern_N = mkN "lectern" "lecterns";
lin lecture_N = mkN "lecture" "lectures";
lin lecture_V = mkV "lecture" "lectures" "lectured" "lectured" "lecturing";
lin lecture_V2 = mkV2 (mkV "lecture" "lectures" "lectured" "lectured" "lecturing");
lin lecturer_N = mkN "lecturer" "lecturers";
lin lectureship_N = mkN "lectureship" "lectureships";
lin ledge_N = mkN "ledge" "ledges";
lin ledger_N = mkN "ledger" "ledgers";
lin lee_N = mkN "lee" ;
lin leech_N = mkN "leech" "leeches";
lin leeds_PN = mkPN "Leeds";
lin leek_N = mkN "leek" "leeks";
lin leek_PN = mkPN "Leek";
lin leer_N = mkN "leer" "leers";
lin leer_V = mkV "leer" "leers" "leered" "leered" "leering";
lin leeward_A = compoundA (mkA "leeward");
lin leeward_Adv = mkAdv "leeward";
lin leeway_N = mkN "leeway" ;
lin left_A = compoundA (mkA "left");
lin left_Adv = mkAdv "left";
lin left_N = mkN "left" ;
lin left_VS = mkVS (mkV "left");
lin left_hand_A = compoundA (mkA "left - hand");
lin left_handed_A = compoundA (mkA "left - handed");
lin left_wing_N = mkN "left - wing" "left - wings";
lin left_winger_N = mkN "left - winger" "left - wingers";
lin leftist_N = mkN "leftist" "leftists";
lin leg_N = mkN "leg" "legs";
lin leg_pull_N = mkN "leg - pull" "leg - pulls";
lin leg_pulling_N = mkN "leg - pulling" ;
lin legacy_N = mkN "legacy" "legacies";
lin legal_A = compoundA (mkA "legal");
lin legalism_N = mkN "legalism" ;
lin legalistic_A = compoundA (mkA "legalistic");
lin legality_N = mkN "legality" ;
lin legalization_N = mkN "legalization" ;
lin legalize_V2 = mkV2 (mkV "legalize" "legalizes" "legalized" "legalized" "legalizing");
lin legate_N = mkN "legate" "legates";
lin legatee_N = mkN "legatee" "legatees";
lin legation_N = mkN "legation" "legations";
lin legato_A = compoundA (mkA "legato");
lin legato_Adv = mkAdv "legato";
lin legend_N = mkN "legend" "legends";
lin legendary_A = compoundA (mkA "legendary");
lin leger_line_N = mkN "leger line" "leger lines";
lin legerdemain_N = mkN "legerdemain" ;
lin legged_A = compoundA (mkA "legged");
lin legging_N = mkN "legging" "leggings";
lin leggy_A = compoundA (mkA "leggy");
lin leghorn_N = mkN "leghorn" "leghorns";
lin legibility_N = mkN "legibility" ;
lin legible_A = compoundA (mkA "legible");
lin legion_N = mkN "legion" "legions";
lin legionary_N = mkN "legionary" "legionaries";
lin legislate_V = mkV "legislate" "legislates" "legislated" "legislated" "legislating";
lin legislation_N = mkN "legislation" ;
lin legislative_A = compoundA (mkA "legislative");
lin legislator_N = mkN "legislator" "legislators";
lin legislature_N = mkN "legislature" "legislatures";
lin legitimacy_N = mkN "legitimacy" ;
lin legitimate_A = compoundA (mkA "legitimate");
lin legitimatize_V2 = mkV2 (mkV "legitimatize" "legitimatizes" "legitimatized" "legitimatized" "legitimatizing");
lin legitimize_V2 = mkV2 (mkV "legitimize");
lin legitimize_V2V = mkV2V (mkV "legitimize") noPrep to_Prep ;
lin legless_A = compoundA (mkA "legless");
lin leguminous_A = compoundA (mkA "leguminous");
lin lei_N = mkN "lei" "leis";
lin leicester_PN = mkPN "Leicester";
lin leicestershire_PN = mkPN "Leicestershire";
lin leiden_PN = mkPN "Leiden";
lin leigh_PN = mkPN "Leigh";
lin leighton_linslade_PN = mkPN "Leighton - linslade";
lin leinster_PN = mkPN "Leinster";
lin leipzig_PN = mkPN "Leipzig";
lin leisure_N = mkN "leisure" ;
lin leisured_A = compoundA (mkA "leisured");
lin leisurely_A = compoundA (mkA "leisurely");
lin leisurely_Adv = mkAdv "leisurely";
lin leitrim_PN = mkPN "Leitrim";
lin leix_PN = mkPN "Leix";
lin lemming_N = mkN "lemming" "lemmings";
lin lemon_N = mkN "lemon" "lemons";
lin lemonade_N = mkN "lemonade" ;
lin lemur_N = mkN "lemur" "lemurs";
lin len_PN = mkPN "Len";
lin lend_V = mkV "lend";
lin lend_V2 = mkV2 (IrregEng.lend_V);
lin lender_N = mkN "lender" "lenders";
lin lending_library_N = mkN "lending - library" "lending - libraries";
lin length_N = mkN "length" "lengths";
lin lengthen_V = mkV "lengthen" "lengthens" "lengthened" "lengthened" "lengthening";
lin lengthen_V2 = mkV2 (mkV "lengthen" "lengthens" "lengthened" "lengthened" "lengthening");
lin lengthily_Adv = mkAdv "lengthily";
lin lengthways_A = compoundA (mkA "lengthways");
lin lengthways_Adv = mkAdv "lengthways";
lin lengthwise_Adv = mkAdv "lengthwise";
lin lengthy_A = mkA "lengthy" "lengthier";
lin lenience_N = mkN "lenience" ;
lin leniency_N = mkN "leniency" ;
lin lenient_A = compoundA (mkA "lenient");
lin leningrad_PN = mkPN "Leningrad";
lin lenity_N = mkN "lenity" ;
lin lenny_PN = mkPN "Lenny";
lin lens_N = mkN "lens" "lenses";
lin lens_PN = mkPN "Lens";
lin lent_N = mkN "lent" "lents";
lin lent_PN = mkPN "Lent";
lin lenten_A = compoundA (mkA "lenten");
lin lentil_N = mkN "lentil" "lentils";
lin lento_A = compoundA (mkA "lento");
lin lento_Adv = mkAdv "lento";
lin leo_PN = mkPN "Leo";
lin leominster_PN = mkPN "Leominster";
lin leon_PN = mkPN "Leon";
lin leonard_PN = mkPN "Leonard";
lin leonine_A = compoundA (mkA "leonine");
lin leopard_N = mkN "leopard" "leopards";
lin leopardess_N = mkN "leopardess" "leopardesses";
lin leper_N = mkN "leper" "lepers";
lin leprechaun_N = mkN "leprechaun" "leprechauns";
lin leprosy_N = mkN "leprosy" ;
lin leprous_A = compoundA (mkA "leprous");
lin lerwick_PN = mkPN "Lerwick";
lin les_PN = mkPN "Les";
lin lesbian_N = mkN "lesbian" "lesbians";
lin lesbianism_N = mkN "lesbianism" ;
lin lese_majesty_N = mkN "lese majesty" ;
lin lesion_N = mkN "lesion" "lesions";
lin lesley_PN = mkPN "Lesley";
lin leslie_PN = mkPN "Leslie";
lin lesotho_PN = mkPN "Lesotho";
lin less_A = compoundA (mkA "less");
lin less_Adv = mkAdv "less";
lin less_N = mkN "less" ;
lin lessee_N = mkN "lessee" "lessees";
lin lessen_V = mkV "lessen" "lessens" "lessened" "lessened" "lessening";
lin lessen_V2 = mkV2 (mkV "lessen" "lessens" "lessened" "lessened" "lessening");
lin lesser_A = compoundA (mkA "lesser");
lin lesson_N = mkN "lesson" "lessons";
lin lessor_N = mkN "lessor" "lessors";
lin lest_Prep = mkPrep "lest";
lin let_N = mkN "let" "lets";
lin let_V = IrregEng.let_V;
lin let_V2 = mkV2 (IrregEng.let_V);
lin let_V2V = mkV2V (IrregEng.let_V) noPrep to_Prep ;
lin let_VS = mkVS (IrregEng.let_V);
lin let_down_N = mkN "let - down" "let - downs";
lin let_up_N = mkN "let - up" "let - ups";
lin letchworth_PN = mkPN "Letchworth";
lin lethal_A = compoundA (mkA "lethal");
lin lethargic_A = compoundA (mkA "lethargic");
lin lethargically_Adv = mkAdv "lethargically";
lin lethargy_N = mkN "lethargy" ;
lin lethe_PN = mkPN "Lethe";
lin letter_N = mkN "letter" "letters";
lin letter_box_N = mkN "letter - box" "letter - boxes";
lin letter_card_N = mkN "letter - card" "letter - cards";
lin letter_case_N = mkN "letter - case" "letter - cases";
lin lettered_A = compoundA (mkA "lettered");
lin letterhead_N = mkN "letterhead" "letterheads";
lin lettering_N = mkN "lettering" ;
lin letterpress_N = mkN "letterpress" ;
lin letting_N = mkN "letting" "lettings";
lin lettuce_N = mkN "lettuce" "lettuces";
lin leucocyte_N = mkN "leucocyte" "leucocytes";
lin leukaemia_N = mkN "leukaemia" ;
lin levant_PN = mkPN "Levant";
lin levant_V = mkV "levant" "levants" "levanted" "levanted" "levanting";
lin levantine_A = compoundA (mkA "levantine");
lin levantine_N = mkN "levantine" "levantines";
lin levee_N = mkN "levee" "levees";
lin level_A = compoundA (mkA "level");
lin level_N = mkN "level" "levels";
lin level_V = mkV "level" "levels" "levelled" "levelled" "levelling";
lin level_V2 = mkV2 (mkV "level" "levels" "levelled" "levelled" "levelling");
lin level_headed_A = compoundA (mkA "level - headed");
lin leveller_N = mkN "leveller" "levellers";
lin leven_PN = mkPN "Leven";
lin lever_N = mkN "lever" "levers";
lin lever_V2 = mkV2 (mkV "lever" "levers" "levered" "levered" "levering");
lin leverage_N = mkN "leverage" ;
lin leveret_N = mkN "leveret" "leverets";
lin leverkusen_PN = mkPN "Leverkusen";
lin leviathan_N = mkN "leviathan" "leviathans";
lin levitate_V = mkV "levitate" "levitates" "levitated" "levitated" "levitating";
lin levitate_V2 = mkV2 (mkV "levitate" "levitates" "levitated" "levitated" "levitating");
lin levitation_N = mkN "levitation" "levitations";
lin levity_N = mkN "levity" "levities";
lin levy_N = mkN "levy" "levies";
lin levy_V = mkV "levy" "levies" "levied" "levied" "levying";
lin levy_V2 = mkV2 (mkV "levy" "levies" "levied" "levied" "levying");
lin lewd_A = mkA "lewd" "lewder";
lin lewdness_N = mkN "lewdness" ;
lin lewes_PN = mkPN "Lewes";
lin lewis_PN = mkPN "Lewis";
lin lewisham_PN = mkPN "Lewisham";
lin lexical_A = compoundA (mkA "lexical");
lin lexicographer_N = mkN "lexicographer" "lexicographers";
lin lexicography_N = mkN "lexicography" ;
lin lexicon_N = mkN "lexicon" "lexicons";
lin lexis_N = mkN "lexis" ;
lin ley_N = mkN "ley" "leys";
lin leyland_PN = mkPN "Leyland";
lin liability_N = mkN "liability" "liabilities";
lin liable_A = compoundA (mkA "liable");
lin liaise_V = mkV "liaise" "liaises" "liaised" "liaised" "liaising";
lin liaison_N = mkN "liaison" "liaisons";
lin liana_N = mkN "liana" "lianas";
lin liar_N = mkN "liar" "liars";
lin lib_N = mkN "lib" "IRREG";
lin lib_PN = mkPN "Lib";
lin libation_N = mkN "libation" "libations";
lin libel_N = mkN "libel" "libels";
lin libel_V2 = mkV2 (mkV "libel" "libels" "libelled" "libelled" "libelling");
lin libellous_A = compoundA (mkA "libellous");
lin liberal_A = compoundA (mkA "liberal");
lin liberal_N = mkN "liberal" "liberals";
lin liberalism_N = mkN "liberalism" ;
lin liberality_N = mkN "liberality" "liberalities";
lin liberalization_N = mkN "liberalization" "liberalizations";
lin liberalize_V2 = mkV2 (mkV "liberalize" "liberalizes" "liberalized" "liberalized" "liberalizing");
lin liberate_V2 = mkV2 (mkV "liberate" "liberates" "liberated" "liberated" "liberating");
lin liberation_N = mkN "liberation" "liberations";
lin liberator_N = mkN "liberator" "liberators";
lin liberia_PN = mkPN "Liberia";
lin liberian_A = compoundA (mkA "liberian");
lin liberian_N = mkN "liberian" "liberians";
lin libertine_N = mkN "libertine" "libertines";
lin liberty_N = mkN "liberty" "liberties";
lin libidinous_A = compoundA (mkA "libidinous");
lin libido_N = mkN "libido" "libidos";
lin libra_PN = mkPN "Libra";
lin librarian_N = mkN "librarian" "librarians";
lin librarianship_N = mkN "librarianship" ;
lin library_N = mkN "library" "libraries";
lin librettist_N = mkN "librettist" "librettists";
lin libretto_N = mkN "libretto" "librettos";
lin libya_PN = mkPN "Libya";
lin libyan_A = compoundA (mkA "libyan");
lin libyan_N = mkN "libyan" "libyans";
lin licence_N = mkN "licence" "licences";
lin licence_V2 = mkV2 (mkV "licence" "licences" "licenced" "licenced" "licencing");
lin license_V2 = mkV2 (mkV "license" "licenses" "licensed" "licensed" "licensing");
lin licensee_N = mkN "licensee" "licensees";
lin licentiate_N = mkN "licentiate" "licentiates";
lin licentious_A = compoundA (mkA "licentious");
lin licentiousness_N = mkN "licentiousness" ;
lin lichee_N = mkN "lichee" "lichees";
lin lichen_N = mkN "lichen" ;
lin lichfield_PN = mkPN "Lichfield";
lin lichgate_N = mkN "lichgate" "lichgates";
lin lichi_N = mkN "lichi" "lichis";
lin licit_A = compoundA (mkA "licit");
lin lick_N = mkN "lick" "licks";
lin lick_V = mkV "lick" "licks" "licked" "licked" "licking";
lin lick_V2 = mkV2 (mkV "lick" "licks" "licked" "licked" "licking");
lin licking_N = mkN "licking" "IRREG";
lin lid_N = mkN "lid" "lids";
lin lidless_A = compoundA (mkA "lidless");
lin lido_N = mkN "lido" "lidos";
lin lie_N = mkN "lie" "lies";
lin lie_V = IrregEng.lie_V;
lin lie_VS = mkVS (IrregEng.lie_V);
lin lie_abed_N = mkN "lie - abed" "lie - abeds";
lin lie_detector_N = mkN "lie - detector" "lie - detectors";
lin lie_in_N = mkN "lie - in" "lie - ins";
lin liechtenstein_PN = mkPN "Liechtenstein";
lin liechtensteiner_A = compoundA (mkA "liechtensteiner");
lin liechtensteiner_N = mkN "liechtensteiner" "liechtensteiners";
lin lied_N = mkN "lied" "IRREG";
lin lieder_singer_N = mkN "lieder - singer" "lieder - singers";
lin lief_Adv = mkAdv "lief";
lin liege_A = compoundA (mkA "liege");
lin liege_N = mkN "liege" "lieges";
lin liege_PN = mkPN "Liege";
lin liegeman_N = mkN "liegeman" "liegemen" {- FIXME: guessed plural form -};
lin lien_N = mkN "lien" "liens";
lin lieu_N = mkN "lieu" ;
lin lieutenancy_N = mkN "lieutenancy" "lieutenancies";
lin lieutenant_N = mkN "lieutenant" "lieutenants";
lin life_N = mkN "life" "lives" {- FIXME: guessed plural form -};
lin life_buoy_N = mkN "life - buoy" "life - buoys";
lin life_giving_A = compoundA (mkA "life - giving");
lin life_jacket_N = mkN "life - jacket" "life - jackets";
lin life_office_N = mkN "life - office" "life - offices";
lin life_preserver_N = mkN "life - preserver" "life - preservers";
lin life_raft_N = mkN "life - raft" "life - rafts";
lin life_saver_N = mkN "life - saver" "life - savers";
lin life_size_A = compoundA (mkA "life - size");
lin life_sized_A = compoundA (mkA "life - sized");
lin life_span_N = mkN "life - span" "life - spans";
lin life_work_N = mkN "life - work" "life - works";
lin lifebelt_N = mkN "lifebelt" "lifebelts";
lin lifeblood_N = mkN "lifeblood" ;
lin lifeboat_N = mkN "lifeboat" "lifeboats";
lin lifebuoy_N = mkN "lifebuoy" "lifebuoys";
lin lifeguard_N = mkN "lifeguard" "lifeguards";
lin lifeless_A = compoundA (mkA "lifeless");
lin lifelike_A = compoundA (mkA "lifelike");
lin lifeline_N = mkN "lifeline" "lifelines";
lin lifelong_A = compoundA (mkA "lifelong");
lin lifer_N = mkN "lifer" "lifers";
lin lifetime_N = mkN "lifetime" "lifetimes";
lin lift_N = mkN "lift" "lifts";
lin lift_V = mkV "lift" "lifts" "lifted" "lifted" "lifting";
lin lift_V2 = mkV2 (mkV "lift" "lifts" "lifted" "lifted" "lifting");
lin lift_off_N = mkN "lift - off" "lift - offs";
lin liftman_N = mkN "liftman" "liftmen" {- FIXME: guessed plural form -};
lin ligament_N = mkN "ligament" "ligaments";
lin ligature_N = mkN "ligature" "ligatures";
lin light_A = mkA "light" "lighter";
lin light_Adv = mkAdv "light";
lin light_N = mkN "light" "lights";
lin light_V = mkV "light" "lights" "lighted" "lighted" "lighting";
lin light_V2 = mkV2 (mkV "light" "lights" "lighted" "lighted" "lighting");
lin light_armed_A = compoundA (mkA "light - armed");
lin light_coloured_A = compoundA (mkA "light - coloured");
lin light_fingered_A = compoundA (mkA "light - fingered");
lin light_handed_A = compoundA (mkA "light - handed");
lin light_headed_A = compoundA (mkA "light - headed");
lin light_headedness_N = mkN "light - headedness" ;
lin light_hearted_A = compoundA (mkA "light - hearted");
lin light_heartedness_N = mkN "light - heartedness" ;
lin light_heavyweight_N = mkN "light - heavyweight" "light - heavyweights";
lin light_minded_A = compoundA (mkA "light - minded");
lin light_mindedness_N = mkN "light - mindedness" ;
lin light_o'_love_N = mkN "light - o'-love" "light - o'-loves";
lin lighten_V = mkV "lighten" "lightens" "lightened" "lightened" "lightening";
lin lighten_V2 = mkV2 (mkV "lighten" "lightens" "lightened" "lightened" "lightening");
lin lighter_N = mkN "lighter" "lighters";
lin lighter_V2 = mkV2 (mkV "lighter" "lighters" "lightered" "lightered" "lightering");
lin lighterage_N = mkN "lighterage" ;
lin lighthouse_N = mkN "lighthouse" "lighthouses";
lin lighting_up_A = compoundA (mkA "lighting - up");
lin lightness_N = mkN "lightness" ;
lin lightning_N = mkN "lightning" ;
lin lightning_conductor_N = mkN "lightning - conductor" "lightning - conductors";
lin lightning_rod_N = mkN "lightning - rod" "lightning - rods";
lin lightship_N = mkN "lightship" "lightships";
lin lightsome_A = compoundA (mkA "lightsome");
lin lightsomeness_N = mkN "lightsomeness" ;
lin lightweight_A = compoundA (mkA "lightweight");
lin lightweight_N = mkN "lightweight" "lightweights";
lin ligneous_A = compoundA (mkA "ligneous");
lin lignite_N = mkN "lignite" ;
lin likable_A = compoundA (mkA "likable");
lin like_A = compoundA (mkA "like");
lin like_Adv = mkAdv "like";
lin like_N = mkN "like" "likes";
lin like_Prep = mkPrep "like";
lin like_V2 = mkV2 (mkV "like" "likes" "liked" "liked" "liking");
lin like_V2V = mkV2V (mkV "like") noPrep to_Prep ;
lin like_VV = mkVV (mkV "like");
lin like_VS = mkVS (mkV "like");
lin like_minded_A = compoundA (mkA "like - minded");
lin likeable_A = compoundA (mkA "likeable");
lin likelihood_N = mkN "likelihood" ;
lin likely_A = mkA "likely" "likelier";
lin liken_V2 = mkV2 (mkV "liken" "likens" "likened" "likened" "likening");
lin likeness_N = mkN "likeness" "likenesses";
lin likewise_Adv = mkAdv "likewise";
lin liking_N = mkN "liking" "likings";
lin lilac_N = mkN "lilac" "lilacs";
lin lilian_PN = mkPN "Lilian";
lin lille_PN = mkPN "Lille";
lin lilliputian_A = compoundA (mkA "lilliputian");
lin lilliputian_N = mkN "lilliputian" "lilliputians";
lin lilt_N = mkN "lilt" "lilts";
lin lilt_V = mkV "lilt" "lilts" "lilted" "lilted" "lilting";
lin lilt_V2 = mkV2 (mkV "lilt" "lilts" "lilted" "lilted" "lilting");
lin lily_N = mkN "lily" "lilies";
lin lily_PN = mkPN "Lily";
lin lily_livered_A = compoundA (mkA "lily - livered");
lin lily_white_A = compoundA (mkA "lily - white");
lin lima_PN = mkPN "Lima";
lin limb_N = mkN "limb" "limbs";
lin limbed_A = compoundA (mkA "limbed");
lin limber_A = compoundA (mkA "limber");
lin limber_V = mkV "limber" "limbers" "limbered" "limbered" "limbering";
lin limber_V2 = mkV2 (mkV "limber" "limbers" "limbered" "limbered" "limbering");
lin limbless_A = compoundA (mkA "limbless");
lin limbo_N = mkN "limbo" "limbos";
lin lime_N = mkN "lime" "limes";
lin lime_V2 = mkV2 (mkV "lime" "limes" "limed" "limed" "liming");
lin lime_tree_N = mkN "lime - tree" "lime - trees";
lin limejuice_N = mkN "limejuice" ;
lin limekiln_N = mkN "limekiln" "limekilns";
lin limelight_N = mkN "limelight" ;
lin limerick_N = mkN "limerick" "limericks";
lin limerick_PN = mkPN "Limerick";
lin limestone_N = mkN "limestone" ;
lin limey_N = mkN "limey" "limeys";
lin limit_N = mkN "limit" "limits";
lin limit_V2 = mkV2 (mkV "limit" "limits" "limited" "limited" "limiting");
lin limitation_N = mkN "limitation" "limitations";
lin limitless_A = compoundA (mkA "limitless");
lin limn_V2 = mkV2 (mkV "limn" "limns" "limned" "limned" "limning");
lin limoges_PN = mkPN "Limoges";
lin limousine_N = mkN "limousine" "limousines";
lin limp_A = compoundA (mkA "limp");
lin limp_N = mkN "limp" "limps";
lin limp_V = mkV "limp" "limps" "limped" "limped" "limping";
lin limpet_N = mkN "limpet" "limpets";
lin limpid_A = compoundA (mkA "limpid");
lin limpidity_N = mkN "limpidity" ;
lin limpness_N = mkN "limpness" ;
lin linchpin_N = mkN "linchpin" "linchpins";
lin lincoln_PN = mkPN "Lincoln";
lin lincolnshire_PN = mkPN "Lincolnshire";
lin linda_PN = mkPN "Linda";
lin linden_N = mkN "linden" "lindens";
lin linden_tree_N = mkN "linden - tree" "linden - trees";
lin line_N = mkN "line" "lines";
lin line_V = mkV "line" "lines" "lined" "lined" "lining";
lin line_V2 = mkV2 (mkV "line" "lines" "lined" "lined" "lining");
lin line_shooter_N = mkN "line - shooter" "line - shooters";
lin line_shooting_N = mkN "line - shooting" ;
lin line_up_N = mkN "line - up" "line - ups";
lin lineage_N = mkN "lineage" ;
lin lineal_A = compoundA (mkA "lineal");
lin lineament_N = mkN "lineament" "lineaments";
lin linear_A = compoundA (mkA "linear");
lin lineman_N = mkN "lineman" "linemen" {- FIXME: guessed plural form -};
lin linen_N = mkN "linen" ;
lin linen_draper_N = mkN "linen - draper" "linen - drapers";
lin liner_N = mkN "liner" "liners";
lin liner_train_N = mkN "liner - train" "liner - trains";
lin linesman_N = mkN "linesman" "linesmen" {- FIXME: guessed plural form -};
lin ling_N = mkN "ling" "lings";
lin lingam_N = mkN "lingam" "lingams";
lin linger_V = mkV "linger" "lingers" "lingered" "lingered" "lingering";
lin lingerer_N = mkN "lingerer" "lingerers";
lin lingerie_N = mkN "lingerie" ;
lin lingering_A = compoundA (mkA "lingering");
lin lingo_N = mkN "lingo" "lingoes";
lin lingua_franca_N = mkN "lingua franca" "lingua francae" {- FIXME: guessed plural form -};
lin lingual_A = compoundA (mkA "lingual");
lin linguist_N = mkN "linguist" "linguists";
lin linguistic_A = compoundA (mkA "linguistic");
lin linguistically_Adv = mkAdv "linguistically";
lin linguistics_N = mkN "linguistics" "linguistics";
lin liniment_N = mkN "liniment" "liniments";
lin lining_N = mkN "lining" "linings";
lin link_N = mkN "link" "links";
lin link_V = mkV "link" "links" "linked" "linked" "linking";
lin link_V2 = mkV2 (mkV "link" "links" "linked" "linked" "linking");
lin link_up_N = mkN "link - up" "link - ups";
lin linkage_N = mkN "linkage" "linkages";
lin linkboy_N = mkN "linkboy" "linkboys";
lin linkman_N = mkN "linkman" "linkmen" {- FIXME: guessed plural form -};
lin links_N = mkN "links" "links";
lin linlithgow_PN = mkPN "Linlithgow";
lin linnet_N = mkN "linnet" "linnets";
lin lino_N = mkN "lino" ;
lin linocut_N = mkN "linocut" "linocuts";
lin linoleum_N = mkN "linoleum" ;
lin linotype_N = mkN "linotype" "linotypes";
lin linseed_N = mkN "linseed" ;
lin linsey_woolsey_N = mkN "linsey - woolsey" ;
lin lint_N = mkN "lint" ;
lin lintel_N = mkN "lintel" "lintels";
lin linwood_PN = mkPN "Linwood";
lin linz_PN = mkPN "Linz";
lin lion_N = mkN "lion" "lions";
lin lion_hearted_A = compoundA (mkA "lion - hearted");
lin lion_hunter_N = mkN "lion - hunter" "lion - hunters";
lin lionel_PN = mkPN "Lionel";
lin lioness_N = mkN "lioness" "lionesses";
lin lionize_V2 = mkV2 (mkV "lionize" "lionizes" "lionized" "lionized" "lionizing");
lin lip_N = mkN "lip" "lips";
lin lip_read_V2 = mkV2 (mkV "lip-" IrregEng.read_V);
lin lip_reading_N = mkN "lip - reading" ;
lin lipped_A = compoundA (mkA "lipped");
lin lipstick_N = mkN "lipstick" "lipsticks";
lin liquefaction_N = mkN "liquefaction" ;
lin liquefy_V = mkV "liquefy" "liquefies" "liquefied" "liquefied" "liquefying";
lin liquefy_V2 = mkV2 (mkV "liquefy" "liquefies" "liquefied" "liquefied" "liquefying");
lin liquescent_A = compoundA (mkA "liquescent");
lin liqueur_N = mkN "liqueur" "liqueurs";
lin liquid_A = compoundA (mkA "liquid");
lin liquid_N = mkN "liquid" "liquids";
lin liquidate_V = mkV "liquidate" "liquidates" "liquidated" "liquidated" "liquidating";
lin liquidate_V2 = mkV2 (mkV "liquidate" "liquidates" "liquidated" "liquidated" "liquidating");
lin liquidation_N = mkN "liquidation" ;
lin liquidator_N = mkN "liquidator" "liquidators";
lin liquidity_N = mkN "liquidity" ;
lin liquidize_V2 = mkV2 (mkV "liquidize" "liquidizes" "liquidized" "liquidized" "liquidizing");
lin liquidizer_N = mkN "liquidizer" "liquidizers";
lin liquor_N = mkN "liquor" "liquors";
lin liquorice_N = mkN "liquorice" ;
lin lira_N = mkN "lira" "liras";
lin lisa_PN = mkPN "Lisa";
lin lisbon_PN = mkPN "Lisbon";
lin liskeard_PN = mkPN "Liskeard";
lin lisle_N = mkN "lisle" ;
lin lisp_N = mkN "lisp" "lisps";
lin lisp_V = mkV "lisp" "lisps" "lisped" "lisped" "lisping";
lin lisp_V2 = mkV2 (mkV "lisp" "lisps" "lisped" "lisped" "lisping");
lin lispingly_Adv = mkAdv "lispingly";
lin lissom_A = compoundA (mkA "lissom");
lin lissome_A = compoundA (mkA "lissome");
lin lissomness_N = mkN "lissomness" ;
lin list_N = mkN "list" "lists";
lin list_V = mkV "list" "lists" "listed" "listed" "listing";
lin list_V2 = mkV2 (mkV "list" "lists" "listed" "listed" "listing");
lin list_V2V = mkV2V (mkV "list" "lists" "listed" "listed" "listing") noPrep to_Prep ;
lin list_price_N = mkN "list - price" "list - prices";
lin listen_V = mkV "listen" "listens" "listened" "listened" "listening";
lin listener_N = mkN "listener" "listeners";
lin listing_N = mkN "listing" "listings";
lin listless_A = compoundA (mkA "listless");
lin listlessness_N = mkN "listlessness" ;
lin lit_V2 = mkV2 (irregDuplV "lit" "lit" "lit");
lin litany_N = mkN "litany" "litanies";
lin litchee_N = mkN "litchee" "litchees";
lin litchi_N = mkN "litchi" "litchis";
lin literacy_N = mkN "literacy" ;
lin literal_A = compoundA (mkA "literal");
lin literal_N = mkN "literal" "literals";
lin literary_A = compoundA (mkA "literary");
lin literate_A = compoundA (mkA "literate");
lin literate_N = mkN "literate" "literates";
lin literature_N = mkN "literature" ;
lin lithe_A = compoundA (mkA "lithe");
lin lithograph_N = mkN "lithograph" "lithographs";
lin lithograph_V = mkV "lithograph" "lithographs" "lithographed" "lithographed" "lithographing";
lin lithograph_V2 = mkV2 (mkV "lithograph" "lithographs" "lithographed" "lithographed" "lithographing");
lin lithographic_A = compoundA (mkA "lithographic");
lin lithography_N = mkN "lithography" ;
lin litigant_N = mkN "litigant" "litigants";
lin litigate_V = mkV "litigate" "litigates" "litigated" "litigated" "litigating";
lin litigate_V2 = mkV2 (mkV "litigate" "litigates" "litigated" "litigated" "litigating");
lin litigation_N = mkN "litigation" ;
lin litigious_A = compoundA (mkA "litigious");
lin litmus_N = mkN "litmus" ;
lin litmus_paper_N = mkN "litmus - paper" "litmus - papers";
lin litotes_N = mkN "litotes" "litotes";
lin litre_N = mkN "litre" "litres";
lin litter_N = mkN "litter" "litters";
lin litter_V = mkV "litter" "litters" "littered" "littered" "littering";
lin litter_V2 = mkV2 (mkV "litter" "litters" "littered" "littered" "littering");
lin litter_basket_N = mkN "litter - basket" "litter - baskets";
lin litter_lout_N = mkN "litter - lout" "litter - louts";
lin litterbin_N = mkN "litterbin" "litterbins";
lin little_A = mkA "little" "littler";
lin little_Adv = mkAdv "little";
lin little_N = mkN "little" ;
lin littlehampton_PN = mkPN "Littlehampton";
lin littleness_N = mkN "littleness" ;
lin littoral_A = compoundA (mkA "littoral");
lin littoral_N = mkN "littoral" "littorals";
lin liturgical_A = compoundA (mkA "liturgical");
lin liturgy_N = mkN "liturgy" "liturgies";
lin livable_A = compoundA (mkA "livable");
lin live_A = compoundA (mkA "live");
lin live_Adv = mkAdv "live";
lin live_V = mkV "live" "lives" "lived" "lived" "living";
lin live_V2 = mkV2 (mkV "live" "lives" "lived" "lived" "living");
lin live_VV = mkVV (mkV "live" "lives" "lived" "lived" "living");
lin live_birth_N = mkN "live - birth" "live - births";
lin liveable_A = compoundA (mkA "liveable");
lin livelihood_N = mkN "livelihood" "livelihoods";
lin liveliness_N = mkN "liveliness" ;
lin livelong_A = compoundA (mkA "livelong");
lin lively_A = mkA "lively" "livelier";
lin liven_V = mkV "liven" "livens" "livened" "livened" "livening";
lin liven_V2 = mkV2 (mkV "liven" "livens" "livened" "livened" "livening");
lin liver_N = mkN "liver" "livers";
lin liveried_A = compoundA (mkA "liveried");
lin liverish_A = compoundA (mkA "liverish");
lin liverpool_PN = mkPN "Liverpool";
lin liverpudlian_A = compoundA (mkA "liverpudlian");
lin liverpudlian_N = mkN "liverpudlian" "liverpudlians";
lin liverwurst_N = mkN "liverwurst" ;
lin livery_A = compoundA (mkA "livery");
lin livery_N = mkN "livery" "liveries";
lin liveryman_N = mkN "liveryman" "liverymen" {- FIXME: guessed plural form -};
lin livestock_N = mkN "livestock" ;
lin livid_A = compoundA (mkA "livid");
lin living_A = compoundA (mkA "living");
lin living_N = mkN "living" "livings";
lin living_room_N = mkN "living - room" "living - rooms";
lin living_space_N = mkN "living - space" "living - spaces";
lin livingston_PN = mkPN "Livingston";
lin livorno_PN = mkPN "Livorno";
lin liz_PN = mkPN "Liz";
lin liza_PN = mkPN "Liza";
lin lizard_N = mkN "lizard" "lizards";
lin lizzy_PN = mkPN "Lizzy";
lin ljubljana_PN = mkPN "Ljubljana";
lin llama_N = mkN "llama" "llamas";
lin llandudno_PN = mkPN "Llandudno";
lin llanelli_PN = mkPN "Llanelli";
lin llangollen_PN = mkPN "Llangollen";
lin llantrisant_PN = mkPN "Llantrisant";
lin llantwit_major_PN = mkPN "Llantwit major";
lin llb_N = mkN "llb" ;
lin lloyd's_PN = mkPN "Lloyd's";
lin load_N = mkN "load" "loads";
lin load_V = mkV "load" "loads" "loaded" "loaded" "loading";
lin load_V2 = mkV2 (mkV "load" "loads" "loaded" "loaded" "loading");
lin load_line_N = mkN "load - line" "load - lines";
lin load_shedding_N = mkN "load - shedding" ;
lin loaded_A = compoundA (mkA "loaded");
lin loader_N = mkN "loader" "loaders";
lin loading_N = mkN "loading" "loadings";
lin loadstar_N = mkN "loadstar" "loadstars";
lin loadstone_N = mkN "loadstone" ;
lin loaf_N = mkN "loaf" "loaves" {- FIXME: guessed plural form -};
lin loaf_V = mkV "loaf" "loafs" "loafed" "loafed" "loafing";
lin loaf_V2 = mkV2 (mkV "loaf" "loafs" "loafed" "loafed" "loafing");
lin loaf_sugar_N = mkN "loaf - sugar" ;
lin loafer_N = mkN "loafer" "loafers";
lin loam_N = mkN "loam" ;
lin loamy_A = mkA "loamy" "loamier";
lin loan_N = mkN "loan" "loans";
lin loan_V2 = mkV2 (mkV "loan" "loans" "loaned" "loaned" "loaning");
lin loan_collection_N = mkN "loan - collection" "loan - collections";
lin loan_office_N = mkN "loan - office" "loan - offices";
lin loanhead_PN = mkPN "Loanhead";
lin loanword_N = mkN "loanword" "loanwords";
lin loath_A = compoundA (mkA "loath");
lin loathe_V2 = mkV2 (mkV "loathe" "loathes" "loathed" "loathed" "loathing");
lin loathing_N = mkN "loathing" ;
lin loathly_A = mkA "loathly" "loathlier";
lin loathsome_A = compoundA (mkA "loathsome");
lin lob_N = mkN "lob" "lobs";
lin lob_V = mkV "lob" "lobs" "lobbed" "lobbed" "lobbing";
lin lob_V2 = mkV2 (mkV "lob" "lobs" "lobbed" "lobbed" "lobbing");
lin lobby_N = mkN "lobby" "lobbies";
lin lobby_V = mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying";
lin lobby_V2 = mkV2 (mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying");
lin lobby_V2V = mkV2V (mkV "lobby" "lobbies" "lobbied" "lobbied" "lobbying") noPrep to_Prep ;
lin lobbyist_N = mkN "lobbyist" "lobbyists";
lin lobe_N = mkN "lobe" "lobes";
lin lobed_A = compoundA (mkA "lobed");
lin lobster_N = mkN "lobster" "lobsters";
lin lobster_pot_N = mkN "lobster - pot" "lobster - pots";
lin loc_cit_PN = mkPN "Loc cit";
lin local_A = compoundA (mkA "local");
lin local_N = mkN "local" "locals";
lin locale_N = mkN "locale" "locales";
lin localism_N = mkN "localism" "localisms";
lin locality_N = mkN "locality" "localities";
lin localization_N = mkN "localization" "localizations";
lin localize_V2 = mkV2 (mkV "localize" "localizes" "localized" "localized" "localizing");
lin locate_V = mkV "locate";
lin locate_V2 = mkV2 (mkV "locate" "locates" "located" "located" "locating");
lin location_N = mkN "location" "locations";
lin loch_N = mkN "loch" "lochs";
lin lochgelly_PN = mkPN "Lochgelly";
lin lock_N = mkN "lock" "locks";
lin lock_V = mkV "lock" "locks" "locked" "locked" "locking";
lin lock_V2 = mkV2 (mkV "lock" "locks" "locked" "locked" "locking");
lin lock_gate_N = mkN "lock - gate" "lock - gates";
lin lock_keeper_N = mkN "lock - keeper" "lock - keepers";
lin locker_N = mkN "locker" "lockers";
lin locket_N = mkN "locket" "lockets";
lin lockjaw_N = mkN "lockjaw" ;
lin locknut_N = mkN "locknut" "locknuts";
lin lockout_N = mkN "lockout" "lockouts";
lin locksmith_N = mkN "locksmith" "locksmiths";
lin lockstitch_N = mkN "lockstitch" "lockstitches";
lin lockup_A = compoundA (mkA "lockup");
lin lockup_N = mkN "lockup" "lockups";
lin loco_A = compoundA (mkA "loco");
lin locomotion_N = mkN "locomotion" ;
lin locomotive_A = compoundA (mkA "locomotive");
lin locomotive_N = mkN "locomotive" "locomotives";
lin locum_N = mkN "locum" "locums";
lin locum_tenens_N = mkN "locum tenens" "IRREG";
lin locus_N = mkN "locus" "loci" {- FIXME: guessed plural form -};
lin locus_classicus_N = mkN "locus classicus" "locus classici" {- FIXME: guessed plural form -};
lin locust_N = mkN "locust" "locusts";
lin locust_tree_N = mkN "locust - tree" "locust - trees";
lin locution_N = mkN "locution" "locutions";
lin lode_N = mkN "lode" "lodes";
lin lodestar_N = mkN "lodestar" "lodestars";
lin lodestone_N = mkN "lodestone" ;
lin lodge_N = mkN "lodge" "lodges";
lin lodge_V = mkV "lodge" "lodges" "lodged" "lodged" "lodging";
lin lodge_V2 = mkV2 (mkV "lodge" "lodges" "lodged" "lodged" "lodging");
lin lodgement_N = mkN "lodgement" "lodgements";
lin lodger_N = mkN "lodger" "lodgers";
lin lodging_N = mkN "lodging" "lodgings";
lin lodging_house_N = mkN "lodging - house" "lodging - houses";
lin lodgment_N = mkN "lodgment" "lodgments";
lin lodz_PN = mkPN "Lodz";
lin loess_N = mkN "loess" ;
lin loft_N = mkN "loft" "lofts";
lin loft_V2 = mkV2 (mkV "loft" "lofts" "lofted" "lofted" "lofting");
lin loftily_Adv = mkAdv "loftily";
lin loftiness_N = mkN "loftiness" ;
lin loftus_PN = mkPN "Loftus";
lin lofty_A = mkA "lofty" "loftier";
lin log_N = mkN "log" "logs";
lin log_V2 = mkV2 (mkV "log" "logs" "logged" "logged" "logging");
lin log_cabin_N = mkN "log - cabin" "log - cabins";
lin log_jam_N = mkN "log - jam" "log - jams";
lin log_rolling_N = mkN "log - rolling" ;
lin loganberry_N = mkN "loganberry" "loganberries";
lin logarithm_N = mkN "logarithm" "logarithms";
lin logarithmic_A = compoundA (mkA "logarithmic");
lin logarithmically_Adv = mkAdv "logarithmically";
lin logbook_N = mkN "logbook" "logbooks";
lin loggerheads_N = mkN "loggerheads" ;
lin loggia_N = mkN "loggia" "loggias";
lin logging_N = mkN "logging" ;
lin logic_N = mkN "logic" "logics";
lin logical_A = compoundA (mkA "logical");
lin logicality_N = mkN "logicality" ;
lin logician_N = mkN "logician" "logicians";
lin logistics_N = mkN "logistics" "logistics";
lin loin_N = mkN "loin" "loins";
lin loincloth_N = mkN "loincloth" "loincloths";
lin lois_PN = mkPN "Lois";
lin loiter_V = mkV "loiter" "loiters" "loitered" "loitered" "loitering";
lin loiter_V2 = mkV2 (mkV "loiter" "loiters" "loitered" "loitered" "loitering");
lin loiterer_N = mkN "loiterer" "loiterers";
lin loll_V = mkV "loll" "lolls" "lolled" "lolled" "lolling";
lin loll_V2 = mkV2 (mkV "loll" "lolls" "lolled" "lolled" "lolling");
lin lollipop_N = mkN "lollipop" "lollipops";
lin lolly_N = mkN "lolly" "lollies";
lin london_PN = mkPN "London";
lin londonderry_PN = mkPN "Londonderry";
lin londoner_N = mkN "londoner" "londoners";
lin lone_A = compoundA (mkA "lone");
lin loneliness_N = mkN "loneliness" ;
lin lonely_A = mkA "lonely" "lonelier";
lin lonesome_A = compoundA (mkA "lonesome");
lin long_A = mkA "long" "longer";
lin long_Adv = mkAdv "long";
lin long_N = mkN "long" "longs";
lin long_V = mkV "long" "longs" "longed" "longed" "longing";
lin long_distance_A = compoundA (mkA "long - distance");
lin long_drawn_out_A = compoundA (mkA "long - drawn - out");
lin long_eaton_PN = mkPN "Long eaton";
lin long_haired_A = compoundA (mkA "long - haired");
lin long_headed_A = compoundA (mkA "long - headed");
lin long_lived_A = compoundA (mkA "long - lived");
lin long_play_A = compoundA (mkA "long - play");
lin long_playing_A = compoundA (mkA "long - playing");
lin long_range_A = compoundA (mkA "long - range");
lin long_sighted_A = compoundA (mkA "long - sighted");
lin long_standing_A = compoundA (mkA "long - standing");
lin long_suffering_A = compoundA (mkA "long - suffering");
lin long_term_A = compoundA (mkA "long - term");
lin long_time_A = compoundA (mkA "long - time");
lin long_winded_A = compoundA (mkA "long - winded");
lin long_windedness_N = mkN "long - windedness" ;
lin longboat_N = mkN "longboat" "longboats";
lin longbow_N = mkN "longbow" "longbows";
lin longer_Adv = mkAdv "longer";
lin longest_Adv = mkAdv "longest";
lin longevity_N = mkN "longevity" ;
lin longhand_N = mkN "longhand" ;
lin longing_A = compoundA (mkA "longing");
lin longing_N = mkN "longing" "longings";
lin longish_A = compoundA (mkA "longish");
lin longitude_N = mkN "longitude" "longitudes";
lin longitudinal_A = compoundA (mkA "longitudinal");
lin longridge_PN = mkPN "Longridge";
lin longshoreman_N = mkN "longshoreman" "longshoremen" {- FIXME: guessed plural form -};
lin longton_PN = mkPN "Longton";
lin longways_Adv = mkAdv "longways";
lin longwise_Adv = mkAdv "longwise";
lin loo_N = mkN "loo" "loos";
lin loofa_N = mkN "loofa" "loofas";
lin loofah_N = mkN "loofah" "loofahs";
lin look_N = mkN "look" "looks";
lin look_V = mkV "look" "looks" "looked" "looked" "looking";
lin look_V2 = mkV2 (mkV "look" "looks" "looked" "looked" "looking");
lin look_V2V = mkV2V (mkV "look" "looks" "looked" "looked" "looking") noPrep to_Prep ;
lin look_VA = mkVA (mkV "look" "looks" "looked" "looked" "looking");
lin look_over_N = mkN "look - over" "IRREG";
lin looker_N = mkN "looker" "lookers";
lin looker_on_N = mkN "looker - on" "looker - a" {- FIXME: guessed plural form -};
lin looking_glass_N = mkN "looking - glass" "looking - glasses";
lin lookout_N = mkN "lookout" "lookouts";
lin loom_N = mkN "loom" "looms";
lin loom_V = mkV "loom" "looms" "loomed" "loomed" "looming";
lin loon_N = mkN "loon" "loons";
lin loony_A = mkA "loony" "loonier";
lin loony_N = mkN "loony" "loonies";
lin loonybin_N = mkN "loonybin" "loonybins";
lin loop_N = mkN "loop" "loops";
lin loop_V = mkV "loop" "loops" "looped" "looped" "looping";
lin loop_V2 = mkV2 (mkV "loop" "loops" "looped" "looped" "looping");
lin loop_line_N = mkN "loop - line" "loop - lines";
lin loophole_N = mkN "loophole" "loopholes";
lin loopy_A = compoundA (mkA "loopy");
lin loose_A = mkA "loose" "looser";
lin loose_V2 = mkV2 (mkV "loose" "looses" "loosed" "loosed" "loosing");
lin loose_leaf_A = compoundA (mkA "loose - leaf");
lin loosen_V = mkV "loosen" "loosens" "loosened" "loosened" "loosening";
lin loosen_V2 = mkV2 (mkV "loosen" "loosens" "loosened" "loosened" "loosening");
lin loot_N = mkN "loot" ;
lin loot_V = mkV "loot" "loots" "looted" "looted" "looting";
lin loot_V2 = mkV2 (mkV "loot" "loots" "looted" "looted" "looting");
lin looter_N = mkN "looter" "looters";
lin lop_V = mkV "lop" "lops" "lopped" "lopped" "lopping";
lin lop_V2 = mkV2 (mkV "lop" "lops" "lopped" "lopped" "lopping");
lin lop_eared_A = compoundA (mkA "lop - eared");
lin lope_N = mkN "lope" "IRREG";
lin lope_V = mkV "lope" "lopes" "loped" "loped" "loping";
lin lopsided_A = compoundA (mkA "lopsided");
lin loquacious_A = compoundA (mkA "loquacious");
lin loquaciousness_N = mkN "loquaciousness" ;
lin loquacity_N = mkN "loquacity" ;
lin loquat_N = mkN "loquat" "loquats";
lin lord_N = mkN "lord" "lords";
lin lord_V2 = mkV2 (mkV "lord" "lords" "lorded" "lorded" "lording");
lin lordless_A = compoundA (mkA "lordless");
lin lordliness_N = mkN "lordliness" ;
lin lordly_A = mkA "lordly" "lordlier";
lin lordship_N = mkN "lordship" "lordships";
lin lore_N = mkN "lore" ;
lin lorgnette_N = mkN "lorgnette" "lorgnettes";
lin lorn_A = compoundA (mkA "lorn");
lin lorna_PN = mkPN "Lorna";
lin lorry_N = mkN "lorry" "lorries";
lin los_angeles_PN = mkPN "Los angeles";
lin lose_V = IrregEng.lose_V;
lin lose_V2 = mkV2 (IrregEng.lose_V);
lin loser_N = mkN "loser" "losers";
lin loss_N = mkN "loss" "losses";
lin loss_leader_N = mkN "loss - leader" "loss - leaders";
lin lossiemouth_PN = mkPN "Lossiemouth";
lin lot_N = mkN "lot" "lots";
lin loth_A = compoundA (mkA "loth");
lin lothian_PN = mkPN "Lothian";
lin lotion_N = mkN "lotion" "lotions";
lin lottery_N = mkN "lottery" "lotteries";
lin lotto_N = mkN "lotto" ;
lin lotus_N = mkN "lotus" "lotuses";
lin lotus_eater_N = mkN "lotus - eater" "lotus - eaters";
lin loud_A = mkA "loud" "louder";
lin loud_Adv = mkAdv "loud";
lin loud_hailer_N = mkN "loud - hailer" "loud - hailers";
lin loudness_N = mkN "loudness" ;
lin loudspeaker_N = mkN "loudspeaker" "loudspeakers";
lin lough_N = mkN "lough" "loughs";
lin loughborough_PN = mkPN "Loughborough";
lin louis_PN = mkPN "Louis";
lin louise_PN = mkPN "Louise";
lin louisiana_PN = mkPN "Louisiana";
lin louisville_PN = mkPN "Louisville";
lin lounge_N = mkN "lounge" "lounges";
lin lounge_V = mkV "lounge" "lounges" "lounged" "lounged" "lounging";
lin lounge_chair_N = mkN "lounge - chair" "lounge - chairs";
lin lounge_lizard_N = mkN "lounge - lizard" "lounge - lizards";
lin lounge_suit_N = mkN "lounge - suit" "lounge - suits";
lin lounger_N = mkN "lounger" "loungers";
lin lour_V = mkV "lour" "lours" "loured" "loured" "louring";
lin louringly_Adv = mkAdv "louringly";
lin louse_N = mkN "louse" "lice" {- FIXME: guessed plural form -};
lin lousy_A = mkA "lousy" "lousier";
lin lout_N = mkN "lout" "louts";
lin louth_PN = mkPN "Louth";
lin loutish_A = compoundA (mkA "loutish");
lin louvered_A = compoundA (mkA "louvered");
lin louvre_N = mkN "louvre" "louvres";
lin lovable_A = compoundA (mkA "lovable");
lin love_N = mkN "love" "loves";
lin love_V2 = mkV2 (mkV "love" "loves" "loved" "loved" "loving");
lin love_V2V = mkV2V (mkV "love") noPrep to_Prep ;
lin love_affair_N = mkN "love - affair" "love - affairs";
lin love_child_N = mkN "love - child" "love - children" {- FIXME: guessed plural form -};
lin love_feast_N = mkN "love - feast" "love - feasts";
lin love_knot_N = mkN "love - knot" "love - knots";
lin love_letter_N = mkN "love - letter" "love - letters";
lin love_match_N = mkN "love - match" "love - matches";
lin love_philtre_N = mkN "love - philtre" "love - philtres";
lin love_potion_N = mkN "love - potion" "love - potions";
lin love_seat_N = mkN "love - seat" "love - seats";
lin love_song_N = mkN "love - song" "love - songs";
lin love_story_N = mkN "love - story" "love - stories";
lin love_token_N = mkN "love - token" "love - tokens";
lin lovebird_N = mkN "lovebird" "lovebirds";
lin loveless_A = compoundA (mkA "loveless");
lin loveliness_N = mkN "loveliness" ;
lin lovelorn_A = compoundA (mkA "lovelorn");
lin lovely_A = mkA "lovely" "lovelier";
lin lovemaking_N = mkN "lovemaking" ;
lin lover_N = mkN "lover" "lovers";
lin loverlike_A = compoundA (mkA "loverlike");
lin lovesick_A = compoundA (mkA "lovesick");
lin loving_A = compoundA (mkA "loving");
lin loving_cup_N = mkN "loving - cup" "loving - cups";
lin loving_kindness_N = mkN "loving - kindness" ;
lin low_A = mkA "low" "lower";
lin low_Adv = mkAdv "low";
lin low_N = mkN "low" "lows";
lin low_V = mkV "low" "lows" "lowed" "lowed" "lowing";
lin low_down_A = compoundA (mkA "low - down");
lin low_keyed_A = compoundA (mkA "low - keyed");
lin low_pitched_A = compoundA (mkA "low - pitched");
lin low_relief_N = mkN "low - relief" "low - reliefs";
lin low_spirited_A = compoundA (mkA "low - spirited");
lin lowborn_A = compoundA (mkA "lowborn");
lin lowbred_A = compoundA (mkA "lowbred");
lin lowbrow_A = compoundA (mkA "lowbrow");
lin lowbrow_N = mkN "lowbrow" "lowbrows";
lin lower_Adv = mkAdv "lower";
lin lower_V = mkV "lower" "lowers" "lowered" "lowered" "lowering";
lin lower_V2 = mkV2 (mkV "lower" "lowers" "lowered" "lowered" "lowering");
lin lowermost_A = compoundA (mkA "lowermost");
lin lowest_Adv = mkAdv "lowest";
lin lowestoft_PN = mkPN "Lowestoft";
lin lowlander_N = mkN "lowlander" "lowlanders";
lin lowliness_N = mkN "lowliness" ;
lin lowly_A = mkA "lowly" "lowlier";
lin lowness_N = mkN "lowness" ;
lin loyal_A = mkA "loyal" "loyaller*";
lin loyalist_N = mkN "loyalist" "loyalists";
lin loyalty_N = mkN "loyalty" "loyalties";
lin loyang_PN = mkPN "Loyang";
lin lozenge_N = mkN "lozenge" "lozenges";
lin lp_N = mkN "lp" "lps" {- FIXME: no plural form -};
lin lsd_N = mkN "lsd" ;
lin lt_PN = mkPN "Lt";
lin ltd_PN = mkPN "Ltd";
lin lubber_N = mkN "lubber" "lubbers";
lin lubberly_A = compoundA (mkA "lubberly");
lin lubeck_PN = mkPN "Lubeck";
lin lubricant_N = mkN "lubricant" "lubricants";
lin lubricate_V2 = mkV2 (mkV "lubricate" "lubricates" "lubricated" "lubricated" "lubricating");
lin lubrication_N = mkN "lubrication" "lubrications";
lin lucent_A = compoundA (mkA "lucent");
lin lucerne_N = mkN "lucerne" ;
lin lucid_A = compoundA (mkA "lucid");
lin lucidity_N = mkN "lucidity" ;
lin lucifer_N = mkN "lucifer" "lucifers";
lin luck_N = mkN "luck" ;
lin luckily_Adv = mkAdv "luckily";
lin luckless_A = compoundA (mkA "luckless");
lin lucknow_PN = mkPN "Lucknow";
lin lucky_A = mkA "lucky" "luckier";
lin lucrative_A = compoundA (mkA "lucrative");
lin lucre_N = mkN "lucre" ;
lin lucy_PN = mkPN "Lucy";
lin luddite_N = mkN "luddite" "luddites";
lin ludicrous_A = compoundA (mkA "ludicrous");
lin ludlow_PN = mkPN "Ludlow";
lin ludo_N = mkN "ludo" ;
lin ludwigshafen_PN = mkPN "Ludwigshafen";
lin luff_V = mkV "luff" "luffs" "luffed" "luffed" "luffing";
lin luff_V2 = mkV2 (mkV "luff" "luffs" "luffed" "luffed" "luffing");
lin lug_N = mkN "lug" "lugs";
lin lug_V2 = mkV2 (mkV "lug" "lugs" "lugged" "lugged" "lugging");
lin luge_N = mkN "luge" "luges";
lin luggage_N = mkN "luggage" ;
lin luggage_carrier_N = mkN "luggage - carrier" "luggage - carriers";
lin luggage_rack_N = mkN "luggage - rack" "luggage - racks";
lin luggage_van_N = mkN "luggage - van" "luggage - vans";
lin lugger_N = mkN "lugger" "luggers";
lin lugsail_N = mkN "lugsail" "lugsails";
lin lugubrious_A = compoundA (mkA "lugubrious");
lin lugubriousness_N = mkN "lugubriousness" ;
lin luke_PN = mkPN "Luke";
lin lukewarm_A = compoundA (mkA "lukewarm");
lin lukewarmness_N = mkN "lukewarmness" ;
lin lull_N = mkN "lull" "lulls";
lin lull_V = mkV "lull" "lulls" "lulled" "lulled" "lulling";
lin lull_V2 = mkV2 (mkV "lull" "lulls" "lulled" "lulled" "lulling");
lin lullaby_N = mkN "lullaby" "lullabies";
lin lumbago_N = mkN "lumbago" ;
lin lumbar_A = compoundA (mkA "lumbar");
lin lumber_N = mkN "lumber" ;
lin lumber_V = mkV "lumber" "lumbers" "lumbered" "lumbered" "lumbering";
lin lumber_V2 = mkV2 (mkV "lumber" "lumbers" "lumbered" "lumbered" "lumbering");
lin lumber_mill_N = mkN "lumber - mill" "lumber - mills";
lin lumberjack_N = mkN "lumberjack" "lumberjacks";
lin lumberman_N = mkN "lumberman" "lumbermen" {- FIXME: guessed plural form -};
lin lumberroom_N = mkN "lumberroom" "lumberrooms";
lin lumberyard_N = mkN "lumberyard" "lumberyards";
lin luminary_N = mkN "luminary" "luminaries";
lin luminosity_N = mkN "luminosity" ;
lin luminous_A = compoundA (mkA "luminous");
lin lump_N = mkN "lump" "lumps";
lin lump_V2 = mkV2 (mkV "lump" "lumps" "lumped" "lumped" "lumping");
lin lumpish_A = compoundA (mkA "lumpish");
lin lumpy_A = mkA "lumpy" "lumpier";
lin lunacy_N = mkN "lunacy" "lunacies";
lin lunar_A = compoundA (mkA "lunar");
lin lunatic_N = mkN "lunatic" "lunatics";
lin lunch_N = mkN "lunch" "lunches";
lin lunch_V = mkV "lunch" "lunches" "lunched" "lunched" "lunching";
lin lunch_V2 = mkV2 (mkV "lunch" "lunches" "lunched" "lunched" "lunching");
lin luncheon_N = mkN "luncheon" "luncheons";
lin lunchtime_N = mkN "lunchtime" "lunchtimes";
lin lung_N = mkN "lung" "lungs";
lin lung_power_N = mkN "lung - power" ;
lin lunge_N = mkN "lunge" "lunges";
lin lunge_V = mkV "lunge" "lunges" "lunged" "lunged" "lunging";
lin lupin_N = mkN "lupin" "lupins";
lin lurch_N = mkN "lurch" "lurches";
lin lurch_V = mkV "lurch" "lurches" "lurched" "lurched" "lurching";
lin lurcher_N = mkN "lurcher" "lurchers";
lin lure_N = mkN "lure" "lures";
lin lure_V2 = mkV2 (mkV "lure" "lures" "lured" "lured" "luring");
lin lurid_A = compoundA (mkA "lurid");
lin luridness_N = mkN "luridness" ;
lin lurk_V = mkV "lurk" "lurks" "lurked" "lurked" "lurking";
lin lurking_place_N = mkN "lurking - place" "lurking - places";
lin luscious_A = compoundA (mkA "luscious");
lin lusciousness_N = mkN "lusciousness" ;
lin lush_A = mkA "lush" "lusher";
lin lush_N = mkN "lush" "lushes";
lin lust_N = mkN "lust" "lusts";
lin lust_V = mkV "lust" "lusts" "lusted" "lusted" "lusting";
lin lustful_A = compoundA (mkA "lustful");
lin lustily_Adv = mkAdv "lustily";
lin lustre_N = mkN "lustre" ;
lin lustrous_A = compoundA (mkA "lustrous");
lin lusty_A = mkA "lusty" "lustier";
lin luta_PN = mkPN "Luta";
lin lutanist_N = mkN "lutanist" "lutanists";
lin lute_N = mkN "lute" "lutes";
lin lutenist_N = mkN "lutenist" "lutenists";
lin lutheran_A = compoundA (mkA "lutheran");
lin lutheran_N = mkN "lutheran" "lutherans";
lin luton_PN = mkPN "Luton";
lin luxe_A = compoundA (mkA "luxe");
lin luxembourg_PN = mkPN "Luxembourg";
lin luxemburg_PN = mkPN "Luxemburg";
lin luxemburger_A = compoundA (mkA "luxemburger");
lin luxemburger_N = mkN "luxemburger" "luxemburgers";
lin luxuriance_N = mkN "luxuriance" ;
lin luxuriant_A = compoundA (mkA "luxuriant");
lin luxuriate_V = mkV "luxuriate" "luxuriates" "luxuriated" "luxuriated" "luxuriating";
lin luxurious_A = compoundA (mkA "luxurious");
lin luxury_N = mkN "luxury" "luxuries";
lin lvov_PN = mkPN "Lvov";
lin lyallpur_PN = mkPN "Lyallpur";
lin lycee_N = mkN "lycée" "lycées";
lin lyceum_N = mkN "lyceum" "lyceums";
lin lychee_N = mkN "lychee" "lychees";
lin lychgate_N = mkN "lychgate" "lychgates";
lin lydia_PN = mkPN "Lydia";
lin lydney_PN = mkPN "Lydney";
lin lye_N = mkN "lye" "lyes";
lin lying_in_A = compoundA (mkA "lying - in");
lin lymington_PN = mkPN "Lymington";
lin lymm_PN = mkPN "Lymm";
lin lymph_N = mkN "lymph" ;
lin lymphatic_A = compoundA (mkA "lymphatic");
lin lynch_N = mkN "lynch" ;
lin lynch_V2 = mkV2 (mkV "lynch" "lynches" "lynched" "lynched" "lynching");
lin lynchpin_N = mkN "lynchpin" "lynchpins";
lin lynn_PN = mkPN "Lynn";
lin lynne_PN = mkPN "Lynne";
lin lynx_N = mkN "lynx" "lynxes";
lin lynx_eyed_A = compoundA (mkA "lynx - eyed");
lin lyons_PN = mkPN "Lyons";
lin lyre_N = mkN "lyre" "lyres";
lin lyre_bird_N = mkN "lyre - bird" "lyre - birds";
lin lyric_A = compoundA (mkA "lyric");
lin lyric_N = mkN "lyric" "lyrics";
lin lyrical_A = compoundA (mkA "lyrical");
lin lyricism_N = mkN "lyricism" ;
lin lyricist_N = mkN "lyricist" "lyricists";
lin lysol_N = mkN "lysol" ;
lin lytham_PN = mkPN "Lytham";
lin lytham_st_annes_PN = mkPN "Lytham st annes";
lin ma'am_N = mkN "ma'am" "IRREG";
lin ma_N = mkN "ma" ;
lin maastricht_PN = mkPN "Maastricht";
lin mabel_PN = mkPN "Mabel";
lin mac_N = mkN "mac" "macs";
lin macabre_A = compoundA (mkA "macabre");
lin macadam_N = mkN "macadam" ;
lin macadamize_V2 = mkV2 (mkV "macadamize" "macadamizes" "macadamized" "macadamized" "macadamizing");
lin macaroni_N = mkN "macaroni" ;
lin macaroon_N = mkN "macaroon" "macaroons";
lin macaw_N = mkN "macaw" "macaws";
lin macclesfield_PN = mkPN "Macclesfield";
lin mace_N = mkN "mace" "maces";
lin mace_bearer_N = mkN "mace - bearer" "mace - bearers";
lin macedonian_A = compoundA (mkA "macedonian");
lin macedonian_N = mkN "macedonian" "macedonians";
lin macerate_V = mkV "macerate" "macerates" "macerated" "macerated" "macerating";
lin macerate_V2 = mkV2 (mkV "macerate" "macerates" "macerated" "macerated" "macerating");
lin mach_PN = mkPN "Mach";
lin machete_N = mkN "machete" "machetes";
lin machiavellian_A = compoundA (mkA "machiavellian");
lin machination_N = mkN "machination" "machinations";
lin machine_N = mkN "machine" "machines";
lin machine_V2 = mkV2 (mkV "machine" "machines" "machined" "machined" "machining");
lin machine_gun_N = mkN "machine - gun" "machine - guns";
lin machine_made_A = compoundA (mkA "machine - made");
lin machinery_N = mkN "machinery" ;
lin machinist_N = mkN "machinist" "machinists";
lin machismo_N = mkN "machismo" ;
lin mackerel_N = mkN "mackerel" "mackerel";
lin mackintosh_N = mkN "mackintosh" "mackintoshes";
lin macrobiotic_A = compoundA (mkA "macrobiotic");
lin macrocosm_N = mkN "macrocosm" "macrocosms";
lin mad_A = mkA "mad" "madder*";
lin madagascan_A = compoundA (mkA "madagascan");
lin madagascan_N = mkN "madagascan" "madagascans";
lin madagascar_PN = mkPN "Madagascar";
lin madam_N = mkN "madam" "madams";
lin madame_N = mkN "madame" "madames";
lin madcap_N = mkN "madcap" "madcaps";
lin madden_V2 = mkV2 (mkV "madden" "maddens" "maddened" "maddened" "maddening");
lin madder_N = mkN "madder" ;
lin maddy_PN = mkPN "Maddy";
lin madeira_N = mkN "madeira" "madeiras";
lin madeleine_PN = mkPN "Madeleine";
lin mademoiselle_N = mkN "mademoiselle" "mademoiselles";
lin madge_PN = mkPN "Madge";
lin madhouse_N = mkN "madhouse" "madhouses";
lin madman_N = mkN "madman" "madmen" {- FIXME: guessed plural form -};
lin madness_N = mkN "madness" ;
lin madonna_N = mkN "madonna" "madonnas";
lin madras_PN = mkPN "Madras";
lin madrid_PN = mkPN "Madrid";
lin madrigal_N = mkN "madrigal" "madrigals";
lin madurai_PN = mkPN "Madurai";
lin madwoman_N = mkN "madwoman" "madwomen" {- FIXME: guessed plural form -};
lin maecenas_PN = mkPN "Maecenas";
lin maelstrom_N = mkN "maelstrom" "maelstroms";
lin maenad_N = mkN "maenad" "maenads";
lin maesteg_PN = mkPN "Maesteg";
lin maestro_N = mkN "maestro" "maestros";
lin maffick_V = mkV "maffick" "mafficks" "mafficked" "mafficked" "mafficking";
lin mafia_N = mkN "mafia" "mafias";
lin mag_N = mkN "mag" "mags";
lin magazine_N = mkN "magazine" "magazines";
lin magdeburg_PN = mkPN "Magdeburg";
lin magenta_A = compoundA (mkA "magenta");
lin magenta_N = mkN "magenta" ;
lin maggie_PN = mkPN "Maggie";
lin maggot_N = mkN "maggot" "maggots";
lin maggoty_A = compoundA (mkA "maggoty");
lin maghull_PN = mkPN "Maghull";
lin magic_A = compoundA (mkA "magic");
lin magic_N = mkN "magic" ;
lin magical_A = compoundA (mkA "magical");
lin magician_N = mkN "magician" "magicians";
lin magisterial_A = compoundA (mkA "magisterial");
lin magistracy_N = mkN "magistracy" "magistracies";
lin magistrate_N = mkN "magistrate" "magistrates";
lin magnanimity_N = mkN "magnanimity" "magnanimities";
lin magnanimous_A = compoundA (mkA "magnanimous");
lin magnate_N = mkN "magnate" "magnates";
lin magnesia_N = mkN "magnesia" ;
lin magnesium_N = mkN "magnesium" ;
lin magnet_N = mkN "magnet" "magnets";
lin magnetic_A = compoundA (mkA "magnetic");
lin magnetically_Adv = mkAdv "magnetically";
lin magnetism_N = mkN "magnetism" ;
lin magnetization_N = mkN "magnetization" ;
lin magnetize_V2 = mkV2 (mkV "magnetize" "magnetizes" "magnetized" "magnetized" "magnetizing");
lin magneto_N = mkN "magneto" "magnetos";
lin magnificat_N = mkN "magnificat" "magnificats";
lin magnification_N = mkN "magnification" "magnifications";
lin magnificence_N = mkN "magnificence" ;
lin magnificent_A = compoundA (mkA "magnificent");
lin magnifier_N = mkN "magnifier" "magnifiers";
lin magnify_V2 = mkV2 (mkV "magnify" "magnifies" "magnified" "magnified" "magnifying");
lin magniloquence_N = mkN "magniloquence" ;
lin magniloquent_A = compoundA (mkA "magniloquent");
lin magnitude_N = mkN "magnitude" ;
lin magnolia_N = mkN "magnolia" "magnolias";
lin magnum_N = mkN "magnum" "magnums";
lin magnum_opus_N = mkN "magnum opus" "magnum opi" {- FIXME: guessed plural form -};
lin magpie_N = mkN "magpie" "magpies";
lin magyar_A = compoundA (mkA "magyar");
lin magyar_N = mkN "magyar" "magyars";
lin maharaja_N = mkN "maharaja" "maharajas";
lin maharajah_N = mkN "maharajah" "maharajahs";
lin maharanee_N = mkN "maharanee" "maharanees";
lin mahatma_N = mkN "mahatma" "mahatmas";
lin mahjong_N = mkN "mahjong" ;
lin mahogany_N = mkN "mahogany" "mahoganies";
lin mahout_N = mkN "mahout" "mahouts";
lin maid_N = mkN "maid" "maids";
lin maiden_A = compoundA (mkA "maiden");
lin maiden_N = mkN "maiden" "maidens";
lin maidenhair_N = mkN "maidenhair" "maidenhairs";
lin maidenhead_N = mkN "maidenhead" ;
lin maidenhead_PN = mkPN "Maidenhead";
lin maidenhood_N = mkN "maidenhood" "maidenhoods";
lin maidenlike_A = compoundA (mkA "maidenlike");
lin maidenly_A = compoundA (mkA "maidenly");
lin maidservant_N = mkN "maidservant" "maidservants";
lin maidstone_PN = mkPN "Maidstone";
lin mail_N = mkN "mail" "mails";
lin mail_V2 = mkV2 (mkV "mail" "mails" "mailed" "mailed" "mailing");
lin mail_train_N = mkN "mail - train" "mail - trains";
lin mailbag_N = mkN "mailbag" "mailbags";
lin mailboat_N = mkN "mailboat" "mailboats";
lin mailbox_N = mkN "mailbox" "mailboxes";
lin mailed_A = compoundA (mkA "mailed");
lin mailing_card_N = mkN "mailing - card" "mailing - cards";
lin mailing_list_N = mkN "mailing - list" "mailing - lists";
lin mailman_N = mkN "mailman" "mailmen" {- FIXME: guessed plural form -};
lin maim_V2 = mkV2 (mkV "maim" "maims" "maimed" "maimed" "maiming");
lin main_A = compoundA (mkA "main");
lin main_N = mkN "main" "mains";
lin maine_PN = mkPN "Maine";
lin mainland_N = mkN "mainland" "mainlands";
lin mainmast_N = mkN "mainmast" "mainmasts";
lin mainspring_N = mkN "mainspring" "mainsprings";
lin mainstay_N = mkN "mainstay" "mainstays";
lin mainstream_N = mkN "mainstream";
lin maintain_V = mkV "maintain";
lin maintain_V2 = mkV2 (mkV "maintain" "maintains" "maintained" "maintained" "maintaining");
lin maintain_VS = mkVS (mkV "maintain" "maintains" "maintained" "maintained" "maintaining");
lin maintainable_A = compoundA (mkA "maintainable");
lin maintenance_N = mkN "maintenance" ;
lin mainz_PN = mkPN "Mainz";
lin maisonnette_N = mkN "maisonnette" "maisonnettes";
lin maize_N = mkN "maize" ;
lin maj_PN = mkPN "Maj";
lin majestic_A = compoundA (mkA "majestic");
lin majestically_Adv = mkAdv "majestically";
lin majesty_N = mkN "majesty" "majesties";
lin majolica_N = mkN "majolica" ;
lin major_A = compoundA (mkA "major");
lin major_N = mkN "major" "majors";
lin major_V = mkV "major" "majors" "majored" "majored" "majoring";
lin major_domo_N = mkN "major - domo" "major - domos";
lin major_general_N = mkN "major - general" "major - generals";
lin majority_N = mkN "majority" "majorities";
lin make_N = mkN "make" "makes";
lin make_V = IrregEng.make_V;
lin make_V2 = mkV2 (IrregEng.make_V);
lin make_V2V = mkV2V (IrregEng.make_V) noPrep to_Prep ;
lin make_VA = mkVA (IrregEng.make_V);
lin make_VV = mkVV (IrregEng.make_V);
lin make_VS = mkVS (IrregEng.make_V);
lin make_believe_N = mkN "make - believe" "make - believes";
lin make_up_N = mkN "make - up" "make - ups";
lin maker_N = mkN "maker" "makers";
lin makeshift_N = mkN "makeshift" "makeshifts";
lin makeweight_N = mkN "makeweight" "makeweights";
lin making_N = mkN "making" "makings";
lin malacca_N = mkN "malacca" ;
lin malachite_N = mkN "malachite" ;
lin maladjusted_A = compoundA (mkA "maladjusted");
lin maladjustment_N = mkN "maladjustment" ;
lin maladroit_A = compoundA (mkA "maladroit");
lin maladroitness_N = mkN "maladroitness" ;
lin malady_N = mkN "malady" "maladies";
lin malaga_PN = mkPN "Malaga";
lin malaise_N = mkN "malaise" "malaises";
lin malapropism_N = mkN "malapropism" "malapropisms";
lin malapropos_A = compoundA (mkA "malapropos");
lin malapropos_Adv = mkAdv "malapropos";
lin malaria_N = mkN "malaria" ;
lin malarial_A = compoundA (mkA "malarial");
lin malawi_PN = mkPN "Malawi";
lin malawian_A = compoundA (mkA "malawian");
lin malawian_N = mkN "malawian" "malawians";
lin malay_A = compoundA (mkA "malay");
lin malay_N = mkN "malay" "malays";
lin malaya_PN = mkPN "Malaya";
lin malayan_A = compoundA (mkA "malayan");
lin malayan_N = mkN "malayan" "malayans";
lin malaysia_PN = mkPN "Malaysia";
lin malaysian_A = compoundA (mkA "malaysian");
lin malaysian_N = mkN "malaysian" "malaysians";
lin malcolm_PN = mkPN "Malcolm";
lin malcontent_A = compoundA (mkA "malcontent");
lin malcontent_N = mkN "malcontent" "malcontents";
lin maldon_PN = mkPN "Maldon";
lin male_A = compoundA (mkA "male");
lin male_N = mkN "male" "males";
lin malediction_N = mkN "malediction" "maledictions";
lin malefactor_N = mkN "malefactor" "malefactors";
lin maleficent_A = compoundA (mkA "maleficent");
lin malevolence_N = mkN "malevolence" ;
lin malevolent_A = compoundA (mkA "malevolent");
lin malfeasance_N = mkN "malfeasance" "malfeasances";
lin malformation_N = mkN "malformation" "malformations";
lin malformed_A = compoundA (mkA "malformed");
lin malfunction_N = mkN "malfunction" "malfunctions";
lin malfunction_V = mkV "malfunction" "malfunctions" "malfunctioned" "malfunctioned" "malfunctioning";
lin mali_PN = mkPN "Mali";
lin malian_A = compoundA (mkA "malian");
lin malian_N = mkN "malian" "malians";
lin malice_N = mkN "malice" ;
lin malicious_A = compoundA (mkA "malicious");
lin malign_A = compoundA (mkA "malign");
lin malign_V2 = mkV2 (mkV "malign" "maligns" "maligned" "maligned" "maligning");
lin malignancy_N = mkN "malignancy" ;
lin malignant_A = compoundA (mkA "malignant");
lin malignity_N = mkN "malignity" "malignities";
lin malinger_V = mkV "malinger" "malingers" "malingered" "malingered" "malingering";
lin malingerer_N = mkN "malingerer" "malingerers";
lin mallard_N = mkN "mallard" "mallards";
lin malleability_N = mkN "malleability" ;
lin malleable_A = compoundA (mkA "malleable");
lin mallet_N = mkN "mallet" "mallets";
lin mallow_N = mkN "mallow" "mallows";
lin mallow_PN = mkPN "Mallow";
lin malmo_PN = mkPN "Malmo";
lin malmsey_N = mkN "malmsey" ;
lin malnutrition_N = mkN "malnutrition" ;
lin malodorous_A = compoundA (mkA "malodorous");
lin malpractice_N = mkN "malpractice" "malpractices";
lin malt_N = mkN "malt" ;
lin malt_V = mkV "malt" "malts" "malted" "malted" "malting";
lin malt_V2 = mkV2 (mkV "malt" "malts" "malted" "malted" "malting");
lin malta_PN = mkPN "Malta";
lin maltby_PN = mkPN "Maltby";
lin maltese_A = compoundA (mkA "maltese");
lin maltese_N = mkN "maltese" "maltese";
lin malthusian_A = compoundA (mkA "malthusian");
lin maltreat_V2 = mkV2 (mkV "maltreat" "maltreats" "maltreated" "maltreated" "maltreating");
lin maltreatment_N = mkN "maltreatment" ;
lin maltster_N = mkN "maltster" "maltsters";
lin malvern_PN = mkPN "Malvern";
lin malversation_N = mkN "malversation" ;
lin mama_N = mkN "mama" "mamas";
lin mamba_N = mkN "mamba" "mambas";
lin mamie_PN = mkPN "Mamie";
lin mamma_N = mkN "mamma" "mammas";
lin mammal_N = mkN "mammal" "mammals";
lin mammon_N = mkN "mammon" ;
lin mammoth_N = mkN "mammoth" "mammoths";
lin mammy_N = mkN "mammy" "mammies";
lin man_N = mkN "man" "men";
lin man_V2 = mkV2 (mkV "man" "mans" "manned" "manned" "manning");
lin man_at_arms_N = mkN "man - at - arms" "men*-at - arms";
lin man_eater_N = mkN "man - eater" "man - eaters";
lin man_hour_N = mkN "man - hour" "man - hours";
lin man_of_war_N = mkN "man - of - war" "men*-of - war";
lin man_sized_A = compoundA (mkA "man - sized");
lin manacle_N = mkN "manacle" "manacles";
lin manacle_V2 = mkV2 (mkV "manacle" "manacles" "manacled" "manacled" "manacling");
lin manage_V = mkV "manage" "manages" "managed" "managed" "managing";
lin manage_V2 = mkV2 (mkV "manage" "manages" "managed" "managed" "managing");
lin manage_VV = mkVV (mkV "manage" "manages" "managed" "managed" "managing");
lin manageability_N = mkN "manageability" ;
lin manageable_A = compoundA (mkA "manageable");
lin management_N = mkN "management" "managements";
lin manager_N = mkN "manager" "managers";
lin manageress_N = mkN "manageress" "manageresses";
lin managerial_A = compoundA (mkA "managerial");
lin manatee_N = mkN "manatee" "manatees";
lin manchester_PN = mkPN "Manchester";
lin mancunian_A = compoundA (mkA "mancunian");
lin mancunian_N = mkN "mancunian" "mancunians";
lin mandarin_N = mkN "mandarin" "mandarins";
lin mandatary_N = mkN "mandatary" "mandataries";
lin mandate_N = mkN "mandate" "mandates";
lin mandate_V2 = mkV2 (mkV "mandate" "mandates" "mandated" "mandated" "mandating");
lin mandate_VS = mkVS (mkV "mandate");
lin mandatory_A = compoundA (mkA "mandatory");
lin mandatory_N = mkN "mandatory" "mandatories";
lin mandible_N = mkN "mandible" "mandibles";
lin mandolin_N = mkN "mandolin" "mandolins";
lin mandragora_N = mkN "mandragora" ;
lin mandrake_N = mkN "mandrake" "mandrakes";
lin mandrill_N = mkN "mandrill" "mandrills";
lin mandy_PN = mkPN "Mandy";
lin mane_N = mkN "mane" "manes";
lin maneuver_V = mkV "maneuver";
lin maneuver_V2 = mkV2 (mkV "maneuver");
lin manful_A = compoundA (mkA "manful");
lin manganese_N = mkN "manganese" ;
lin mange_N = mkN "mange" ;
lin mangel_wurzel_N = mkN "mangel - wurzel" "mangel - wurzels";
lin manger_N = mkN "manger" "mangers";
lin mangily_Adv = mkAdv "mangily";
lin mangle_N = mkN "mangle" "mangles";
lin mangle_V2 = mkV2 (mkV "mangle" "mangles" "mangled" "mangled" "mangling");
lin mango_N = mkN "mango" "mangos";
lin mangosteen_N = mkN "mangosteen" "mangosteens";
lin mangrove_N = mkN "mangrove" "mangroves";
lin mangy_A = mkA "mangy" "mangier";
lin manhandle_V2 = mkV2 (mkV "manhandle" "manhandles" "manhandled" "manhandled" "manhandling");
lin manhattan_N = mkN "manhattan" "manhattans";
lin manhole_N = mkN "manhole" "manholes";
lin manhood_N = mkN "manhood" ;
lin mania_N = mkN "mania" "manias";
lin maniac_N = mkN "maniac" "maniacs";
lin maniacal_A = compoundA (mkA "maniacal");
lin manic_depressive_A = compoundA (mkA "manic - depressive");
lin manic_depressive_N = mkN "manic - depressive" "manic - depressives";
lin manicure_N = mkN "manicure" "manicures";
lin manicure_V2 = mkV2 (mkV "manicure" "manicures" "manicured" "manicured" "manicuring");
lin manicurist_N = mkN "manicurist" "manicurists";
lin manifest_A = compoundA (mkA "manifest");
lin manifest_N = mkN "manifest" "manifests";
lin manifest_V2 = mkV2 (mkV "manifest" "manifests" "manifested" "manifested" "manifesting");
lin manifestation_N = mkN "manifestation" "manifestations";
lin manifesto_N = mkN "manifesto" "manifestos";
lin manifold_A = compoundA (mkA "manifold");
lin manifold_N = mkN "manifold" "manifolds";
lin manifold_V2 = mkV2 (mkV "manifold" "manifolds" "manifolded" "manifolded" "manifolding");
lin manikin_N = mkN "manikin" "manikins";
lin manila_PN = mkPN "Manila";
lin manilla_N = mkN "manilla" "manillas";
lin manipulate_V2 = mkV2 (mkV "manipulate" "manipulates" "manipulated" "manipulated" "manipulating");
lin manipulation_N = mkN "manipulation" "manipulations";
lin manipulative_A = compoundA (mkA "manipulative");
lin manitoba_PN = mkPN "Manitoba";
lin mankind_N = mkN "mankind" ;
lin manlike_A = compoundA (mkA "manlike");
lin manliness_N = mkN "manliness" ;
lin manly_A = mkA "manly" "manlier";
lin manna_N = mkN "manna" ;
lin mannequin_N = mkN "mannequin" "mannequins";
lin manner_N = mkN "manner" "manners";
lin mannered_A = compoundA (mkA "mannered");
lin mannerism_N = mkN "mannerism" "mannerisms";
lin mannerly_A = compoundA (mkA "mannerly");
lin mannheim_PN = mkPN "Mannheim";
lin mannish_A = compoundA (mkA "mannish");
lin manoeuvrability_N = mkN "manoeuvrability" ;
lin manoeuvrable_A = compoundA (mkA "manoeuvrable");
lin manoeuvre_N = mkN "manoeuvre" "manoeuvres";
lin manoeuvre_V = mkV "manoeuvre" "manoeuvres" "manoeuvred" "manoeuvred" "manoeuvring";
lin manoeuvre_V2 = mkV2 (mkV "manoeuvre" "manoeuvres" "manoeuvred" "manoeuvred" "manoeuvring");
lin manoeuvrer_N = mkN "manoeuvrer" "manoeuvrers";
lin manor_N = mkN "manor" "manors";
lin manor_house_N = mkN "manor - house" "manor - houses";
lin manorial_A = compoundA (mkA "manorial");
lin manpower_N = mkN "manpower" ;
lin mansard_N = mkN "mansard" "mansards";
lin manse_N = mkN "manse" "manses";
lin manservant_N = mkN "manservant" "manservants";
lin mansfield_PN = mkPN "Mansfield";
lin mansion_N = mkN "mansion" "mansions";
lin manslaughter_N = mkN "manslaughter" ;
lin mantel_N = mkN "mantel" "mantels";
lin mantelpiece_N = mkN "mantelpiece" "mantelpieces";
lin mantilla_N = mkN "mantilla" "mantillas";
lin mantis_N = mkN "mantis" "mantises";
lin mantle_N = mkN "mantle" "mantles";
lin mantle_V = mkV "mantle" "mantles" "mantled" "mantled" "mantling";
lin mantle_V2 = mkV2 (mkV "mantle" "mantles" "mantled" "mantled" "mantling");
lin mantrap_N = mkN "mantrap" "mantraps";
lin manual_A = compoundA (mkA "manual");
lin manual_N = mkN "manual" "manuals";
lin manufacture_N = mkN "manufacture" ;
lin manufacture_V2 = mkV2 (mkV "manufacture" "manufactures" "manufactured" "manufactured" "manufacturing");
lin manufacturer_N = mkN "manufacturer" "manufacturers";
lin manumission_N = mkN "manumission" "manumissions";
lin manumit_V2 = mkV2 (mkV "manumit" "manumits" "manumitted" "manumitted" "manumitting");
lin manure_N = mkN "manure" ;
lin manure_V2 = mkV2 (mkV "manure" "manures" "manured" "manured" "manuring");
lin manuscript_N = mkN "manuscript" "manuscripts";
lin manx_A = compoundA (mkA "manx");
lin manx_N = mkN "manx" ;
lin many_Det = mkDeterminer plural "many" ;
lin many_sided_A = compoundA (mkA "many - sided");
lin maoism_N = mkN "maoism" ;
lin maoist_N = mkN "maoist" "maoists";
lin maori_N = mkN "maori" "maoris";
lin map_N = mkN "map" "maps";
lin map_V2 = mkV2 (mkV "map" "maps" "mapped" "mapped" "mapping");
lin map_reader_N = mkN "map - reader" "map - readers";
lin maple_N = mkN "maple" "maples";
lin maple_leaf_N = mkN "maple - leaf" "maple - leaves";
lin maquis_N = mkN "maquis" "maques" {- FIXME: guessed plural form -};
lin mar_PN = mkPN "Mar";
lin mar_V2 = mkV2 (mkV "mar" "mars" "marred" "marred" "marring");
lin marabou_N = mkN "marabou" "marabous";
lin maracaibo_PN = mkPN "Maracaibo";
lin maraschino_N = mkN "maraschino" "maraschinos";
lin marathon_N = mkN "marathon" "marathons";
lin maraud_V = mkV "maraud" "marauds" "marauded" "marauded" "marauding";
lin marauder_N = mkN "marauder" "marauders";
lin marble_N = mkN "marble" "marbles";
lin marbled_A = compoundA (mkA "marbled");
lin marbling_N = mkN "marbling" ;
lin march_N = mkN "march" "marches";
lin march_PN = mkPN "March";
lin march_V = mkV "march" "marches" "marched" "marched" "marching";
lin march_V2 = mkV2 (mkV "march" "marches" "marched" "marched" "marching");
lin marcher_N = mkN "marcher" "marchers";
lin marchioness_N = mkN "marchioness" "marchionesses";
lin mardi_gras_N = mkN "mardi gras" "mardi gras";
lin mare_N = mkN "mare" "mares";
lin margaret_PN = mkPN "Margaret";
lin margarine_N = mkN "margarine" ;
lin margate_PN = mkPN "Margate";
lin marge_N = mkN "marge" ;
lin marge_PN = mkPN "Marge";
lin margery_PN = mkPN "Margery";
lin margie_PN = mkPN "Margie";
lin margin_N = mkN "margin" "margins";
lin marginal_A = compoundA (mkA "marginal");
lin marginalize_V2 = mkV2 (mkV "marginalize");
lin margrave_N = mkN "margrave" "margraves";
lin marguerite_N = mkN "marguerite" "marguerites";
lin maria_PN = mkPN "Maria";
lin marian_PN = mkPN "Marian";
lin marie_PN = mkPN "Marie";
lin marigold_N = mkN "marigold" "marigolds";
lin marihuana_N = mkN "marihuana" ;
lin marijuana_N = mkN "marijuana" ;
lin marilyn_PN = mkPN "Marilyn";
lin marimba_N = mkN "marimba" "marimbas";
lin marina_N = mkN "marina" "marinas";
lin marinade_N = mkN "marinade" ;
lin marinade_V2 = mkV2 (mkV "marinade" "marinades" "marinaded" "marinaded" "marinading");
lin marinate_V2 = mkV2 (mkV "marinate" "marinates" "marinated" "marinated" "marinating");
lin marine_A = compoundA (mkA "marine");
lin marine_N = mkN "marine" "marines";
lin mariner_N = mkN "mariner" "mariners";
lin marion_PN = mkPN "Marion";
lin marionette_N = mkN "marionette" "marionettes";
lin marital_A = compoundA (mkA "marital");
lin maritime_A = compoundA (mkA "maritime");
lin marjoram_N = mkN "marjoram" ;
lin marjorie_PN = mkPN "Marjorie";
lin mark_N = mkN "mark" "marks";
lin mark_PN = mkPN "Mark";
lin mark_V2 = mkV2 (mkV "mark" "marks" "marked" "marked" "marking");
lin mark_up_N = mkN "mark - up" "mark - ups";
lin marke_VS = mkVS (mkV "marke");
lin marked_A = compoundA (mkA "marked");
lin marker_N = mkN "marker" "markers";
lin market_N = mkN "market" "markets";
lin market_V = mkV "market" "markets" "marketed" "marketed" "marketing";
lin market_V2 = mkV2 (mkV "market" "markets" "marketed" "marketed" "marketing");
lin market_cross_N = mkN "market - cross" "market - crosses";
lin market_day_N = mkN "market - day" "market - days";
lin market_drayton_PN = mkPN "Market drayton";
lin market_garden_N = mkN "market - garden" "market - gardens";
lin market_gardening_N = mkN "market - gardening" ;
lin market_harborough_PN = mkPN "Market harborough";
lin market_square_N = mkN "market - square" "market - squares";
lin market_town_N = mkN "market - town" "market - towns";
lin marketable_A = compoundA (mkA "marketable");
lin marketing_N = mkN "marketing" "marketings";
lin marketplace_N = mkN "marketplace" "marketplaces";
lin marking_N = mkN "marking" "markings";
lin marking_ink_N = mkN "marking - ink" "marking - inks";
lin marking_inks_N = mkN "marking - inks" "marking - inkss";
lin marksman_N = mkN "marksman" "marksmen" {- FIXME: guessed plural form -};
lin marksmanship_N = mkN "marksmanship" ;
lin marl_N = mkN "marl" ;
lin marlborough_PN = mkPN "Marlborough";
lin marlene_PN = mkPN "Marlene";
lin marlinespike_N = mkN "marlinespike" "marlinespikes";
lin marlow_PN = mkPN "Marlow";
lin marmalade_N = mkN "marmalade" ;
lin marmoreal_A = compoundA (mkA "marmoreal");
lin marmoset_N = mkN "marmoset" "marmosets";
lin marmot_N = mkN "marmot" "marmots";
lin marocain_N = mkN "marocain" ;
lin maroon_A = compoundA (mkA "maroon");
lin maroon_N = mkN "maroon" "maroons";
lin maroon_V2 = mkV2 (mkV "maroon" "maroons" "marooned" "marooned" "marooning");
lin marple_PN = mkPN "Marple";
lin marque_N = mkN "marque" "marques";
lin marquee_N = mkN "marquee" "marquees";
lin marquess_N = mkN "marquess" "marquesses";
lin marquetry_N = mkN "marquetry" ;
lin marquis_N = mkN "marquis" "marquises";
lin marriage_N = mkN "marriage" "marriages";
lin marriageability_N = mkN "marriageability" ;
lin marriageable_A = compoundA (mkA "marriageable");
lin married_A = compoundA (mkA "married");
lin marrow_N = mkN "marrow" "marrows";
lin marrowbone_N = mkN "marrowbone" "marrowbones";
lin marry_V = mkV "marry" "marries" "married" "married" "marrying";
lin marry_V2 = mkV2 (mkV "marry" "marries" "married" "married" "marrying");
lin mars_PN = mkPN "Mars";
lin marsala_N = mkN "marsala" ;
lin marseillaise_N = mkN "marseillaise" "marseillaises";
lin marseilles_PN = mkPN "Marseilles";
lin marsh_N = mkN "marsh" "marshes";
lin marshal_N = mkN "marshal" "marshals";
lin marshal_V2 = mkV2 (mkV "marshal" "marshals" "marshalled" "marshalled" "marshalling");
lin marshalling_yard_N = mkN "marshalling - yard" "marshalling - yards";
lin marshmallow_N = mkN "marshmallow" "marshmallows";
lin marshy_A = mkA "marshy" "marshier";
lin marske_PN = mkPN "Marske";
lin marsupial_A = compoundA (mkA "marsupial");
lin marsupial_N = mkN "marsupial" "marsupials";
lin mart_N = mkN "mart" "marts";
lin marten_N = mkN "marten" "martens";
lin martha_PN = mkPN "Martha";
lin martial_A = compoundA (mkA "martial");
lin martian_A = compoundA (mkA "martian");
lin martian_N = mkN "martian" "martians";
lin martin_N = mkN "martin" "martins";
lin martin_PN = mkPN "Martin";
lin martinet_N = mkN "martinet" "martinets";
lin martini_N = mkN "martini" "martinis";
lin martyr_N = mkN "martyr" "martyrs";
lin martyr_V2 = mkV2 (mkV "martyr" "martyrs" "martyred" "martyred" "martyring");
lin martyrdom_N = mkN "martyrdom" "martyrdoms";
lin marvel_N = mkN "marvel" "marvels";
lin marvel_V = mkV "marvel" "marvels" "marvelled" "marvelled" "marvelling";
lin marvel_VS = mkVS (mkV "marvel" "marvels" "marvelled" "marvelled" "marvelling");
lin marvellous_A = compoundA (mkA "marvellous");
lin marvelous_A = compoundA (mkA "marvelous");
lin marxism_N = mkN "marxism" ;
lin marxist_N = mkN "marxist" "marxists";
lin mary_PN = mkPN "Mary";
lin maryland_PN = mkPN "Maryland";
lin maryport_PN = mkPN "Maryport";
lin marzipan_N = mkN "marzipan" "marzipans";
lin masc_PN = mkPN "Masc";
lin mascara_N = mkN "mascara" ;
lin mascot_N = mkN "mascot" "mascots";
lin masculine_A = compoundA (mkA "masculine");
lin masculinity_N = mkN "masculinity" ;
lin maser_N = mkN "maser" "masers";
lin mash_N = mkN "mash" "mashes";
lin mash_V2 = mkV2 (mkV "mash" "mashes" "mashed" "mashed" "mashing");
lin masher_N = mkN "masher" "mashers";
lin mask_N = mkN "mask" "masks";
lin mask_V2 = mkV2 (mkV "mask" "masks" "masked" "masked" "masking");
lin masochism_N = mkN "masochism" ;
lin masochist_N = mkN "masochist" "masochists";
lin masochistic_A = compoundA (mkA "masochistic");
lin masochistically_Adv = mkAdv "masochistically";
lin mason_N = mkN "mason" "masons";
lin mason_dixon_PN = mkPN "Mason - dixon";
lin masonic_A = compoundA (mkA "masonic");
lin masonry_N = mkN "masonry" ;
lin masque_N = mkN "masque" "masques";
lin masquerade_N = mkN "masquerade" "masquerades";
lin masquerade_V = mkV "masquerade" "masquerades" "masqueraded" "masqueraded" "masquerading";
lin mass_N = mkN "mass" "masses";
lin mass_V = mkV "mass" "masses" "massed" "massed" "massing";
lin mass_V2 = mkV2 (mkV "mass" "masses" "massed" "massed" "massing");
lin mass_produce_V2 = mkV2 (mkV "mass - produce" "mass - produces" "mass - produced" "mass - produced" "mass - producing");
lin massachusetts_PN = mkPN "Massachusetts";
lin massacre_N = mkN "massacre" "massacres";
lin massacre_V2 = mkV2 (mkV "massacre" "massacres" "massacred" "massacred" "massacring");
lin massage_N = mkN "massage" "massages";
lin massage_V2 = mkV2 (mkV "massage" "massages" "massaged" "massaged" "massaging");
lin masseur_N = mkN "masseur" "masseurs";
lin masseuse_N = mkN "masseuse" "masseuses";
lin massif_N = mkN "massif" "massifs";
lin massive_A = compoundA (mkA "massive");
lin massiveness_N = mkN "massiveness" ;
lin massy_A = mkA "massy" "massier";
lin mast_N = mkN "mast" "masts";
lin master_N = mkN "master" "masters";
lin master_V2 = mkV2 (mkV "master" "masters" "mastered" "mastered" "mastering");
lin master_at_arms_N = mkN "master - at - arms" "masters - at - arms";
lin master_key_N = mkN "master - key" "master - keys";
lin masterful_A = compoundA (mkA "masterful");
lin masterless_A = compoundA (mkA "masterless");
lin masterly_A = compoundA (mkA "masterly");
lin mastermind_N = mkN "mastermind" "masterminds";
lin mastermind_V2 = mkV2 (mkV "mastermind" "masterminds" "masterminded" "masterminded" "masterminding");
lin masterpiece_N = mkN "masterpiece" "masterpieces";
lin mastership_N = mkN "mastership" "masterships";
lin masterstroke_N = mkN "masterstroke" "masterstrokes";
lin mastery_N = mkN "mastery" ;
lin masthead_N = mkN "masthead" "mastheads";
lin masticate_V2 = mkV2 (mkV "masticate" "masticates" "masticated" "masticated" "masticating");
lin mastication_N = mkN "mastication" ;
lin mastiff_N = mkN "mastiff" "mastiffs";
lin mastodon_N = mkN "mastodon" "mastodons";
lin mastoid_N = mkN "mastoid" "mastoids";
lin mastoiditis_N = mkN "mastoiditis" ;
lin masturbate_V = mkV "masturbate" "masturbates" "masturbated" "masturbated" "masturbating";
lin masturbate_V2 = mkV2 (mkV "masturbate" "masturbates" "masturbated" "masturbated" "masturbating");
lin masturbation_N = mkN "masturbation" ;
lin mat_A = compoundA (mkA "mat");
lin mat_N = mkN "mat" "mats";
lin mat_V = mkV "mat" "mats" "matted" "matted" "matting";
lin mat_V2 = mkV2 (mkV "mat" "mats" "matted" "matted" "matting");
lin matador_N = mkN "matador" "matadors";
lin match_N = mkN "match" "matches";
lin match_V = mkV "match" "matches" "matched" "matched" "matching";
lin match_V2 = mkV2 (mkV "match" "matches" "matched" "matched" "matching");
lin match_point_N = mkN "match - point" "match - points";
lin matchbox_N = mkN "matchbox" "matchboxes";
lin matchet_N = mkN "matchet" "matchets";
lin matchless_A = compoundA (mkA "matchless");
lin matchlock_N = mkN "matchlock" "matchlocks";
lin matchmaker_N = mkN "matchmaker" "matchmakers";
lin matchwood_N = mkN "matchwood" ;
lin mate_1_N = mkN "mate" "mates";
lin mate_2_N = mkN "maté" "matés" ;
lin mate_V = mkV "mate" "mates" "mated" "mated" "mating";
lin mate_V2 = mkV2 (mkV "mate" "mates" "mated" "mated" "mating");
lin material_A = compoundA (mkA "material");
lin material_N = mkN "material" "materials";
lin materialism_N = mkN "materialism" ;
lin materialist_N = mkN "materialist" "materialists";
lin materialistic_A = compoundA (mkA "materialistic");
lin materialistically_Adv = mkAdv "materialistically";
lin materialization_N = mkN "materialization" "materializations";
lin materialize_V = mkV "materialize" "materializes" "materialized" "materialized" "materializing";
lin materialize_V2V = mkV2V (mkV "materialize" "materializes" "materialized" "materialized" "materializing") noPrep to_Prep ;
lin maternal_A = compoundA (mkA "maternal");
lin maternity_N = mkN "maternity" ;
lin matey_A = compoundA (mkA "matey");
lin mathematical_A = compoundA (mkA "mathematical");
lin mathematician_N = mkN "mathematician" "mathematicians";
lin mathematics_N = mkN "mathematics" "mathematics";
lin maths_N = mkN "maths" "maths";
lin matinee_N = mkN "matinée" "matinées";
lin matlock_PN = mkPN "Matlock";
lin matriarch_N = mkN "matriarch" "matriarchs";
lin matriarchal_A = compoundA (mkA "matriarchal");
lin matriarchy_N = mkN "matriarchy" "matriarchies";
lin matric_N = mkN "matric" "matrics";
lin matricide_N = mkN "matricide" "matricides";
lin matriculate_V = mkV "matriculate" "matriculates" "matriculated" "matriculated" "matriculating";
lin matriculate_V2 = mkV2 (mkV "matriculate" "matriculates" "matriculated" "matriculated" "matriculating");
lin matriculation_N = mkN "matriculation" "matriculations";
lin matrimonial_A = compoundA (mkA "matrimonial");
lin matrimony_N = mkN "matrimony" ;
lin matrix_N = mkN "matrix" "matrixes";
lin matron_N = mkN "matron" "matrons";
lin matronly_A = compoundA (mkA "matronly");
lin matt_A = compoundA (mkA "matt");
lin matt_PN = mkPN "Matt";
lin matted_A = compoundA (mkA "matted");
lin matter_N = mkN "matter" "matters";
lin matter_V = mkV "matter" "matters" "mattered" "mattered" "mattering";
lin matter_of_course_A = compoundA (mkA "matter - of - course");
lin matter_of_fact_A = compoundA (mkA "matter - of - fact");
lin matthew_PN = mkPN "Matthew";
lin matting_N = mkN "matting" ;
lin mattock_N = mkN "mattock" "mattocks";
lin mattress_N = mkN "mattress" "mattresses";
lin maturate_V = mkV "maturate" "maturates" "maturated" "maturated" "maturating";
lin maturation_N = mkN "maturation" ;
lin mature_A = compoundA (mkA "mature");
lin mature_V = mkV "mature" "matures" "matured" "matured" "maturing";
lin mature_V2 = mkV2 (mkV "mature" "matures" "matured" "matured" "maturing");
lin maturity_N = mkN "maturity" ;
lin matutinal_A = compoundA (mkA "matutinal");
lin maud_PN = mkPN "Maud";
lin maudie_PN = mkPN "Maudie";
lin maudlin_A = compoundA (mkA "maudlin");
lin maul_V2 = mkV2 (mkV "maul" "mauls" "mauled" "mauled" "mauling");
lin maulstick_N = mkN "maulstick" "maulsticks";
lin maunder_V = mkV "maunder" "maunders" "maundered" "maundered" "maundering";
lin maundy_thursday_N = mkN "maundy thursday" "maundy thursdays";
lin maundy_thursday_PN = mkPN "Maundy thursday";
lin maureen_PN = mkPN "Maureen";
lin maurice_PN = mkPN "Maurice";
lin mauritania_PN = mkPN "Mauritania";
lin mauritanian_A = compoundA (mkA "mauritanian");
lin mauritanian_N = mkN "mauritanian" "mauritanians";
lin mauritian_A = compoundA (mkA "mauritian");
lin mauritian_N = mkN "mauritian" "mauritians";
lin mauritius_PN = mkPN "Mauritius";
lin mausoleum_N = mkN "mausoleum" "mausoleums";
lin mauve_A = compoundA (mkA "mauve");
lin mauve_N = mkN "mauve" "mauves";
lin maverick_N = mkN "maverick" "mavericks";
lin mavis_N = mkN "mavis" "mavises";
lin mavis_PN = mkPN "Mavis";
lin maw_N = mkN "maw" "maws";
lin mawkish_A = compoundA (mkA "mawkish");
lin mawkishness_N = mkN "mawkishness" ;
lin max_N = mkN "max" ;
lin max_PN = mkPN "Max";
lin maxim_N = mkN "maxim" "maxims";
lin maximal_A = compoundA (mkA "maximal");
lin maximization_N = mkN "maximization" "maximizations";
lin maximize_V2 = mkV2 (mkV "maximize" "maximizes" "maximized" "maximized" "maximizing");
lin maximum_A = compoundA (mkA "maximum");
lin maximum_N = mkN "maximum" "maximums";
lin maxine_PN = mkPN "Maxine";
lin may_N = mkN "may" "mays";
lin may_PN = mkPN "May";
lin may_VV = {
    s = table { 
      VVF VInf => ["be allowed to"] ;
      VVF VPres => "may" ;
      VVF VPPart => ["been allowed to"] ;
      VVF VPresPart => ["being allowed to"] ;
      VVF VPast => "might" ;
      VVPastNeg => "mightn't" ;
      VVPresNeg => "may not"
      } ;
    typ = VVAux
    } ;
lin may_beetle_N = mkN "may - beetle" "may - beetles";
lin may_bug_N = mkN "may - bug" "may - bugs";
lin maybe_Adv = mkAdv "maybe";
lin mayday_N = mkN "mayday" "maydays";
lin mayfair_PN = mkPN "Mayfair";
lin mayfield_PN = mkPN "Mayfield";
lin mayfly_N = mkN "mayfly" "mayflies";
lin mayhem_N = mkN "mayhem" ;
lin mayo_PN = mkPN "Mayo";
lin mayonnaise_N = mkN "mayonnaise" ;
lin mayor_N = mkN "mayor" "mayors";
lin mayoral_A = compoundA (mkA "mayoral");
lin mayoralty_N = mkN "mayoralty" "mayoralties";
lin mayoress_N = mkN "mayoress" "mayoresses";
lin maypole_N = mkN "maypole" "maypoles";
lin maze_N = mkN "maze" "mazes";
lin mazed_A = compoundA (mkA "mazed");
lin mazurka_N = mkN "mazurka" "mazurkas";
lin mb_N = mkN "mb" ;
lin mc_N = mkN "mc" ;
lin mcc_N = mkN "mcc" ;
lin mccarthyism_N = mkN "mccarthyism" ;
lin md_N = mkN "md" ;
lin mead_N = mkN "mead" "meads";
lin meadow_N = mkN "meadow" "meadows";
lin meagre_A = compoundA (mkA "meagre");
lin meagreness_N = mkN "meagreness" ;
lin meal_N = mkN "meal" "meals";
lin mealie_N = mkN "mealie" "mealies";
lin mealtime_N = mkN "mealtime" "mealtimes";
lin mealy_A = mkA "mealy" "mealier";
lin mealy_bug_N = mkN "mealy - bug" "mealy - bugs";
lin mealy_mouthed_A = compoundA (mkA "mealy - mouthed");
lin mean_A = mkA "mean" "meaner";
lin mean_N = mkN "mean" "means";
lin mean_V = IrregEng.mean_V;
lin mean_V2 = mkV2 (IrregEng.mean_V);
lin mean_VA = mkVA (IrregEng.mean_V);
lin mean_VV = mkVV (IrregEng.mean_V);
lin mean_VS = mkVS (IrregEng.mean_V);
lin meander_V = mkV "meander" "meanders" "meandered" "meandered" "meandering";
lin meanderingly_Adv = mkAdv "meanderingly";
lin meanie_N = mkN "meanie" "meanies";
lin meaning_A = compoundA (mkA "meaning");
lin meaning_N = mkN "meaning" "meanings";
lin meaningful_A = compoundA (mkA "meaningful");
lin meaningless_A = compoundA (mkA "meaningless");
lin meanness_N = mkN "meanness" ;
lin meantime_Adv = mkAdv "meantime";
lin meantime_N = mkN "meantime" ;
lin meanwhile_Adv = mkAdv "meanwhile";
lin meany_N = mkN "meany" "meanies";
lin measles_N = mkN "measles" "measles";
lin measly_A = compoundA (mkA "measly");
lin measurable_A = compoundA (mkA "measurable");
lin measure_N = mkN "measure" "measures";
lin measure_V = mkV "measure" "measures" "measured" "measured" "measuring";
lin measure_V2 = mkV2 (mkV "measure" "measures" "measured" "measured" "measuring");
lin measured_A = compoundA (mkA "measured");
lin measureless_A = compoundA (mkA "measureless");
lin measurement_N = mkN "measurement" "measurements";
lin meat_N = mkN "meat" "meats";
lin meat_safe_N = mkN "meat - safe" "meat - safes";
lin meatball_N = mkN "meatball" "meatballs";
lin meath_PN = mkPN "Meath";
lin meatless_A = compoundA (mkA "meatless");
lin meaty_A = mkA "meaty" "meatier";
lin mecca_PN = mkPN "Mecca";
lin mechanic_N = mkN "mechanic" "mechanics";
lin mechanical_A = compoundA (mkA "mechanical");
lin mechanics_N = mkN "mechanics" "mechanics";
lin mechanism_N = mkN "mechanism" "mechanisms";
lin mechanistic_A = compoundA (mkA "mechanistic");
lin mechanistically_Adv = mkAdv "mechanistically";
lin mechanization_N = mkN "mechanization" "mechanizations";
lin mechanize_V2 = mkV2 (mkV "mechanize" "mechanizes" "mechanized" "mechanized" "mechanizing");
lin med_N = mkN "med" ;
lin medal_N = mkN "medal" "medals";
lin medalist_N = mkN "medalist" "medalists";
lin medallion_N = mkN "medallion" "medallions";
lin medallist_N = mkN "medallist" "medallists";
lin medan_PN = mkPN "Medan";
lin meddle_V = mkV "meddle" "meddles" "meddled" "meddled" "meddling";
lin meddler_N = mkN "meddler" "meddlers";
lin meddlesome_A = compoundA (mkA "meddlesome");
lin medellin_PN = mkPN "Medellin";
lin mediaeval_A = compoundA (mkA "mediaeval");
lin medial_A = compoundA (mkA "medial");
lin median_A = compoundA (mkA "median");
lin median_N = mkN "median" "medians";
lin mediate_V = mkV "mediate" "mediates" "mediated" "mediated" "mediating";
lin mediate_V2 = mkV2 (mkV "mediate" "mediates" "mediated" "mediated" "mediating");
lin mediation_N = mkN "mediation" ;
lin mediator_N = mkN "mediator" "mediators";
lin medic_N = mkN "medic" "medics";
lin medical_A = compoundA (mkA "medical");
lin medical_N = mkN "medical" "medicals";
lin medicament_N = mkN "medicament" "medicaments";
lin medicare_N = mkN "medicare" ;
lin medicate_V2 = mkV2 (mkV "medicate" "medicates" "medicated" "medicated" "medicating");
lin medication_N = mkN "medication" "medications";
lin medicinal_A = compoundA (mkA "medicinal");
lin medicine_N = mkN "medicine" "medicines";
lin medicine_ball_N = mkN "medicine - ball" "medicine - balls";
lin medicine_chest_N = mkN "medicine - chest" "medicine - chests";
lin medicine_man_N = mkN "medicine - man" "medicine - men";
lin medico_N = mkN "medico" "medicos";
lin medieval_A = compoundA (mkA "medieval");
lin mediocre_A = compoundA (mkA "mediocre");
lin mediocrity_N = mkN "mediocrity" "mediocrities";
lin meditate_V = mkV "meditate" "meditates" "meditated" "meditated" "meditating";
lin meditate_V2 = mkV2 (mkV "meditate" "meditates" "meditated" "meditated" "meditating");
lin meditation_N = mkN "meditation" "meditations";
lin meditative_A = compoundA (mkA "meditative");
lin mediterranean_A = compoundA (mkA "mediterranean");
lin medium_A = compoundA (mkA "medium");
lin medium_N = mkN "medium" "mediums";
lin medium_grade_A = compoundA (mkA "medium - grade");
lin medlar_N = mkN "medlar" "medlars";
lin medley_N = mkN "medley" "medleys";
lin meed_N = mkN "meed" "meeds";
lin meek_A = mkA "meek" "meeker";
lin meekness_N = mkN "meekness" ;
lin meerschaum_N = mkN "meerschaum" "meerschaums";
lin meet_A = compoundA (mkA "meet");
lin meet_N = mkN "meet" "meets";
lin meet_V = IrregEng.meet_V;
lin meet_V2 = mkV2 (IrregEng.meet_V);
lin meet_V2V = mkV2V (IrregEng.meet_V) noPrep to_Prep ;
lin meeting_N = mkN "meeting" "meetings";
lin meeting_house_N = mkN "meeting - house" "meeting - houses";
lin meeting_place_N = mkN "meeting - place" "meeting - places";
lin meg_PN = mkPN "Meg";
lin megacycle_N = mkN "megacycle" "megacycles";
lin megadeath_N = mkN "megadeath" "megadeaths";
lin megalith_N = mkN "megalith" "megaliths";
lin megalithic_A = compoundA (mkA "megalithic");
lin megalomania_N = mkN "megalomania" ;
lin megalomaniac_N = mkN "megalomaniac" "megalomaniacs";
lin megaphone_N = mkN "megaphone" "megaphones";
lin megaton_N = mkN "megaton" "megatons";
lin megrim_N = mkN "megrim" "megrims";
lin meiosis_N = mkN "meiosis" ;
lin melancholia_N = mkN "melancholia" ;
lin melancholic_A = compoundA (mkA "melancholic");
lin melancholy_A = compoundA (mkA "melancholy");
lin melancholy_N = mkN "melancholy" ;
lin melange_N = mkN "mélange" "mélanges";
lin melbourne_PN = mkPN "Melbourne";
lin melcombe_PN = mkPN "Melcombe";
lin melcombe_regis_PN = mkPN "Melcombe regis";
lin meld_V2 = mkV2 (mkV "meld");
lin melee_N = mkN "mêlée" "mêlées";
lin meliorate_V = mkV "meliorate" "meliorates" "meliorated" "meliorated" "meliorating";
lin meliorate_V2 = mkV2 (mkV "meliorate" "meliorates" "meliorated" "meliorated" "meliorating");
lin melioration_N = mkN "melioration" "meliorations";
lin meliorism_N = mkN "meliorism" ;
lin melksham_PN = mkPN "Melksham";
lin mellifluous_A = compoundA (mkA "mellifluous");
lin mellow_A = mkA "mellow" "mellower";
lin mellow_V = mkV "mellow" "mellows" "mellowed" "mellowed" "mellowing";
lin mellow_V2 = mkV2 (mkV "mellow" "mellows" "mellowed" "mellowed" "mellowing");
lin mellowness_N = mkN "mellowness" ;
lin melodic_A = compoundA (mkA "melodic");
lin melodious_A = compoundA (mkA "melodious");
lin melodiousness_N = mkN "melodiousness" ;
lin melodrama_N = mkN "melodrama" "melodramas";
lin melodramatic_A = compoundA (mkA "melodramatic");
lin melodramatically_Adv = mkAdv "melodramatically";
lin melody_N = mkN "melody" "melodies";
lin melon_N = mkN "melon" "melons";
lin melt_V = mkV "melt" "melts" "melted" "melted" "melting";
lin melt_V2 = mkV2 (mkV "melt" "melts" "melted" "melted" "melting");
lin meltham_PN = mkPN "Meltham";
lin melting_A = compoundA (mkA "melting");
lin melting_point_N = mkN "melting - point" "melting - points";
lin melting_pot_N = mkN "melting - pot" "melting - pots";
lin melton_mowbray_PN = mkPN "Melton mowbray";
lin member_N = mkN "member" "members";
lin membership_N = mkN "membership" ;
lin membrane_N = mkN "membrane" "membranes";
lin membranous_A = compoundA (mkA "membranous");
lin memento_N = mkN "memento" "mementos";
lin memo_N = mkN "memo" "memos";
lin memoir_N = mkN "memoir" "memoirs";
lin memorable_A = compoundA (mkA "memorable");
lin memorandum_N = mkN "memorandum" "memorandums";
lin memorial_N = mkN "memorial" "memorials";
lin memorialize_V2 = mkV2 (mkV "memorialize" "memorializes" "memorialized" "memorialized" "memorializing");
lin memorize_V2 = mkV2 (mkV "memorize" "memorizes" "memorized" "memorized" "memorizing");
lin memory_N = mkN "memory" "memories";
lin memphis_PN = mkPN "Memphis";
lin memsahib_N = mkN "memsahib" "memsahibs";
lin menace_N = mkN "menace" "menaces";
lin menace_V2 = mkV2 (mkV "menace" "menaces" "menaced" "menaced" "menacing");
lin menacingly_Adv = mkAdv "menacingly";
lin menage_N = mkN "ménage" "ménages";
lin menagerie_N = mkN "menagerie" "menageries";
lin mend_N = mkN "mend" "mends";
lin mend_V = mkV "mend" "mends" "mended" "mended" "mending";
lin mend_V2 = mkV2 (mkV "mend" "mends" "mended" "mended" "mending");
lin mendacious_A = compoundA (mkA "mendacious");
lin mendacity_N = mkN "mendacity" "mendacities";
lin mendelian_A = compoundA (mkA "mendelian");
lin mender_N = mkN "mender" "menders";
lin mendicant_A = compoundA (mkA "mendicant");
lin mendicant_N = mkN "mendicant" "mendicants";
lin mending_N = mkN "mending" ;
lin menial_A = compoundA (mkA "menial");
lin menial_N = mkN "menial" "menials";
lin meningitis_N = mkN "meningitis" ;
lin menopause_N = mkN "menopause" "menopauses";
lin menstrual_A = compoundA (mkA "menstrual");
lin menstruate_V = mkV "menstruate" "menstruates" "menstruated" "menstruated" "menstruating";
lin menstruation_N = mkN "menstruation" ;
lin mensurable_A = compoundA (mkA "mensurable");
lin mensuration_N = mkN "mensuration" "mensurations";
lin mental_A = compoundA (mkA "mental");
lin mentality_N = mkN "mentality" "mentalities";
lin menthol_N = mkN "menthol" ;
lin mentholated_A = compoundA (mkA "mentholated");
lin mention_N = mkN "mention" "mentions";
lin mention_V = mkV "mention" "mentions" "mentioned" "mentioned" "mentioning";
lin mention_V2 = mkV2 (mkV "mention" "mentions" "mentioned" "mentioned" "mentioning");
lin mention_VS = mkVS (mkV "mention" "mentions" "mentioned" "mentioned" "mentioning");
lin mentioned_A = compoundA (mkA "mentioned");
lin mentor_N = mkN "mentor" "mentors";
lin menu_N = mkN "menu" "menus";
lin meopham_PN = mkPN "Meopham";
lin mephistophelian_A = compoundA (mkA "mephistophelian");
lin mercantile_A = compoundA (mkA "mercantile");
lin mercator_PN = mkPN "Mercator";
lin mercenary_A = compoundA (mkA "mercenary");
lin mercenary_N = mkN "mercenary" "mercenaries";
lin mercer_N = mkN "mercer" "mercers";
lin mercerize_V2 = mkV2 (mkV "mercerize" "mercerizes" "mercerized" "mercerized" "mercerizing");
lin merchandise_N = mkN "merchandise" ;
lin merchant_N = mkN "merchant" "merchants";
lin merchantman_N = mkN "merchantman" "merchantmen" {- FIXME: guessed plural form -};
lin merciful_A = compoundA (mkA "merciful");
lin merciless_A = compoundA (mkA "merciless");
lin mercurial_A = compoundA (mkA "mercurial");
lin mercury_N = mkN "mercury" ;
lin mercury_PN = mkPN "Mercury";
lin mercy_N = mkN "mercy" "mercies";
lin mere_A = compoundA (mkA "mere");
lin mere_N = mkN "mere" "meres";
lin meretricious_A = compoundA (mkA "meretricious");
lin meretriciousness_N = mkN "meretriciousness" ;
lin merge_V = mkV "merge" "merges" "merged" "merged" "merging";
lin merge_V2 = mkV2 (mkV "merge" "merges" "merged" "merged" "merging");
lin merger_N = mkN "merger" "mergers";
lin meridian_N = mkN "meridian" "meridians";
lin meridional_A = compoundA (mkA "meridional");
lin meringue_N = mkN "meringue" "meringues";
lin merino_N = mkN "merino" ;
lin merino_sheep_N = mkN "merino - sheep" "merino - sheep";
lin merit_N = mkN "merit" "merits";
lin merit_V2 = mkV2 (mkV "merit" "merits" "merited" "merited" "meriting");
lin meritocracy_N = mkN "meritocracy" "meritocracies";
lin meritocratic_A = compoundA (mkA "meritocratic");
lin meritorious_A = compoundA (mkA "meritorious");
lin mermaid_N = mkN "mermaid" "mermaids";
lin merman_N = mkN "merman" "mermen" {- FIXME: guessed plural form -};
lin merrily_Adv = mkAdv "merrily";
lin merriment_N = mkN "merriment" ;
lin merry_A = mkA "merry" "merrier";
lin merry_go_round_N = mkN "merry - go - round" "merry - go - rounds";
lin merrymaker_N = mkN "merrymaker" "merrymakers";
lin merrymaking_N = mkN "merrymaking" ;
lin merthyr_tydfil_PN = mkPN "Merthyr tydfil";
lin merton_PN = mkPN "Merton";
lin mesalliance_N = mkN "mésalliance" "mésalliances";
lin mescal_N = mkN "mescal" "mescals";
lin mescaline_N = mkN "mescaline" ;
lin meseems_Adv = mkAdv "meseems";
lin mesh_N = mkN "mesh" "meshes";
lin mesh_V = mkV "mesh" "meshes" "meshed" "meshed" "meshing";
lin mesh_V2 = mkV2 (mkV "mesh" "meshes" "meshed" "meshed" "meshing");
lin mesmeric_A = compoundA (mkA "mesmeric");
lin mesmerism_N = mkN "mesmerism" ;
lin mesmerist_N = mkN "mesmerist" "mesmerists";
lin mesmerize_V2 = mkV2 (mkV "mesmerize" "mesmerizes" "mesmerized" "mesmerized" "mesmerizing");
lin meson_N = mkN "meson" "mesons";
lin mess_N = mkN "mess" "messes";
lin mess_V = mkV "mess" "messes" "messed" "messed" "messing";
lin mess_V2 = mkV2 (mkV "mess" "messes" "messed" "messed" "messing");
lin mess_jacket_N = mkN "mess - jacket" "mess - jackets";
lin mess_up_N = mkN "mess - up" "mess - ups";
lin message_N = mkN "message" "messages";
lin messenger_N = mkN "messenger" "messengers";
lin messiah_N = mkN "messiah" "messiahs";
lin messianic_A = compoundA (mkA "messianic");
lin messily_Adv = mkAdv "messily";
lin messina_PN = mkPN "Messina";
lin messiness_N = mkN "messiness" ;
lin messmate_N = mkN "messmate" "messmates";
lin messuage_N = mkN "messuage" "messuages";
lin messy_A = mkA "messy" "messier";
lin met_PN = mkPN "Met";
lin metabolic_A = compoundA (mkA "metabolic");
lin metabolism_N = mkN "metabolism" ;
lin metabolize_V2 = mkV2 (mkV "metabolize");
lin metacarpal_A = compoundA (mkA "metacarpal");
lin metacarpal_N = mkN "metacarpal" "metacarpals";
lin metal_N = mkN "metal" "metals";
lin metal_V2 = mkV2 (mkV "metal" "metals" "metalled" "metalled" "metalling");
lin metallic_A = compoundA (mkA "metallic");
lin metallurgical_A = compoundA (mkA "metallurgical");
lin metallurgist_N = mkN "metallurgist" "metallurgists";
lin metallurgy_N = mkN "metallurgy" ;
lin metalwork_N = mkN "metalwork" "metalworks";
lin metalworker_N = mkN "metalworker" "metalworkers";
lin metamorphose_V = mkV "metamorphose" "metamorphoses" "metamorphosed" "metamorphosed" "metamorphosing";
lin metamorphose_V2 = mkV2 (mkV "metamorphose" "metamorphoses" "metamorphosed" "metamorphosed" "metamorphosing");
lin metamorphosis_N = mkN "metamorphosis" "metamorphoses" {- FIXME: guessed plural form -};
lin metaphor_N = mkN "metaphor" "metaphors";
lin metaphorical_A = compoundA (mkA "metaphorical");
lin metaphysical_A = compoundA (mkA "metaphysical");
lin metaphysics_N = mkN "metaphysics" "metaphysics";
lin metatarsal_A = compoundA (mkA "metatarsal");
lin metatarsal_N = mkN "metatarsal" "metatarsals";
lin mete_V2 = mkV2 (mkV "mete" "metes" "meted" "meted" "meting");
lin meteor_N = mkN "meteor" "meteors";
lin meteoric_A = compoundA (mkA "meteoric");
lin meteorite_N = mkN "meteorite" "meteorites";
lin meteorological_A = compoundA (mkA "meteorological");
lin meteorologist_N = mkN "meteorologist" "meteorologists";
lin meteorology_N = mkN "meteorology" ;
lin meter_N = mkN "meter" "meters";
lin methane_N = mkN "methane" ;
lin methinks_Adv = mkAdv "methinks";
lin method_N = mkN "method" "methods";
lin methodical_A = compoundA (mkA "methodical");
lin methodism_N = mkN "methodism" ;
lin methodist_A = compoundA (mkA "methodist");
lin methodist_N = mkN "methodist" "methodists";
lin methodological_A = compoundA (mkA "methodological");
lin methodology_N = mkN "methodology" "methodologies";
lin methought_Adv = mkAdv "methought";
lin methuselah_PN = mkPN "Methuselah";
lin methyl_N = mkN "methyl" "methyls";
lin methylated_A = compoundA (mkA "methylated");
lin meticulous_A = compoundA (mkA "meticulous");
lin meticulousness_N = mkN "meticulousness" ;
lin metier_N = mkN "métier" "métiers";
lin metre_N = mkN "metre" "metres";
lin metric_A = compoundA (mkA "metric");
lin metrical_A = compoundA (mkA "metrical");
lin metrication_N = mkN "metrication" "metrications";
lin metricize_V2 = mkV2 (mkV "metricize" "metricizes" "metricized" "metricized" "metricizing");
lin metro_N = mkN "metro" "metros";
lin metronome_N = mkN "metronome" "metronomes";
lin metropolis_N = mkN "metropolis" "metropolises";
lin metropolitan_A = compoundA (mkA "metropolitan");
lin metropolitan_N = mkN "metropolitan" "metropolitans";
lin mettle_N = mkN "mettle" ;
lin mettlesome_A = compoundA (mkA "mettlesome");
lin metz_PN = mkPN "Metz";
lin mew_N = mkN "mew" "mews";
lin mew_V = mkV "mew" "mews" "mewed" "mewed" "mewing";
lin mews_N = mkN "mews" "mews";
lin mexican_A = compoundA (mkA "mexican");
lin mexican_N = mkN "mexican" "mexicans";
lin mexico_PN = mkPN "Mexico";
lin mexico_city_PN = mkPN "Mexico city";
lin mezzanine_A = compoundA (mkA "mezzanine");
lin mezzanine_N = mkN "mezzanine" "mezzanines";
lin mezzo_Adv = mkAdv "mezzo";
lin mezzo_soprano_N = mkN "mezzo - soprano" "mezzo - sopranos";
lin mezzotint_N = mkN "mezzotint" "mezzotints";
lin mg_N = mkN "mg" "mg";
lin mgr_PN = mkPN "Mgr";
lin mi5_PN = mkPN "Mi5";
lin mi6_PN = mkPN "Mi6";
lin mi_N = mkN "mi" "IRREG";
lin miami_PN = mkPN "Miami";
lin miaou_N = mkN "miaou" "miaous";
lin miaou_V = mkV "miaou" "miaous" "miaoued" "miaoued" "miaouing";
lin miaow_N = mkN "miaow" "miaows";
lin miaow_V = mkV "miaow" "miaows" "miaowed" "miaowed" "miaowing";
lin miasma_N = mkN "miasma" "miasmas";
lin mica_N = mkN "mica" ;
lin michael_PN = mkPN "Michael";
lin michaelmas_N = mkN "michaelmas" "michaelmases";
lin michaelmas_PN = mkPN "Michaelmas";
lin michelle_PN = mkPN "Michelle";
lin michigan_PN = mkPN "Michigan";
lin mick_PN = mkPN "Mick";
lin mickey_N = mkN "mickey" "IRREG";
lin mickey_PN = mkPN "Mickey";
lin mickle_N = mkN "mickle" "IRREG";
lin micro_organism_N = mkN "micro - organism" "micro - organisms";
lin microbe_N = mkN "microbe" "microbes";
lin microbiology_N = mkN "microbiology" ;
lin microcosm_N = mkN "microcosm" "microcosms";
lin microdot_N = mkN "microdot" "microdots";
lin microelectronics_N = mkN "microelectronics" "microelectronics";
lin microfiche_N = mkN "microfiche" "microfiches";
lin microfilm_N = mkN "microfilm" "microfilms";
lin microfilm_V2 = mkV2 (mkV "microfilm" "microfilms" "microfilmed" "microfilmed" "microfilming");
lin micrometer_N = mkN "micrometer" "micrometers";
lin micron_N = mkN "micron" "microns";
lin microphone_N = mkN "microphone" "microphones";
lin microscope_N = mkN "microscope" "microscopes";
lin microscopic_A = compoundA (mkA "microscopic");
lin microscopical_A = compoundA (mkA "microscopical");
lin microscopy_N = mkN "microscopy" ;
lin microwave_N = mkN "microwave" "microwaves";
lin mid_A = compoundA (mkA "mid");
lin mid_off_N = mkN "mid - off" "mid - offs";
lin mid_on_N = mkN "mid - on" "mid - ons";
lin midday_N = mkN "midday" ;
lin midden_N = mkN "midden" "middens";
lin middle_N = mkN "middle" "middles";
lin middle_aged_A = compoundA (mkA "middle - aged");
lin middle_class_A = compoundA (mkA "middle - class");
lin middle_distance_A = compoundA (mkA "middle - distance");
lin middle_of_the_road_A = compoundA (mkA "middle - of - the - road");
lin middleman_N = mkN "middleman" "middlemen";
lin middlesex_PN = mkPN "Middlesex";
lin middleton_PN = mkPN "Middleton";
lin middleweight_A = compoundA (mkA "middleweight");
lin middleweight_N = mkN "middleweight" "middleweights";
lin middlewich_PN = mkPN "Middlewich";
lin middling_A = compoundA (mkA "middling");
lin middling_Adv = mkAdv "middling";
lin middling_N = mkN "middling" "middlings";
lin middy_N = mkN "middy" "middies";
lin midfield_N = mkN "midfield" "IRREG";
lin midge_N = mkN "midge" "midges";
lin midget_N = mkN "midget" "midgets";
lin midinette_N = mkN "midinette" "midinettes";
lin midland_N = mkN "midland" "midlands";
lin midlands_PN = mkPN "Midlands";
lin midmost_A = compoundA (mkA "midmost");
lin midmost_Adv = mkAdv "midmost";
lin midnight_N = mkN "midnight" ;
lin midriff_N = mkN "midriff" "midriffs";
lin midshipman_N = mkN "midshipman" "midshipmen" {- FIXME: guessed plural form -};
lin midships_Adv = mkAdv "midships";
lin midst_N = mkN "midst" "IRREG";
lin midstream_N = mkN "midstream" ;
lin midsummer_N = mkN "midsummer" ;
lin midway_A = compoundA (mkA "midway");
lin midway_Adv = mkAdv "midway";
lin midweek_A = compoundA (mkA "midweek");
lin midweek_Adv = mkAdv "midweek";
lin midwest_PN = mkPN "Midwest";
lin midwestern_A = compoundA (mkA "midwestern");
lin midwife_N = mkN "midwife" "midwives" {- FIXME: guessed plural form -};
lin midwifery_N = mkN "midwifery" ;
lin mien_N = mkN "mien" "miens";
lin miff_V2 = mkV2 (mkV "miff");
lin might_N = mkN "might" ;
lin might_have_been_N = mkN "might - have - been" "might - have - beens";
lin mightily_Adv = mkAdv "mightily";
lin mighty_A = mkA "mighty" "mightier";
lin mighty_Adv = mkAdv "mighty";
lin mignonette_N = mkN "mignonette" ;
lin migraine_N = mkN "migraine" "migraines";
lin migrant_N = mkN "migrant" "migrants";
lin migrate_V = mkV "migrate" "migrates" "migrated" "migrated" "migrating";
lin migration_N = mkN "migration" "migrations";
lin migratory_A = compoundA (mkA "migratory");
lin mikado_N = mkN "mikado" "mikados";
lin mike_N = mkN "mike" "mikes";
lin mike_PN = mkPN "Mike";
lin milady_N = mkN "milady" "miladies";
lin milage_N = mkN "milage" "milages";
lin milan_PN = mkPN "Milan";
lin milano_PN = mkPN "Milano";
lin milch_A = compoundA (mkA "milch");
lin mild_A = mkA "mild" "milder";
lin mildenhall_PN = mkPN "Mildenhall";
lin mildew_N = mkN "mildew" ;
lin mildew_V = mkV "mildew" "mildews" "mildewed" "mildewed" "mildewing";
lin mildew_V2 = mkV2 (mkV "mildew" "mildews" "mildewed" "mildewed" "mildewing");
lin mildness_N = mkN "mildness" ;
lin mildred_PN = mkPN "Mildred";
lin mile_N = mkN "mile" "miles";
lin mileage_N = mkN "mileage" "mileages";
lin mileometer_N = mkN "mileometer" "mileometers";
lin miler_N = mkN "miler" "milers";
lin miles_PN = mkPN "Miles";
lin milestone_N = mkN "milestone" "milestones";
lin milford_PN = mkPN "Milford";
lin milford_haven_PN = mkPN "Milford haven";
lin milieu_N = mkN "milieu" "milieus";
lin militancy_N = mkN "militancy" ;
lin militant_A = compoundA (mkA "militant");
lin militant_N = mkN "militant" "militants";
lin militarism_N = mkN "militarism" ;
lin militarist_N = mkN "militarist" "militarists";
lin militaristic_A = compoundA (mkA "militaristic");
lin military_A = compoundA (mkA "military");
lin military_N = mkN "military" ;
lin militate_V = mkV "militate" "militates" "militated" "militated" "militating";
lin militia_N = mkN "militia" "militias";
lin militiaman_N = mkN "militiaman" "militiamen" {- FIXME: guessed plural form -};
lin milk_N = mkN "milk" ;
lin milk_V = mkV "milk" "milks" "milked" "milked" "milking";
lin milk_V2 = mkV2 (mkV "milk" "milks" "milked" "milked" "milking");
lin milk_churn_N = mkN "milk - churn" "milk - churns";
lin milk_powder_N = mkN "milk - powder" "milk - powders";
lin milk_shake_N = mkN "milk - shake" "milk - shakes";
lin milk_tooth_N = mkN "milk - tooth" "milk - teeth";
lin milk_white_A = compoundA (mkA "milk - white");
lin milkbar_N = mkN "milkbar" "milkbars";
lin milking_machine_N = mkN "milking - machine" "milking - machines";
lin milkmaid_N = mkN "milkmaid" "milkmaids";
lin milkman_N = mkN "milkman" "milkmen" {- FIXME: guessed plural form -};
lin milkshake_N = mkN "milkshake" "milkshakes";
lin milksop_N = mkN "milksop" "milksops";
lin milkweed_N = mkN "milkweed" "milkweeds";
lin milky_A = mkA "milky" "milkier";
lin mill_N = mkN "mill" "mills";
lin mill_V = mkV "mill" "mills" "milled" "milled" "milling";
lin mill_V2 = mkV2 (mkV "mill" "mills" "milled" "milled" "milling");
lin mill_dam_N = mkN "mill - dam" "mill - dams";
lin mill_girl_N = mkN "mill - girl" "mill - girls";
lin mill_hand_N = mkN "mill - hand" "mill - hands";
lin millboard_N = mkN "millboard" ;
lin millenarian_N = mkN "millenarian" "millenarians";
lin millennial_A = compoundA (mkA "millennial");
lin millennium_N = mkN "millennium" "millennia" {- FIXME: guessed plural form -};
lin millepede_N = mkN "millepede" "millepedes";
lin miller_N = mkN "miller" "millers";
lin millet_N = mkN "millet" ;
lin milliard_N = mkN "milliard" "milliards";
lin millibar_N = mkN "millibar" "millibars";
lin millicent_PN = mkPN "Millicent";
lin millie_PN = mkPN "Millie";
lin milligram_N = mkN "milligram" "milligrams";
lin millimetre_N = mkN "millimetre" "millimetres";
lin milliner_N = mkN "milliner" "milliners";
lin millinery_N = mkN "millinery" ;
lin millionaire_N = mkN "millionaire" "millionaires";
lin millionairess_N = mkN "millionairess" "millionairesss";
lin millionfold_Adv = mkAdv "millionfold";
lin millionth_A = compoundA (mkA "millionth");
lin millionth_N = mkN "millionth" "millionths";
lin millipede_N = mkN "millipede" "millipedes";
lin millom_PN = mkPN "Millom";
lin millpond_N = mkN "millpond" "millponds";
lin millrace_N = mkN "millrace" "millraces";
lin millstone_N = mkN "millstone" "millstones";
lin millwheel_N = mkN "millwheel" "millwheels";
lin millwright_N = mkN "millwright" "millwrights";
lin milly_PN = mkPN "Milly";
lin milngavie_PN = mkPN "Milngavie";
lin milnrow_PN = mkPN "Milnrow";
lin milometer_N = mkN "milometer" "milometers";
lin milord_N = mkN "milord" "milords";
lin milt_N = mkN "milt" ;
lin milton_keynes_PN = mkPN "Milton keynes";
lin milwaukee_PN = mkPN "Milwaukee";
lin mime_N = mkN "mime" "mimes";
lin mime_V = mkV "mime" "mimes" "mimed" "mimed" "miming";
lin mime_V2 = mkV2 (mkV "mime" "mimes" "mimed" "mimed" "miming");
lin mimeograph_N = mkN "mimeograph" "mimeographs";
lin mimeograph_V2 = mkV2 (mkV "mimeograph" "mimeographs" "mimeographed" "mimeographed" "mimeographing");
lin mimetic_A = compoundA (mkA "mimetic");
lin mimic_A = compoundA (mkA "mimic");
lin mimic_N = mkN "mimic" "mimics";
lin mimic_V2 = mkV2 (mkV "mimic" "IRREG" "IRREG" "IRREG" "IRREG");
lin mimicry_N = mkN "mimicry" ;
lin mimosa_N = mkN "mimosa" "mimosas";
lin min_N = mkN "min" ;
lin minaret_N = mkN "minaret" "minarets";
lin minatory_A = compoundA (mkA "minatory");
lin mince_N = mkN "mince" ;
lin mince_V = mkV "mince" "minces" "minced" "minced" "mincing";
lin mince_V2 = mkV2 (mkV "mince" "minces" "minced" "minced" "mincing");
lin mince_pie_N = mkN "mince - pie" "mince - pies";
lin mincemeat_N = mkN "mincemeat" ;
lin mincer_N = mkN "mincer" "mincers";
lin mincing_A = compoundA (mkA "mincing");
lin mind_N = mkN "mind" "minds";
lin mind_V = mkV "mind" "minds" "minded" "minded" "minding";
lin mind_V2 = mkV2 (mkV "mind" "minds" "minded" "minded" "minding");
lin mind_VS = mkVS (mkV "mind" "minds" "minded" "minded" "minding");
lin mind_bending_A = compoundA (mkA "mind - bending");
lin mind_blowing_A = compoundA (mkA "mind - blowing");
lin mind_boggling_A = compoundA (mkA "mind - boggling");
lin mind_reader_N = mkN "mind - reader" "mind - readers";
lin minded_A = compoundA (mkA "minded");
lin minder_N = mkN "minder" "minders";
lin mindful_A = compoundA (mkA "mindful");
lin mindfulness_N = mkN "mindfulness" ;
lin mindless_A = compoundA (mkA "mindless");
lin mindlessness_N = mkN "mindlessness" ;
lin mine_A = compoundA (mkA "mine");
lin mine_N = mkN "mine" "mines";
lin mine_V = mkV "mine" "mines" "mined" "mined" "mining";
lin mine_V2 = mkV2 (mkV "mine" "mines" "mined" "mined" "mining");
lin mine_detector_N = mkN "mine - detector" "mine - detectors";
lin mine_disposal_N = mkN "mine - disposal" "mine - disposals";
lin minefield_N = mkN "minefield" "minefields";
lin minehead_PN = mkPN "Minehead";
lin minelayer_N = mkN "minelayer" "minelayers";
lin minelaying_N = mkN "minelaying" ;
lin miner_N = mkN "miner" "miners";
lin mineral_A = compoundA (mkA "mineral");
lin mineral_N = mkN "mineral" "minerals";
lin mineralogist_N = mkN "mineralogist" "mineralogists";
lin mineralogy_N = mkN "mineralogy" ;
lin minestrone_N = mkN "minestrone" ;
lin minesweeper_N = mkN "minesweeper" "minesweepers";
lin minesweeping_N = mkN "minesweeping" ;
lin mineworker_N = mkN "mineworker" "mineworkers";
lin mingle_V = mkV "mingle" "mingles" "mingled" "mingled" "mingling";
lin mingle_V2 = mkV2 (mkV "mingle" "mingles" "mingled" "mingled" "mingling");
lin mingy_A = mkA "mingy" "mingier";
lin miniature_N = mkN "miniature" "miniatures";
lin miniaturist_N = mkN "miniaturist" "miniaturists";
lin miniaturization_N = mkN "miniaturization" ;
lin miniaturize_V2 = mkV2 (mkV "miniaturize" "miniaturizes" "miniaturized" "miniaturized" "miniaturizing");
lin minim_N = mkN "minim" "minims";
lin minimal_A = compoundA (mkA "minimal");
lin minimize_V2 = mkV2 (mkV "minimize" "minimizes" "minimized" "minimized" "minimizing");
lin minimum_A = compoundA (mkA "minimum");
lin minimum_N = mkN "minimum" "minimums";
lin mining_N = mkN "mining" ;
lin minion_N = mkN "minion" "minions";
lin minister_N = mkN "minister" "ministers";
lin minister_V = mkV "minister" "ministers" "ministered" "ministered" "ministering";
lin ministerial_A = compoundA (mkA "ministerial");
lin ministrant_A = compoundA (mkA "ministrant");
lin ministrant_N = mkN "ministrant" "ministrants";
lin ministration_N = mkN "ministration" "ministrations";
lin ministry_N = mkN "ministry" "ministries";
lin miniver_N = mkN "miniver" ;
lin mink_N = mkN "mink" "minks";
lin minneapolis_PN = mkPN "Minneapolis";
lin minnesota_PN = mkPN "Minnesota";
lin minnow_N = mkN "minnow" "minnows";
lin minor_A = compoundA (mkA "minor");
lin minor_N = mkN "minor" "minors";
lin minority_N = mkN "minority" "minorities";
lin minotaur_N = mkN "minotaur" "minotaurs";
lin minsk_PN = mkPN "Minsk";
lin minster_N = mkN "minster" "minsters";
lin minster_in_sheppey_PN = mkPN "Minster - in - sheppey";
lin minstrel_N = mkN "minstrel" "minstrels";
lin minstrelsy_N = mkN "minstrelsy" ;
lin mint_N = mkN "mint" "mints";
lin mint_V2 = mkV2 (mkV "mint" "mints" "minted" "minted" "minting");
lin minuet_N = mkN "minuet" "minuets";
lin minus_A = compoundA (mkA "minus");
lin minus_N = mkN "minus" "minuses";
lin minus_Prep = mkPrep "minus";
lin minuscule_A = compoundA (mkA "minuscule");
lin minute_A = mkA "minute" "minuter";
lin minute_N = mkN "minute" "minutes";
lin minute_V2 = mkV2 (mkV "minute" "minutes" "minuted" "minuted" "minuting");
lin minute_book_N = mkN "minute - book" "minute - books";
lin minute_gun_N = mkN "minute - gun" "minute - guns";
lin minute_hand_N = mkN "minute - hand" "minute - hands";
lin minuteman_N = mkN "minuteman" "minutemen" {- FIXME: guessed plural form -};
lin minuteness_N = mkN "minuteness" ;
lin minx_N = mkN "minx" "minxes";
lin miracle_N = mkN "miracle" "miracles";
lin miraculous_A = compoundA (mkA "miraculous");
lin mirage_N = mkN "mirage" "mirages";
lin miranda_PN = mkPN "Miranda";
lin mire_N = mkN "mire" ;
lin mire_V = mkV "mire" "mires" "mired" "mired" "miring";
lin mire_V2 = mkV2 (mkV "mire" "mires" "mired" "mired" "miring");
lin miriam_PN = mkPN "Miriam";
lin mirror_N = mkN "mirror" "mirrors";
lin mirror_V2 = mkV2 (mkV "mirror" "mirrors" "mirrored" "mirrored" "mirroring");
lin mirth_N = mkN "mirth" ;
lin mirthful_A = compoundA (mkA "mirthful");
lin mirthless_A = compoundA (mkA "mirthless");
lin miry_A = mkA "miry" "mirier";
lin misadventure_N = mkN "misadventure" "misadventures";
lin misadvise_V2 = mkV2 (mkV "misadvise" "misadvises" "misadvised" "misadvised" "misadvising");
lin misalliance_N = mkN "misalliance" "misalliances";
lin misanthrope_N = mkN "misanthrope" "misanthropes";
lin misanthropic_A = compoundA (mkA "misanthropic");
lin misanthropy_N = mkN "misanthropy" ;
lin misapplication_N = mkN "misapplication" "misapplications";
lin misapply_V2 = mkV2 (mkV "misapply" "misapplies" "misapplied" "misapplied" "misapplying");
lin misapprehend_V2 = mkV2 (mkV "misapprehend" "misapprehends" "misapprehended" "misapprehended" "misapprehending");
lin misapprehension_N = mkN "misapprehension" "misapprehensions";
lin misappropriate_V2 = mkV2 (mkV "misappropriate" "misappropriates" "misappropriated" "misappropriated" "misappropriating");
lin misappropriation_N = mkN "misappropriation" "misappropriations";
lin misbegotten_A = compoundA (mkA "misbegotten");
lin misbehave_V = mkV "misbehave" "misbehaves" "misbehaved" "misbehaved" "misbehaving";
lin misbehave_V2 = mkV2 (mkV "misbehave" "misbehaves" "misbehaved" "misbehaved" "misbehaving");
lin misbehaviour_N = mkN "misbehaviour" ;
lin misc_PN = mkPN "Misc";
lin miscalculate_V = mkV "miscalculate" "miscalculates" "miscalculated" "miscalculated" "miscalculating";
lin miscalculate_V2 = mkV2 (mkV "miscalculate" "miscalculates" "miscalculated" "miscalculated" "miscalculating");
lin miscalculation_N = mkN "miscalculation" "miscalculations";
lin miscall_V2 = mkV2 (mkV "miscall" "miscalls" "miscalled" "miscalled" "miscalling");
lin miscarriage_N = mkN "miscarriage" "miscarriages";
lin miscarry_V2 = mkV2 (mkV "miscarry" "miscarries" "miscarried" "miscarried" "miscarrying");
lin miscast_V2 = mkV2 (mkV "mis" IrregEng.cast_V);
lin miscegenation_N = mkN "miscegenation" ;
lin miscellaneous_A = compoundA (mkA "miscellaneous");
lin miscellany_N = mkN "miscellany" "miscellanies";
lin mischance_N = mkN "mischance" "mischances";
lin mischief_N = mkN "mischief" "mischiefs";
lin mischief_maker_N = mkN "mischief - maker" "mischief - makers";
lin mischief_making_N = mkN "mischief - making" ;
lin mischievous_A = compoundA (mkA "mischievous");
lin mischievousness_N = mkN "mischievousness" ;
lin misconceive_V = mkV "misconceive" "misconceives" "misconceived" "misconceived" "misconceiving";
lin misconceive_V2 = mkV2 (mkV "misconceive" "misconceives" "misconceived" "misconceived" "misconceiving");
lin misconception_N = mkN "misconception" "misconceptions";
lin misconduct_N = mkN "misconduct" ;
lin misconduct_V2 = mkV2 (mkV "misconduct" "misconducts" "misconducted" "misconducted" "misconducting");
lin misconstruction_N = mkN "misconstruction" "misconstructions";
lin misconstrue_V2 = mkV2 (mkV "misconstrue" "misconstrues" "misconstrued" "misconstrued" "misconstruing");
lin miscount_N = mkN "miscount" "miscounts";
lin miscount_V = mkV "miscount" "miscounts" "miscounted" "miscounted" "miscounting";
lin miscount_V2 = mkV2 (mkV "miscount" "miscounts" "miscounted" "miscounted" "miscounting");
lin miscreant_N = mkN "miscreant" "miscreants";
lin misdate_V2 = mkV2 (mkV "misdate" "misdates" "misdated" "misdated" "misdating");
lin misdeal_N = mkN "misdeal" "misdeals";
lin misdeal_V = mkV "mis" IrregEng.deal_V;
lin misdeal_V2 = mkV2 (mkV "mis" IrregEng.deal_V);
lin misdeed_N = mkN "misdeed" "misdeeds";
lin misdemeanour_N = mkN "misdemeanour" "misdemeanours";
lin misdirect_V2 = mkV2 (mkV "misdirect" "misdirects" "misdirected" "misdirected" "misdirecting");
lin misdirection_N = mkN "misdirection" "misdirections";
lin misdoing_N = mkN "misdoing" "misdoings";
lin mise_en_scene_N = mkN "mise en scène" ;
lin miser_N = mkN "miser" "misers";
lin miserable_A = compoundA (mkA "miserable");
lin miserliness_N = mkN "miserliness" ;
lin miserly_A = compoundA (mkA "miserly");
lin misery_N = mkN "misery" "miseries";
lin misfire_N = mkN "misfire" "misfires";
lin misfire_V = mkV "misfire" "misfires" "misfired" "misfired" "misfiring";
lin misfit_N = mkN "misfit" "misfits";
lin misfortune_N = mkN "misfortune" "misfortunes";
lin misgive_V2 = mkV2 (mkV "mis" IrregEng.give_V);
lin misgiving_N = mkN "misgiving" "misgivings";
lin misgovern_V2 = mkV2 (mkV "misgovern" "misgoverns" "misgoverned" "misgoverned" "misgoverning");
lin misgovernment_N = mkN "misgovernment" ;
lin misguide_V2 = mkV2 (mkV "misguide" "misguides" "misguided" "misguided" "misguiding");
lin misguided_A = compoundA (mkA "misguided");
lin mishandle_V2 = mkV2 (mkV "mishandle" "mishandles" "mishandled" "mishandled" "mishandling");
lin mishap_N = mkN "mishap" "mishaps";
lin mishmash_N = mkN "mishmash" ;
lin misinform_V2 = mkV2 (mkV "misinform" "misinforms" "misinformed" "misinformed" "misinforming");
lin misinformation_N = mkN "misinformation" ;
lin misinterpret_V2 = mkV2 (mkV "misinterpret" "misinterprets" "misinterpreted" "misinterpreted" "misinterpreting");
lin misinterpretation_N = mkN "misinterpretation" "misinterpretations";
lin misjudge_V = mkV "misjudge" "misjudges" "misjudged" "misjudged" "misjudging";
lin misjudge_V2 = mkV2 (mkV "misjudge" "misjudges" "misjudged" "misjudged" "misjudging");
lin mislay_V2 = mkV2 (mkV "mi" IrregEng.slay_V);
lin mislead_V2 = mkV2 (mkV "mis" IrregEng.lead_V);
lin mismanage_V2 = mkV2 (mkV "mismanage" "mismanages" "mismanaged" "mismanaged" "mismanaging");
lin mismanagement_N = mkN "mismanagement" ;
lin misname_V2 = mkV2 (mkV "misname" "misnames" "misnamed" "misnamed" "misnaming");
lin misnomer_N = mkN "misnomer" "misnomers";
lin misogynist_N = mkN "misogynist" "misogynists";
lin misplace_V2 = mkV2 (mkV "misplace" "misplaces" "misplaced" "misplaced" "misplacing");
lin misprint_N = mkN "misprint" "misprints";
lin misprint_V2 = mkV2 (mkV "misprint" "misprints" "misprinted" "misprinted" "misprinting");
lin mispronounce_V2 = mkV2 (mkV "mispronounce" "mispronounces" "mispronounced" "mispronounced" "mispronouncing");
lin mispronunciation_N = mkN "mispronunciation" "mispronunciations";
lin misquotation_N = mkN "misquotation" "misquotations";
lin misquote_V2 = mkV2 (mkV "misquote" "misquotes" "misquoted" "misquoted" "misquoting");
lin misread_V2 = mkV2 (mkV "mis" IrregEng.read_V);
lin misrepresent_V2 = mkV2 (mkV "misrepresent" "misrepresents" "misrepresented" "misrepresented" "misrepresenting");
lin misrepresentation_N = mkN "misrepresentation" "misrepresentations";
lin misrule_N = mkN "misrule" ;
lin miss_N = mkN "miss" "misses";
lin miss_V = mkV "miss" "misses" "missed" "missed" "missing";
lin miss_V2 = mkV2 (mkV "miss" "misses" "missed" "missed" "missing");
lin missal_N = mkN "missal" "missals";
lin misshapen_A = compoundA (mkA "misshapen");
lin missile_N = mkN "missile" "missiles";
lin missing_A = compoundA (mkA "missing");
lin mission_N = mkN "mission" "missions";
lin missionary_N = mkN "missionary" "missionaries";
lin missis_N = mkN "missis" "misses" {- FIXME: guessed plural form -};
lin mississippi_PN = mkPN "Mississippi";
lin missive_N = mkN "missive" "missives";
lin missouri_PN = mkPN "Missouri";
lin misspell_V2 = mkV2 (mkV "misspell" "misspells" "misspelled" "misspelled" "misspelling");
lin misspelling_N = mkN "misspelling" "misspellings";
lin misspend_V2 = mkV2 (mkV "mis" IrregEng.spend_V);
lin misstate_V2 = mkV2 (mkV "misstate" "misstates" "misstated" "misstated" "misstating");
lin misstatement_N = mkN "misstatement" "misstatements";
lin missus_N = mkN "missus" "missi" {- FIXME: guessed plural form -};
lin missy_N = mkN "missy" "missies";
lin mist_N = mkN "mist" "mists";
lin mist_V = mkV "mist" "mists" "misted" "misted" "misting";
lin mist_V2 = mkV2 (mkV "mist" "mists" "misted" "misted" "misting");
lin mistake_N = mkN "mistake" "mistakes";
lin mistake_V = IrregEng.mistake_V;
lin mistake_V2 = mkV2 (IrregEng.mistake_V);
lin mistaken_A = compoundA (mkA "mistaken");
lin mister_N = mkN "mister" "IRREG";
lin mistily_Adv = mkAdv "mistily";
lin mistime_V2 = mkV2 (mkV "mistime" "mistimes" "mistimed" "mistimed" "mistiming");
lin mistiness_N = mkN "mistiness" ;
lin mistletoe_N = mkN "mistletoe" ;
lin mistral_N = mkN "mistral" "mistrals";
lin mistranslate_V2 = mkV2 (mkV "mistranslate" "mistranslates" "mistranslated" "mistranslated" "mistranslating");
lin mistranslation_N = mkN "mistranslation" "mistranslations";
lin mistreat_V2 = mkV2 (mkV "mistreat");
lin mistress_N = mkN "mistress" "mistresses";
lin mistrial_N = mkN "mistrial" "mistrials";
lin mistrust_N = mkN "mistrust" ;
lin mistrust_V2 = mkV2 (mkV "mistrust" "mistrusts" "mistrusted" "mistrusted" "mistrusting");
lin mistrustful_A = compoundA (mkA "mistrustful");
lin misty_A = mkA "misty" "mistier";
lin misunderstand_V2 = mkV2 (mkV "mis" IrregEng.understand_V);
lin misunderstanding_N = mkN "misunderstanding" "misunderstandings";
lin misuse_N = mkN "misuse" "misuses";
lin misuse_V2 = mkV2 (mkV "misuse" "misuses" "misused" "misused" "misusing");
lin mite_N = mkN "mite" "mites";
lin mitigate_V2 = mkV2 (mkV "mitigate" "mitigates" "mitigated" "mitigated" "mitigating");
lin mitigation_N = mkN "mitigation" ;
lin mitre_N = mkN "mitre" "mitres";
lin mitre_joint_N = mkN "mitre - joint" "mitre - joints";
lin mitt_N = mkN "mitt" "mitts";
lin mitten_N = mkN "mitten" "mittens";
lin mix_N = mkN "mix" "mixes";
lin mix_V = mkV "mix" "mixes" "mixed" "mixed" "mixing";
lin mix_V2 = mkV2 (mkV "mix" "mixes" "mixed" "mixed" "mixing");
lin mix_up_N = mkN "mix - up" "mix - ups";
lin mixed_A = compoundA (mkA "mixed");
lin mixed_up_A = compoundA (mkA "mixed - up");
lin mixer_N = mkN "mixer" "mixers";
lin mixture_N = mkN "mixture" "mixtures";
lin mizen_N = mkN "mizen" "mizens";
lin mizzen_N = mkN "mizzen" "mizzens";
lin mizzen_mast_N = mkN "mizzen - mast" "mizzen - masts";
lin mizzle_V = mkV "mizzle" "mizzles" "mizzled" "mizzled" "mizzling";
lin ml_N = mkN "ml" "ml";
lin mlle_PN = mkPN "Mlle";
lin mm_N = mkN "mm" "mm";
lin mme_PN = mkPN "Mme";
lin mnemonic_A = compoundA (mkA "mnemonic");
lin mnemonics_N = mkN "mnemonics" "mnemonics";
lin mo_N = mkN "mo" "mi" {- FIXME: guessed plural form -};
lin mo_PN = mkPN "Mo";
lin moan_N = mkN "moan" "moans";
lin moan_V = mkV "moan" "moans" "moaned" "moaned" "moaning";
lin moan_V2 = mkV2 (mkV "moan" "moans" "moaned" "moaned" "moaning");
lin moan_VS = mkVS (mkV "moan" "moans" "moaned" "moaned" "moaning");
lin moat_N = mkN "moat" "moats";
lin moated_A = compoundA (mkA "moated");
lin mob_N = mkN "mob" "mobs";
lin mob_V2 = mkV2 (mkV "mob" "mobs" "mobbed" "mobbed" "mobbing");
lin mobcap_N = mkN "mobcap" "mobcaps";
lin mobile_A = compoundA (mkA "mobile");
lin mobile_N = mkN "mobile" "mobiles";
lin mobility_N = mkN "mobility" ;
lin mobilization_N = mkN "mobilization" "mobilizations";
lin mobilize_V = mkV "mobilize" "mobilizes" "mobilized" "mobilized" "mobilizing";
lin mobilize_V2 = mkV2 (mkV "mobilize" "mobilizes" "mobilized" "mobilized" "mobilizing");
lin mobster_N = mkN "mobster" "mobsters";
lin moccasin_N = mkN "moccasin" "moccasins";
lin mocha_N = mkN "mocha" ;
lin mock_A = compoundA (mkA "mock");
lin mock_N = mkN "mock" "mocks";
lin mock_V = mkV "mock" "mocks" "mocked" "mocked" "mocking";
lin mock_V2 = mkV2 (mkV "mock" "mocks" "mocked" "mocked" "mocking");
lin mock_up_N = mkN "mock - up" "mock - ups";
lin mocker_N = mkN "mocker" "mockers";
lin mockery_N = mkN "mockery" "mockeries";
lin mockingly_Adv = mkAdv "mockingly";
lin mod_A = compoundA (mkA "mod");
lin mod_N = mkN "mod" "mods";
lin mod_cons_N = mkN "mod con" "mod cons" ;
lin modal_A = compoundA (mkA "modal");
lin modality_N = mkN "modality" "modalities";
lin mode_N = mkN "mode" "modes";
lin model_N = mkN "model" "models";
lin model_V = variants {mkV "model" "models" "modeled"  "modeled"  "modeling"; -- US
                        mkV "model" "models" "modelled" "modelled" "modelling"
                       };
lin model_V2 = mkV2 (variants {mkV "model" "models" "modeled"  "modeled"  "modeling"; -- US
                               mkV "model" "models" "modelled" "modelled" "modelling"
                              });
lin modeler_N = mkN "modeler" "modelers";
lin modeller_N = mkN "modeller" "modellers";
lin modelling_N = mkN "modelling" ;
lin modena_PN = mkPN "Modena";
lin moderate_A = compoundA (mkA "moderate");
lin moderate_N = mkN "moderate" "moderates";
lin moderate_V = mkV "moderate" "moderates" "moderated" "moderated" "moderating";
lin moderate_V2 = mkV2 (mkV "moderate" "moderates" "moderated" "moderated" "moderating");
lin moderation_N = mkN "moderation" ;
lin moderator_N = mkN "moderator" "moderators";
lin modern_A = compoundA (mkA "modern");
lin modern_N = mkN "modern" "moderns";
lin modernism_N = mkN "modernism" ;
lin modernist_N = mkN "modernist" "modernists";
lin modernistic_A = compoundA (mkA "modernistic");
lin modernity_N = mkN "modernity" ;
lin modernization_N = mkN "modernization" ;
lin modernize_V2 = mkV2 (mkV "modernize" "modernizes" "modernized" "modernized" "modernizing");
lin modest_A = compoundA (mkA "modest");
lin modesty_N = mkN "modesty" ;
lin modicum_N = mkN "modicum" "modica" {- FIXME: guessed plural form -};
lin modification_N = mkN "modification" "modifications";
lin modifier_N = mkN "modifier" "modifiers";
lin modify_V2 = mkV2 (mkV "modify" "modifies" "modified" "modified" "modifying");
lin modish_A = compoundA (mkA "modish");
lin modiste_N = mkN "modiste" "modistes";
lin modular_A = compoundA (mkA "modular");
lin modulate_V = mkV "modulate" "modulates" "modulated" "modulated" "modulating";
lin modulate_V2 = mkV2 (mkV "modulate" "modulates" "modulated" "modulated" "modulating");
lin modulation_N = mkN "modulation" "modulations";
lin module_N = mkN "module" "modules";
lin modus_operandi_N = mkN "modus operandi" "IRREG";
lin modus_vivendi_N = mkN "modus vivendi" "IRREG";
lin mogul_N = mkN "mogul" "moguls";
lin mohair_N = mkN "mohair" ;
lin mohammedan_N = mkN "mohammedan" "mohammedans";
lin moiety_N = mkN "moiety" "moieties";
lin moil_V = mkV "moil" "moils" "moiled" "moiled" "moiling";
lin moira_PN = mkPN "Moira";
lin moist_A = compoundA (mkA "moist");
lin moisten_V = mkV "moisten" "moistens" "moistened" "moistened" "moistening";
lin moisten_V2 = mkV2 (mkV "moisten" "moistens" "moistened" "moistened" "moistening");
lin moisture_N = mkN "moisture" ;
lin moke_N = mkN "moke" "mokes";
lin molar_A = compoundA (mkA "molar");
lin molar_N = mkN "molar" "molars";
lin molasses_N = mkN "molasses" ;
lin mold_V = mkV "mold";
lin mold_V2 = mkV2 "mold";
lin mold_PN = mkPN "Mold";
lin moldy_A = mkA "moldy" "moldier";
lin mole_N = mkN "mole" "moles";
lin molecular_A = compoundA (mkA "molecular");
lin molecule_N = mkN "molecule" "molecules";
lin molehill_N = mkN "molehill" "molehills";
lin moleskin_N = mkN "moleskin" "moleskins";
lin molest_V2 = mkV2 (mkV "molest" "molests" "molested" "molested" "molesting");
lin molestation_N = mkN "molestation" ;
lin moll_N = mkN "moll" "molls";
lin mollification_N = mkN "mollification" ;
lin mollify_V2 = mkV2 (mkV "mollify" "mollifies" "mollified" "mollified" "mollifying");
lin mollusc_N = mkN "mollusc" "molluscs";
lin molly_PN = mkPN "Molly";
lin mollycoddle_N = mkN "mollycoddle" "mollycoddles";
lin mollycoddle_V2 = mkV2 (mkV "mollycoddle" "mollycoddles" "mollycoddled" "mollycoddled" "mollycoddling");
lin moloch_PN = mkPN "Moloch";
lin molto_Adv = mkAdv "molto";
lin molybdenum_N = mkN "molybdenum" ;
lin moment_N = mkN "moment" "moments";
lin momentary_A = compoundA (mkA "momentary");
lin momentous_A = compoundA (mkA "momentous");
lin momentousness_N = mkN "momentousness" ;
lin momentum_N = mkN "momentum" ;
lin mon_PN = mkPN "Mon";
lin monaco_PN = mkPN "Monaco";
lin monaghan_PN = mkPN "Monaghan";
lin monarch_N = mkN "monarch" "monarchs";
lin monarchic_A = compoundA (mkA "monarchic");
lin monarchism_N = mkN "monarchism" ;
lin monarchist_N = mkN "monarchist" "monarchists";
lin monarchy_N = mkN "monarchy" "monarchies";
lin monastery_N = mkN "monastery" "monasteries";
lin monastic_A = compoundA (mkA "monastic");
lin monasticism_N = mkN "monasticism" ;
lin monaural_A = compoundA (mkA "monaural");
lin monchengladbach_PN = mkPN "Monchengladbach";
lin monday_N = mkN "Monday" "Mondays";
lin monday_PN = mkPN "Monday";
lin monegasque_A = compoundA (mkA "monegasque");
lin monegasque_N = mkN "monegasque" "monegasques";
lin monetary_A = compoundA (mkA "monetary");
lin monetize_V2 = mkV2 (mkV "monetize" "monetizes" "monetized" "monetized" "monetizing");
lin money_N = mkN "money" ;
lin money_grubber_N = mkN "money - grubber" "money - grubbers";
lin money_order_N = mkN "money - order" "money - orders";
lin money_spinner_N = mkN "money - spinner" "money - spinners";
lin moneybox_N = mkN "moneybox" "moneyboxes";
lin moneychanger_N = mkN "moneychanger" "moneychangers";
lin moneyed_A = compoundA (mkA "moneyed");
lin moneylender_N = mkN "moneylender" "moneylenders";
lin moneyless_A = compoundA (mkA "moneyless");
lin monger_N = mkN "monger" "mongers";
lin mongol_A = compoundA (mkA "mongol");
lin mongol_N = mkN "mongol" "mongols";
lin mongolia_PN = mkPN "Mongolia";
lin mongolian_A = compoundA (mkA "mongolian");
lin mongolian_N = mkN "mongolian" "mongolians";
lin mongolism_N = mkN "mongolism" ;
lin mongoose_N = mkN "mongoose" "mongooses";
lin mongrel_A = compoundA (mkA "mongrel");
lin mongrel_N = mkN "mongrel" "mongrels";
lin monica_PN = mkPN "Monica";
lin monifieth_PN = mkPN "Monifieth";
lin monitor_N = mkN "monitor" "monitors";
lin monitor_V = mkV "monitor" "monitors" "monitored" "monitored" "monitoring";
lin monitor_V2 = mkV2 (mkV "monitor" "monitors" "monitored" "monitored" "monitoring");
lin monk_N = mkN "monk" "monks";
lin monkey_N = mkN "monkey" "monkeys";
lin monkey_V = mkV "monkey" "monkeys" "monkeyed" "monkeyed" "monkeying";
lin monkey_jacket_N = mkN "monkey - jacket" "monkey - jackets";
lin monkey_nut_N = mkN "monkey - nut" "monkey - nuts";
lin monkey_puzzle_N = mkN "monkey - puzzle" "monkey - puzzles";
lin monkey_wrench_N = mkN "monkey - wrench" "monkey - wrenches";
lin monkish_A = compoundA (mkA "monkish");
lin monmouth_PN = mkPN "Monmouth";
lin mono_A = compoundA (mkA "mono");
lin monochrome_A = compoundA (mkA "monochrome");
lin monochrome_N = mkN "monochrome" "monochromes";
lin monocle_N = mkN "monocle" "monocles";
lin monocled_A = compoundA (mkA "monocled");
lin monogamist_N = mkN "monogamist" "monogamists";
lin monogamous_A = compoundA (mkA "monogamous");
lin monogamy_N = mkN "monogamy" ;
lin monogram_N = mkN "monogram" "monograms";
lin monograph_N = mkN "monograph" "monographs";
lin monolith_N = mkN "monolith" "monoliths";
lin monolithic_A = compoundA (mkA "monolithic");
lin monologue_N = mkN "monologue" "monologues";
lin monomania_N = mkN "monomania" "monomanias";
lin monomaniac_N = mkN "monomaniac" "monomaniacs";
lin monoplane_N = mkN "monoplane" "monoplanes";
lin monopolist_N = mkN "monopolist" "monopolists";
lin monopolistic_A = compoundA (mkA "monopolistic");
lin monopolization_N = mkN "monopolization" "monopolizations";
lin monopolize_V2 = mkV2 (mkV "monopolize" "monopolizes" "monopolized" "monopolized" "monopolizing");
lin monopoly_N = mkN "monopoly" "monopolies";
lin monorail_N = mkN "monorail" "monorails";
lin monosyllabic_A = compoundA (mkA "monosyllabic");
lin monosyllable_N = mkN "monosyllable" "monosyllables";
lin monotheism_N = mkN "monotheism" ;
lin monotheist_N = mkN "monotheist" "monotheists";
lin monotheistic_A = compoundA (mkA "monotheistic");
lin monotone_N = mkN "monotone" "monotones";
lin monotonous_A = compoundA (mkA "monotonous");
lin monotony_N = mkN "monotony" ;
lin monotype_N = mkN "monotype" "monotypes";
lin monoxide_N = mkN "monoxide" "monoxides";
lin monsieur_N = mkN "monsieur" "IRREG";
lin monsignor_N = mkN "monsignor" "monsignors";
lin monsoon_N = mkN "monsoon" "monsoons";
lin monster_N = mkN "monster" "monsters";
lin monstrance_N = mkN "monstrance" "monstrances";
lin monstrosity_N = mkN "monstrosity" "monstrosities";
lin monstrous_A = compoundA (mkA "monstrous");
lin montage_N = mkN "montage" ;
lin montana_PN = mkPN "Montana";
lin monterrey_PN = mkPN "Monterrey";
lin montevideo_PN = mkPN "Montevideo";
lin month_N = mkN "month" "months";
lin monthly_A = compoundA (mkA "monthly");
lin monthly_Adv = mkAdv "monthly";
lin monthly_N = mkN "monthly" "monthlies";
lin montreal_PN = mkPN "Montreal";
lin montrose_PN = mkPN "Montrose";
lin montserrat_PN = mkPN "Montserrat";
lin montserratian_A = compoundA (mkA "montserratian");
lin montserratian_N = mkN "montserratian" "montserratians";
lin monument_N = mkN "monument" "monuments";
lin monumental_A = compoundA (mkA "monumental");
lin monza_PN = mkPN "Monza";
lin moo_N = mkN "moo" "moos";
lin moo_V = mkV "moo" "moos" "mooed" "mooed" "mooing";
lin moo_cow_N = mkN "moo - cow" "moo - cows";
lin mooch_V = mkV "mooch" "mooches" "mooched" "mooched" "mooching";
lin mood_N = mkN "mood" "moods";
lin moodily_Adv = mkAdv "moodily";
lin moodiness_N = mkN "moodiness" ;
lin moody_A = mkA "moody" "moodier";
lin moon_N = mkN "moon" "moons";
lin moon_V = mkV "moon" "moons" "mooned" "mooned" "mooning";
lin moon_V2 = mkV2 (mkV "moon" "moons" "mooned" "mooned" "mooning");
lin moonbeam_N = mkN "moonbeam" "moonbeams";
lin moonflower_N = mkN "moonflower" "moonflowers";
lin moonless_A = compoundA (mkA "moonless");
lin moonlight_N = mkN "moonlight" ;
lin moonlit_A = compoundA (mkA "moonlit");
lin moonshine_N = mkN "moonshine" ;
lin moonstone_N = mkN "moonstone" "moonstones";
lin moonstruck_A = compoundA (mkA "moonstruck");
lin moony_A = mkA "moony" "moonier";
lin moor_N = mkN "moor" "moors";
lin moor_V2 = mkV2 (mkV "moor" "moors" "moored" "moored" "mooring");
lin moorcock_N = mkN "moorcock" "moorcocks";
lin moorfowl_N = mkN "moorfowl" "moorfowls";
lin moorgame_N = mkN "moorgame" "moorgame";
lin moorhen_N = mkN "moorhen" "moorhens";
lin mooring_mast_N = mkN "mooring - mast" "mooring - masts";
lin moorish_A = compoundA (mkA "moorish");
lin moorland_N = mkN "moorland" "moorlands";
lin moose_N = mkN "moose" "moose";
lin moot_A = compoundA (mkA "moot");
lin moot_V2 = mkV2 (mkV "moot" "moots" "mooted" "mooted" "mooting");
lin mop_N = mkN "mop" "mops";
lin mop_V = mkV "mop" "mops" "mopped" "mopped" "mopping";
lin mop_V2 = mkV2 (mkV "mop" "mops" "mopped" "mopped" "mopping");
lin mope_N = mkN "mope" "mopes";
lin mope_V = mkV "mope" "mopes" "moped" "moped" "moping";
lin moped_N = mkN "moped" "mopeds";
lin moquette_N = mkN "moquette" ;
lin moraine_N = mkN "moraine" "moraines";
lin moral_A = compoundA (mkA "moral");
lin moral_N = mkN "moral" "morals";
lin morale_N = mkN "morale" ;
lin moralist_N = mkN "moralist" "moralists";
lin moralistic_A = compoundA (mkA "moralistic");
lin morality_N = mkN "morality" "moralities";
lin moralize_V = mkV "moralize" "moralizes" "moralized" "moralized" "moralizing";
lin moralize_V2 = mkV2 (mkV "moralize" "moralizes" "moralized" "moralized" "moralizing");
lin morass_N = mkN "morass" "morasses";
lin moratorium_N = mkN "moratorium" "moratoriums";
lin morbid_A = compoundA (mkA "morbid");
lin morbidity_N = mkN "morbidity" "morbidities";
lin morbidness_N = mkN "morbidness" ;
lin mordant_A = compoundA (mkA "mordant");
lin more_Adv = mkAdv "more";
lin more_Det = mkDeterminer plural "more";
lin more_N = mkN "more" ;
lin morecambe_PN = mkPN "Morecambe";
lin morello_N = mkN "morello" "morellos";
lin moreover_Adv = mkAdv "moreover";
lin moresque_A = compoundA (mkA "moresque");
lin morganatic_A = compoundA (mkA "morganatic");
lin morgue_N = mkN "morgue" "morgues";
lin moribund_A = compoundA (mkA "moribund");
lin morley_PN = mkPN "Morley";
lin mormon_A = compoundA (mkA "mormon");
lin mormon_N = mkN "mormon" "mormons";
lin mormonism_N = mkN "mormonism" ;
lin morn_N = mkN "morn" "morns";
lin morning_N = mkN "morning" "mornings";
lin morning_glory_N = mkN "morning - glory" "morning - glories";
lin morning_room_N = mkN "morning - room" "morning - rooms";
lin moroccan_A = compoundA (mkA "moroccan");
lin moroccan_N = mkN "moroccan" "moroccans";
lin morocco_N = mkN "morocco" ;
lin morocco_PN = mkPN "Morocco";
lin moron_N = mkN "moron" "morons";
lin moronic_A = compoundA (mkA "moronic");
lin morose_A = compoundA (mkA "morose");
lin moroseness_N = mkN "moroseness" ;
lin morpeth_PN = mkPN "Morpeth";
lin morpheme_N = mkN "morpheme" "morphemes";
lin morphemic_A = compoundA (mkA "morphemic");
lin morpheus_PN = mkPN "Morpheus";
lin morphia_N = mkN "morphia" ;
lin morphine_N = mkN "morphine" ;
lin morphological_A = compoundA (mkA "morphological");
lin morphology_N = mkN "morphology" ;
lin morris_dance_N = mkN "morris dance" "morris dances";
lin morrow_N = mkN "morrow" "morrows";
lin morse_N = mkN "morse" ;
lin morsel_N = mkN "morsel" "morsels";
lin mortal_A = compoundA (mkA "mortal");
lin mortal_N = mkN "mortal" "mortals";
lin mortality_N = mkN "mortality" ;
lin mortar_N = mkN "mortar" "mortars";
lin mortar_V2 = mkV2 (mkV "mortar" "mortars" "mortared" "mortared" "mortaring");
lin mortarboard_N = mkN "mortarboard" "mortarboards";
lin mortgage_N = mkN "mortgage" "mortgages";
lin mortgage_V2 = mkV2 (mkV "mortgage" "mortgages" "mortgaged" "mortgaged" "mortgaging");
lin mortgagee_N = mkN "mortgagee" "mortgagees";
lin mortgagor_N = mkN "mortgagor" "mortgagors";
lin mortice_N = mkN "mortice" "mortices";
lin mortice_V2 = mkV2 (mkV "mortice" "mortices" "morticed" "morticed" "morticing");
lin mortician_N = mkN "mortician" "morticians";
lin mortification_N = mkN "mortification" ;
lin mortify_V = mkV "mortify" "mortifies" "mortified" "mortified" "mortifying";
lin mortify_V2 = mkV2 (mkV "mortify" "mortifies" "mortified" "mortified" "mortifying");
lin mortise_N = mkN "mortise" "mortises";
lin mortise_V2 = mkV2 (mkV "mortise" "mortises" "mortised" "mortised" "mortising");
lin mortuary_N = mkN "mortuary" "mortuaries";
lin mosaic_A = compoundA (mkA "mosaic");
lin mosaic_N = mkN "mosaic" "mosaics";
lin moscow_PN = mkPN "Moscow";
lin moselle_N = mkN "moselle" "moselles";
lin mosey_V = mkV "mosey" "moseys" "moseyed" "moseyed" "moseying";
lin moslem_A = compoundA (mkA "moslem");
lin moslem_N = mkN "moslem" "moslems";
lin mosque_N = mkN "mosque" "mosques";
lin mosquito_N = mkN "mosquito" "mosquitoes";
lin mosquito_craft_N = mkN "mosquito - craft" "mosquito - craft";
lin mosquito_net_N = mkN "mosquito - net" "mosquito - nets";
lin moss_N = mkN "moss" "mosses";
lin moss_grown_A = compoundA (mkA "moss - grown");
lin mossley_PN = mkPN "Mossley";
lin mossy_A = mkA "mossy" "mossier";
lin most_Det = mkDeterminer plural "most";
lin mostly_Adv = mkAdv "mostly";
lin mote_N = mkN "mote" "motes";
lin motel_N = mkN "motel" "motels";
lin moth_N = mkN "moth" "moths";
lin moth_eaten_A = compoundA (mkA "moth - eaten");
lin mothball_N = mkN "mothball" "mothballs";
lin mother_N = mkN "mother" "mothers";
lin mother_V2 = mkV2 (mkV "mother" "mothers" "mothered" "mothered" "mothering");
lin mother_in_law_N = mkN "mother - in - law" "mothers - in - law";
lin mother_of_pearl_N = mkN "mother - of - pearl" ;
lin motherhood_N = mkN "motherhood" ;
lin motherland_N = mkN "motherland" "motherlands";
lin motherless_A = compoundA (mkA "motherless");
lin motherlike_A = compoundA (mkA "motherlike");
lin motherliness_N = mkN "motherliness" ;
lin motherly_A = compoundA (mkA "motherly");
lin motherwell_PN = mkPN "Motherwell";
lin mothproof_A = compoundA (mkA "mothproof");
lin mothproof_V2 = mkV2 (mkV "mothproof" "mothproofs" "mothproofed" "mothproofed" "mothproofing");
lin motif_N = mkN "motif" "motifs";
lin motion_N = mkN "motion" "motions";
lin motion_V = mkV "motion" "motions" "motioned" "motioned" "motioning";
lin motion_V2 = mkV2 (mkV "motion" "motions" "motioned" "motioned" "motioning");
lin motionless_A = compoundA (mkA "motionless");
lin motivate_V2 = mkV2 (mkV "motivate" "motivates" "motivated" "motivated" "motivating");
lin motivate_V2V = mkV2V (mkV "motivate") noPrep to_Prep ;
lin motivation_N = mkN "motivation" "motivations";
lin motive_A = compoundA (mkA "motive");
lin motive_N = mkN "motive" "motives";
lin motiveless_A = compoundA (mkA "motiveless");
lin motley_A = compoundA (mkA "motley");
lin motley_N = mkN "motley" ;
lin motor_N = mkN "motor" "motors";
lin motor_V = mkV "motor" "motors" "motored" "motored" "motoring";
lin motor_assisted_A = compoundA (mkA "motor - assisted");
lin motorbike_N = mkN "motorbike" "motorbikes";
lin motorboat_N = mkN "motorboat" "motorboats";
lin motorcade_N = mkN "motorcade" "motorcades";
lin motorcar_N = mkN "motorcar" "motorcars";
lin motorcoach_N = mkN "motorcoach" "motorcoaches";
lin motorcycle_N = mkN "motorcycle" "motorcycles";
lin motorist_N = mkN "motorist" "motorists";
lin motorize_V2 = mkV2 (mkV "motorize" "motorizes" "motorized" "motorized" "motorizing");
lin motorman_N = mkN "motorman" "motormen" {- FIXME: guessed plural form -};
lin motorway_N = mkN "motorway" "motorways";
lin mottle_V2 = mkV2 (mkV "mottle" "mottles" "mottled" "mottled" "mottling");
lin motto_N = mkN "motto" "mottos";
lin moujik_N = mkN "moujik" "moujiks";
lin mould_N = mkN "mould" "moulds";
lin mould_V = mkV "mould" "moulds" "moulded" "moulded" "moulding";
lin mould_V2 = mkV2 (mkV "mould" "moulds" "moulded" "moulded" "moulding");
lin moulder_V = mkV "moulder" "moulders" "mouldered" "mouldered" "mouldering";
lin moulding_N = mkN "moulding" "mouldings";
lin mouldy_A = mkA "mouldy" "mouldier";
lin moult_N = mkN "moult" "moults";
lin moult_V = mkV "moult" "moults" "moulted" "moulted" "moulting";
lin moult_V2 = mkV2 (mkV "moult" "moults" "moulted" "moulted" "moulting");
lin mound_N = mkN "mound" "mounds";
lin mount_N = mkN "mount" "mounts";
lin mount_V = mkV "mount" "mounts" "mounted" "mounted" "mounting";
lin mount_V2 = mkV2 (mkV "mount" "mounts" "mounted" "mounted" "mounting");
lin mount_VS = mkVS (mkV "mount" "mounts" "mounted" "mounted" "mounting");
lin mountain_N = mkN "mountain" "mountains";
lin mountain_ash_PN = mkPN "Mountain ash";
lin mountaineer_N = mkN "mountaineer" "mountaineers";
lin mountaineering_N = mkN "mountaineering" ;
lin mountainous_A = compoundA (mkA "mountainous");
lin mountebank_N = mkN "mountebank" "mountebanks";
lin mountie_N = mkN "mountie" "mounties";
lin mourn_V = mkV "mourn" "mourns" "mourned" "mourned" "mourning";
lin mourn_V2 = mkV2 (mkV "mourn" "mourns" "mourned" "mourned" "mourning");
lin mourner_N = mkN "mourner" "mourners";
lin mournful_A = compoundA (mkA "mournful");
lin mourning_N = mkN "mourning" ;
lin mourning_band_N = mkN "mourning - band" "mourning - bands";
lin mourning_ring_N = mkN "mourning - ring" "mourning - rings";
lin mouse_N = mkN "mouse" "mice" {- FIXME: guessed plural form -};
lin mouse_V = mkV "mouse" "mouses" "moused" "moused" "mousing";
lin mouser_N = mkN "mouser" "mousers";
lin mousetrap_N = mkN "mousetrap" "mousetraps";
lin mousse_N = mkN "mousse" "mousses";
lin moustache_N = mkN "moustache" "moustaches";
lin mousy_A = mkA "mousy" "mousier";
lin mouth_N = mkN "mouth" "mouths";
lin mouth_V = mkV "mouth" "mouths" "mouthed" "mouthed" "mouthing";
lin mouth_V2 = mkV2 (mkV "mouth" "mouths" "mouthed" "mouthed" "mouthing");
lin mouth_organ_N = mkN "mouth - organ" "mouth - organs";
lin mouth_watering_A = compoundA (mkA "mouth - watering");
lin mouthful_N = mkN "mouthful" "mouthfuls";
lin mouthpiece_N = mkN "mouthpiece" "mouthpieces";
lin movable_A = compoundA (mkA "movable");
lin move_N = mkN "move" "moves";
lin move_V = mkV "move" "moves" "moved" "moved" "moving";
lin move_V2 = mkV2 (mkV "move" "moves" "moved" "moved" "moving");
lin move_V2V = mkV2V (mkV "move" "moves" "moved" "moved" "moving") noPrep to_Prep ;
lin move_VV = mkVV (mkV "move" "moves" "moved" "moved" "moving") ;
lin movement_N = mkN "movement" "movements";
lin mover_N = mkN "mover" "movers";
lin movie_N = mkN "movie" "movies";
lin mow_N = mkN "mow" "mows";
lin mow_V = mkV "mow" "mows" "mowed" "mowed" "mowing";
lin mow_V2 = mkV2 (mkV "mow" "mows" "mowed" "mowed" "mowing");
lin mower_N = mkN "mower" "mowers";
lin mozambican_A = compoundA (mkA "mozambican");
lin mozambican_N = mkN "mozambican" "mozambicans";
lin mozambique_PN = mkPN "Mozambique";
lin mp_N = mkN "mp" "mp's" ;
lin mpg_N = mkN "mpg" "mpg";
lin mph_N = mkN "mph" "mph";
lin mr_PN = mkPN "Mr";
lin mrs_PN = mkPN "Mrs";
lin ms_N = mkN "ms" ;
lin ms_PN = mkPN "Ms";
lin msc_N = mkN "msc" ;
lin mt_PN = mkPN "Mt";
lin much_Det = mkDeterminer singular "much";
lin much_N = mkN "much" "IRREG";
lin muchness_N = mkN "muchness" ;
lin mucilage_N = mkN "mucilage" ;
lin muck_N = mkN "muck" ;
lin muck_V = mkV "muck" "mucks" "mucked" "mucked" "mucking";
lin muck_V2 = mkV2 (mkV "muck" "mucks" "mucked" "mucked" "mucking");
lin muck_heap_N = mkN "muck - heap" "muck - heaps";
lin muckle_N = mkN "muckle" "IRREG";
lin muckraker_N = mkN "muckraker" "muckrakers";
lin muckraking_N = mkN "muckraking" ;
lin mucky_A = mkA "mucky" "muckier";
lin mucous_A = compoundA (mkA "mucous");
lin mucus_N = mkN "mucus" ;
lin mud_N = mkN "mud" ;
lin mud_V2 = mkV2 (mkV "mud" "muds" "mudded" "mudded" "mudding");
lin mud_bath_N = mkN "mud - bath" "mud - baths";
lin muddle_N = mkN "muddle" "muddles";
lin muddle_V = mkV "muddle" "muddles" "muddled" "muddled" "muddling";
lin muddle_V2 = mkV2 (mkV "muddle" "muddles" "muddled" "muddled" "muddling");
lin muddle_headed_A = compoundA (mkA "muddle - headed");
lin muddy_A = mkA "muddy" "muddier";
lin muddy_V2 = mkV2 (mkV "muddy" "muddies" "muddied" "muddied" "muddying");
lin mudguard_N = mkN "mudguard" "mudguards";
lin mudslinger_N = mkN "mudslinger" "mudslingers";
lin muesli_N = mkN "muesli" ;
lin muezzin_N = mkN "muezzin" "muezzins";
lin muff_N = mkN "muff" "muffs";
lin muff_V2 = mkV2 (mkV "muff" "muffs" "muffed" "muffed" "muffing");
lin muffin_N = mkN "muffin" "muffins";
lin muffin_man_N = mkN "muffin - man" "muffin - men";
lin muffle_V2 = mkV2 (mkV "muffle" "muffles" "muffled" "muffled" "muffling");
lin muffler_N = mkN "muffler" "mufflers";
lin mufti_N = mkN "mufti" ;
lin mug_N = mkN "mug" "mugs";
lin mug_V2 = mkV2 (mkV "mug" "mugs" "mugged" "mugged" "mugging");
lin mugger_N = mkN "mugger" "muggers";
lin mugginess_N = mkN "mugginess" ;
lin mugging_N = mkN "mugging" "muggings";
lin muggins_N = mkN "muggins" "mugginses";
lin muggy_A = mkA "muggy" "muggier";
lin mugwump_N = mkN "mugwump" "mugwumps";
lin muhammad_PN = mkPN "Muhammad";
lin muhammadan_A = compoundA (mkA "muhammadan");
lin muhammadan_N = mkN "muhammadan" "muhammadans";
lin muhammadanism_N = mkN "muhammadanism" ;
lin mukden_PN = mkPN "Mukden";
lin mulatto_N = mkN "mulatto" "mulattos";
lin mulberry_N = mkN "mulberry" "mulberries";
lin mulch_N = mkN "mulch" "mulches";
lin mulch_V2 = mkV2 (mkV "mulch" "mulches" "mulched" "mulched" "mulching");
lin mulct_V2 = mkV2 (mkV "mulct" "mulcts" "mulcted" "mulcted" "mulcting");
lin mule_N = mkN "mule" "mules";
lin muleteer_N = mkN "muleteer" "muleteers";
lin mulheim_PN = mkPN "Mulheim";
lin mulhouse_PN = mkPN "Mulhouse";
lin mulish_A = compoundA (mkA "mulish");
lin mulishness_N = mkN "mulishness" ;
lin mull_N = mkN "mull" "mulls";
lin mull_V2 = mkV2 (mkV "mull" "mulls" "mulled" "mulled" "mulling");
lin mullah_N = mkN "mullah" "mullahs";
lin mullein_N = mkN "mullein" "mulleins";
lin mullet_N = mkN "mullet" "mullets";
lin mulligatawny_N = mkN "mulligatawny" ;
lin mullion_N = mkN "mullion" "mullions";
lin mullioned_A = compoundA (mkA "mullioned");
lin multan_PN = mkPN "Multan";
lin multi_lingual_A = compoundA (mkA "multi - lingual");
lin multifarious_A = compoundA (mkA "multifarious");
lin multiform_A = compoundA (mkA "multiform");
lin multilateral_A = compoundA (mkA "multilateral");
lin multiple_A = compoundA (mkA "multiple");
lin multiple_N = mkN "multiple" "multiples";
lin multiplex_A = compoundA (mkA "multiplex");
lin multiplication_N = mkN "multiplication" "multiplications";
lin multiplicity_N = mkN "multiplicity" ;
lin multiply_V = mkV "multiply" "multiplies" "multiplied" "multiplied" "multiplying";
lin multiply_V2 = mkV2 (mkV "multiply" "multiplies" "multiplied" "multiplied" "multiplying");
lin multitude_N = mkN "multitude" "multitudes";
lin multitudinous_A = compoundA (mkA "multitudinous");
lin multum_in_parvo_N = mkN "multum in parvo" ;
lin mum_A = compoundA (mkA "mum");
lin mum_N = mkN "mum" "mums";
lin mumble_V = mkV "mumble" "mumbles" "mumbled" "mumbled" "mumbling";
lin mumble_V2 = mkV2 (mkV "mumble" "mumbles" "mumbled" "mumbled" "mumbling");
lin mumbo_jumbo_N = mkN "mumbo - jumbo" ;
lin mummer_N = mkN "mummer" "mummers";
lin mummery_N = mkN "mummery" "mummeries";
lin mummification_N = mkN "mummification" "mummifications";
lin mummify_V2 = mkV2 (mkV "mummify" "mummifies" "mummified" "mummified" "mummifying");
lin mummy_N = mkN "mummy" "mummies";
lin mumps_N = mkN "mumps" "mumps";
lin munch_V = mkV "munch" "munches" "munched" "munched" "munching";
lin munch_V2 = mkV2 (mkV "munch" "munches" "munched" "munched" "munching");
lin mundane_A = compoundA (mkA "mundane");
lin munich_PN = mkPN "Munich";
lin municipal_A = compoundA (mkA "municipal");
lin municipality_N = mkN "municipality" "municipalities";
lin munificence_N = mkN "munificence" ;
lin munificent_A = compoundA (mkA "munificent");
lin munition_N = mkN "munition" "munitions";
lin munition_V2 = mkV2 (mkV "munition" "munitions" "munitioned" "munitioned" "munitioning");
lin munster_PN = mkPN "Munster";
lin mural_A = compoundA (mkA "mural");
lin mural_N = mkN "mural" "murals";
lin murder_N = mkN "murder" "murders";
lin murder_V2 = mkV2 (mkV "murder" "murders" "murdered" "murdered" "murdering");
lin murderer_N = mkN "murderer" "murderers";
lin murderess_N = mkN "murderess" "murderesses";
lin murderous_A = compoundA (mkA "murderous");
lin muriel_PN = mkPN "Muriel";
lin murk_N = mkN "murk" ;
lin murkily_Adv = mkAdv "murkily";
lin murky_A = mkA "murky" "murkier";
lin murmur_N = mkN "murmur" "murmurs";
lin murmur_V = mkV "murmur" "murmurs" "murmured" "murmured" "murmuring";
lin murmur_V2 = mkV2 (mkV "murmur" "murmurs" "murmured" "murmured" "murmuring");
lin murphy_N = mkN "murphy" "murphies";
lin murrain_N = mkN "murrain" ;
lin murton_PN = mkPN "Murton";
lin muscatel_N = mkN "muscatel" ;
lin muscle_N = mkN "muscle" "muscles";
lin muscle_V = mkV "muscle" "muscles" "muscled" "muscled" "muscling";
lin muscle_V2 = mkV2 (mkV "muscle" "muscles" "muscled" "muscled" "muscling");
lin muscle_bound_A = compoundA (mkA "muscle - bound");
lin muscleman_N = mkN "muscleman" "musclemen" {- FIXME: guessed plural form -};
lin muscovite_A = compoundA (mkA "muscovite");
lin muscovite_N = mkN "muscovite" "muscovites";
lin muscovy_N = mkN "muscovy" "muscovies";
lin muscular_A = compoundA (mkA "muscular");
lin muse_N = mkN "muse" "muses";
lin muse_V = mkV "muse" "muses" "mused" "mused" "musing";
lin muse_VS = mkVS (mkV "muse" "muses" "mused" "mused" "musing");
lin museum_N = mkN "museum" "museums";
lin mush_N = mkN "mush" ;
lin mushroom_N = mkN "mushroom" "mushrooms";
lin mushroom_V = mkV "mushroom" "mushrooms" "mushroomed" "mushroomed" "mushrooming";
lin mushy_A = mkA "mushy" "mushier";
lin music_N = mkN "music" ;
lin music_box_N = mkN "music - box" "music - boxes";
lin music_hall_N = mkN "music - hall" "music - halls";
lin music_stand_N = mkN "music - stand" "music - stands";
lin music_stool_N = mkN "music - stool" "music - stools";
lin musical_A = compoundA (mkA "musical");
lin musical_N = mkN "musical" "musicals";
lin musical_box_N = mkN "musical - box" "musical - boxes";
lin musician_N = mkN "musician" "musicians";
lin musicianship_N = mkN "musicianship" ;
lin musingly_Adv = mkAdv "musingly";
lin musk_N = mkN "musk" ;
lin musk_deer_N = mkN "musk - deer" "musk - deer";
lin musk_rose_N = mkN "musk - rose" "musk - roses";
lin musket_N = mkN "musket" "muskets";
lin musketeer_N = mkN "musketeer" "musketeers";
lin musketry_N = mkN "musketry" ;
lin muskrat_N = mkN "muskrat" "muskrats";
lin musky_A = mkA "musky" "muskier";
lin muslim_N = mkN "muslim" "muslims";
lin muslin_N = mkN "muslin" ;
lin musquash_N = mkN "musquash" ;
lin muss_N = mkN "muss" "musses";
lin muss_V2 = mkV2 (mkV "muss" "musses" "mussed" "mussed" "mussing");
lin mussel_N = mkN "mussel" "mussels";
lin musselburgh_PN = mkPN "Musselburgh";
lin must_N = mkN "must" "musts";
lin must_VV = {
    s = table {
      VVF VInf => ["have to"] ;
      VVF VPres => "must" ;
      VVF VPPart => ["had to"] ;
      VVF VPresPart => ["having to"] ;
      VVF VPast => ["had to"] ;      --# notpresent
      VVPastNeg => ["hadn't to"] ;      --# notpresent
      VVPresNeg => "mustn't"
      } ;
    typ = VVAux
    } ;
lin mustachio_N = mkN "mustachio" "mustachios";
lin mustang_N = mkN "mustang" "mustangs";
lin mustard_N = mkN "mustard" ;
lin muster_N = mkN "muster" "musters";
lin muster_V = mkV "muster" "musters" "mustered" "mustered" "mustering";
lin muster_V2 = mkV2 (mkV "muster" "musters" "mustered" "mustered" "mustering");
lin mustiness_N = mkN "mustiness" ;
lin musty_A = mkA "musty" "mustier";
lin mutability_N = mkN "mutability" ;
lin mutable_A = compoundA (mkA "mutable");
lin mutation_N = mkN "mutation" "mutations";
lin mutatis_mutandis_Adv = mkAdv "mutatis mutandis";
lin mute_A = compoundA (mkA "mute");
lin mute_N = mkN "mute" "mutes";
lin mute_V2 = mkV2 (mkV "mute" "mutes" "muted" "muted" "muting");
lin mutilate_V = mkV "mutilate";
lin mutilate_V2 = mkV2 (mkV "mutilate" "mutilates" "mutilated" "mutilated" "mutilating");
lin mutilation_N = mkN "mutilation" "mutilations";
lin mutineer_N = mkN "mutineer" "mutineers";
lin mutinous_A = compoundA (mkA "mutinous");
lin mutiny_N = mkN "mutiny" "mutinies";
lin mutiny_V = mkV "mutiny" "mutinies" "mutinied" "mutinied" "mutinying";
lin mutt_N = mkN "mutt" "mutts";
lin mutter_N = mkN "mutter" "mutters";
lin mutter_V = mkV "mutter" "mutters" "muttered" "muttered" "muttering";
lin mutter_V2 = mkV2 (mkV "mutter" "mutters" "muttered" "muttered" "muttering");
lin mutterer_N = mkN "mutterer" "mutterers";
lin mutton_N = mkN "mutton" ;
lin mutton_head_N = mkN "mutton - head" "mutton - heads";
lin mutual_A = compoundA (mkA "mutual");
lin muzzle_N = mkN "muzzle" "muzzles";
lin muzzle_V2 = mkV2 (mkV "muzzle" "muzzles" "muzzled" "muzzled" "muzzling");
lin muzzle_velocity_N = mkN "muzzle - velocity" "muzzle - velocities";
lin muzzy_A = mkA "muzzy" "muzzier";
lin mycology_N = mkN "mycology" ;
lin myelitis_N = mkN "myelitis" ;
lin myna_N = mkN "myna" "mynas";
lin mynah_N = mkN "mynah" "mynahs";
lin myopia_N = mkN "myopia" ;
lin myopic_A = compoundA (mkA "myopic");
lin myra_PN = mkPN "Myra";
lin myriad_A = compoundA (mkA "myriad");
lin myriad_N = mkN "myriad" "myriads";
lin myrmidon_N = mkN "myrmidon" "myrmidons";
lin myrrh_N = mkN "myrrh" ;
lin myrtle_N = mkN "myrtle" "myrtles";
lin mysterious_A = compoundA (mkA "mysterious");
lin mystery_N = mkN "mystery" "mysteries";
lin mystic_A = compoundA (mkA "mystic");
lin mystic_N = mkN "mystic" "mystics";
lin mystical_A = compoundA (mkA "mystical");
lin mysticism_N = mkN "mysticism" ;
lin mystification_N = mkN "mystification" "mystifications";
lin mystify_V2 = mkV2 (mkV "mystify" "mystifies" "mystified" "mystified" "mystifying");
lin mystique_N = mkN "mystique" "mystiques";
lin myth_N = mkN "myth" "myths";
lin mythical_A = compoundA (mkA "mythical");
lin mythological_A = compoundA (mkA "mythological");
lin mythologist_N = mkN "mythologist" "mythologists";
lin mythology_N = mkN "mythology" "mythologies";
lin myxomatosis_N = mkN "myxomatosis" ;
lin naafi_N = mkN "naafi" ;
lin nab_V2 = mkV2 (mkV "nab" "nabs" "nabbed" "nabbed" "nabbing");
lin nabob_N = mkN "nabob" "nabobs";
lin nacelle_N = mkN "nacelle" "nacelles";
lin nacre_N = mkN "nacre" ;
lin nadir_N = mkN "nadir" "nadirs";
lin nag_N = mkN "nag" "nags";
lin nag_V = mkV "nag" "nags" "nagged" "nagged" "nagging";
lin nag_V2 = mkV2 (mkV "nag" "nags" "nagged" "nagged" "nagging");
lin nagger_N = mkN "nagger" "naggers";
lin nagoya_PN = mkPN "Nagoya";
lin nagpur_PN = mkPN "Nagpur";
lin naiad_N = mkN "naiad" "naiads";
lin nail_N = mkN "nail" "nails";
lin nail_V2 = mkV2 (mkV "nail" "nails" "nailed" "nailed" "nailing");
lin nail_polish_N = mkN "nail - polish" "nail - polishes";
lin nail_varnish_N = mkN "nail - varnish" "nail - varnishes";
lin nailbrush_N = mkN "nailbrush" "nailbrushes";
lin nailfile_N = mkN "nailfile" "nailfiles";
lin nailsea_PN = mkPN "Nailsea";
lin nainsook_N = mkN "nainsook" ;
lin naira_N = mkN "naira" "nairas";
lin nairn_PN = mkPN "Nairn";
lin nairobi_PN = mkPN "Nairobi";
lin naive_1_A = compoundA (mkA "naive");
lin naive_2_A = compoundA (mkA "naïve");
lin naivete_N = mkN "naiveté" "naivetés";
lin naivety_N = mkN "naivety" "naiveties";
lin naked_A = compoundA (mkA "naked");
lin nakedness_N = mkN "nakedness" ;
lin namby_pamby_A = compoundA (mkA "namby - pamby");
lin namby_pamby_N = mkN "namby - pamby" "namby - pambies";
lin name_N = mkN "name" "names";
lin name_V2 = mkV2 (mkV "name" "names" "named" "named" "naming");
lin name_V2V = mkV2V (mkV "name") noPrep to_Prep ;
lin name_VS = mkVS (mkV "name");
lin name_day_N = mkN "name - day" "name - days";
lin name_drop_V = mkV "name - drop" "name - drops" "name - dropped" "name - dropped" "name - dropping";
lin name_dropping_N = mkN "name - dropping" ;
lin name_part_N = mkN "name - part" "name - parts";
lin nameless_A = compoundA (mkA "nameless");
lin namely_Adv = mkAdv "namely";
lin nameplate_N = mkN "nameplate" "nameplates";
lin namesake_N = mkN "namesake" "namesakes";
lin namibia_PN = mkPN "Namibia";
lin namibian_A = compoundA (mkA "namibian");
lin namibian_N = mkN "namibian" "namibians";
lin nanchang_PN = mkPN "Nanchang";
lin nancy_PN = mkPN "Nancy";
lin nankeen_N = mkN "nankeen" ;
lin nanking_PN = mkPN "Nanking";
lin nanning_PN = mkPN "Nanning";
lin nanny_N = mkN "nanny" "nannies";
lin nanny_goat_N = mkN "nanny - goat" "nanny - goats";
lin nantwich_PN = mkPN "Nantwich";
lin naomi_PN = mkPN "Naomi";
lin nap_N = mkN "nap" "naps";
lin nap_V = mkV "nap" "naps" "napped" "napped" "napping";
lin napalm_N = mkN "napalm" ;
lin nape_N = mkN "nape" "napes";
lin napery_N = mkN "napery" ;
lin naphtha_N = mkN "naphtha" ;
lin naphthalene_N = mkN "naphthalene" ;
lin napkin_N = mkN "napkin" "napkins";
lin napkin_ring_N = mkN "napkin - ring" "napkin - rings";
lin naples_PN = mkPN "Naples";
lin napoleonic_A = compoundA (mkA "napoleonic");
lin napoli_PN = mkPN "Napoli";
lin nappy_N = mkN "nappy" "nappies";
lin narborough_PN = mkPN "Narborough";
lin narcissism_N = mkN "narcissism" ;
lin narcissus_N = mkN "narcissus" "narcissuses";
lin narcotic_A = compoundA (mkA "narcotic");
lin narcotic_N = mkN "narcotic" "narcotics";
lin nark_N = mkN "nark" "narks";
lin nark_V2 = mkV2 (mkV "nark" "narks" "narked" "narked" "narking");
lin narrate_V2 = mkV2 (mkV "narrate" "narrates" "narrated" "narrated" "narrating");
lin narration_N = mkN "narration" "narrations";
lin narrative_N = mkN "narrative" "narratives";
lin narrator_N = mkN "narrator" "narrators";
lin narrow_A = mkA "narrow" "narrower";
lin narrow_N = mkN "narrow" "narrows";
lin narrow_V = mkV "narrow" "narrows" "narrowed" "narrowed" "narrowing";
lin narrow_V2 = mkV2 (mkV "narrow" "narrows" "narrowed" "narrowed" "narrowing");
lin narrow_minded_A = compoundA (mkA "narrow - minded");
lin narrow_mindedness_N = mkN "narrow - mindedness" ;
lin narrowness_N = mkN "narrowness" ;
lin narwhal_N = mkN "narwhal" "narwhals";
lin nary_Predet = ss "nary";
lin nasa_PN = mkPN "NASA";
lin nasal_A = compoundA (mkA "nasal");
lin nasal_N = mkN "nasal" "nasals";
lin nasalize_V2 = mkV2 (mkV "nasalize" "nasalizes" "nasalized" "nasalized" "nasalizing");
lin nascent_A = compoundA (mkA "nascent");
lin nastily_Adv = mkAdv "nastily";
lin nastiness_N = mkN "nastiness" ;
lin nasturtium_N = mkN "nasturtium" "nasturtiums";
lin nasty_A = mkA "nasty" "nastier";
lin nat_PN = mkPN "Nat";
lin natal_A = compoundA (mkA "natal");
lin natalie_PN = mkPN "Natalie";
lin nathaniel_PN = mkPN "Nathaniel";
lin nation_N = mkN "nation" "nations";
lin national_A = compoundA (mkA "national");
lin national_N = mkN "national" "nationals";
lin nationalism_N = mkN "nationalism" ;
lin nationalist_A = compoundA (mkA "nationalist");
lin nationalist_N = mkN "nationalist" "nationalists";
lin nationalistic_A = compoundA (mkA "nationalistic");
lin nationality_N = mkN "nationality" "nationalities";
lin nationalization_N = mkN "nationalization" "nationalizations";
lin nationalize_V2 = mkV2 (mkV "nationalize" "nationalizes" "nationalized" "nationalized" "nationalizing");
lin nationwide_A = compoundA (mkA "nationwide");
lin nationwide_Adv = mkAdv "nationwide";
lin native_A = compoundA (mkA "native");
lin native_N = mkN "native" "natives";
lin nativity_N = mkN "nativity" "nativities";
lin nato_PN = mkPN "Nato";
lin natter_V = mkV "natter" "natters" "nattered" "nattered" "nattering";
lin nattily_Adv = mkAdv "nattily";
lin natty_A = mkA "natty" "nattier";
lin natural_A = compoundA (mkA "natural");
lin natural_N = mkN "natural" "naturals";
lin naturalism_N = mkN "naturalism" ;
lin naturalist_N = mkN "naturalist" "naturalists";
lin naturalistic_A = compoundA (mkA "naturalistic");
lin naturalization_N = mkN "naturalization" ;
lin naturalize_V = mkV "naturalize" "naturalizes" "naturalized" "naturalized" "naturalizing";
lin naturalize_V2 = mkV2 (mkV "naturalize" "naturalizes" "naturalized" "naturalized" "naturalizing");
lin naturalness_N = mkN "naturalness" ;
lin nature_N = mkN "nature" "natures";
lin naturism_N = mkN "naturism" ;
lin naturist_N = mkN "naturist" "naturists";
lin naught_N = mkN "naught" "naughts";
lin naughtily_Adv = mkAdv "naughtily";
lin naughtiness_N = mkN "naughtiness" ;
lin naughty_A = mkA "naughty" "naughtier";
lin nauru_PN = mkPN "Nauru";
lin nauruan_A = compoundA (mkA "nauruan");
lin nauruan_N = mkN "nauruan" "nauruans";
lin nausea_N = mkN "nausea" ;
lin nauseate_V2 = mkV2 (mkV "nauseate" "nauseates" "nauseated" "nauseated" "nauseating");
lin nauseous_A = compoundA (mkA "nauseous");
lin nautch_N = mkN "nautch" "nautches";
lin nautch_girl_N = mkN "nautch - girl" "nautch - girls";
lin nautical_A = compoundA (mkA "nautical");
lin nautilus_N = mkN "nautilus" "nautiluses";
lin naval_A = compoundA (mkA "naval");
lin nave_N = mkN "nave" "naves";
lin navel_N = mkN "navel" "navels";
lin navigability_N = mkN "navigability" ;
lin navigable_A = compoundA (mkA "navigable");
lin navigate_V = mkV "navigate" "navigates" "navigated" "navigated" "navigating";
lin navigate_V2 = mkV2 (mkV "navigate" "navigates" "navigated" "navigated" "navigating");
lin navigation_N = mkN "navigation" ;
lin navigator_N = mkN "navigator" "navigators";
lin navvy_N = mkN "navvy" "navvies";
lin navy_N = mkN "navy" "navies";
lin nay_Adv = mkAdv "nay";
lin naysay_V2 = mkV2 (mkV "naysay");
lin nazi_A = compoundA (mkA "nazi");
lin nazi_N = mkN "nazi" "nazis";
lin nazism_N = mkN "nazism" ;
lin nb_PN = mkPN "Nb";
lin nco_N = mkN "nco" ;
lin ne'er_Adv = mkAdv "ne'er";
lin ne'er_do_well_N = mkN "ne'er - do - well" "ne'er - do - wells";
lin ne_plus_ultra_N = mkN "ne plus ultra" "ne plus ultrae" {- FIXME: guessed plural form -};
lin neanderthal_A = compoundA (mkA "neanderthal");
lin neap_N = mkN "neap" "neaps";
lin neap_tide_N = mkN "neap - tide" "neap - tides";
lin neapolitan_A = compoundA (mkA "neapolitan");
lin neapolitan_N = mkN "neapolitan" "neapolitans";
lin near_A = mkA "near" "nearer";
lin near_Adv = mkAdv "near";
lin near_Prep = mkPrep "near";
lin near_V = mkV "near" "nears" "neared" "neared" "nearing";
lin near_V2 = mkV2 (mkV "near" "nears" "neared" "neared" "nearing");
lin near_sighted_A = compoundA (mkA "near - sighted");
lin nearby_A = compoundA (mkA "nearby");
lin nearer_Adv = mkAdv "nearer";
lin nearer_Prep = mkPrep "nearer";
lin nearest_Adv = mkAdv "nearest";
lin nearest_Prep = mkPrep "nearest";
lin nearness_N = mkN "nearness" ;
lin nearside_N = mkN "nearside" "nearsides";
lin neat_A = mkA "neat" "neater";
lin neath_PN = mkPN "Neath";
lin neatness_N = mkN "neatness" ;
lin nebraska_PN = mkPN "Nebraska";
lin nebula_N = mkN "nebula" "nebulas";
lin nebular_A = compoundA (mkA "nebular");
lin nebulous_A = compoundA (mkA "nebulous");
lin necessary_A = compoundA (mkA "necessary");
lin necessary_N = mkN "necessary" "necessaries";
lin necessitate_V2 = mkV2 (mkV "necessitate" "necessitates" "necessitated" "necessitated" "necessitating");
lin necessitous_A = compoundA (mkA "necessitous");
lin necessity_N = mkN "necessity" "necessities";
lin neck_N = mkN "neck" "necks";
lin neck_V = mkV "neck" "necks" "necked" "necked" "necking";
lin neckband_N = mkN "neckband" "neckbands";
lin neckcloth_N = mkN "neckcloth" "neckcloths";
lin neckerchief_N = mkN "neckerchief" "neckerchiefs";
lin necklace_N = mkN "necklace" "necklaces";
lin necklet_N = mkN "necklet" "necklets";
lin neckline_N = mkN "neckline" "necklines";
lin necktie_N = mkN "necktie" "neckties";
lin neckwear_N = mkN "neckwear" ;
lin necromancer_N = mkN "necromancer" "necromancers";
lin necromancy_N = mkN "necromancy" ;
lin necropolis_N = mkN "necropolis" "necropolises";
lin nectar_N = mkN "nectar" ;
lin nectarine_N = mkN "nectarine" "nectarines";
lin ned_PN = mkPN "Ned";
lin neddy_PN = mkPN "Neddy";
lin nee_A = compoundA (mkA "née");
lin need_N = mkN "need" "needs";
lin need_V = mkV "need";
lin need_V2 = mkV2 (mkV "need" "needs" "needed" "needed" "needing");
lin need_V2V = mkV2V (mkV "need" "needs" "needed" "needed" "needing") noPrep to_Prep ;
lin need_VV = mkVV (mkV "need" "needs" "needed" "needed" "needing") ;
lin need_VS = mkVS (mkV "need" "needs" "needed" "needed" "needing");
lin needful_A = compoundA (mkA "needful");
lin needle_N = mkN "needle" "needles";
lin needle_V2 = mkV2 (mkV "needle" "needles" "needled" "needled" "needling");
lin needlecraft_N = mkN "needlecraft" ;
lin needless_A = compoundA (mkA "needless");
lin needlewoman_N = mkN "needlewoman" "needlewomen" {- FIXME: guessed plural form -};
lin needlework_N = mkN "needlework" ;
lin needs_Adv = mkAdv "needs";
lin needy_A = mkA "needy" "needier";
lin nefarious_A = compoundA (mkA "nefarious");
lin nefariousness_N = mkN "nefariousness" ;
lin negate_V2 = mkV2 (mkV "negate" "negates" "negated" "negated" "negating");
lin negation_N = mkN "negation" ;
lin negative_A = compoundA (mkA "negative");
lin negative_N = mkN "negative" "negatives";
lin negative_V2 = mkV2 (mkV "negative" "negatives" "negatived" "negatived" "negativing");
lin neglect_N = mkN "neglect" ;
lin neglect_V2 = mkV2 (mkV "neglect" "neglects" "neglected" "neglected" "neglecting");
lin neglectful_A = compoundA (mkA "neglectful");
lin neglectfulness_N = mkN "neglectfulness" ;
lin neglige_N = mkN "négligé" "négligés";
lin negligee_N = mkN "negligee" "negligees";
lin negligence_N = mkN "negligence" ;
lin negligent_A = compoundA (mkA "negligent");
lin negligible_A = compoundA (mkA "negligible");
lin negotiable_A = compoundA (mkA "negotiable");
lin negotiate_V = mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating";
lin negotiate_V2 = mkV2 (mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating");
lin negotiate_VV = mkVV (mkV "negotiate" "negotiates" "negotiated" "negotiated" "negotiating");
lin negotiation_N = mkN "negotiation" "negotiations";
lin negotiator_N = mkN "negotiator" "negotiators";
lin negress_N = mkN "negress" "negresses";
lin negro_N = mkN "negro" "negroes";
lin negroid_A = compoundA (mkA "negroid");
lin negroid_N = mkN "negroid" "negroids";
lin negus_N = mkN "negus" "neguses";
lin neigh_N = mkN "neigh" "neighs";
lin neigh_V = mkV "neigh" "neighs" "neighed" "neighed" "neighing";
lin neighbour_N = mkN "neighbour" "neighbours";
lin neighbour_V = mkV "neighbour" "neighbours" "neighboured" "neighboured" "neighbouring";
lin neighbour_V2 = mkV2 (mkV "neighbour" "neighbours" "neighboured" "neighboured" "neighbouring");
lin neighbourhood_N = mkN "neighbourhood" "neighbourhoods";
lin neighbourliness_N = mkN "neighbourliness" ;
lin neighbourly_A = compoundA (mkA "neighbourly");
lin neil_PN = mkPN "Neil";
lin neither7nor_DConj = mkConj "neither" "nor";
lin neither_A = compoundA (mkA "neither");
lin neither_Adv = mkAdv "neither";
lin neither_Prep = mkPrep "neither";
lin nell_PN = mkPN "Nell";
lin nelly_N = mkN "nelly" "IRREG";
lin nelly_PN = mkPN "Nelly";
lin nelson_PN = mkPN "Nelson";
lin nem_con_Adv = mkAdv "nem con";
lin nemesis_N = mkN "nemesis" "nemeses" {- FIXME: guessed plural form -};
lin neocolonialism_N = mkN "neocolonialism" ;
lin neolithic_A = compoundA (mkA "neolithic");
lin neologism_N = mkN "neologism" "neologisms";
lin neon_N = mkN "neon" ;
lin neophyte_N = mkN "neophyte" "neophytes";
lin neoplasm_N = mkN "neoplasm" "neoplasms";
lin nepal_PN = mkPN "Nepal";
lin nepalese_A = compoundA (mkA "nepalese");
lin nepalese_N = mkN "nepalese" "nepalese";
lin nepali_A = compoundA (mkA "nepali");
lin nepali_N = mkN "nepali" "nepalis";
lin nephew_N = mkN "nephew" "nephews";
lin nephritis_N = mkN "nephritis" ;
lin nepotism_N = mkN "nepotism" ;
lin neptune_PN = mkPN "Neptune";
lin nereid_N = mkN "nereid" "nereids";
lin nerve_N = mkN "nerve" "nerves";
lin nerve_V2 = mkV2 (mkV "nerve" "nerves" "nerved" "nerved" "nerving");
lin nerve_cell_N = mkN "nerve - cell" "nerve - cells";
lin nerve_centre_N = mkN "nerve - centre" "nerve - centres";
lin nerve_racking_A = compoundA (mkA "nerve - racking");
lin nerveless_A = compoundA (mkA "nerveless");
lin nervous_A = compoundA (mkA "nervous");
lin nervousness_N = mkN "nervousness" ;
lin nervy_A = compoundA (mkA "nervy");
lin nescience_N = mkN "nescience" ;
lin nescient_A = compoundA (mkA "nescient");
lin ness_N = mkN "ness" "nesses";
lin nest_N = mkN "nest" "nests";
lin nest_V = mkV "nest" "nests" "nested" "nested" "nesting";
lin nest_egg_N = mkN "nest - egg" "nest - eggs";
lin nestle_V = mkV "nestle" "nestles" "nestled" "nestled" "nestling";
lin nestle_V2 = mkV2 (mkV "nestle" "nestles" "nestled" "nestled" "nestling");
lin nestling_N = mkN "nestling" "nestlings";
lin neston_PN = mkPN "Neston";
lin nestor_PN = mkPN "Nestor";
lin net_A = compoundA (mkA "net");
lin net_N = mkN "net" "nets";
lin net_V2 = mkV2 (mkV "net" "nets" "netted" "netted" "netting");
lin netball_N = mkN "netball" ;
lin nether_A = compoundA (mkA "nether");
lin netherlander_N = mkN "netherlander" "netherlanders";
lin netherlands_PN = mkPN "Netherlands";
lin nethermost_A = compoundA (mkA "nethermost");
lin netley_PN = mkPN "Netley";
lin nett_A = compoundA (mkA "nett");
lin nett_V2 = mkV2 (mkV "nett" "netts" "netted" "netted" "netting");
lin netting_N = mkN "netting" ;
lin nettle_N = mkN "nettle" "nettles";
lin nettle_V2 = mkV2 (mkV "nettle" "nettles" "nettled" "nettled" "nettling");
lin nettlerash_N = mkN "nettlerash" ;
lin network_N = mkN "network" "networks";
lin neural_A = compoundA (mkA "neural");
lin neuralgia_N = mkN "neuralgia" ;
lin neuralgic_A = compoundA (mkA "neuralgic");
lin neurasthenia_N = mkN "neurasthenia" ;
lin neurasthenic_A = compoundA (mkA "neurasthenic");
lin neurasthenic_N = mkN "neurasthenic" "neurasthenics";
lin neuritis_N = mkN "neuritis" ;
lin neurologist_N = mkN "neurologist" "neurologists";
lin neurology_N = mkN "neurology" ;
lin neurosis_N = mkN "neurosis" "neuroses" {- FIXME: guessed plural form -};
lin neurotic_A = compoundA (mkA "neurotic");
lin neurotic_N = mkN "neurotic" "neurotics";
lin neurotically_Adv = mkAdv "neurotically";
lin neuss_PN = mkPN "Neuss";
lin neuter_A = compoundA (mkA "neuter");
lin neuter_N = mkN "neuter" "neuters";
lin neuter_V2 = mkV2 (mkV "neuter" "neuters" "neutered" "neutered" "neutering");
lin neutral_A = compoundA (mkA "neutral");
lin neutral_N = mkN "neutral" "neutrals";
lin neutrality_N = mkN "neutrality" ;
lin neutralization_N = mkN "neutralization" "neutralizations";
lin neutralize_V2 = mkV2 (mkV "neutralize" "neutralizes" "neutralized" "neutralized" "neutralizing");
lin neutron_N = mkN "neutron" "neutrons";
lin nevada_PN = mkPN "Nevada";
lin never_AdV = mkAdV "never";
lin nevermore_Adv = mkAdv "nevermore";
lin nevertheless_Adv = mkAdv "nevertheless";
lin neville_PN = mkPN "Neville";
lin new_A = mkA "new" "newer";
lin new_Adv = mkAdv "new";
lin new_cumnock_PN = mkPN "New cumnock";
lin new_mills_PN = mkPN "New mills";
lin new_orleans_PN = mkPN "New orleans";
lin new_tredegar_PN = mkPN "New tredegar";
lin new_windsor_PN = mkPN "New windsor";
lin new_york_PN = mkPN "New york";
lin newark_PN = mkPN "Newark";
lin newarthill_PN = mkPN "Newarthill";
lin newbiggin_PN = mkPN "Newbiggin";
lin newbury_PN = mkPN "Newbury";
lin newcastle_PN = mkPN "Newcastle";
lin newcastle_under_lyme_PN = mkPN "Newcastle - under - lyme";
lin newcastle_upon_tyne_PN = mkPN "Newcastle upon tyne";
lin newcomer_N = mkN "newcomer" "newcomers";
lin newel_N = mkN "newel" "newels";
lin newfangled_A = compoundA (mkA "newfangled");
lin newfoundland_PN = mkPN "Newfoundland";
lin newham_PN = mkPN "Newham";
lin newhaven_PN = mkPN "Newhaven";
lin newlywed_N = mkN "newlywed" "newlyweds";
lin newmains_PN = mkPN "Newmains";
lin newmarket_N = mkN "newmarket" ;
lin newmarket_PN = mkPN "Newmarket";
lin newness_N = mkN "newness" ;
lin newport_PN = mkPN "Newport";
lin newport_pagnell_PN = mkPN "Newport pagnell";
lin newquay_PN = mkPN "Newquay";
lin newry_PN = mkPN "Newry";
lin news_N = mkN "news" ;
lin newsagent_N = mkN "newsagent" "newsagents";
lin newsboy_N = mkN "newsboy" "newsboys";
lin newscast_N = mkN "newscast" "newscasts";
lin newscaster_N = mkN "newscaster" "newscasters";
lin newsdealer_N = mkN "newsdealer" "newsdealers";
lin newsflash_N = mkN "newsflash" "newsflashes";
lin newsless_A = compoundA (mkA "newsless");
lin newsletter_N = mkN "newsletter" "newsletters";
lin newsmonger_N = mkN "newsmonger" "newsmongers";
lin newspaper_N = mkN "newspaper" "newspapers";
lin newspaperman_N = mkN "newspaperman" "newspapermen" {- FIXME: guessed plural form -};
lin newsprint_N = mkN "newsprint" ;
lin newsreel_N = mkN "newsreel" "newsreels";
lin newsroom_N = mkN "newsroom" "newsrooms";
lin newssheet_N = mkN "newssheet" "newssheets";
lin newsstand_N = mkN "newsstand" "newsstands";
lin newsvendor_N = mkN "newsvendor" "newsvendors";
lin newsworthy_A = compoundA (mkA "newsworthy");
lin newsy_A = mkA "newsy" "newsier";
lin newt_N = mkN "newt" "newts";
lin newton_abbot_PN = mkPN "Newton abbot";
lin newton_aycliffe_PN = mkPN "Newton aycliffe";
lin newton_le_willows_PN = mkPN "Newton - le - willows";
lin newton_mearns_PN = mkPN "Newton mearns";
lin newtonian_A = compoundA (mkA "newtonian");
lin newtonian_N = mkN "newtonian" "newtonians";
lin newtown_PN = mkPN "Newtown";
lin next_A = irregAdv (compoundA (mkA "next")) "next";
lin next_N = mkN "next" "next";
lin next_Prep = mkPrep "next";
lin nexus_N = mkN "nexus" "nexuses";
lin nhs_N = mkN "nhs" ;
lin nib_N = mkN "nib" "nibs";
lin nibble_N = mkN "nibble" "nibbles";
lin nibble_V = mkV "nibble" "nibbles" "nibbled" "nibbled" "nibbling";
lin nibble_V2 = mkV2 (mkV "nibble" "nibbles" "nibbled" "nibbled" "nibbling");
lin nicaragua_PN = mkPN "Nicaragua";
lin nicaraguan_A = compoundA (mkA "nicaraguan");
lin nicaraguan_N = mkN "nicaraguan" "nicaraguans";
lin nice_A = mkA "nice" "nicer";
lin nice_PN = mkPN "Nice";
lin niceness_N = mkN "niceness" ;
lin nicety_N = mkN "nicety" "niceties";
lin niche_N = mkN "niche" "niches";
lin nicholas_PN = mkPN "Nicholas";
lin nick_N = mkN "nick" "nicks";
lin nick_PN = mkPN "Nick";
lin nick_V2 = mkV2 (mkV "nick" "nicks" "nicked" "nicked" "nicking");
lin nickel_N = mkN "nickel" "nickels";
lin nickel_V2 = mkV2 (mkV "nickel" "nickels" "nickelled" "nickelled" "nickelling");
lin nicknack_N = mkN "nicknack" "nicknacks";
lin nickname_N = mkN "nickname" "nicknames";
lin nickname_V2 = mkV2 (mkV "nickname" "nicknames" "nicknamed" "nicknamed" "nicknaming");
lin nickname_VS = mkVS (mkV "nickname");
lin nicola_PN = mkPN "Nicola";
lin nicole_PN = mkPN "Nicole";
lin nicotine_N = mkN "nicotine" ;
lin niece_N = mkN "niece" "nieces";
lin niff_N = mkN "niff" "niffs";
lin niffy_A = mkA "niffy" "niffier";
lin nifty_A = mkA "nifty" "niftier";
lin nigel_PN = mkPN "Nigel";
lin niger_PN = mkPN "Niger";
lin nigeria_PN = mkPN "Nigeria";
lin nigerian_A = compoundA (mkA "nigerian");
lin nigerian_N = mkN "nigerian" "nigerians";
lin nigerien_A = compoundA (mkA "nigerien");
lin nigerien_N = mkN "nigerien" "nigeriens";
lin niggard_N = mkN "niggard" "niggards";
lin niggardliness_N = mkN "niggardliness" ;
lin niggardly_A = compoundA (mkA "niggardly");
lin nigger_N = mkN "nigger" "niggers";
lin niggle_V = mkV "niggle" "niggles" "niggled" "niggled" "niggling";
lin niggling_A = compoundA (mkA "niggling");
lin nigh_Adv = mkAdv "nigh";
lin nigher_Adv = mkAdv "nigher";
lin nighest_Adv = mkAdv "nighest";
lin night_N = mkN "night" "nights";
lin night_bell_N = mkN "night - bell" "night - bells";
lin night_bird_N = mkN "night - bird" "night - birds";
lin night_light_N = mkN "night - light" "night - lights";
lin night_line_N = mkN "night - line" "night - lines";
lin night_porter_N = mkN "night - porter" "night - porters";
lin night_soil_N = mkN "night - soil" ;
lin night_stop_N = mkN "night - stop" "night - stops";
lin night_time_N = mkN "night - time" ;
lin night_watch_N = mkN "night - watch" "night - watches";
lin night_watchman_N = mkN "night - watchman" "night - watchmen";
lin nightcap_N = mkN "nightcap" "nightcaps";
lin nightclub_N = mkN "nightclub" "nightclubs";
lin nightdress_N = mkN "nightdress" "nightdresses";
lin nightfall_N = mkN "nightfall" ;
lin nightgown_N = mkN "nightgown" "nightgowns";
lin nightie_N = mkN "nightie" "nighties";
lin nightingale_N = mkN "nightingale" "nightingales";
lin nightjar_N = mkN "nightjar" "nightjars";
lin nightlong_A = compoundA (mkA "nightlong");
lin nightly_A = compoundA (mkA "nightly");
lin nightly_Adv = mkAdv "nightly";
lin nightmare_N = mkN "nightmare" "nightmares";
lin nightmarish_A = compoundA (mkA "nightmarish");
lin nightshade_N = mkN "nightshade" ;
lin nightshirt_N = mkN "nightshirt" "nightshirts";
lin nightwork_N = mkN "nightwork" ;
lin nihilism_N = mkN "nihilism" ;
lin nihilist_N = mkN "nihilist" "nihilists";
lin nihilistic_A = compoundA (mkA "nihilistic");
lin nijmegen_PN = mkPN "Nijmegen";
lin nil_N = mkN "nil" ;
lin nilotic_A = compoundA (mkA "nilotic");
lin nimble_A = mkA "nimble" "nimbler";
lin nimbleness_N = mkN "nimbleness" ;
lin nimbly_Adv = mkAdv "nimbly";
lin nimbus_N = mkN "nimbus" "nimbuses";
lin niminy_piminy_A = compoundA (mkA "niminy - piminy");
lin nimrod_PN = mkPN "Nimrod";
lin nincompoop_N = mkN "nincompoop" "nincompoops";
lin ninefold_A = compoundA (mkA "ninefold");
lin ninefold_Adv = mkAdv "ninefold";
lin ninepence_N = mkN "ninepence" "ninepences";
lin ninepenny_A = compoundA (mkA "ninepenny");
lin ninepins_N = mkN "ninepins" "ninepins";
lin ninny_N = mkN "ninny" "ninnies";
lin ninth_A = compoundA (mkA "ninth");
lin ninth_N = mkN "ninth" "ninths";
lin niobe_PN = mkPN "Niobe";
lin nip_N = mkN "nip" "nips";
lin nip_V = mkV "nip" "nips" "nipped" "nipped" "nipping";
lin nip_V2 = mkV2 (mkV "nip" "nips" "nipped" "nipped" "nipping");
lin nipper_N = mkN "nipper" "nippers";
lin nipping_A = compoundA (mkA "nipping");
lin nipple_N = mkN "nipple" "nipples";
lin nipponese_A = compoundA (mkA "nipponese");
lin nippy_A = mkA "nippy" "nippier";
lin nirvana_N = mkN "nirvana" "nirvanas";
lin nisi_A = compoundA (mkA "nisi");
lin nissen_PN = mkPN "Nissen";
lin nit_N = mkN "nit" "nits";
lin nitrate_N = mkN "nitrate" "nitrates";
lin nitre_N = mkN "nitre" ;
lin nitric_A = compoundA (mkA "nitric");
lin nitrochalk_N = mkN "nitrochalk" ;
lin nitrogen_N = mkN "nitrogen" ;
lin nitroglycerin_N = mkN "nitroglycerin" ;
lin nitroglycerine_N = mkN "nitroglycerine" ;
lin nitrous_A = compoundA (mkA "nitrous");
lin nitty_gritty_N = mkN "nitty - gritty" ;
lin nitwit_N = mkN "nitwit" "nitwits";
lin nitwitted_A = compoundA (mkA "nitwitted");
lin nix_N = mkN "nix" ;
lin nix_V2 = mkV2 (mkV "nix");
lin no_Quant = mkQuant "no" "no" "none" "none" ;
lin no_ball_N = mkN "no - ball" "no - balls";
lin no_go_A = compoundA (mkA "no - go");
lin no_man's_land_N = mkN "no - man's - land" "no - man's - lands";
lin noah_PN = mkPN "Noah";
lin nob_N = mkN "nob" "nobs";
lin nobble_V2 = mkV2 (mkV "nobble" "nobbles" "nobbled" "nobbled" "nobbling");
lin nobel_PN = mkPN "Nobel";
lin nobility_N = mkN "nobility" ;
lin noble_A = mkA "noble" "nobler";
lin noble_N = mkN "noble" "nobles";
lin noble_mindedness_N = mkN "noble - mindedness" ;
lin nobleman_N = mkN "nobleman" "noblemen" {- FIXME: guessed plural form -};
lin noblesse_N = mkN "noblesse" "IRREG";
lin noblesse_oblige_N = mkN "noblesse oblige" ;
lin nobly_Adv = mkAdv "nobly";
lin noctambulist_N = mkN "noctambulist" "noctambulists";
lin nocturnal_A = compoundA (mkA "nocturnal");
lin nocturne_N = mkN "nocturne" "nocturnes";
lin nod_N = mkN "nod" "nods";
lin nod_V = mkV "nod" "nods" "nodded" "nodded" "nodding";
lin nod_V2 = mkV2 (mkV "nod" "nods" "nodded" "nodded" "nodding");
lin noddle_N = mkN "noddle" "noddles";
lin node_N = mkN "node" "nodes";
lin nodular_A = compoundA (mkA "nodular");
lin nodulated_A = compoundA (mkA "nodulated");
lin nodule_N = mkN "nodule" "nodules";
lin noel_N = mkN "noel" "noels";
lin noel_PN = mkPN "Noel";
lin noggin_N = mkN "noggin" "noggins";
lin nohow_Adv = mkAdv "nohow";
lin noise_N = mkN "noise" "noises";
lin noise_V2 = mkV2 (mkV "noise" "noises" "noised" "noised" "noising");
lin noiseless_A = compoundA (mkA "noiseless");
lin noiselessness_N = mkN "noiselessness" ;
lin noisily_Adv = mkAdv "noisily";
lin noisiness_N = mkN "noisiness" ;
lin noisome_A = compoundA (mkA "noisome");
lin noisy_A = mkA "noisy" "noisier";
lin nom_de_plume_N = mkN "nom de plume" "IRREG";
lin nomad_N = mkN "nomad" "nomads";
lin nomadic_A = compoundA (mkA "nomadic");
lin nomenclature_N = mkN "nomenclature" "nomenclatures";
lin nominal_A = compoundA (mkA "nominal");
lin nominate_V2 = mkV2 (mkV "nominate" "nominates" "nominated" "nominated" "nominating");
lin nomination_N = mkN "nomination" "nominations";
lin nominative_A = compoundA (mkA "nominative");
lin nominative_N = mkN "nominative" "nominatives";
lin nominee_N = mkN "nominee" "nominees";
lin non_compliance_N = mkN "non - compliance" ;
lin non_compos_mentis_A = compoundA (mkA "non compos mentis");
lin non_contentious_A = compoundA (mkA "non - contentious");
lin non_interference_N = mkN "non - interference" ;
lin non_sequitur_N = mkN "non sequitur" "non sequiturs";
lin non_skid_A = compoundA (mkA "non - skid");
lin non_u_A = compoundA (mkA "non - u");
lin nonage_N = mkN "nonage" ;
lin nonagenarian_A = compoundA (mkA "nonagenarian");
lin nonagenarian_N = mkN "nonagenarian" "nonagenarians";
lin nonaggression_N = mkN "nonaggression" ;
lin nonalignment_N = mkN "nonalignment" ;
lin nonce_N = mkN "nonce" "nonces";
lin nonce_word_N = mkN "nonce - word" "nonce - words";
lin nonchalance_N = mkN "nonchalance" ;
lin nonchalant_A = compoundA (mkA "nonchalant");
lin noncombatant_N = mkN "noncombatant" "noncombatants";
lin noncommissioned_A = compoundA (mkA "noncommissioned");
lin noncommittal_A = compoundA (mkA "noncommittal");
lin nonconductor_N = mkN "nonconductor" "nonconductors";
lin nonconformist_N = mkN "nonconformist" "nonconformists";
lin nonconformity_N = mkN "nonconformity" ;
lin nondescript_A = compoundA (mkA "nondescript");
lin nondescript_N = mkN "nondescript" "nondescripts";
lin none_Adv = mkAdv "none";
lin nonentity_N = mkN "nonentity" "nonentities";
lin nonesuch_N = mkN "nonesuch" "IRREG";
lin nonevent_N = mkN "nonevent" "nonevents";
lin nonfiction_N = mkN "nonfiction" ;
lin nonflammable_A = compoundA (mkA "nonflammable");
lin nonintervention_N = mkN "nonintervention" ;
lin nonmoral_A = compoundA (mkA "nonmoral");
lin nonobservance_N = mkN "nonobservance" ;
lin nonpareil_A = compoundA (mkA "nonpareil");
lin nonpareil_N = mkN "nonpareil" "nonpareils";
lin nonpayment_N = mkN "nonpayment" "nonpayments";
lin nonplus_V2 = mkV2 (mkV "nonplus" "IRREG" "IRREG" "IRREG" "IRREG");
lin nonresident_A = compoundA (mkA "nonresident");
lin nonsense_N = mkN "nonsense" "nonsenses";
lin nonsensical_A = compoundA (mkA "nonsensical");
lin nonsmoker_N = mkN "nonsmoker" "nonsmokers";
lin nonstarter_N = mkN "nonstarter" "nonstarters";
lin nonstick_A = compoundA (mkA "nonstick");
lin nonstop_A = compoundA (mkA "nonstop");
lin nonstop_Adv = mkAdv "nonstop";
lin nonsuch_N = mkN "nonsuch" "IRREG";
lin nonunion_A = compoundA (mkA "nonunion");
lin nonviolence_N = mkN "nonviolence" ;
lin noodle_N = mkN "noodle" "noodles";
lin nook_N = mkN "nook" "nooks";
lin noon_N = mkN "noon" ;
lin noonday_A = compoundA (mkA "noonday");
lin noontide_N = mkN "noontide" ;
lin noose_N = mkN "noose" "nooses";
lin noose_V2 = mkV2 (mkV "noose" "nooses" "noosed" "noosed" "noosing");
lin nor'_east_Adv = mkAdv "nor'-east";
lin nor'_east_N = mkN "nor'-east" ;
lin nor'_nor'_east_Adv = mkAdv "nor'-nor'-east";
lin nor'_nor'_east_N = mkN "nor'-nor'-east" ;
lin nor'_nor'_west_Adv = mkAdv "nor'-nor'-west";
lin nor'_nor'_west_N = mkN "nor'-nor'-west" ;
lin nor'_west_Adv = mkAdv "nor'-west";
lin nor'_west_N = mkN "nor'-west" ;
lin nor_Conj = mkConj "nor";
lin nora_PN = mkPN "Nora";
lin nordic_A = compoundA (mkA "nordic");
lin nordic_N = mkN "nordic" "nordics";
lin norfolk_PN = mkPN "Norfolk";
lin norm_N = mkN "norm" "norms";
lin normal_A = compoundA (mkA "normal");
lin normal_N = mkN "normal" ;
lin normalcy_N = mkN "normalcy" ;
lin normality_N = mkN "normality" ;
lin normalization_N = mkN "normalization" "normalizations";
lin normalize_V2 = mkV2 (mkV "normalize" "normalizes" "normalized" "normalized" "normalizing");
lin norman_A = compoundA (mkA "norman");
lin norman_N = mkN "norman" "normans";
lin norman_PN = mkPN "Norman";
lin normanton_PN = mkPN "Normanton";
lin normantown_PN = mkPN "Normantown";
lin normative_A = compoundA (mkA "normative");
lin norse_A = compoundA (mkA "norse");
lin norse_N = mkN "norse" ;
lin north_A = mkA "north";
lin north_Adv = mkAdv "north";
lin north_N = mkN "north" ;
lin north_northeast_Adv = mkAdv "north - northeast";
lin north_northeast_N = mkN "north - northeast" ;
lin north_northwest_Adv = mkAdv "north - northwest";
lin north_northwest_N = mkN "north - northwest" ;
lin north_walsham_PN = mkPN "North walsham";
lin northallerton_PN = mkPN "Northallerton";
lin northam_PN = mkPN "Northam";
lin northampton_PN = mkPN "Northampton";
lin northamptonshire_PN = mkPN "Northamptonshire";
lin northeast_Adv = mkAdv "northeast";
lin northeast_N = mkN "northeast" ;
lin northeaster_N = mkN "northeaster" "northeasters";
lin northeasterly_A = compoundA (mkA "northeasterly");
lin northeastern_A = compoundA (mkA "northeastern");
lin northerly_A = compoundA (mkA "northerly");
lin northerly_Adv = mkAdv "northerly";
lin northern_A = compoundA (mkA "northern");
lin northerner_N = mkN "northerner" "northerners";
lin northernmost_A = compoundA (mkA "northernmost");
lin northman_N = mkN "northman" "northmen" {- FIXME: guessed plural form -};
lin northumberland_PN = mkPN "Northumberland";
lin northwards_Adv = mkAdv "northwards";
lin northwest_Adv = mkAdv "northwest";
lin northwest_N = mkN "northwest" ;
lin northwester_N = mkN "northwester" "northwesters";
lin northwesterly_A = compoundA (mkA "northwesterly");
lin northwestern_A = compoundA (mkA "northwestern");
lin northwich_PN = mkPN "Northwich";
lin norton_PN = mkPN "Norton";
lin norway_PN = mkPN "Norway";
lin norwegian_A = compoundA (mkA "norwegian");
lin norwegian_N = mkN "norwegian" "norwegians";
lin norwich_PN = mkPN "Norwich";
lin nose_N = mkN "nose" "noses";
lin nose_V = mkV "nose" "noses" "nosed" "nosed" "nosing";
lin nose_V2 = mkV2 (mkV "nose" "noses" "nosed" "nosed" "nosing");
lin nose_flute_N = mkN "nose - flute" "nose - flutes";
lin nose_wheel_N = mkN "nose - wheel" "nose - wheels";
lin nosebag_N = mkN "nosebag" "nosebags";
lin nosebleed_N = mkN "nosebleed" "nosebleeds";
lin nosecone_N = mkN "nosecone" "nosecones";
lin nosed_A = compoundA (mkA "nosed");
lin nosedive_N = mkN "nosedive" "nosedives";
lin nosedive_V = mkV "nosedive" "nosedives" "nosedived" "nosedived" "nosediving";
lin nosegay_N = mkN "nosegay" "nosegays";
lin nosering_N = mkN "nosering" "noserings";
lin nosey_A = compoundA (mkA "nosey");
lin nosh_N = mkN "nosh" ;
lin nosh_V = mkV "nosh" "noshes" "noshed" "noshed" "noshing";
lin nosh_up_N = mkN "nosh - up" "nosh - ups";
lin nostalgia_N = mkN "nostalgia" ;
lin nostalgic_A = compoundA (mkA "nostalgic");
lin nostalgically_Adv = mkAdv "nostalgically";
lin nostril_N = mkN "nostril" "nostrils";
lin nostrum_N = mkN "nostrum" "nostrums";
lin nosy_A = mkA "nosy" "nosier";
lin not_Adv = mkAdv "not";
lin notability_N = mkN "notability" "notabilities";
lin notable_A = compoundA (mkA "notable");
lin notable_N = mkN "notable" "notables";
lin notary_N = mkN "notary" "notaries";
lin notation_N = mkN "notation" "notations";
lin notch_N = mkN "notch" "notches";
lin notch_V2 = mkV2 (mkV "notch" "notches" "notched" "notched" "notching");
lin note_N = mkN "note" "notes";
lin note_V = mkV "note";
lin note_V2 = mkV2 (mkV "note" "notes" "noted" "noted" "noting");
lin note_VS = mkVS (mkV "note");
lin notebook_N = mkN "notebook" "notebooks";
lin notecase_N = mkN "notecase" "notecases";
lin noted_A = compoundA (mkA "noted");
lin notepaper_N = mkN "notepaper" ;
lin noteworthy_A = compoundA (mkA "noteworthy");
lin nothing_Adv = mkAdv "nothing";
lin nothingness_N = mkN "nothingness" ;
lin notice_N = mkN "notice" "notices";
lin notice_V = mkV "notice" "notices" "noticed" "noticed" "noticing";
lin notice_V2 = mkV2 (mkV "notice" "notices" "noticed" "noticed" "noticing");
lin notice_VS = mkVS (mkV "notice" "notices" "noticed" "noticed" "noticing");
lin notice_board_N = mkN "notice - board" "notice - boards";
lin noticeable_A = compoundA (mkA "noticeable");
lin notifiable_A = compoundA (mkA "notifiable");
lin notification_N = mkN "notification" "notifications";
lin notify_V2 = mkV2 (mkV "notify" "notifies" "notified" "notified" "notifying");
lin notion_N = mkN "notion" "notions";
lin notional_A = compoundA (mkA "notional");
lin notoriety_N = mkN "notoriety" ;
lin notorious_A = compoundA (mkA "notorious");
lin nottingham_PN = mkPN "Nottingham";
lin nottinghamshire_PN = mkPN "Nottinghamshire";
lin notwithstanding_Adv = mkAdv "notwithstanding";
lin notwithstanding_Prep = mkPrep "notwithstanding";
lin nougat_N = mkN "nougat" "nougats";
lin nought_N = mkN "nought" "noughts";
lin noun_N = mkN "noun" "nouns";
lin nourish_V2 = mkV2 (mkV "nourish" "nourishes" "nourished" "nourished" "nourishing");
lin nourishment_N = mkN "nourishment" ;
lin nous_N = mkN "nous" ;
lin nouveau_riche_N = mkN "nouveau riche" "IRREG";
lin nov_PN = mkPN "Nov";
lin nova_N = mkN "nova" "novas";
lin nova_scotia_PN = mkPN "Nova scotia";
lin novara_PN = mkPN "Novara";
lin novel_A = compoundA (mkA "novel");
lin novel_N = mkN "novel" "novels";
lin novelette_N = mkN "novelette" "novelettes";
lin novelist_N = mkN "novelist" "novelists";
lin novelty_N = mkN "novelty" "novelties";
lin november_N = mkN "november" "novembers";
lin november_PN = mkPN "November";
lin novice_N = mkN "novice" "novices";
lin noviciate_N = mkN "noviciate" "noviciates";
lin novitiate_N = mkN "novitiate" "novitiates";
lin novokuznetsk_PN = mkPN "Novokuznetsk";
lin novosibirsk_PN = mkPN "Novosibirsk";
lin now_Adv = mkAdv "now";
lin nowadays_Adv = mkAdv "nowadays";
lin nowhere_Adv = mkAdv "nowhere";
lin nowise_Adv = mkAdv "nowise";
lin noxious_A = compoundA (mkA "noxious");
lin noxiousness_N = mkN "noxiousness" ;
lin nozzle_N = mkN "nozzle" "nozzles";
lin nr_PN = mkPN "Nr";
lin nspcc_N = mkN "nspcc" ;
lin nt_N = mkN "nt" ;
lin nuance_N = mkN "nuance" "nuances";
lin nub_N = mkN "nub" "nubs";
lin nubile_A = compoundA (mkA "nubile");
lin nuclear_A = compoundA (mkA "nuclear");
lin nucleic_A = compoundA (mkA "nucleic");
lin nucleus_N = mkN "nucleus" "nuclei" {- FIXME: guessed plural form -};
lin nude_A = compoundA (mkA "nude");
lin nude_N = mkN "nude" "nudes";
lin nudge_N = mkN "nudge" "nudges";
lin nudge_V2 = mkV2 (mkV "nudge" "nudges" "nudged" "nudged" "nudging");
lin nudism_N = mkN "nudism" ;
lin nudist_N = mkN "nudist" "nudists";
lin nudity_N = mkN "nudity" ;
lin nugatory_A = compoundA (mkA "nugatory");
lin nugget_N = mkN "nugget" "nuggets";
lin nuisance_N = mkN "nuisance" "nuisances";
lin null_A = compoundA (mkA "null");
lin nullification_N = mkN "nullification" ;
lin nullify_V2 = mkV2 (mkV "nullify" "nullifies" "nullified" "nullified" "nullifying");
lin nullity_N = mkN "nullity" ;
lin numb_A = compoundA (mkA "numb");
lin numb_V2 = mkV2 (mkV "numb" "numbs" "numbed" "numbed" "numbing");
lin number_N = mkN "number" "numbers";
lin number_V2 = mkV2 (mkV "number" "numbers" "numbered" "numbered" "numbering");
lin numberless_A = compoundA (mkA "numberless");
lin numberplate_N = mkN "numberplate" "numberplates";
lin numbness_N = mkN "numbness" ;
lin numerable_A = compoundA (mkA "numerable");
lin numeracy_N = mkN "numeracy" ;
lin numeral_A = compoundA (mkA "numeral");
lin numeral_N = mkN "numeral" "numerals";
lin numerate_A = compoundA (mkA "numerate");
lin numeration_N = mkN "numeration" "numerations";
lin numerator_N = mkN "numerator" "numerators";
lin numeric_A = compoundA (mkA "numeric");
lin numerical_A = compoundA (mkA "numerical");
lin numerous_A = compoundA (mkA "numerous");
lin numinous_A = compoundA (mkA "numinous");
lin numismatics_N = mkN "numismatics" "numismatics";
lin numismatist_N = mkN "numismatist" "numismatists";
lin numskull_N = mkN "numskull" "numskulls";
lin nun_N = mkN "nun" "nuns";
lin nuncio_N = mkN "nuncio" "nuncios";
lin nuneaton_PN = mkPN "Nuneaton";
lin nunnery_N = mkN "nunnery" "nunneries";
lin nuptial_A = compoundA (mkA "nuptial");
lin nurenburg_PN = mkPN "Nurenburg";
lin nurse_N = mkN "nurse" "nurses";
lin nurse_V2 = mkV2 (mkV "nurse" "nurses" "nursed" "nursed" "nursing");
lin nurseling_N = mkN "nurseling" "nurselings";
lin nursemaid_N = mkN "nursemaid" "nursemaids";
lin nursery_N = mkN "nursery" "nurseries";
lin nurseryman_N = mkN "nurseryman" "nurserymen" {- FIXME: guessed plural form -};
lin nursing_home_N = mkN "nursing - home" "nursing - homes";
lin nursling_N = mkN "nursling" "nurslings";
lin nurture_N = mkN "nurture" ;
lin nurture_V2 = mkV2 (mkV "nurture" "nurtures" "nurtured" "nurtured" "nurturing");
lin nut_N = mkN "nut" "nuts";
lin nut_V = mkV "nut" "nuts" "nutted" "nutted" "nutting";
lin nut_brown_A = compoundA (mkA "nut - brown");
lin nut_butter_N = mkN "nut - butter" "nut - butters";
lin nuthouse_N = mkN "nuthouse" "nuthouses";
lin nutmeg_N = mkN "nutmeg" "nutmegs";
lin nutria_N = mkN "nutria" ;
lin nutrient_A = compoundA (mkA "nutrient");
lin nutrient_N = mkN "nutrient" "nutrients";
lin nutriment_N = mkN "nutriment" "nutriments";
lin nutrition_N = mkN "nutrition" ;
lin nutritional_A = compoundA (mkA "nutritional");
lin nutritious_A = compoundA (mkA "nutritious");
lin nutritive_A = compoundA (mkA "nutritive");
lin nuts_A = compoundA (mkA "nuts");
lin nutshell_N = mkN "nutshell" "nutshells";
lin nutty_A = mkA "nutty" "nuttier";
lin nuzzle_V = mkV "nuzzle" "nuzzles" "nuzzled" "nuzzled" "nuzzling";
lin nuzzle_V2 = mkV2 (mkV "nuzzle" "nuzzles" "nuzzled" "nuzzled" "nuzzling");
lin nylon_N = mkN "nylon" "nylons";
lin nymph_N = mkN "nymph" "nymphs";
lin nymphet_N = mkN "nymphet" "nymphets";
lin nympho_N = mkN "nympho" "nymphos";
lin nymphomania_N = mkN "nymphomania" ;
lin nymphomaniac_A = compoundA (mkA "nymphomaniac");
lin nymphomaniac_N = mkN "nymphomaniac" "nymphomaniacs";
lin o'er_Adv = mkAdv "o'er";
lin o_level_N = mkN "o - level" "o - levels";
lin oaf_N = mkN "oaf" "oafs";
lin oafish_A = compoundA (mkA "oafish");
lin oak_N = mkN "oak" "oaks";
lin oak_apple_N = mkN "oak - apple" "oak - apples";
lin oaken_A = compoundA (mkA "oaken");
lin oakengates_PN = mkPN "Oakengates";
lin oakum_N = mkN "oakum" ;
lin oap_N = mkN "OAP" "OAP's" ;
lin oar_N = mkN "oar" "oars";
lin oarsman_N = mkN "oarsman" "oarsmen" {- FIXME: guessed plural form -};
lin oarsmanship_N = mkN "oarsmanship" ;
lin oarswoman_N = mkN "oarswoman" "oarswomen" {- FIXME: guessed plural form -};
lin oasis_N = mkN "oasis" "oases" {- FIXME: guessed plural form -};
lin oast_N = mkN "oast" "oasts";
lin oasthouse_N = mkN "oasthouse" "oasthouses";
lin oat_N = mkN "oat" "oats";
lin oatcake_N = mkN "oatcake" "oatcakes";
lin oath_N = mkN "oath" "oaths";
lin oatmeal_N = mkN "oatmeal" ;
lin oau_N = mkN "oau" ;
lin ob_PN = mkPN "Ob";
lin oban_PN = mkPN "Oban";
lin obbligato_N = mkN "obbligato" "obbligatos";
lin obduracy_N = mkN "obduracy" ;
lin obdurate_A = compoundA (mkA "obdurate");
lin obedience_N = mkN "obedience" ;
lin obedient_A = compoundA (mkA "obedient");
lin obeisance_N = mkN "obeisance" "obeisances";
lin obelisk_N = mkN "obelisk" "obelisks";
lin oberhausen_PN = mkPN "Oberhausen";
lin obese_A = compoundA (mkA "obese");
lin obesity_N = mkN "obesity" ;
lin obey_V = mkV "obey" "obeys" "obeyed" "obeyed" "obeying";
lin obey_V2 = mkV2 (mkV "obey" "obeys" "obeyed" "obeyed" "obeying");
lin obfuscate_V2 = mkV2 (mkV "obfuscate" "obfuscates" "obfuscated" "obfuscated" "obfuscating");
lin obi_N = mkN "obi" "obis";
lin obiter_dictum_N = mkN "obiter dictum" "obiter dicta" {- FIXME: guessed plural form -};
lin obituary_N = mkN "obituary" "obituaries";
lin object_N = mkN "object" "objects";
lin object_V = mkV "object" "objects" "objected" "objected" "objecting";
lin object_V2 = mkV2 (mkV "object" "objects" "objected" "objected" "objecting");
lin objection_N = mkN "objection" "objections";
lin objectionable_A = compoundA (mkA "objectionable");
lin objective_A = compoundA (mkA "objective");
lin objective_N = mkN "objective" "objectives";
lin objectivity_N = mkN "objectivity" ;
lin objector_N = mkN "objector" "objectors";
lin objurgate_V2 = mkV2 (mkV "objurgate" "objurgates" "objurgated" "objurgated" "objurgating");
lin objurgation_N = mkN "objurgation" "objurgations";
lin oblate_A = compoundA (mkA "oblate");
lin oblation_N = mkN "oblation" "oblations";
lin obligate_V2 = mkV2 (mkV "obligate" "obligates" "obligated" "obligated" "obligating");
lin obligate_V2V = mkV2V (mkV "obligate") noPrep to_Prep ;
lin obligation_N = mkN "obligation" "obligations";
lin obligatory_A = compoundA (mkA "obligatory");
lin oblige_V2 = mkV2 (mkV "oblige" "obliges" "obliged" "obliged" "obliging");
lin obliging_A = compoundA (mkA "obliging");
lin oblique_A = compoundA (mkA "oblique");
lin obliquity_N = mkN "obliquity" "obliquities";
lin obliterate_V2 = mkV2 (mkV "obliterate" "obliterates" "obliterated" "obliterated" "obliterating");
lin obliteration_N = mkN "obliteration" ;
lin oblivion_N = mkN "oblivion" ;
lin oblivious_A = compoundA (mkA "oblivious");
lin oblong_A = compoundA (mkA "oblong");
lin oblong_N = mkN "oblong" "oblongs";
lin obloquy_N = mkN "obloquy" ;
lin obnoxious_A = compoundA (mkA "obnoxious");
lin obnoxiousness_N = mkN "obnoxiousness" ;
lin oboe_N = mkN "oboe" "oboes";
lin oboist_N = mkN "oboist" "oboists";
lin obscene_A = compoundA (mkA "obscene");
lin obscenity_N = mkN "obscenity" "obscenities";
lin obscurantism_N = mkN "obscurantism" ;
lin obscurantist_N = mkN "obscurantist" "obscurantists";
lin obscure_A = compoundA (mkA "obscure");
lin obscure_V2 = mkV2 (mkV "obscure" "obscures" "obscured" "obscured" "obscuring");
lin obscure_VA = mkVA (mkV "obscure");
lin obscurity_N = mkN "obscurity" "obscurities";
lin obsequious_A = compoundA (mkA "obsequious");
lin obsequiousness_N = mkN "obsequiousness" ;
lin observable_A = compoundA (mkA "observable");
lin observance_N = mkN "observance" "observances";
lin observant_A = compoundA (mkA "observant");
lin observation_N = mkN "observation" "observations";
lin observatory_N = mkN "observatory" "observatories";
lin observe_V = mkV "observe" "observes" "observed" "observed" "observing";
lin observe_V2 = mkV2 (mkV "observe" "observes" "observed" "observed" "observing");
lin observe_VS = mkVS (mkV "observe" "observes" "observed" "observed" "observing");
lin observer_N = mkN "observer" "observers";
lin observing_A = compoundA (mkA "observing");
lin obsess_V2 = mkV2 (mkV "obsess" "obsesses" "obsessed" "obsessed" "obsessing");
lin obsession_N = mkN "obsession" "obsessions";
lin obsessional_A = compoundA (mkA "obsessional");
lin obsessive_A = compoundA (mkA "obsessive");
lin obsidian_N = mkN "obsidian" ;
lin obsolescence_N = mkN "obsolescence" ;
lin obsolescent_A = compoundA (mkA "obsolescent");
lin obsolete_A = compoundA (mkA "obsolete");
lin obstacle_N = mkN "obstacle" "obstacles";
lin obstetric_A = compoundA (mkA "obstetric");
lin obstetrical_A = compoundA (mkA "obstetrical");
lin obstetrician_N = mkN "obstetrician" "obstetricians";
lin obstetrics_N = mkN "obstetrics" "obstetrics";
lin obstinacy_N = mkN "obstinacy" ;
lin obstinate_A = compoundA (mkA "obstinate");
lin obstreperous_A = compoundA (mkA "obstreperous");
lin obstreperousness_N = mkN "obstreperousness" ;
lin obstruct_V2 = mkV2 (mkV "obstruct" "obstructs" "obstructed" "obstructed" "obstructing");
lin obstruction_N = mkN "obstruction" "obstructions";
lin obstructionism_N = mkN "obstructionism" ;
lin obstructionist_N = mkN "obstructionist" "obstructionists";
lin obstructive_A = compoundA (mkA "obstructive");
lin obtain_V = mkV "obtain" "obtains" "obtained" "obtained" "obtaining";
lin obtain_V2 = mkV2 (mkV "obtain" "obtains" "obtained" "obtained" "obtaining");
lin obtainable_A = compoundA (mkA "obtainable");
lin obtrude_V = mkV "obtrude" "obtrudes" "obtruded" "obtruded" "obtruding";
lin obtrude_V2 = mkV2 (mkV "obtrude" "obtrudes" "obtruded" "obtruded" "obtruding");
lin obtrusive_A = compoundA (mkA "obtrusive");
lin obtuse_A = compoundA (mkA "obtuse");
lin obtuseness_N = mkN "obtuseness" ;
lin obverse_N = mkN "obverse" "obverses";
lin obviate_V2 = mkV2 (mkV "obviate" "obviates" "obviated" "obviated" "obviating");
lin obvious_A = compoundA (mkA "obvious");
lin obviousness_N = mkN "obviousness" ;
lin ocarina_N = mkN "ocarina" "ocarinas";
lin occasion_N = mkN "occasion" "occasions";
lin occasion_V2 = mkV2 (mkV "occasion" "occasions" "occasioned" "occasioned" "occasioning");
lin occasional_A = compoundA (mkA "occasional");
lin occident_PN = mkPN "Occident";
lin occidental_A = compoundA (mkA "occidental");
lin occidental_N = mkN "occidental" "occidentals";
lin occult_A = compoundA (mkA "occult");
lin occult_N = mkN "occult" "IRREG";
lin occupancy_N = mkN "occupancy" "occupancies";
lin occupant_N = mkN "occupant" "occupants";
lin occupation_N = mkN "occupation" "occupations";
lin occupational_A = compoundA (mkA "occupational");
lin occupier_N = mkN "occupier" "occupiers";
lin occupy_V = mkV "occupy";
lin occupy_V2 = mkV2 (mkV "occupy" "occupies" "occupied" "occupied" "occupying");
lin occur_V = mkV "occur" "occurs" "occurred" "occurred" "occurring";
lin occurr_V2 = mkV2 (mkV "occurr");
lin occurrence_N = mkN "occurrence" "occurrences";
lin ocean_N = mkN "ocean" "oceans";
lin oceanic_A = compoundA (mkA "oceanic");
lin ochre_N = mkN "ochre" ;
lin ockbrook_PN = mkPN "Ockbrook";
lin ockendon_PN = mkPN "Ockendon";
lin oct_PN = mkPN "Oct";
lin octagon_N = mkN "octagon" "octagons";
lin octagonal_A = compoundA (mkA "octagonal");
lin octane_N = mkN "octane" ;
lin octave_N = mkN "octave" "octaves";
lin octavo_N = mkN "octavo" "octavos";
lin octet_N = mkN "octet" "octets";
lin octette_N = mkN "octette" "octettes";
lin october_N = mkN "october" "octobers";
lin october_PN = mkPN "October";
lin octogenarian_A = compoundA (mkA "octogenarian");
lin octogenarian_N = mkN "octogenarian" "octogenarians";
lin octopus_N = mkN "octopus" "octopuses";
lin octroi_N = mkN "octroi" "octrois";
lin ocular_A = compoundA (mkA "ocular");
lin oculist_N = mkN "oculist" "oculists";
lin odalisque_N = mkN "odalisque" "odalisques";
lin odd_A = mkA "odd" "odder";
lin odd_job_A = compoundA (mkA "odd - job");
lin oddity_N = mkN "oddity" "oddities";
lin oddment_N = mkN "oddment" "oddments";
lin odds_on_A = compoundA (mkA "odds - on");
lin odds_on_Adv = mkAdv "odds - on";
lin ode_N = mkN "ode" "odes";
lin odessa_PN = mkPN "Odessa";
lin odious_A = compoundA (mkA "odious");
lin odium_N = mkN "odium" ;
lin odoriferous_A = compoundA (mkA "odoriferous");
lin odorous_A = compoundA (mkA "odorous");
lin odour_N = mkN "odour" "odours";
lin odourless_A = compoundA (mkA "odourless");
lin odyssey_N = mkN "odyssey" "odysseys";
lin oecd_N = mkN "oecd" ;
lin oecumenical_A = compoundA (mkA "oecumenical");
lin oed_N = mkN "oed" ;
lin oedipus_PN = mkPN "Oedipus";
lin oesophagus_N = mkN "oesophagus" "oesophaguses";
lin of_Prep = mkPrep "of";
lin off_A = compoundA (mkA "off");
lin off_Adv = mkAdv "off";
lin off_Prep = mkPrep "off";
lin off_day_N = mkN "off - day" "off - days";
lin off_licence_N = mkN "off - licence" "off - licences";
lin off_peak_A = compoundA (mkA "off - peak");
lin off_putting_A = compoundA (mkA "off - putting");
lin off_street_A = compoundA (mkA "off - street");
lin off_white_A = compoundA (mkA "off - white");
lin offal_N = mkN "offal" ;
lin offaly_PN = mkPN "Offaly";
lin offbeat_A = compoundA (mkA "offbeat");
lin offenbach_PN = mkPN "Offenbach";
lin offence_N = mkN "offence" "offences";
lin offenceless_A = compoundA (mkA "offenceless");
lin offend_V = mkV "offend" "offends" "offended" "offended" "offending";
lin offend_V2 = mkV2 (mkV "offend" "offends" "offended" "offended" "offending");
lin offender_N = mkN "offender" "offenders";
lin offensive_A = compoundA (mkA "offensive");
lin offensive_N = mkN "offensive" "offensives";
lin offensiveness_N = mkN "offensiveness" ;
lin offer_N = mkN "offer" "offers";
lin offer_V = mkV "offer" "offers" "offered" "offered" "offering";
lin offer_V2 = mkV2 (mkV "offer" "offers" "offered" "offered" "offering");
lin offer_VV = mkVV (mkV "offer" "offers" "offered" "offered" "offering");
lin offer_VS = mkVS (mkV "offer" "offers" "offered" "offered" "offering");
lin offering_N = mkN "offering" "offerings";
lin offertory_N = mkN "offertory" "offertories";
lin offhand_A = compoundA (mkA "offhand");
lin offhand_Adv = mkAdv "offhand";
lin offhanded_A = compoundA (mkA "offhanded");
lin offhanded_Adv = mkAdv "offhanded";
lin offhandedly_A = compoundA (mkA "offhandedly");
lin office_N = mkN "office" "offices";
lin office_bearer_N = mkN "office - bearer" "office - bearers";
lin office_block_N = mkN "office - block" "office - blocks";
lin office_boy_N = mkN "office - boy" "office - boys";
lin office_holder_N = mkN "office - holder" "office - holders";
lin officer_N = mkN "officer" "officers";
lin official_A = compoundA (mkA "official");
lin official_N = mkN "official" "officials";
lin officialdom_N = mkN "officialdom" "officialdoms";
lin officialese_N = mkN "officialese" ;
lin officiate_V = mkV "officiate" "officiates" "officiated" "officiated" "officiating";
lin officious_A = compoundA (mkA "officious");
lin officiousness_N = mkN "officiousness" ;
lin offing_N = mkN "offing" "IRREG";
lin offish_A = compoundA (mkA "offish");
lin offprint_N = mkN "offprint" "offprints";
lin offset_N = mkN "offset" ;
lin offset_V2 = mkV2 (mkV "off" IrregEng.set_V);
lin offshoot_N = mkN "offshoot" "offshoots";
lin offshore_A = compoundA (mkA "offshore");
lin offside_A = compoundA (mkA "offside");
lin offside_Adv = mkAdv "offside";
lin offspring_N = mkN "offspring" "offspring";
lin offstage_A = compoundA (mkA "offstage");
lin offstage_Adv = mkAdv "offstage";
lin oft_Adv = mkAdv "oft";
lin oft_times_Adv = mkAdv "oft - times";
lin often_Adv = mkAdv "often";
lin oftener_Adv = mkAdv "oftener";
lin ogle_V = mkV "ogle" "ogles" "ogled" "ogled" "ogling";
lin ogle_V2 = mkV2 (mkV "ogle" "ogles" "ogled" "ogled" "ogling");
lin ogmore_valley_PN = mkPN "Ogmore valley";
lin ogre_N = mkN "ogre" "ogres";
lin ogreish_A = compoundA (mkA "ogreish");
lin ogress_N = mkN "ogress" "ogresses";
lin ohio_PN = mkPN "Ohio";
lin ohm_N = mkN "ohm" "ohms";
lin oil_N = mkN "oil" "oils";
lin oil_V2 = mkV2 (mkV "oil" "oils" "oiled" "oiled" "oiling");
lin oil_bearing_A = compoundA (mkA "oil - bearing");
lin oil_burner_N = mkN "oil - burner" "oil - burners";
lin oil_cake_N = mkN "oil - cake" ;
lin oil_painting_N = mkN "oil - painting" "oil - paintings";
lin oil_palm_N = mkN "oil - palm" "oil - palms";
lin oil_paper_N = mkN "oil - paper" ;
lin oil_rig_N = mkN "oil - rig" "oil - rigs";
lin oil_silk_N = mkN "oil - silk" ;
lin oil_slick_N = mkN "oil - slick" "oil - slicks";
lin oil_tanker_N = mkN "oil - tanker" "oil - tankers";
lin oil_well_N = mkN "oil - well" "oil - wells";
lin oilcan_N = mkN "oilcan" "oilcans";
lin oilcloth_N = mkN "oilcloth" ;
lin oiled_A = compoundA (mkA "oiled");
lin oiler_N = mkN "oiler" "oilers";
lin oilfield_N = mkN "oilfield" "oilfields";
lin oilfired_A = compoundA (mkA "oilfired");
lin oiliness_N = mkN "oiliness" ;
lin oilskin_N = mkN "oilskin" "oilskins";
lin oily_A = mkA "oily" "oilier";
lin ointment_N = mkN "ointment" "ointments";
lin okapi_N = mkN "okapi" "okapis";
lin okay_A = compoundA (mkA "okay");
lin okay_Adv = mkAdv "okay";
lin okay_N = mkN "okay" "IRREG";
lin okay_V2 = mkV2 (mkV "okay" "okays" "okayed" "okayed" "okaying");
lin oklahoma_PN = mkPN "Oklahoma";
lin oklahoma_city_PN = mkPN "Oklahoma city";
lin okra_N = mkN "okra" ;
lin old_A = mkA "old" "older";
lin old_N = mkN "old" ;
lin old_fashioned_A = compoundA (mkA "old - fashioned");
lin old_maidish_A = compoundA (mkA "old - maidish");
lin old_time_A = compoundA (mkA "old - time");
lin old_timer_N = mkN "old - timer" "old - timers";
lin old_windsor_PN = mkPN "Old windsor";
lin old_womanish_A = compoundA (mkA "old - womanish");
lin old_world_A = compoundA (mkA "old - world");
lin olden_A = compoundA (mkA "olden");
lin oldenburg_PN = mkPN "Oldenburg";
lin oldham_PN = mkPN "Oldham";
lin oldish_A = compoundA (mkA "oldish");
lin oldland_PN = mkPN "Oldland";
lin oldster_N = mkN "oldster" "oldsters";
lin oleaginous_A = compoundA (mkA "oleaginous");
lin oleander_N = mkN "oleander" "oleanders";
lin olfactory_A = compoundA (mkA "olfactory");
lin oligarch_N = mkN "oligarch" "oligarchs";
lin oligarchy_N = mkN "oligarchy" "oligarchies";
lin olive_A = compoundA (mkA "olive");
lin olive_N = mkN "olive" "olives";
lin olive_PN = mkPN "Olive";
lin olive_tree_N = mkN "olive - tree" "olive - trees";
lin oliver_PN = mkPN "Oliver";
lin olivia_PN = mkPN "Olivia";
lin ollerton_PN = mkPN "Ollerton";
lin ollie_PN = mkPN "Ollie";
lin olympiad_N = mkN "olympiad" "olympiads";
lin olympian_A = compoundA (mkA "olympian");
lin olympian_N = mkN "olympian" "olympians";
lin olympic_A = compoundA (mkA "olympic");
lin olympics_PN = mkPN "Olympics";
lin oman_PN = mkPN "Oman";
lin omani_A = compoundA (mkA "omani");
lin omani_N = mkN "omani" "omanis";
lin ombudsman_N = mkN "ombudsman" "ombudsmen" {- FIXME: guessed plural form -};
lin omega_N = mkN "omega" "omegas";
lin omelet_N = mkN "omelet" "omelets";
lin omelette_N = mkN "omelette" "omelettes";
lin omen_N = mkN "omen" "omens";
lin omen_V2 = mkV2 (mkV "omen" "omens" "omened" "omened" "omening");
lin ominous_A = compoundA (mkA "ominous");
lin omission_N = mkN "omission" "omissions";
lin omit_V2 = mkV2 (mkV "omit" "omits" "omitted" "omitted" "omitting");
lin omnibus_N = mkN "omnibus" "omnibuses";
lin omnipotence_N = mkN "omnipotence" ;
lin omnipotent_A = compoundA (mkA "omnipotent");
lin omniscience_N = mkN "omniscience" ;
lin omniscient_A = compoundA (mkA "omniscient");
lin omnivorous_A = compoundA (mkA "omnivorous");
lin omsk_PN = mkPN "Omsk";
lin on_Adv = mkAdv "on";
lin on_Prep = mkPrep "on";
lin on_licence_N = mkN "on - licence" "on - licences";
lin once_Adv = mkAdv "once";
lin once_Prep = mkPrep "once";
lin oncoming_A = compoundA (mkA "oncoming");
lin oncoming_N = mkN "oncoming" "IRREG";
lin one_armed_A = compoundA (mkA "one - armed");
lin one_eyed_A = compoundA (mkA "one - eyed");
lin one_horse_A = compoundA (mkA "one - horse");
lin one_idea'd_A = compoundA (mkA "one - idea'd");
lin one_sided_A = compoundA (mkA "one - sided");
lin one_step_N = mkN "one - step" "one - steps";
lin one_time_A = compoundA (mkA "one - time");
lin one_upmanship_N = mkN "one - upmanship" ;
lin oneness_N = mkN "oneness" ;
lin onerous_A = compoundA (mkA "onerous");
lin ongar_PN = mkPN "Ongar";
lin ongoing_A = compoundA (mkA "ongoing");
lin onion_N = mkN "onion" "onions";
lin onlooker_N = mkN "onlooker" "onlookers";
lin only_Adv = mkAdv "only";
lin only_Predet = {s="only"};
lin onomatopoeia_N = mkN "onomatopoeia" ;
lin onrush_N = mkN "onrush" "onrushes";
lin onset_N = mkN "onset" "onsets";
lin onshore_A = compoundA (mkA "onshore");
lin onshore_Adv = mkAdv "onshore";
lin onslaught_N = mkN "onslaught" "onslaughts";
lin ontario_PN = mkPN "Ontario";
lin onto_Prep = mkPrep "onto";
lin ontology_N = mkN "ontology" "ontologies";
lin onus_N = mkN "onus" "oni" {- FIXME: guessed plural form -};
lin onward_A = compoundA (mkA "onward");
lin onward_Adv = mkAdv "onward";
lin onwards_Adv = mkAdv "onwards";
lin onyx_N = mkN "onyx" ;
lin oomph_N = mkN "oomph" ;
lin ooze_N = mkN "ooze" ;
lin ooze_V = mkV "ooze" "oozes" "oozed" "oozed" "oozing";
lin ooze_V2 = mkV2 (mkV "ooze" "oozes" "oozed" "oozed" "oozing");
lin oozy_A = mkA "oozy" "oozier";
lin op_PN = mkPN "Op";
lin op_art_N = mkN "op art" ;
lin op_cit_PN = mkPN "Op cit";
lin opacity_N = mkN "opacity" ;
lin opal_N = mkN "opal" "opals";
lin opalescent_A = compoundA (mkA "opalescent");
lin opaque_A = compoundA (mkA "opaque");
lin opaqueness_N = mkN "opaqueness" ;
lin opec_PN = mkPN "Opec";
lin open_A = compoundA (mkA "open");
lin open_N = mkN "open" ;
lin open_V = mkV "open" "opens" "opened" "opened" "opening";
lin open_V2 = mkV2 (mkV "open" "opens" "opened" "opened" "opening");
lin open_air_A = compoundA (mkA "open - air");
lin open_ended_A = compoundA (mkA "open - ended");
lin open_eyed_A = compoundA (mkA "open - eyed");
lin open_handed_A = compoundA (mkA "open - handed");
lin open_hearted_A = compoundA (mkA "open - hearted");
lin open_minded_A = compoundA (mkA "open - minded");
lin open_mouthed_A = compoundA (mkA "open - mouthed");
lin opencast_A = compoundA (mkA "opencast");
lin opener_N = mkN "opener" "openers";
lin opening_A = compoundA (mkA "opening");
lin opening_N = mkN "opening" "openings";
lin openness_N = mkN "openness" ;
lin openwork_N = mkN "openwork" ;
lin opera_N = mkN "opera" "operas";
lin opera_cloak_N = mkN "opera - cloak" "opera - cloaks";
lin opera_hat_N = mkN "opera - hat" "opera - hats";
lin opera_house_N = mkN "opera - house" "opera - houses";
lin operable_A = compoundA (mkA "operable");
lin operate_V = mkV "operate" "operates" "operated" "operated" "operating";
lin operate_V2 = mkV2 (mkV "operate" "operates" "operated" "operated" "operating");
lin operatic_A = compoundA (mkA "operatic");
lin operating_table_N = mkN "operating - table" "operating - tables";
lin operating_theatre_N = mkN "operating - theatre" "operating - theatres";
lin operation_N = mkN "operation" "operations";
lin operational_A = compoundA (mkA "operational");
lin operative_A = compoundA (mkA "operative");
lin operative_N = mkN "operative" "operatives";
lin operator_N = mkN "operator" "operators";
lin operetta_N = mkN "operetta" "operettas";
lin ophthalmia_N = mkN "ophthalmia" ;
lin ophthalmic_A = compoundA (mkA "ophthalmic");
lin ophthalmoscope_N = mkN "ophthalmoscope" "ophthalmoscopes";
lin opiate_N = mkN "opiate" "opiates";
lin opine_V2 = mkV2 (mkV "opine" "opines" "opined" "opined" "opining");
lin opine_VS = mkVS (mkV "opine" "opines" "opined" "opined" "opining");
lin opinion_N = mkN "opinion" "opinions";
lin opinionated_A = compoundA (mkA "opinionated");
lin opinionative_A = compoundA (mkA "opinionative");
lin opium_N = mkN "opium" ;
lin opium_den_N = mkN "opium - den" "opium - dens";
lin opossum_N = mkN "opossum" "opossums";
lin opp_PN = mkPN "Opp";
lin opponent_N = mkN "opponent" "opponents";
lin opportune_A = compoundA (mkA "opportune");
lin opportunism_N = mkN "opportunism" ;
lin opportunist_N = mkN "opportunist" "opportunists";
lin opportunity_N = mkN "opportunity" "opportunities";
lin oppose_V = mkV "oppose";
lin oppose_V2 = mkV2 (mkV "oppose" "opposes" "opposed" "opposed" "opposing");
lin oppose_VS = mkVS (mkV "oppose");
lin opposite_A = compoundA (mkA "opposite");
lin opposite_N = mkN "opposite" "opposites";
lin opposite_Prep = mkPrep "opposite";
lin opposition_N = mkN "opposition" ;
lin oppress_V2 = mkV2 (mkV "oppress" "oppresses" "oppressed" "oppressed" "oppressing");
lin oppression_N = mkN "oppression" "oppressions";
lin oppressive_A = compoundA (mkA "oppressive");
lin oppressor_N = mkN "oppressor" "oppressors";
lin opprobrious_A = compoundA (mkA "opprobrious");
lin opprobrium_N = mkN "opprobrium" ;
lin oppugn_V2 = mkV2 (mkV "oppugn" "oppugns" "oppugned" "oppugned" "oppugning");
lin opt_V = mkV "opt" "opts" "opted" "opted" "opting";
lin opt_V2V = mkV2V (mkV "opt" "opts" "opted" "opted" "opting") noPrep to_Prep ;
lin opt_VS = mkVS (mkV "opt" "opts" "opted" "opted" "opting");
lin optative_A = compoundA (mkA "optative");
lin optative_N = mkN "optative" "optatives";
lin optic_A = compoundA (mkA "optic");
lin optical_A = compoundA (mkA "optical");
lin optician_N = mkN "optician" "opticians";
lin optics_N = mkN "optics" "optics";
lin optimal_A = compoundA (mkA "optimal");
lin optimism_N = mkN "optimism" ;
lin optimist_N = mkN "optimist" "optimists";
lin optimistic_A = compoundA (mkA "optimistic");
lin optimistically_Adv = mkAdv "optimistically";
lin optimum_N = mkN "optimum" "optimums";
lin option_N = mkN "option" "options";
lin optional_A = compoundA (mkA "optional");
lin opulence_N = mkN "opulence" ;
lin opulent_A = compoundA (mkA "opulent");
lin opus_N = mkN "opus" "opi" {- FIXME: guessed plural form -};
lin or_Conj = mkConj "or" singular ;
lin oracle_N = mkN "oracle" "oracles";
lin oracular_A = compoundA (mkA "oracular");
lin oral_A = compoundA (mkA "oral");
lin oral_N = mkN "oral" "orals";
lin orang_outan_N = mkN "orang - outan" "orang - outans";
lin orang_outang_N = mkN "orang - outang" "orang - outangs";
lin orang_utan_N = mkN "orang - utan" "orang - utans";
lin orange_A = compoundA (mkA "orange");
lin orange_N = mkN "orange" "oranges";
lin orangeade_N = mkN "orangeade" ;
lin orangeman_N = mkN "orangeman" "orangemen" {- FIXME: guessed plural form -};
lin orate_V = mkV "orate" "orates" "orated" "orated" "orating";
lin oration_N = mkN "oration" "orations";
lin orator_N = mkN "orator" "orators";
lin oratorical_A = compoundA (mkA "oratorical");
lin oratorio_N = mkN "oratorio" "oratorios";
lin oratory_N = mkN "oratory" "oratories";
lin orb_N = mkN "orb" "orbs";
lin orbit_N = mkN "orbit" "orbits";
lin orbit_V = mkV "orbit" "orbits" "orbited" "orbited" "orbiting";
lin orbit_V2 = mkV2 (mkV "orbit" "orbits" "orbited" "orbited" "orbiting");
lin orbital_A = compoundA (mkA "orbital");
lin orchard_N = mkN "orchard" "orchards";
lin orchestra_N = mkN "orchestra" "orchestras";
lin orchestral_A = compoundA (mkA "orchestral");
lin orchestrate_V2 = mkV2 (mkV "orchestrate" "orchestrates" "orchestrated" "orchestrated" "orchestrating");
lin orchestration_N = mkN "orchestration" "orchestrations";
lin orchid_N = mkN "orchid" "orchids";
lin orchis_N = mkN "orchis" "orchises";
lin ordain_V2 = mkV2 (mkV "ordain" "ordains" "ordained" "ordained" "ordaining");
lin ordain_VS = mkVS (mkV "ordain");
lin ordeal_N = mkN "ordeal" "ordeals";
lin order_N = mkN "order" "orders";
lin order_V = mkV "order";
lin order_V2 = mkV2 (mkV "order" "orders" "ordered" "ordered" "ordering");
lin order_V2V = mkV2V (mkV "order" "orders" "ordered" "ordered" "ordering") noPrep to_Prep ;
lin order_VS = mkVS (mkV "order" "orders" "ordered" "ordered" "ordering");
lin order_book_N = mkN "order - book" "order - books";
lin order_form_N = mkN "order - form" "order - forms";
lin order_paper_N = mkN "order - paper" "order - papers";
lin ordering_N = mkN "ordering" "orderings";
lin orderliness_N = mkN "orderliness" ;
lin orderly_A = compoundA (mkA "orderly");
lin orderly_N = mkN "orderly" "orderlies";
lin ordinal_A = compoundA (mkA "ordinal");
lin ordinal_N = mkN "ordinal" "ordinals";
lin ordinance_N = mkN "ordinance" "ordinances";
lin ordinand_N = mkN "ordinand" "ordinands";
lin ordinary_A = compoundA (mkA "ordinary");
lin ordination_N = mkN "ordination" "ordinations";
lin ordnance_N = mkN "ordnance" ;
lin ordure_N = mkN "ordure" ;
lin ore_N = mkN "ore" "ores";
lin oregon_PN = mkPN "Oregon";
lin organ_N = mkN "organ" "organs";
lin organ_blower_N = mkN "organ - blower" "organ - blowers";
lin organ_grinder_N = mkN "organ - grinder" "organ - grinders";
lin organ_loft_N = mkN "organ - loft" "organ - lofts";
lin organdie_N = mkN "organdie" ;
lin organic_A = compoundA (mkA "organic");
lin organically_Adv = mkAdv "organically";
lin organism_N = mkN "organism" "organisms";
lin organist_N = mkN "organist" "organists";
lin organization_N = mkN "organization" "organizations";
lin organizational_A = compoundA (mkA "organizational");
lin organize_V2 = mkV2 (mkV "organize" "organizes" "organized" "organized" "organizing");
lin organize_V2V = mkV2V (mkV "organize") noPrep to_Prep ;
lin organized_A = compoundA (mkA "organized");
lin organizer_N = mkN "organizer" "organizers";
lin orgasm_N = mkN "orgasm" "orgasms";
lin orgiastic_A = compoundA (mkA "orgiastic");
lin orgy_N = mkN "orgy" "orgies";
lin oriel_N = mkN "oriel" "oriels";
lin orient_A = compoundA (mkA "orient");
lin orient_N = mkN "orient" "IRREG";
lin orient_V2 = mkV2 (mkV "orient" "orients" "oriented" "oriented" "orienting");
lin oriental_A = compoundA (mkA "oriental");
lin oriental_N = mkN "oriental" "orientals";
lin orientalist_N = mkN "orientalist" "orientalists";
lin orientate_V2 = mkV2 (mkV "orientate" "orientates" "orientated" "orientated" "orientating");
lin orientation_N = mkN "orientation" ;
lin orifice_N = mkN "orifice" "orifices";
lin origin_N = mkN "origin" "origins";
lin original_A = compoundA (mkA "original");
lin original_N = mkN "original" "originals";
lin originality_N = mkN "originality" ;
lin originate_V = mkV "originate" "originates" "originated" "originated" "originating";
lin originate_V2 = mkV2 (mkV "originate" "originates" "originated" "originated" "originating");
lin originator_N = mkN "originator" "originators";
lin oriole_N = mkN "oriole" "orioles";
lin orison_N = mkN "orison" "orisons";
lin orkney_PN = mkPN "Orkney";
lin orleans_PN = mkPN "Orleans";
lin orlop_N = mkN "orlop" "orlops";
lin ormolu_N = mkN "ormolu" "ormolus";
lin ormskirk_PN = mkPN "Ormskirk";
lin ornament_N = mkN "ornament" "ornaments";
lin ornament_V2 = mkV2 (mkV "ornament" "ornaments" "ornamented" "ornamented" "ornamenting");
lin ornamental_A = compoundA (mkA "ornamental");
lin ornamentation_N = mkN "ornamentation" ;
lin ornate_A = compoundA (mkA "ornate");
lin ornateness_N = mkN "ornateness" ;
lin ornery_A = compoundA (mkA "ornery");
lin ornithological_A = compoundA (mkA "ornithological");
lin ornithologist_N = mkN "ornithologist" "ornithologists";
lin ornithology_N = mkN "ornithology" ;
lin orotund_A = compoundA (mkA "orotund");
lin orphan_N = mkN "orphan" "orphans";
lin orphan_V2 = mkV2 (mkV "orphan" "orphans" "orphaned" "orphaned" "orphaning");
lin orphanage_N = mkN "orphanage" "orphanages";
lin orrisroot_N = mkN "orrisroot" ;
lin orthodontic_A = compoundA (mkA "orthodontic");
lin orthodontics_N = mkN "orthodontics" "orthodontics";
lin orthodontist_N = mkN "orthodontist" "orthodontists";
lin orthodox_A = compoundA (mkA "orthodox");
lin orthodoxy_N = mkN "orthodoxy" "orthodoxies";
lin orthogonal_A = compoundA (mkA "orthogonal");
lin orthographic_A = compoundA (mkA "orthographic");
lin orthography_N = mkN "orthography" "orthographies";
lin orthopaedic_A = compoundA (mkA "orthopaedic");
lin orthopaedics_N = mkN "orthopaedics" "orthopaedics";
lin orthopedic_A = compoundA (mkA "orthopedic");
lin orthopedics_N = mkN "orthopedics" "orthopedics";
lin ortolan_N = mkN "ortolan" "ortolans";
lin oryx_N = mkN "oryx" "oryxes";
lin osaka_PN = mkPN "Osaka";
lin oscar_N = mkN "oscar" "oscars";
lin oscar_PN = mkPN "Oscar";
lin oscillate_V = mkV "oscillate" "oscillates" "oscillated" "oscillated" "oscillating";
lin oscillate_V2 = mkV2 (mkV "oscillate" "oscillates" "oscillated" "oscillated" "oscillating");
lin oscillation_N = mkN "oscillation" "oscillations";
lin oscillator_N = mkN "oscillator" "oscillators";
lin oscillograph_N = mkN "oscillograph" "oscillographs";
lin oscilloscope_N = mkN "oscilloscope" "oscilloscopes";
lin osier_N = mkN "osier" "osiers";
lin oslo_PN = mkPN "Oslo";
lin osnabruck_PN = mkPN "Osnabruck";
lin osprey_N = mkN "osprey" "ospreys";
lin osseous_A = compoundA (mkA "osseous");
lin ossett_PN = mkPN "Ossett";
lin ossification_N = mkN "ossification" ;
lin ossify_V = mkV "ossify" "ossifies" "ossified" "ossified" "ossifying";
lin ossify_V2 = mkV2 (mkV "ossify" "ossifies" "ossified" "ossified" "ossifying");
lin ostensible_A = compoundA (mkA "ostensible");
lin ostentation_N = mkN "ostentation" ;
lin ostentatious_A = compoundA (mkA "ostentatious");
lin osteopath_N = mkN "osteopath" "osteopaths";
lin osteopathy_N = mkN "osteopathy" ;
lin ostler_N = mkN "ostler" "ostlers";
lin ostracism_N = mkN "ostracism" ;
lin ostracize_V2 = mkV2 (mkV "ostracize" "ostracizes" "ostracized" "ostracized" "ostracizing");
lin ostrich_N = mkN "ostrich" "ostriches";
lin oswald_PN = mkPN "Oswald";
lin oswestry_PN = mkPN "Oswestry";
lin ot_N = mkN "ot" ;
lin otago_PN = mkPN "Otago";
lin other_A = compoundA (mkA "other");
lin other_Adv = mkAdv "other";
lin other_N = mkN "other" "others";
lin otherwise_Adv = mkAdv "otherwise";
lin otherworldly_A = compoundA (mkA "otherworldly");
lin otiose_A = compoundA (mkA "otiose");
lin otley_PN = mkPN "Otley";
lin ottawa_PN = mkPN "Ottawa";
lin otter_N = mkN "otter" "otters";
lin ottoman_N = mkN "ottoman" "ottomans";
lin oubliette_N = mkN "oubliette" "oubliettes";
lin ouija_N = mkN "ouija" "ouijas";
lin ouija_board_N = mkN "ouija - board" "ouija - boards";
lin ounce_N = mkN "ounce" "ounces";
lin oust_V = mkV "oust";
lin oust_V2 = mkV2 (mkV "oust" "ousts" "ousted" "ousted" "ousting");
lin out_Adv = mkAdv "out";
lin out_Prep = mkPrep "out";
lin out_V2 = mkV2 (mkV "out" "outs" "outed" "outed" "outing");
lin out_herod_V2 = mkV2 (mkV "out - herod" "out - herods" "out - heroded" "out - heroded" "out - heroding");
lin out_of_date_A = compoundA (mkA "out - of - date");
lin out_of_door_A = compoundA (mkA "out - of - door");
lin out_of_doors_Adv = mkAdv "out - of - doors";
lin out_of_the_way_A = compoundA (mkA "out - of - the - way");
lin out_of_the_way_Adv = mkAdv "out - of - the - way";
lin out_of_work_A = compoundA (mkA "out - of - work");
lin out_trade_V2 = mkV2 (mkV "out - trade");
lin out_tray_N = mkN "out - tray" "out - trays";
lin outback_A = compoundA (mkA "outback");
lin outback_N = mkN "outback" "IRREG";
lin outbalance_V2 = mkV2 (mkV "outbalance" "outbalances" "outbalanced" "outbalanced" "outbalancing");
lin outbid_V2 = mkV2 (mkV "out" IrregEng.bid_V);
lin outboard_A = compoundA (mkA "outboard");
lin outbound_A = compoundA (mkA "outbound");
lin outbrave_V2 = mkV2 (mkV "outbrave" "outbraves" "outbraved" "outbraved" "outbraving");
lin outbreak_N = mkN "outbreak" "outbreaks";
lin outbuilding_N = mkN "outbuilding" "outbuildings";
lin outburst_N = mkN "outburst" "outbursts";
lin outcast_A = compoundA (mkA "outcast");
lin outcast_N = mkN "outcast" "outcasts";
lin outcaste_A = compoundA (mkA "outcaste");
lin outcaste_N = mkN "outcaste" "outcastes";
lin outclass_V2 = mkV2 (mkV "outclass" "outclasses" "outclassed" "outclassed" "outclassing");
lin outcome_N = mkN "outcome" "outcomes";
lin outcrop_N = mkN "outcrop" "outcrops";
lin outcry_N = mkN "outcry" "outcries";
lin outdated_A = compoundA (mkA "outdated");
lin outdistance_V2 = mkV2 (mkV "outdistance" "outdistances" "outdistanced" "outdistanced" "outdistancing");
lin outdo_V2 = mkV2 (mkV "out" IrregEng.do_V);
lin outdoor_A = compoundA (mkA "outdoor");
lin outdoors_Adv = mkAdv "outdoors";
lin outer_A = compoundA (mkA "outer");
lin outermost_A = compoundA (mkA "outermost");
lin outface_V2 = mkV2 (mkV "outface" "outfaces" "outfaced" "outfaced" "outfacing");
lin outfall_N = mkN "outfall" "outfalls";
lin outfield_N = mkN "outfield" "outfields";
lin outfielder_N = mkN "outfielder" "outfielders";
lin outfight_V2 = mkV2 (mkV "out" IrregEng.fight_V);
lin outfit_N = mkN "outfit" "outfits";
lin outfit_V2 = mkV2 (mkV "outfit" "outfits" "outfitted" "outfitted" "outfitting");
lin outfitter_N = mkN "outfitter" "outfitters";
lin outflank_V2 = mkV2 (mkV "outflank" "outflanks" "outflanked" "outflanked" "outflanking");
lin outflow_N = mkN "outflow" "outflows";
lin outfly_V2 = mkV2 (mkV "outfly");
lin outfox_V2 = mkV2 (mkV "outfox" "outfoxes" "outfoxed" "outfoxed" "outfoxing");
lin outgain_V2 = mkV2 (mkV "outgain");
lin outgo_N = mkN "outgo" "outgoes";
lin outgo_V = mkV "out" IrregEng.go_V;
lin outgoing_A = compoundA (mkA "outgoing");
lin outgrow_V2 = mkV2 (mkV "out" IrregEng.grow_V);
lin outgrowth_N = mkN "outgrowth" "outgrowths";
lin outhouse_N = mkN "outhouse" "outhouses";
lin outing_N = mkN "outing" "outings";
lin outlandish_A = compoundA (mkA "outlandish");
lin outlandishness_N = mkN "outlandishness" ;
lin outlast_V2 = mkV2 (mkV "outlast" "outlasts" "outlasted" "outlasted" "outlasting");
lin outlaw_N = mkN "outlaw" "outlaws";
lin outlaw_V2 = mkV2 (mkV "outlaw" "outlaws" "outlawed" "outlawed" "outlawing");
lin outlawry_N = mkN "outlawry" ;
lin outlay_N = mkN "outlay" "outlays";
lin outleap_V2 = mkV2 (mkV "outleap");
lin outlet_N = mkN "outlet" "outlets";
lin outlier_N = mkN "outlier" "outliers";
lin outline_N = mkN "outline" "outlines";
lin outline_V2 = mkV2 (mkV "outline" "outlines" "outlined" "outlined" "outlining");
lin outlive_V2 = mkV2 (mkV "outlive" "outlives" "outlived" "outlived" "outliving");
lin outlook_N = mkN "outlook" "outlooks";
lin outlying_A = compoundA (mkA "outlying");
lin outmanoeuvre_V2 = mkV2 (mkV "outmanoeuvre" "outmanoeuvres" "outmanoeuvred" "outmanoeuvred" "outmanoeuvring");
lin outmarch_V2 = mkV2 (mkV "outmarch" "outmarches" "outmarched" "outmarched" "outmarching");
lin outmatch_V2 = mkV2 (mkV "outmatch" "outmatches" "outmatched" "outmatched" "outmatching");
lin outmoded_A = compoundA (mkA "outmoded");
lin outmost_A = compoundA (mkA "outmost");
lin outnumber_V2 = mkV2 (mkV "outnumber" "outnumbers" "outnumbered" "outnumbered" "outnumbering");
lin outpace_V2 = mkV2 (mkV "outpace");
lin outpatient_N = mkN "outpatient" "outpatients";
lin outperform_V2 = mkV2 (mkV "outperform");
lin outplay_V2 = mkV2 (mkV "outplay" "outplays" "outplayed" "outplayed" "outplaying");
lin outpoint_V2 = mkV2 (mkV "outpoint" "outpoints" "outpointed" "outpointed" "outpointing");
lin outport_N = mkN "outport" "outports";
lin outpost_N = mkN "outpost" "outposts";
lin outpouring_N = mkN "outpouring" "outpourings";
lin output_N = mkN "output" "IRREG";
lin outrage_N = mkN "outrage" "outrages";
lin outrage_V2 = mkV2 (mkV "outrage" "outrages" "outraged" "outraged" "outraging");
lin outrageous_A = compoundA (mkA "outrageous");
lin outrange_V2 = mkV2 (mkV "outrange" "outranges" "outranged" "outranged" "outranging");
lin outrank_V2 = mkV2 (mkV "outrank" "outranks" "outranked" "outranked" "outranking");
lin outre_A = compoundA (mkA "outré");
lin outride_V2 = mkV2 (mkV "out" IrregEng.ride_V);
lin outrider_N = mkN "outrider" "outriders";
lin outrigged_A = compoundA (mkA "outrigged");
lin outrigger_N = mkN "outrigger" "outriggers";
lin outright_A = compoundA (mkA "outright");
lin outright_Adv = mkAdv "outright";
lin outrival_V2 = mkV2 (mkV "outrival" "outrivals" "outrivalled" "outrivalled" "outrivalling");
lin outrun_V2 = mkV2 (mkV "out" IrregEng.run_V);
lin outsail_V2 = mkV2 (mkV "outsail" "outsails" "outsailed" "outsailed" "outsailing");
lin outsell_V2 = mkV2 (mkV "outsell");
lin outset_N = mkN "outset" "outsets";
lin outshine_V2 = mkV2 (mkV "out" IrregEng.shine_V);
lin outside_A = compoundA (mkA "outside");
lin outside_Adv = mkAdv "outside";
lin outside_N = mkN "outside" "outsides";
lin outside_Prep = mkPrep "outside";
lin outsider_N = mkN "outsider" "outsiders";
lin outsize_A = compoundA (mkA "outsize");
lin outsmart_V2 = mkV2 (mkV "outsmart" "outsmarts" "outsmarted" "outsmarted" "outsmarting");
lin outspan_V = mkV "outspan" "outspans" "outspanned" "outspanned" "outspanning";
lin outspan_V2 = mkV2 (mkV "outspan" "outspans" "outspanned" "outspanned" "outspanning");
lin outspoken_A = compoundA (mkA "outspoken");
lin outspokenness_N = mkN "outspokenness" ;
lin outspread_A = compoundA (mkA "outspread");
lin outstanding_A = compoundA (mkA "outstanding");
lin outstation_N = mkN "outstation" "outstations";
lin outstay_V2 = mkV2 (mkV "outstay" "outstays" "outstayed" "outstayed" "outstaying");
lin outstretched_A = compoundA (mkA "outstretched");
lin outstrip_V2 = mkV2 (mkV "outstrip" "outstrips" "outstripped" "outstripped" "outstripping");
lin outvie_V2 = mkV2 (mkV "outvie" "IRREG" "IRREG" "IRREG" "IRREG");
lin outvote_V2 = mkV2 (mkV "outvote" "outvotes" "outvoted" "outvoted" "outvoting");
lin outward_A = compoundA (mkA "outward");
lin outward_Adv = mkAdv "outward";
lin outwards_Adv = mkAdv "outwards";
lin outwear_V2 = mkV2 (mkV "out" IrregEng.wear_V);
lin outweigh_V2 = mkV2 (mkV "outweigh" "outweighs" "outweighed" "outweighed" "outweighing");
lin outwit_V2 = mkV2 (mkV "outwit" "outwits" "outwitted" "outwitted" "outwitting");
lin outwork_N = mkN "outwork" "outworks";
lin ouzel_N = mkN "ouzel" "ouzels";
lin ouzo_N = mkN "ouzo" ;
lin oval_A = compoundA (mkA "oval");
lin oval_N = mkN "oval" "ovals";
lin ovary_N = mkN "ovary" "ovaries";
lin ovation_N = mkN "ovation" "ovations";
lin oven_N = mkN "oven" "ovens";
lin ovenware_N = mkN "ovenware" ;
lin over_Adv = mkAdv "over";
lin over_N = mkN "over" "overs";
lin over_Prep = mkPrep "over";
lin over_abundance_N = mkN "over - abundance" ;
lin over_magazine_V2 = mkV2 (mkV "over - magazine");
lin over_ripe_A = compoundA (mkA "over - ripe");
lin overabundant_A = compoundA (mkA "overabundant");
lin overact_V = mkV "overact" "overacts" "overacted" "overacted" "overacting";
lin overact_V2 = mkV2 (mkV "overact" "overacts" "overacted" "overacted" "overacting");
lin overactive_A = compoundA (mkA "overactive");
lin overall_A = compoundA (mkA "overall");
lin overall_N = mkN "overall" "overalls";
lin overambitious_A = compoundA (mkA "overambitious");
lin overanxiety_N = mkN "overanxiety" ;
lin overanxious_A = compoundA (mkA "overanxious");
lin overarch_V = mkV "overarch" "overarches" "overarched" "overarched" "overarching";
lin overarch_V2 = mkV2 (mkV "overarch" "overarches" "overarched" "overarched" "overarching");
lin overarm_A = compoundA (mkA "overarm");
lin overarm_Adv = mkAdv "overarm";
lin overawe_V2 = mkV2 (mkV "overawe" "overawes" "overawed" "overawed" "overawing");
lin overbalance_V = mkV "overbalance" "overbalances" "overbalanced" "overbalanced" "overbalancing";
lin overbalance_V2 = mkV2 (mkV "overbalance" "overbalances" "overbalanced" "overbalanced" "overbalancing");
lin overbear_V2 = mkV2 (mkV "over" IrregEng.bear_V);
lin overbearing_A = compoundA (mkA "overbearing");
lin overbid_N = mkN "overbid" "overbids";
lin overbid_V = mkV "over" IrregEng.bid_V;
lin overbid_V2 = mkV2 (mkV "over" IrregEng.bid_V);
lin overblown_A = compoundA (mkA "overblown");
lin overboard_Adv = mkAdv "overboard";
lin overbold_A = compoundA (mkA "overbold");
lin overburden_N = mkN "overburden" ;
lin overburden_V2 = mkV2 (mkV "overburden" "overburdens" "overburdened" "overburdened" "overburdening");
lin overbusy_A = compoundA (mkA "overbusy");
lin overcall_V = mkV "overcall" "overcalls" "overcalled" "overcalled" "overcalling";
lin overcall_V2 = mkV2 (mkV "overcall" "overcalls" "overcalled" "overcalled" "overcalling");
lin overcapitalization_N = mkN "overcapitalization" ;
lin overcapitalize_V2 = mkV2 (mkV "overcapitalize" "overcapitalizes" "overcapitalized" "overcapitalized" "overcapitalizing");
lin overcareful_A = compoundA (mkA "overcareful");
lin overcast_A = compoundA (mkA "overcast");
lin overcast_N = mkN "overcast" "IRREG";
lin overcautious_A = compoundA (mkA "overcautious");
lin overcharge_N = mkN "overcharge" "overcharges";
lin overcharge_V = mkV "overcharge" "overcharges" "overcharged" "overcharged" "overcharging";
lin overcharge_V2 = mkV2 (mkV "overcharge" "overcharges" "overcharged" "overcharged" "overcharging");
lin overclothe_V2 = mkV2 (mkV "overclothe" "overclothes" "overclothed" "overclothed" "overclothing");
lin overcloud_V = mkV "overcloud" "overclouds" "overclouded" "overclouded" "overclouding";
lin overcloud_V2 = mkV2 (mkV "overcloud" "overclouds" "overclouded" "overclouded" "overclouding");
lin overcoat_N = mkN "overcoat" "overcoats";
lin overcome_V = mkV "overcome";
lin overcome_V2 = mkV2 (IrregEng.overcome_V);
lin overcommit_V2 = mkV2 (mkV "overcommit");
lin overconfidence_N = mkN "overconfidence" ;
lin overconfident_A = compoundA (mkA "overconfident");
lin overcook_V2 = mkV2 (mkV "overcook" "overcooks" "overcooked" "overcooked" "overcooking");
lin overcredulity_N = mkN "overcredulity" ;
lin overcredulous_A = compoundA (mkA "overcredulous");
lin overcritical_A = compoundA (mkA "overcritical");
lin overcrop_V2 = mkV2 (mkV "overcrop" "overcrops" "overcropped" "overcropped" "overcropping");
lin overcrowd_V2 = mkV2 (mkV "overcrowd" "overcrowds" "overcrowded" "overcrowded" "overcrowding");
lin overcurious_A = compoundA (mkA "overcurious");
lin overdelicate_A = compoundA (mkA "overdelicate");
lin overdo_V2 = mkV2 (IrregEng.overdo_V);
lin overdose_V = mkV "overdose";
lin overdraft_N = mkN "overdraft" "overdrafts";
lin overdraw_V = mkV "over" IrregEng.draw_V;
lin overdraw_V2 = mkV2 (mkV "over" IrregEng.draw_V);
lin overdress_V = mkV "overdress" "overdresses" "overdressed" "overdressed" "overdressing";
lin overdress_V2 = mkV2 (mkV "overdress" "overdresses" "overdressed" "overdressed" "overdressing");
lin overdrive_N = mkN "overdrive" "overdrives";
lin overdue_A = compoundA (mkA "overdue");
lin overeager_A = compoundA (mkA "overeager");
lin overeat_V = mkV "over" IrregEng.eat_V;
lin overemotional_A = compoundA (mkA "overemotional");
lin overemphasis_N = mkN "overemphasis" ;
lin overemphasize_V = mkV "overemphasize";
lin overemphasize_V2 = mkV2 (mkV "overemphasize" "overemphasizes" "overemphasized" "overemphasized" "overemphasizing");
lin overenthusiastic_A = compoundA (mkA "overenthusiastic");
lin overestimate_V2 = mkV2 (mkV "overestimate" "overestimates" "overestimated" "overestimated" "overestimating");
lin overexcited_A = compoundA (mkA "overexcited");
lin overexert_V2 = mkV2 (mkV "overexert" "overexerts" "overexerted" "overexerted" "overexerting");
lin overexertion_N = mkN "overexertion" "overexertions";
lin overexpose_V2 = mkV2 (mkV "overexpose" "overexposes" "overexposed" "overexposed" "overexposing");
lin overexposure_N = mkN "overexposure" "overexposures";
lin overfamiliar_A = compoundA (mkA "overfamiliar");
lin overfeed_V = mkV "overfeed" "overfeeds" "overfeeded" "overfeeded" "overfeeding";
lin overfeed_V2 = mkV2 (mkV "overfeed" "overfeeds" "overfeeded" "overfeeded" "overfeeding");
lin overfeeding_N = mkN "overfeeding" ;
lin overflow_N = mkN "overflow" "overflows";
lin overflow_V = mkV "overflow" "overflows" "overflowed" "overflowed" "overflowing";
lin overflow_V2 = mkV2 (mkV "overflow" "overflows" "overflowed" "overflowed" "overflowing");
lin overfly_V2 = mkV2 (mkV "over" IrregEng.fly_V);
lin overfond_A = compoundA (mkA "overfond");
lin overfull_A = compoundA (mkA "overfull");
lin overgenerous_A = compoundA (mkA "overgenerous");
lin overgreedy_A = compoundA (mkA "overgreedy");
lin overgrown_A = compoundA (mkA "overgrown");
lin overgrowth_N = mkN "overgrowth" "overgrowths";
lin overhand_A = compoundA (mkA "overhand");
lin overhang_N = mkN "overhang" "overhangs";
lin overhang_V = mkV "over" IrregEng.hang_V;
lin overhang_V2 = mkV2 (mkV "over" IrregEng.hang_V);
lin overhasty_A = compoundA (mkA "overhasty");
lin overhaul_N = mkN "overhaul" "overhauls";
lin overhaul_V2 = mkV2 (mkV "overhaul" "overhauls" "overhauled" "overhauled" "overhauling");
lin overhead_A = compoundA (mkA "overhead");
lin overhead_Adv = mkAdv "overhead";
lin overhear_V2 = mkV2 (mkV "over" IrregEng.hear_V);
lin overheat_V2 = mkV2 (mkV "overheat" "overheats" "overheated" "overheated" "overheating");
lin overindulge_V = mkV "overindulge" "overindulges" "overindulged" "overindulged" "overindulging";
lin overindulge_V2 = mkV2 (mkV "overindulge" "overindulges" "overindulged" "overindulged" "overindulging");
lin overindulgence_N = mkN "overindulgence" "overindulgences";
lin overjealous_A = compoundA (mkA "overjealous");
lin overjoyed_A = compoundA (mkA "overjoyed");
lin overkill_N = mkN "overkill" ;
lin overladen_A = compoundA (mkA "overladen");
lin overland_A = compoundA (mkA "overland");
lin overlap_N = mkN "overlap" "overlaps";
lin overlap_V = mkV "overlap" "overlaps" "overlapped" "overlapped" "overlapping";
lin overlap_V2 = mkV2 (mkV "overlap" "overlaps" "overlapped" "overlapped" "overlapping");
lin overlarge_A = compoundA (mkA "overlarge");
lin overlay_N = mkN "overlay" "overlays";
lin overlay_V2 = mkV2 (mkV "over" IrregEng.lay_V);
lin overleaf_Adv = mkAdv "overleaf";
lin overleap_V2 = mkV2 (mkV "overleap" "overleaps" "overleaped" "overleaped" "overleaping");
lin overlie_V = mkV "over" IrregEng.lie_V;
lin overload_V2 = mkV2 (mkV "overload" "overloads" "overloaded" "overloaded" "overloading");
lin overlook_V2 = mkV2 (mkV "overlook" "overlooks" "overlooked" "overlooked" "overlooking");
lin overlord_N = mkN "overlord" "overlords";
lin overly_Adv = mkAdv "overly";
lin overmantel_N = mkN "overmantel" "overmantels";
lin overmaster_V2 = mkV2 (mkV "overmaster" "overmasters" "overmastered" "overmastered" "overmastering");
lin overmodest_A = compoundA (mkA "overmodest");
lin overmuch_A = compoundA (mkA "overmuch");
lin overmuch_Adv = mkAdv "overmuch";
lin overnervous_A = compoundA (mkA "overnervous");
lin overnight_A = compoundA (mkA "overnight");
lin overnight_Adv = mkAdv "overnight";
lin overpass_N = mkN "overpass" "overpasses";
lin overpay_V = mkV "overpay";
lin overpay_V2 = mkV2 (mkV "over" IrregEng.pay_V);
lin overpayment_N = mkN "overpayment" "overpayments";
lin overplant_V2 = mkV2 (mkV "overplant");
lin overplay_V2 = mkV2 (mkV "overplay" "overplays" "overplayed" "overplayed" "overplaying");
lin overplus_N = mkN "overplus" "overpluses";
lin overpopulation_N = mkN "overpopulation" ;
lin overpower_V2 = mkV2 (mkV "overpower" "overpowers" "overpowered" "overpowered" "overpowering");
lin overpowering_A = compoundA (mkA "overpowering");
lin overpraise_V2 = mkV2 (mkV "overpraise" "overpraises" "overpraised" "overpraised" "overpraising");
lin overprice_V2 = mkV2 (mkV "overprice");
lin overprint_N = mkN "overprint" "overprints";
lin overprint_V2 = mkV2 (mkV "overprint" "overprints" "overprinted" "overprinted" "overprinting");
lin overproduce_V = mkV "overproduce" "overproduces" "overproduced" "overproduced" "overproducing";
lin overproduce_V2 = mkV2 (mkV "overproduce" "overproduces" "overproduced" "overproduced" "overproducing");
lin overproduction_N = mkN "overproduction" ;
lin overproud_A = compoundA (mkA "overproud");
lin overrate_V2 = mkV2 (mkV "overrate" "overrates" "overrated" "overrated" "overrating");
lin overreach_V2 = mkV2 (mkV "overreach" "overreaches" "overreached" "overreached" "overreaching");
lin overreact_V = mkV "overreact";
lin override_V2 = mkV2 (mkV "over" IrregEng.ride_V);
lin overripe_A = compoundA (mkA "overripe");
lin overrule_V2 = mkV2 (mkV "overrule" "overrules" "overruled" "overruled" "overruling");
lin overrun_V2 = mkV2 (mkV "over" IrregEng.run_V);
lin oversea_A = compoundA (mkA "oversea");
lin oversea_Adv = mkAdv "oversea";
lin overseas_A = compoundA (mkA "overseas");
lin overseas_Adv = mkAdv "overseas";
lin oversee_V2 = mkV2 (mkV "over" IrregEng.see_V);
lin overseer_N = mkN "overseer" "overseers";
lin oversell_V2 = mkV2 (mkV "oversell");
lin oversensitive_A = compoundA (mkA "oversensitive");
lin overserious_A = compoundA (mkA "overserious");
lin oversew_V2 = mkV2 (mkV "over" IrregEng.sew_V);
lin oversewn_A = compoundA (mkA "oversewn");
lin oversexed_A = compoundA (mkA "oversexed");
lin overshadow_V2 = mkV2 (mkV "overshadow" "overshadows" "overshadowed" "overshadowed" "overshadowing");
lin overshoe_N = mkN "overshoe" "overshoes";
lin overshoot_V2 = mkV2 (mkV "over" IrregEng.shoot_V);
lin overshot_A = compoundA (mkA "overshot");
lin overside_Adv = mkAdv "overside";
lin oversight_N = mkN "oversight" "oversights";
lin oversimplify_V = mkV "oversimplify";
lin oversimplify_V2 = mkV2 (mkV "oversimplify" "oversimplifies" "oversimplified" "oversimplified" "oversimplifying");
lin oversize_A = compoundA (mkA "oversize");
lin overskirt_N = mkN "overskirt" "overskirts";
lin oversleep_V = mkV "over" IrregEng.sleep_V;
lin overspend_V = mkV "over" IrregEng.spend_V;
lin overspend_V2 = mkV2 (mkV "over" IrregEng.spend_V);
lin overspill_N = mkN "overspill" "overspills";
lin overstate_V2 = mkV2 (mkV "overstate" "overstates" "overstated" "overstated" "overstating");
lin overstatement_N = mkN "overstatement" "overstatements";
lin overstay_V2 = mkV2 (mkV "overstay" "overstays" "overstayed" "overstayed" "overstaying");
lin overstep_V2 = mkV2 (mkV "overstep" "oversteps" "overstepped" "overstepped" "overstepping");
lin overstock_V2 = mkV2 (mkV "overstock" "overstocks" "overstocked" "overstocked" "overstocking");
lin overstrain_N = mkN "overstrain" ;
lin overstrain_V2 = mkV2 (mkV "overstrain" "overstrains" "overstrained" "overstrained" "overstraining");
lin overstrung_A = compoundA (mkA "overstrung");
lin overstuffed_A = compoundA (mkA "overstuffed");
lin oversubscribe_V2 = mkV2 (mkV "oversubscribe");
lin oversubscribed_A = compoundA (mkA "oversubscribed");
lin oversuspicious_A = compoundA (mkA "oversuspicious");
lin overt_A = compoundA (mkA "overt");
lin overtake_V2 = mkV2 (IrregEng.overtake_V);
lin overtax_V2 = mkV2 (mkV "overtax" "overtaxes" "overtaxed" "overtaxed" "overtaxing");
lin overthrow_N = mkN "overthrow" "overthrows";
lin overthrow_V2 = mkV2 (IrregEng.overthrow_V);
lin overtime_Adv = mkAdv "overtime";
lin overtime_N = mkN "overtime" ;
lin overtolerance_N = mkN "overtolerance" ;
lin overtone_N = mkN "overtone" "overtones";
lin overtop_V2 = mkV2 (mkV "overtop" "overtops" "overtopped" "overtopped" "overtopping");
lin overtrump_V2 = mkV2 (mkV "overtrump" "overtrumps" "overtrumped" "overtrumped" "overtrumping");
lin overture_N = mkN "overture" "overtures";
lin overturn_V = mkV "overturn" "overturns" "overturned" "overturned" "overturning";
lin overturn_V2 = mkV2 (mkV "overturn" "overturns" "overturned" "overturned" "overturning");
lin overvalue_V2 = mkV2 (mkV "overvalue" "overvalues" "overvalued" "overvalued" "overvaluing");
lin overweening_A = compoundA (mkA "overweening");
lin overweight_A = compoundA (mkA "overweight");
lin overweight_N = mkN "overweight" ;
lin overweighted_A = compoundA (mkA "overweighted");
lin overwhelm_V2 = mkV2 (mkV "overwhelm" "overwhelms" "overwhelmed" "overwhelmed" "overwhelming");
lin overwhelmingly_Adv = mkAdv "overwhelmingly";
lin overwork_N = mkN "overwork" ;
lin overwork_V = mkV "overwork" "overworks" "overworked" "overworked" "overworking";
lin overwork_V2 = mkV2 (mkV "overwork" "overworks" "overworked" "overworked" "overworking");
lin overwrought_A = compoundA (mkA "overwrought");
lin overzealous_A = compoundA (mkA "overzealous");
lin oviduct_N = mkN "oviduct" "oviducts";
lin oviedo_PN = mkPN "Oviedo";
lin oviparous_A = compoundA (mkA "oviparous");
lin ovoid_A = compoundA (mkA "ovoid");
lin ovoid_N = mkN "ovoid" "ovoids";
lin ovum_N = mkN "ovum" "ova" {- FIXME: guessed plural form -};
lin owe_V = mkV "owe" "owes" "owed" "owed" "owing";
lin owe_V2 = mkV2 (mkV "owe" "owes" "owed" "owed" "owing");
lin owing_A = compoundA (mkA "owing");
lin owl_N = mkN "owl" "owls";
lin owlet_N = mkN "owlet" "owlets";
lin owlish_A = compoundA (mkA "owlish");
lin own_A = compoundA (mkA "own");
lin own_V = mkV "own" "owns" "owned" "owned" "owning";
lin own_V2 = mkV2 (mkV "own" "owns" "owned" "owned" "owning");
lin owner_N = mkN "owner" "owners";
lin owner_driven_A = compoundA (mkA "owner - driven");
lin owner_driver_N = mkN "owner - driver" "owner - drivers";
lin owner_occupied_A = compoundA (mkA "owner - occupied");
lin owner_occupier_N = mkN "owner - occupier" "owner - occupiers";
lin ownerless_A = compoundA (mkA "ownerless");
lin ownership_N = mkN "ownership" ;
lin ox_N = mkN "ox" "IRREG";
lin oxbridge_PN = mkPN "Oxbridge";
lin oxeye_N = mkN "oxeye" "oxeyes";
lin oxeyed_A = compoundA (mkA "oxeyed");
lin oxford_PN = mkPN "Oxford";
lin oxfordshire_PN = mkPN "Oxfordshire";
lin oxidation_N = mkN "oxidation" ;
lin oxide_N = mkN "oxide" "oxides";
lin oxidization_N = mkN "oxidization" "oxidizations";
lin oxidize_V = mkV "oxidize" "oxidizes" "oxidized" "oxidized" "oxidizing";
lin oxidize_V2 = mkV2 (mkV "oxidize" "oxidizes" "oxidized" "oxidized" "oxidizing");
lin oxon_PN = mkPN "Oxon";
lin oxonian_A = compoundA (mkA "oxonian");
lin oxonian_N = mkN "oxonian" "oxonians";
lin oxtail_N = mkN "oxtail" "oxtails";
lin oxted_PN = mkPN "Oxted";
lin oxyacetylene_A = compoundA (mkA "oxyacetylene");
lin oxyacetylene_N = mkN "oxyacetylene" ;
lin oxygen_N = mkN "oxygen" ;
lin oxygenate_V2 = mkV2 (mkV "oxygenate" "oxygenates" "oxygenated" "oxygenated" "oxygenating");
lin oxygenize_V2 = mkV2 (mkV "oxygenize" "oxygenizes" "oxygenized" "oxygenized" "oxygenizing");
lin oyster_N = mkN "oyster" "oysters";
lin oyster_bank_N = mkN "oyster - bank" "oyster - banks";
lin oyster_bar_N = mkN "oyster - bar" "oyster - bars";
lin oyster_bed_N = mkN "oyster - bed" "oyster - beds";
lin oyster_catcher_N = mkN "oyster - catcher" "oyster - catchers";
lin oz_N = mkN "oz" "oz";
lin ozone_N = mkN "ozone" ;
lin ozzie_PN = mkPN "Ozzie";
lin pa_N = mkN "pa" ;
lin pabulum_N = mkN "pabulum" ;
lin pace_N = mkN "pace" "paces";
lin pace_V = mkV "pace" "paces" "paced" "paced" "pacing";
lin pace_V2 = mkV2 (mkV "pace" "paces" "paced" "paced" "pacing");
lin pacemaker_N = mkN "pacemaker" "pacemakers";
lin pacesetter_N = mkN "pacesetter" "pacesetters";
lin pachyderm_N = mkN "pachyderm" "pachyderms";
lin pacific_A = compoundA (mkA "pacific");
lin pacific_PN = mkPN "Pacific";
lin pacifically_Adv = mkAdv "pacifically";
lin pacification_N = mkN "pacification" ;
lin pacifism_N = mkN "pacifism" ;
lin pacifist_N = mkN "pacifist" "pacifists";
lin pacify_V2 = mkV2 (mkV "pacify" "pacifies" "pacified" "pacified" "pacifying");
lin pack_N = mkN "pack" "packs";
lin pack_V = mkV "pack" "packs" "packed" "packed" "packing";
lin pack_V2 = mkV2 (mkV "pack" "packs" "packed" "packed" "packing");
lin pack_animal_N = mkN "pack - animal" "pack - animals";
lin pack_saddle_N = mkN "pack - saddle" "pack - saddles";
lin pack_thread_N = mkN "pack - thread" ;
lin package_N = mkN "package" "packages";
lin package_V2 = mkV2 (mkV "package" "packages" "packaged" "packaged" "packaging");
lin packer_N = mkN "packer" "packers";
lin packet_N = mkN "packet" "packets";
lin packet_boat_N = mkN "packet - boat" "packet - boats";
lin packhorse_N = mkN "packhorse" "packhorses";
lin packing_N = mkN "packing" ;
lin packing_case_N = mkN "packing - case" "packing - cases";
lin packing_needle_N = mkN "packing - needle" "packing - needles";
lin pact_N = mkN "pact" "pacts";
lin pad_N = mkN "pad" "pads";
lin pad_V = mkV "pad" "pads" "padded" "padded" "padding";
lin pad_V2 = mkV2 (mkV "pad" "pads" "padded" "padded" "padding");
lin padding_N = mkN "padding" ;
lin paddle_N = mkN "paddle" "paddles";
lin paddle_V = mkV "paddle" "paddles" "paddled" "paddled" "paddling";
lin paddle_V2 = mkV2 (mkV "paddle" "paddles" "paddled" "paddled" "paddling");
lin paddle_box_N = mkN "paddle - box" "paddle - boxes";
lin paddle_steamer_N = mkN "paddle - steamer" "paddle - steamers";
lin paddle_wheel_N = mkN "paddle - wheel" "paddle - wheels";
lin paddock_N = mkN "paddock" "paddocks";
lin paddy_N = mkN "paddy" "paddies";
lin paddy_PN = mkPN "Paddy";
lin paddy_field_N = mkN "paddy - field" "paddy - fields";
lin paddy_wagon_N = mkN "paddy - wagon" "paddy - wagons";
lin padlock_N = mkN "padlock" "padlocks";
lin padlock_V2 = mkV2 (mkV "padlock" "padlocks" "padlocked" "padlocked" "padlocking");
lin padova_PN = mkPN "Padova";
lin padre_N = mkN "padre" "padres";
lin padua_PN = mkPN "Padua";
lin paean_N = mkN "paean" "paeans";
lin paederasty_N = mkN "paederasty" ;
lin paediatrics_N = mkN "paediatrics" "paediatrics";
lin paeony_N = mkN "paeony" "paeonies";
lin pagan_A = compoundA (mkA "pagan");
lin pagan_N = mkN "pagan" "pagans";
lin paganism_N = mkN "paganism" ;
lin page_N = mkN "page" "pages";
lin page_V2 = mkV2 (mkV "page" "pages" "paged" "paged" "paging");
lin pageant_N = mkN "pageant" "pageants";
lin pageantry_N = mkN "pageantry" ;
lin pagination_N = mkN "pagination" ;
lin pagoda_N = mkN "pagoda" "pagodas";
lin pail_N = mkN "pail" "pails";
lin pailful_N = mkN "pailful" "pailfuls";
lin paillasse_N = mkN "paillasse" "paillasses";
lin pailliasse_N = mkN "pailliasse" "pailliasses";
lin pain_N = mkN "pain" "pains";
lin pain_V2 = mkV2 (mkV "pain" "pains" "pained" "pained" "paining");
lin pained_A = compoundA (mkA "pained");
lin painful_A = compoundA (mkA "painful");
lin painkiller_N = mkN "painkiller" "painkillers";
lin painless_A = compoundA (mkA "painless");
lin painstaking_A = compoundA (mkA "painstaking");
lin paint_N = mkN "paint" "paints";
lin paint_V = mkV "paint" "paints" "painted" "painted" "painting";
lin paint_V2 = mkV2 (mkV "paint" "paints" "painted" "painted" "painting");
lin paintbox_N = mkN "paintbox" "paintboxes";
lin paintbrush_N = mkN "paintbrush" "paintbrushes";
lin painter_N = mkN "painter" "painters";
lin painting_N = mkN "painting" "paintings";
lin pair_N = mkN "pair" "pairs";
lin pair_V = mkV "pair" "pairs" "paired" "paired" "pairing";
lin pair_V2 = mkV2 (mkV "pair" "pairs" "paired" "paired" "pairing");
lin paisley_N = mkN "paisley" ;
lin paisley_PN = mkPN "Paisley";
lin pakistan_PN = mkPN "Pakistan";
lin pakistani_A = compoundA (mkA "pakistani");
lin pakistani_N = mkN "pakistani" "pakistanis";
lin pal_N = mkN "pal" "pals";
lin pal_V = mkV "pal" "pals" "palled" "palled" "palling";
lin palace_N = mkN "palace" "palaces";
lin paladin_N = mkN "paladin" "paladins";
lin palaeolithic_A = compoundA (mkA "palaeolithic");
lin palaeontologist_N = mkN "palaeontologist" "palaeontologists";
lin palaeontology_N = mkN "palaeontology" ;
lin palankeen_N = mkN "palankeen" "palankeens";
lin palanquin_N = mkN "palanquin" "palanquins";
lin palatable_A = compoundA (mkA "palatable");
lin palatal_A = compoundA (mkA "palatal");
lin palatal_N = mkN "palatal" "palatals";
lin palate_N = mkN "palate" "palates";
lin palatial_A = compoundA (mkA "palatial");
lin palatinate_N = mkN "palatinate" "palatinates";
lin palaver_N = mkN "palaver" "palavers";
lin palaver_V = mkV "palaver" "palavers" "palavered" "palavered" "palavering";
lin pale_A = mkA "pale" "paler";
lin pale_N = mkN "pale" "pales";
lin pale_V = mkV "pale" "pales" "paled" "paled" "paling";
lin paleface_N = mkN "paleface" "palefaces";
lin palembang_PN = mkPN "Palembang";
lin paleness_N = mkN "paleness" ;
lin paleolithic_A = compoundA (mkA "paleolithic");
lin paleontologist_N = mkN "paleontologist" "paleontologists";
lin paleontology_N = mkN "paleontology" ;
lin palermo_PN = mkPN "Palermo";
lin palestine_PN = mkPN "Palestine";
lin palestinian_A = compoundA (mkA "palestinian");
lin palestinian_N = mkN "palestinian" "palestinians";
lin palette_N = mkN "palette" "palettes";
lin palette_knife_N = mkN "palette - knife" "palette - knives";
lin palfrey_N = mkN "palfrey" "palfreys";
lin palimpsest_N = mkN "palimpsest" "palimpsests";
lin palindrome_N = mkN "palindrome" "palindromes";
lin paling_N = mkN "paling" "palings";
lin palisade_N = mkN "palisade" "palisades";
lin palisade_V2 = mkV2 (mkV "palisade" "palisades" "palisaded" "palisaded" "palisading");
lin palish_A = compoundA (mkA "palish");
lin pall_N = mkN "pall" "palls";
lin pall_V = mkV "pall" "palls" "palled" "palled" "palling";
lin pallbearer_N = mkN "pallbearer" "pallbearers";
lin pallet_N = mkN "pallet" "pallets";
lin palliasse_N = mkN "palliasse" "palliasses";
lin palliate_V2 = mkV2 (mkV "palliate" "palliates" "palliated" "palliated" "palliating");
lin palliation_N = mkN "palliation" "palliations";
lin palliative_A = compoundA (mkA "palliative");
lin palliative_N = mkN "palliative" "palliatives";
lin pallid_A = compoundA (mkA "pallid");
lin pallidness_N = mkN "pallidness" ;
lin pallor_N = mkN "pallor" ;
lin pally_A = mkA "pally" "pallier";
lin palm_N = mkN "palm" "palms";
lin palm_V2 = mkV2 (mkV "palm" "palms" "palmed" "palmed" "palming");
lin palm_oil_N = mkN "palm - oil" ;
lin palmer_N = mkN "palmer" "palmers";
lin palmetto_N = mkN "palmetto" "palmettos";
lin palmist_N = mkN "palmist" "palmists";
lin palmistry_N = mkN "palmistry" ;
lin palmy_A = mkA "palmy" "palmier";
lin palpable_A = compoundA (mkA "palpable");
lin palpitate_V = mkV "palpitate" "palpitates" "palpitated" "palpitated" "palpitating";
lin palpitation_N = mkN "palpitation" "palpitations";
lin palsy_N = mkN "palsy" ;
lin palsy_V2 = mkV2 (mkV "palsy" "palsies" "palsied" "palsied" "palsying");
lin palter_V = mkV "palter" "palters" "paltered" "paltered" "paltering";
lin paltry_A = mkA "paltry" "paltrier";
lin pam_PN = mkPN "Pam";
lin pamela_PN = mkPN "Pamela";
lin pampas_grass_N = mkN "pampas - grass" ;
lin pamper_V2 = mkV2 (mkV "pamper" "pampers" "pampered" "pampered" "pampering");
lin pamphlet_N = mkN "pamphlet" "pamphlets";
lin pamphleteer_N = mkN "pamphleteer" "pamphleteers";
lin pamplona_PN = mkPN "Pamplona";
lin pan_N = mkN "pan" "pans";
lin pan_V = mkV "pan" "pans" "panned" "panned" "panning";
lin pan_V2 = mkV2 (mkV "pan" "pans" "panned" "panned" "panning");
lin panacea_N = mkN "panacea" "panaceas";
lin panache_N = mkN "panache" ;
lin panama_N = mkN "panama" "panamas";
lin panama_PN = mkPN "Panama";
lin panamanian_A = compoundA (mkA "panamanian");
lin panamanian_N = mkN "panamanian" "panamanians";
lin panatella_N = mkN "panatella" "panatellas";
lin pancake_N = mkN "pancake" "pancakes";
lin panchromatic_A = compoundA (mkA "panchromatic");
lin pancreas_N = mkN "pancreas" "pancreases";
lin pancreatic_A = compoundA (mkA "pancreatic");
lin panda_N = mkN "panda" "pandas";
lin pandemic_A = compoundA (mkA "pandemic");
lin pandemic_N = mkN "pandemic" "pandemics";
lin pandemonium_N = mkN "pandemonium" "pandemoniums";
lin pander_N = mkN "pander" "panders";
lin pander_V = mkV "pander" "panders" "pandered" "pandered" "pandering";
lin pane_N = mkN "pane" "panes";
lin panegyric_N = mkN "panegyric" "panegyrics";
lin panel_N = mkN "panel" "panels";
lin panel_V2 = mkV2 (mkV "panel" "panels" "panelled" "panelled" "panelling");
lin panelling_N = mkN "panelling" ;
lin pang_N = mkN "pang" "pangs";
lin panga_N = mkN "panga" "pangas";
lin panhandle_N = mkN "panhandle" "panhandles";
lin panhandle_V = mkV "panhandle" "panhandles" "panhandled" "panhandled" "panhandling";
lin panic_N = mkN "panic";
lin panic_V = mkV "panic" "panics" "panicked" "panicked" "panicking";
lin panic_V2 = mkV2 (mkV "panic" "panics" "panicked" "panicked" "panicking");
lin panic_stricken_A = compoundA (mkA "panic - stricken");
lin panicky_A = compoundA (mkA "panicky");
lin panjandrum_N = mkN "panjandrum" "panjandrums";
lin pannier_N = mkN "pannier" "panniers";
lin pannikin_N = mkN "pannikin" "pannikins";
lin panoplied_A = compoundA (mkA "panoplied");
lin panoply_N = mkN "panoply" "panoplies";
lin panoptic_A = compoundA (mkA "panoptic");
lin panorama_N = mkN "panorama" "panoramas";
lin panoramic_A = compoundA (mkA "panoramic");
lin pansy_N = mkN "pansy" "pansies";
lin pant_N = mkN "pant" "pants";
lin pant_V = mkV "pant" "pants" "panted" "panted" "panting";
lin pant_V2 = mkV2 (mkV "pant" "pants" "panted" "panted" "panting");
lin pantaloon_N = mkN "pantaloon" "pantaloons";
lin pantechnicon_N = mkN "pantechnicon" "pantechnicons";
lin pantheism_N = mkN "pantheism" ;
lin pantheist_N = mkN "pantheist" "pantheists";
lin pantheistic_A = compoundA (mkA "pantheistic");
lin pantheon_N = mkN "pantheon" "pantheons";
lin panther_N = mkN "panther" "panthers";
lin pantile_N = mkN "pantile" "pantiles";
lin pantingly_Adv = mkAdv "pantingly";
lin panto_N = mkN "panto" "pantos";
lin pantograph_N = mkN "pantograph" "pantographs";
lin pantomime_N = mkN "pantomime" "pantomimes";
lin pantry_N = mkN "pantry" "pantries";
lin pantryman_N = mkN "pantryman" "pantrymen" {- FIXME: guessed plural form -};
lin panty_hose_N = mkN "panty - hose" ;
lin panzer_A = compoundA (mkA "panzer");
lin paotow_PN = mkPN "Paotow";
lin pap_N = mkN "pap" ;
lin papa_N = mkN "papa" "papas";
lin papacy_N = mkN "papacy" "papacies";
lin papal_A = compoundA (mkA "papal");
lin papaw_N = mkN "papaw" "papaws";
lin papaya_N = mkN "papaya" "papayas";
lin paper_N = mkN "paper" "papers";
lin paper_V2 = mkV2 (mkV "paper" "papers" "papered" "papered" "papering");
lin paper_chase_N = mkN "paper - chase" "paper - chases";
lin paperback_N = mkN "paperback" "paperbacks";
lin paperbacked_A = compoundA (mkA "paperbacked");
lin paperclip_N = mkN "paperclip" "paperclips";
lin paperhanger_N = mkN "paperhanger" "paperhangers";
lin paperknife_N = mkN "paperknife" "paperknives";
lin paperless_A = compoundA (mkA "paperless");
lin papermill_N = mkN "papermill" "papermills";
lin paperweight_N = mkN "paperweight" "paperweights";
lin paperwork_N = mkN "paperwork" ;
lin papier_mache_N = mkN "papier - mâché" ;
lin papist_A = compoundA (mkA "papist");
lin papist_N = mkN "papist" "papists";
lin papoose_N = mkN "papoose" "papooses";
lin paprika_N = mkN "paprika" ;
lin papua_PN = mkPN "Papua";
lin papuan_A = compoundA (mkA "papuan");
lin papuan_N = mkN "papuan" "papuans";
lin papyrus_N = mkN "papyrus" "papyruses";
lin par_N = mkN "par" "pars";
lin par_excellence_Adv = mkAdv "par excellence";
lin para_N = mkN "para" ;
lin parable_N = mkN "parable" "parables";
lin parabola_N = mkN "parabola" "parabolas";
lin parabolic_A = compoundA (mkA "parabolic");
lin parabolical_A = compoundA (mkA "parabolical");
lin parachute_N = mkN "parachute" "parachutes";
lin parachute_V = mkV "parachute" "parachutes" "parachuted" "parachuted" "parachuting";
lin parachute_V2 = mkV2 (mkV "parachute" "parachutes" "parachuted" "parachuted" "parachuting");
lin parachutist_N = mkN "parachutist" "parachutists";
lin parade_N = mkN "parade" "parades";
lin parade_V = mkV "parade" "parades" "paraded" "paraded" "parading";
lin parade_V2 = mkV2 (mkV "parade" "parades" "paraded" "paraded" "parading");
lin parade_ground_N = mkN "parade - ground" "parade - grounds";
lin paradigm_N = mkN "paradigm" "paradigms";
lin paradise_N = mkN "paradise" "paradises";
lin paradisiac_A = compoundA (mkA "paradisiac");
lin paradisiacal_A = compoundA (mkA "paradisiacal");
lin paradox_N = mkN "paradox" "paradoxes";
lin paradoxical_A = compoundA (mkA "paradoxical");
lin paraffin_N = mkN "paraffin" ;
lin paragon_N = mkN "paragon" "paragons";
lin paragraph_N = mkN "paragraph" "paragraphs";
lin paragraph_V2 = mkV2 (mkV "paragraph" "paragraphs" "paragraphed" "paragraphed" "paragraphing");
lin paraguay_PN = mkPN "Paraguay";
lin paraguayan_A = compoundA (mkA "paraguayan");
lin paraguayan_N = mkN "paraguayan" "paraguayans";
lin parakeet_N = mkN "parakeet" "parakeets";
lin parallel_A = compoundA (mkA "parallel");
lin parallel_N = mkN "parallel" "parallels";
lin parallel_V2 = mkV2 (mkV "parallel" "parallels" "parallelled" "parallelled" "parallelling");
lin parallelism_N = mkN "parallelism" "parallelisms";
lin parallelogram_N = mkN "parallelogram" "parallelograms";
lin paralyse_V2 = mkV2 (mkV "paralyse" "paralyses" "paralysed" "paralysed" "paralysing");
lin paralysis_N = mkN "paralysis" ;
lin paralytic_A = compoundA (mkA "paralytic");
lin paralytic_N = mkN "paralytic" "paralytics";
lin paralyze_V2 = mkV2 (mkV "paralyze" "paralyzes" "paralyzed" "paralyzed" "paralyzing");
lin parameter_N = mkN "parameter" "parameters";
lin paramilitary_A = compoundA (mkA "paramilitary");
lin paramount_A = compoundA (mkA "paramount");
lin paramountcy_N = mkN "paramountcy" ;
lin paramour_N = mkN "paramour" "paramours";
lin paranoia_N = mkN "paranoia" ;
lin paranoiac_N = mkN "paranoiac" "paranoiacs";
lin paranoid_A = compoundA (mkA "paranoid");
lin paranoid_N = mkN "paranoid" "paranoids";
lin parapet_N = mkN "parapet" "parapets";
lin paraphernalia_N = mkN "paraphernalia" ;
lin paraphrase_V2 = mkV2 (mkV "paraphrase" "paraphrases" "paraphrased" "paraphrased" "paraphrasing");
lin paraplegia_N = mkN "paraplegia" ;
lin paraplegic_A = compoundA (mkA "paraplegic");
lin paraplegic_N = mkN "paraplegic" "paraplegics";
lin parasite_N = mkN "parasite" "parasites";
lin parasitic_A = compoundA (mkA "parasitic");
lin parasitical_A = compoundA (mkA "parasitical");
lin parasol_N = mkN "parasol" "parasols";
lin paratrooper_N = mkN "paratrooper" "paratroopers";
lin paratyphoid_N = mkN "paratyphoid" ;
lin parboil_V2 = mkV2 (mkV "parboil" "parboils" "parboiled" "parboiled" "parboiling");
lin parcel_N = mkN "parcel" "parcels";
lin parcel_V2 = mkV2 (mkV "parcel" "parcels" "parcelled" "parcelled" "parcelling");
lin parch_V2 = mkV2 (mkV "parch" "parches" "parched" "parched" "parching");
lin parchment_N = mkN "parchment" "parchments";
lin pardon_N = mkN "pardon" "pardons";
lin pardon_V2 = mkV2 (mkV "pardon" "pardons" "pardoned" "pardoned" "pardoning");
lin pardonable_A = compoundA (mkA "pardonable");
lin pardoner_N = mkN "pardoner" "pardoners";
lin pare_V2 = mkV2 (mkV "pare" "pares" "pared" "pared" "paring");
lin paregoric_N = mkN "paregoric" ;
lin parent_N = mkN "parent" "parents";
lin parentage_N = mkN "parentage" ;
lin parental_A = compoundA (mkA "parental");
lin parenthesis_N = mkN "parenthesis" "parentheses" {- FIXME: guessed plural form -};
lin parenthetic_A = compoundA (mkA "parenthetic");
lin parenthetical_A = compoundA (mkA "parenthetical");
lin pari_mutuel_N = mkN "pari - mutuel" "pari - mutuels";
lin pari_passu_Adv = mkAdv "pari passu";
lin pariah_N = mkN "pariah" "pariahs";
lin pariah_dog_N = mkN "pariah - dog" "pariah - dogs";
lin paris_PN = mkPN "Paris";
lin parish_N = mkN "parish" "parishes";
lin parishioner_N = mkN "parishioner" "parishioners";
lin parisian_A = compoundA (mkA "parisian");
lin parisian_N = mkN "parisian" "parisians";
lin parity_N = mkN "parity" ;
lin park_N = mkN "park" "parks";
lin park_V = mkV "park" "parks" "parked" "parked" "parking";
lin park_V2 = mkV2 (mkV "park" "parks" "parked" "parked" "parking");
lin parka_N = mkN "parka" "parkas";
lin parking_N = mkN "parking" ;
lin parkinson's_A = compoundA (mkA "parkinson's");
lin parky_A = compoundA (mkA "parky");
lin parlance_N = mkN "parlance" "parlances";
lin parley_N = mkN "parley" "parleys";
lin parley_V = mkV "parley" "parleys" "parleyed" "parleyed" "parleying";
lin parliament_N = mkN "parliament" "parliaments";
lin parliamentarian_N = mkN "parliamentarian" "parliamentarians";
lin parliamentary_A = compoundA (mkA "parliamentary");
lin parlour_N = mkN "parlour" "parlours";
lin parlour_car_N = mkN "parlour - car" "parlour - cars";
lin parlous_A = compoundA (mkA "parlous");
lin parma_PN = mkPN "Parma";
lin parmesan_N = mkN "parmesan" ;
lin parochial_A = compoundA (mkA "parochial");
lin parochialism_N = mkN "parochialism" ;
lin parodist_N = mkN "parodist" "parodists";
lin parody_N = mkN "parody" "parodies";
lin parody_V2 = mkV2 (mkV "parody" "parodies" "parodied" "parodied" "parodying");
lin parole_N = mkN "parole" ;
lin parole_V2 = mkV2 (mkV "parole" "paroles" "paroled" "paroled" "paroling");
lin paroquet_N = mkN "paroquet" "paroquets";
lin paroxysm_N = mkN "paroxysm" "paroxysms";
lin parquet_N = mkN "parquet" ;
lin parr_N = mkN "parr" "parrs";
lin parricide_N = mkN "parricide" "parricides";
lin parrot_N = mkN "parrot" "parrots";
lin parry_N = mkN "parry" "parries";
lin parry_V2 = mkV2 (mkV "parry" "parries" "parried" "parried" "parrying");
lin parse_V2 = mkV2 (mkV "parse" "parses" "parsed" "parsed" "parsing");
lin parsee_N = mkN "parsee" "parsees";
lin parsimonious_A = compoundA (mkA "parsimonious");
lin parsimony_N = mkN "parsimony" ;
lin parsley_N = mkN "parsley" ;
lin parsnip_N = mkN "parsnip" "parsnips";
lin parson_N = mkN "parson" "parsons";
lin parsonage_N = mkN "parsonage" "parsonages";
lin part_Adv = mkAdv "part";
lin part_N = mkN "part" "parts";
lin part_V = mkV "part" "parts" "parted" "parted" "parting";
lin part_V2 = mkV2 (mkV "part" "parts" "parted" "parted" "parting");
lin part_owner_N = mkN "part - owner" "part - owners";
lin part_singing_N = mkN "part - singing" ;
lin part_song_N = mkN "part - song" "part - songs";
lin part_time_A = compoundA (mkA "part - time");
lin part_time_Adv = mkAdv "part - time";
lin part_timer_N = mkN "part - timer" "part - timers";
lin partake_V = mkV "par" IrregEng.take_V;
lin partake_V2 = mkV2 (mkV "par" IrregEng.take_V);
lin parterre_N = mkN "parterre" "parterres";
lin parthenogenesis_N = mkN "parthenogenesis" ;
lin parthian_A = compoundA (mkA "parthian");
lin parti_coloured_A = compoundA (mkA "parti - coloured");
lin partial_A = compoundA (mkA "partial");
lin partiality_N = mkN "partiality" "partialities";
lin participant_N = mkN "participant" "participants";
lin participate_V = mkV "participate" "participates" "participated" "participated" "participating";
lin participate_V2 = mkV2 (mkV "participate" "participates" "participated" "participated" "participating");
lin participation_N = mkN "participation" ;
lin participial_A = compoundA (mkA "participial");
lin participle_N = mkN "participle" "participles";
lin particle_N = mkN "particle" "particles";
lin particular_A = compoundA (mkA "particular");
lin particular_N = mkN "particular" "particulars";
lin particularity_N = mkN "particularity" "particularities";
lin particularize_V = mkV "particularize" "particularizes" "particularized" "particularized" "particularizing";
lin particularize_V2 = mkV2 (mkV "particularize" "particularizes" "particularized" "particularized" "particularizing");
lin parting_N = mkN "parting" "partings";
lin partisan_A = compoundA (mkA "partisan");
lin partisan_N = mkN "partisan" "partisans";
lin partisanship_N = mkN "partisanship" ;
lin partition_N = mkN "partition" "partitions";
lin partition_V2 = mkV2 (mkV "partition" "partitions" "partitioned" "partitioned" "partitioning");
lin partitive_A = compoundA (mkA "partitive");
lin partitive_N = mkN "partitive" "partitives";
lin partly_Adv = mkAdv "partly";
lin partner_N = mkN "partner" "partners";
lin partner_V2 = mkV2 (mkV "partner" "partners" "partnered" "partnered" "partnering");
lin partnership_N = mkN "partnership" "partnerships";
lin partridge_N = mkN "partridge" "partridges";
lin parturition_N = mkN "parturition" ;
lin party_N = mkN "party" "parties";
lin party_spirit_N = mkN "party - spirit" ;
lin party_spirited_A = compoundA (mkA "party - spirited");
lin party_wall_N = mkN "party - wall" "party - walls";
lin parvenu_N = mkN "parvenu" "parvenus";
lin paschal_A = compoundA (mkA "paschal");
lin pasha_N = mkN "pasha" "pashas";
lin pashto_N = mkN "pashto" ;
lin pass_N = mkN "pass" "passes";
lin pass_V = mkV "pass" "passes" "passed" "passed" "passing";
lin pass_V2 = mkV2 (mkV "pass" "passes" "passed" "passed" "passing");
lin passable_A = compoundA (mkA "passable");
lin passage_N = mkN "passage" "passages";
lin passageway_N = mkN "passageway" "passageways";
lin passbook_N = mkN "passbook" "passbooks";
lin passe_A = compoundA (mkA "passé");
lin passee_A = compoundA (mkA "passée");
lin passenger_N = mkN "passenger" "passengers";
lin passepartout_N = mkN "passepartout" "passepartouts";
lin passer_by_N = mkN "passer - by" "IRREG";
lin passim_Adv = mkAdv "passim";
lin passing_A = compoundA (mkA "passing");
lin passing_Adv = mkAdv "passing";
lin passing_N = mkN "passing" ;
lin passing_out_A = compoundA (mkA "passing - out");
lin passion_N = mkN "passion" "passions";
lin passion_flower_N = mkN "passion - flower" "passion - flowers";
lin passionate_A = compoundA (mkA "passionate");
lin passionless_A = compoundA (mkA "passionless");
lin passive_A = compoundA (mkA "passive");
lin passive_N = mkN "passive" "passives";
lin passiveness_N = mkN "passiveness" ;
lin passivity_N = mkN "passivity" ;
lin passkey_N = mkN "passkey" "passkeys";
lin passover_N = mkN "passover" "passovers";
lin passport_N = mkN "passport" "passports";
lin password_N = mkN "password" "passwords";
lin past_A = compoundA (mkA "past");
lin past_Adv = mkAdv "past";
lin past_N = mkN "past" "pasts";
lin past_Prep = mkPrep "past";
lin pasta_N = mkN "pasta" ;
lin paste_N = mkN "paste" "pastes";
lin paste_V2 = mkV2 (mkV "paste" "pastes" "pasted" "pasted" "pasting");
lin paste_up_N = mkN "paste - up" "paste - ups";
lin pasteboard_N = mkN "pasteboard" ;
lin pastel_N = mkN "pastel" "pastels";
lin pastern_N = mkN "pastern" "pasterns";
lin pasteurization_N = mkN "pasteurization" ;
lin pasteurize_V2 = mkV2 (mkV "pasteurize" "pasteurizes" "pasteurized" "pasteurized" "pasteurizing");
lin pastiche_N = mkN "pastiche" "pastiches";
lin pastille_N = mkN "pastille" "pastilles";
lin pastime_N = mkN "pastime" "pastimes";
lin pasting_N = mkN "pasting" "pastings";
lin pastor_N = mkN "pastor" "pastors";
lin pastoral_A = compoundA (mkA "pastoral");
lin pastoral_N = mkN "pastoral" "pastorals";
lin pastorate_N = mkN "pastorate" "pastorates";
lin pastry_N = mkN "pastry" "pastries";
lin pastry_cook_N = mkN "pastry - cook" "pastry - cooks";
lin pasturage_N = mkN "pasturage" ;
lin pasture_N = mkN "pasture" "pastures";
lin pasture_V = mkV "pasture" "pastures" "pastured" "pastured" "pasturing";
lin pasture_V2 = mkV2 (mkV "pasture" "pastures" "pastured" "pastured" "pasturing");
lin pasty_A = mkA "pasty" "pastier";
lin pasty_N = mkN "pasty" "pasties";
lin pat_Adv = mkAdv "pat";
lin pat_N = mkN "pat" "pats";
lin pat_PN = mkPN "Pat";
lin pat_V = mkV "pat" "pats" "patted" "patted" "patting";
lin pat_V2 = mkV2 (mkV "pat" "pats" "patted" "patted" "patting");
lin patch_N = mkN "patch" "patches";
lin patch_V2 = mkV2 (mkV "patch" "patches" "patched" "patched" "patching");
lin patch_pocket_N = mkN "patch - pocket" "patch - pockets";
lin patchily_Adv = mkAdv "patchily";
lin patchiness_N = mkN "patchiness" ;
lin patchouli_N = mkN "patchouli" ;
lin patchwork_N = mkN "patchwork" ;
lin patchy_A = mkA "patchy" "patchier";
lin pate_1_N = mkN "pate" "pates";
lin pate_2_N = mkN "pâté" "pâtés";
lin pate_de_foie_gras_N = mkN "pate de foie gras" ;
lin patella_N = mkN "patella" "patellas";
lin patent_A = compoundA (mkA "patent");
lin patent_N = mkN "patent" "patents";
lin patent_V2 = mkV2 (mkV "patent" "patents" "patented" "patented" "patenting");
lin patentee_N = mkN "patentee" "patentees";
lin paterfamilias_N = mkN "paterfamilias" "IRREG";
lin paternal_A = compoundA (mkA "paternal");
lin paternalism_N = mkN "paternalism" ;
lin paternity_N = mkN "paternity" ;
lin paternoster_N = mkN "paternoster" "paternosters";
lin path_N = mkN "path" "paths";
lin path_finder_N = mkN "path - finder" "path - finders";
lin pathetic_A = compoundA (mkA "pathetic");
lin pathetically_Adv = mkAdv "pathetically";
lin pathless_A = compoundA (mkA "pathless");
lin pathogen_N = mkN "pathogen" "pathogens";
lin pathological_A = compoundA (mkA "pathological");
lin pathologist_N = mkN "pathologist" "pathologists";
lin pathology_N = mkN "pathology" ;
lin pathos_N = mkN "pathos" ;
lin pathway_N = mkN "pathway" "pathways";
lin patience_N = mkN "patience" ;
lin patience_PN = mkPN "Patience";
lin patient_A = compoundA (mkA "patient");
lin patient_N = mkN "patient" "patients";
lin patina_N = mkN "patina" "patinas";
lin patio_N = mkN "patio" "patios";
lin patisserie_N = mkN "patisserie" "patisseries";
lin patois_N = mkN "patois" "patoes" {- FIXME: guessed plural form -};
lin patrai_PN = mkPN "Patrai";
lin patrial_N = mkN "patrial" "patrials";
lin patriarch_N = mkN "patriarch" "patriarchs";
lin patriarchal_A = compoundA (mkA "patriarchal");
lin patriarchate_N = mkN "patriarchate" "patriarchates";
lin patriarchy_N = mkN "patriarchy" "patriarchies";
lin patricia_PN = mkPN "Patricia";
lin patrician_A = compoundA (mkA "patrician");
lin patrician_N = mkN "patrician" "patricians";
lin patricide_N = mkN "patricide" "patricides";
lin patrick_PN = mkPN "Patrick";
lin patrimonial_A = compoundA (mkA "patrimonial");
lin patrimony_N = mkN "patrimony" "patrimonies";
lin patriot_N = mkN "patriot" "patriots";
lin patriotic_A = compoundA (mkA "patriotic");
lin patriotically_Adv = mkAdv "patriotically";
lin patriotism_N = mkN "patriotism" ;
lin patrol_N = mkN "patrol" "patrols";
lin patrol_V = mkV "patrol" "patrols" "patrolled" "patrolled" "patrolling";
lin patrol_V2 = mkV2 (mkV "patrol" "patrols" "patrolled" "patrolled" "patrolling");
lin patrolman_N = mkN "patrolman" "patrolmen" {- FIXME: guessed plural form -};
lin patron_N = mkN "patron" "patrons";
lin patronage_N = mkN "patronage" ;
lin patroness_N = mkN "patroness" "patronesses";
lin patronize_V2 = mkV2 (mkV "patronize" "patronizes" "patronized" "patronized" "patronizing");
lin patronizing_A = compoundA (mkA "patronizing");
lin patronymic_A = compoundA (mkA "patronymic");
lin patronymic_N = mkN "patronymic" "patronymics";
lin patten_N = mkN "patten" "pattens";
lin patter_N = mkN "patter" ;
lin patter_V = mkV "patter" "patters" "pattered" "pattered" "pattering";
lin patter_V2 = mkV2 (mkV "patter" "patters" "pattered" "pattered" "pattering");
lin pattern_N = mkN "pattern" "patterns";
lin pattern_V2 = mkV2 (mkV "pattern" "patterns" "patterned" "patterned" "patterning");
lin patty_N = mkN "patty" "patties";
lin patty_PN = mkPN "Patty";
lin patty_pan_N = mkN "patty - pan" "patty - pans";
lin paucity_N = mkN "paucity" ;
lin paul_PN = mkPN "Paul";
lin paula_PN = mkPN "Paula";
lin pauline_PN = mkPN "Pauline";
lin paunch_N = mkN "paunch" "paunches";
lin paunchiness_N = mkN "paunchiness" ;
lin paunchy_A = mkA "paunchy" "paunchier";
lin pauper_N = mkN "pauper" "paupers";
lin pauperism_N = mkN "pauperism" ;
lin pauperization_N = mkN "pauperization" ;
lin pauperize_V2 = mkV2 (mkV "pauperize" "pauperizes" "pauperized" "pauperized" "pauperizing");
lin pause_N = mkN "pause" "pauses";
lin pause_V = mkV "pause" "pauses" "paused" "paused" "pausing";
lin pause_V2V = mkV2V (mkV "pause" "pauses" "paused" "paused" "pausing") noPrep to_Prep ;
lin pause_VS = mkVS (mkV "pause" "pauses" "paused" "paused" "pausing");
lin pave_V2 = mkV2 (mkV "pave" "paves" "paved" "paved" "paving");
lin pavement_N = mkN "pavement" "pavements";
lin pavilion_N = mkN "pavilion" "pavilions";
lin paving_stone_N = mkN "paving - stone" "paving - stones";
lin paw_N = mkN "paw" "paws";
lin paw_V = mkV "paw";
lin paw_V2 = mkV2 (mkV "paw" "paws" "pawed" "pawed" "pawing");
lin pawky_A = compoundA (mkA "pawky");
lin pawl_N = mkN "pawl" "pawls";
lin pawn_N = mkN "pawn" "pawns";
lin pawn_V2 = mkV2 (mkV "pawn" "pawns" "pawned" "pawned" "pawning");
lin pawn_ticket_N = mkN "pawn - ticket" "pawn - tickets";
lin pawnbroker_N = mkN "pawnbroker" "pawnbrokers";
lin pawnshop_N = mkN "pawnshop" "pawnshops";
lin pawpaw_N = mkN "pawpaw" "pawpaws";
lin pax_N = mkN "pax" "paxes";
lin pax_romana_N = mkN "pax romana" "pax romanae" {- FIXME: guessed plural form -};
lin pay_N = mkN "pay" ;
lin pay_V = IrregEng.pay_V;
lin pay_V2 = mkV2 (IrregEng.pay_V);
lin pay_V2V = mkV2V (IrregEng.pay_V) noPrep to_Prep ;
lin pay_VS = mkVS (IrregEng.pay_V);
lin pay_as_you_earn_N = mkN "pay - as - you - earn" ;
lin pay_claim_N = mkN "pay - claim" "pay - claims";
lin pay_packet_N = mkN "pay - packet" "pay - packets";
lin pay_station_N = mkN "pay - station" "pay - stations";
lin payable_A = compoundA (mkA "payable");
lin payday_N = mkN "payday" "paydays";
lin paydirt_N = mkN "paydirt" ;
lin paye_PN = mkPN "Paye";
lin payee_N = mkN "payee" "payees";
lin payer_N = mkN "payer" "payers";
lin payload_N = mkN "payload" "payloads";
lin paymaster_N = mkN "paymaster" "paymasters";
lin payment_N = mkN "payment" "payments";
lin paynim_N = mkN "paynim" "paynims";
lin payoff_N = mkN "payoff" "payoffs";
lin payphone_N = mkN "payphone" "payphones";
lin payroll_N = mkN "payroll" "payrolls";
lin paysheet_N = mkN "paysheet" "paysheets";
lin payslip_N = mkN "payslip" "payslips";
lin pc_PN = mkPN "Pc";
lin pdsa_N = mkN "pdsa" ;
lin pe_N = mkN "pe" ;
lin pea_N = mkN "pea" "peas";
lin pea_chick_N = mkN "pea - chick" "pea - chicks";
lin pea_flour_N = mkN "pea - flour" ;
lin pea_green_A = compoundA (mkA "pea - green");
lin pea_green_N = mkN "pea - green" "pea - greens";
lin pea_jacket_N = mkN "pea - jacket" "pea - jackets";
lin pea_soup_N = mkN "pea - soup" "pea - soups";
lin peace_N = mkN "peace" ;
lin peace_offering_N = mkN "peace - offering" "peace - offerings";
lin peaceable_A = compoundA (mkA "peaceable");
lin peaceful_A = compoundA (mkA "peaceful");
lin peacefulness_N = mkN "peacefulness" ;
lin peacehaven_PN = mkPN "Peacehaven";
lin peacemaker_N = mkN "peacemaker" "peacemakers";
lin peacetime_N = mkN "peacetime" ;
lin peach_N = mkN "peach" "peaches";
lin peach_V = mkV "peach" "peaches" "peached" "peached" "peaching";
lin peach_V2 = mkV2 (mkV "peach" "peaches" "peached" "peached" "peaching");
lin peacock_N = mkN "peacock" "peacocks";
lin peacock_blue_A = compoundA (mkA "peacock - blue");
lin peacock_blue_N = mkN "peacock - blue" "peacock - blues";
lin peafowl_N = mkN "peafowl" "peafowls";
lin peahen_N = mkN "peahen" "peahens";
lin peak_N = mkN "peak" "peaks";
lin peak_V = mkV "peak" "peaks" "peaked" "peaked" "peaking";
lin peak_V2 = mkV2 (mkV "peak" "peaks" "peaked" "peaked" "peaking");
lin peaked_A = compoundA (mkA "peaked");
lin peaky_A = mkA "peaky" "peakier";
lin peal_N = mkN "peal" "peals";
lin peal_V = mkV "peal" "peals" "pealed" "pealed" "pealing";
lin peal_V2 = mkV2 (mkV "peal" "peals" "pealed" "pealed" "pealing");
lin peanut_N = mkN "peanut" "peanuts";
lin pear_N = mkN "pear" "pears";
lin pearl_N = mkN "pearl" "pearls";
lin pearl_PN = mkPN "Pearl";
lin pearl_V = mkV "pearl" "pearls" "pearled" "pearled" "pearling";
lin pearl_barley_N = mkN "pearl - barley" ;
lin pearl_diver_N = mkN "pearl - diver" "pearl - divers";
lin pearl_fishery_N = mkN "pearl - fishery" "pearl - fisheries";
lin pearl_oyster_N = mkN "pearl - oyster" "pearl - oysters";
lin pearl_sago_N = mkN "pearl - sago" ;
lin pearly_A = mkA "pearly" "pearlier";
lin pearmain_N = mkN "pearmain" "pearmains";
lin peasant_N = mkN "peasant" "peasants";
lin peasantry_N = mkN "peasantry" "peasantries";
lin pease_N = mkN "pease" ;
lin pease_pudding_N = mkN "pease - pudding" "pease - puddings";
lin peashooter_N = mkN "peashooter" "peashooters";
lin peasouper_N = mkN "peasouper" "peasoupers";
lin peat_N = mkN "peat" ;
lin peaty_A = mkA "peaty" "peatier";
lin pebble_N = mkN "pebble" "pebbles";
lin pebbly_A = mkA "pebbly" "pebblier";
lin pecan_N = mkN "pecan" "pecans";
lin peccable_A = compoundA (mkA "peccable");
lin peccadillo_N = mkN "peccadillo" "peccadillos";
lin peccary_N = mkN "peccary" "peccaries";
lin peck_N = mkN "peck" "pecks";
lin peck_V = mkV "peck" "pecks" "pecked" "pecked" "pecking";
lin peck_V2 = mkV2 (mkV "peck" "pecks" "pecked" "pecked" "pecking");
lin pecker_N = mkN "pecker" "peckers";
lin peckish_A = compoundA (mkA "peckish");
lin pectic_A = compoundA (mkA "pectic");
lin pectin_N = mkN "pectin" ;
lin pectoral_A = compoundA (mkA "pectoral");
lin peculate_V = mkV "peculate" "peculates" "peculated" "peculated" "peculating";
lin peculate_V2 = mkV2 (mkV "peculate" "peculates" "peculated" "peculated" "peculating");
lin peculation_N = mkN "peculation" "peculations";
lin peculiar_A = compoundA (mkA "peculiar");
lin peculiarity_N = mkN "peculiarity" "peculiarities";
lin pecuniary_A = compoundA (mkA "pecuniary");
lin pedagogic_A = compoundA (mkA "pedagogic");
lin pedagogical_A = compoundA (mkA "pedagogical");
lin pedagogue_N = mkN "pedagogue" "pedagogues";
lin pedagogy_N = mkN "pedagogy" ;
lin pedal_A = compoundA (mkA "pedal");
lin pedal_N = mkN "pedal" "pedals";
lin pedal_V = mkV "pedal" "pedals" "pedalled" "pedalled" "pedalling";
lin pedal_V2 = mkV2 (mkV "pedal" "pedals" "pedalled" "pedalled" "pedalling");
lin pedant_N = mkN "pedant" "pedants";
lin pedantic_A = compoundA (mkA "pedantic");
lin pedantically_Adv = mkAdv "pedantically";
lin pedantry_N = mkN "pedantry" "pedantries";
lin peddle_V = mkV "peddle" "peddles" "peddled" "peddled" "peddling";
lin peddle_V2 = mkV2 (mkV "peddle" "peddles" "peddled" "peddled" "peddling");
lin peddler_N = mkN "peddler" "peddlers";
lin peddling_A = compoundA (mkA "peddling");
lin pederast_N = mkN "pederast" "pederasts";
lin pederasty_N = mkN "pederasty" ;
lin pedestal_N = mkN "pedestal" "pedestals";
lin pedestrian_A = compoundA (mkA "pedestrian");
lin pedestrian_N = mkN "pedestrian" "pedestrians";
lin pediatrician_N = mkN "pediatrician" "pediatricians";
lin pediatrics_N = mkN "pediatrics" "pediatrics";
lin pedicab_N = mkN "pedicab" "pedicabs";
lin pedicure_N = mkN "pedicure" "pedicures";
lin pedigree_N = mkN "pedigree" "pedigrees";
lin pediment_N = mkN "pediment" "pediments";
lin pedlar_N = mkN "pedlar" "pedlars";
lin pedometer_N = mkN "pedometer" "pedometers";
lin pee_N = mkN "pee" "pees";
lin pee_V = mkV "pee" "pees" "peed" "peed" "peeing";
lin peebles_PN = mkPN "Peebles";
lin peek_N = mkN "peek" "peeks";
lin peek_V = mkV "peek" "peeks" "peeked" "peeked" "peeking";
lin peek_a_boo_N = mkN "peek - a - boo" ;
lin peel_N = mkN "peel" ;
lin peel_V = mkV "peel" "peels" "peeled" "peeled" "peeling";
lin peel_V2 = mkV2 (mkV "peel" "peels" "peeled" "peeled" "peeling");
lin peeler_N = mkN "peeler" "peelers";
lin peep_N = mkN "peep" "peeps";
lin peep_V = mkV "peep" "peeps" "peeped" "peeped" "peeping";
lin peeper_N = mkN "peeper" "peepers";
lin peephole_N = mkN "peephole" "peepholes";
lin peepshow_N = mkN "peepshow" "peepshows";
lin peepul_N = mkN "peepul" "peepuls";
lin peer_N = mkN "peer" "peers";
lin peer_V = mkV "peer" "peers" "peered" "peered" "peering";
lin peerage_N = mkN "peerage" "peerages";
lin peeress_N = mkN "peeress" "peeresses";
lin peerless_A = compoundA (mkA "peerless");
lin peeve_V2 = mkV2 (mkV "peeve" "peeves" "peeved" "peeved" "peeving");
lin peeved_A = compoundA (mkA "peeved");
lin peevish_A = compoundA (mkA "peevish");
lin peevishness_N = mkN "peevishness" ;
lin peewit_N = mkN "peewit" "peewits";
lin peg_N = mkN "peg" "pegs";
lin peg_PN = mkPN "Peg";
lin peg_V = mkV "peg" "pegs" "pegged" "pegged" "pegging";
lin peg_V2 = mkV2 (mkV "peg" "pegs" "pegged" "pegged" "pegging");
lin peggy_PN = mkPN "Peggy";
lin peignoir_N = mkN "peignoir" "peignoirs";
lin pejorative_A = compoundA (mkA "pejorative");
lin peke_N = mkN "peke" "pekes";
lin pekinese_N = mkN "pekinese" "pekinese";
lin peking_PN = mkPN "Peking";
lin pekoe_N = mkN "pekoe" ;
lin pelf_N = mkN "pelf" ;
lin pelican_N = mkN "pelican" "pelicans";
lin pelisse_N = mkN "pelisse" "pelisses";
lin pell_mell_Adv = mkAdv "pell - mell";
lin pellet_N = mkN "pellet" "pellets";
lin pellucid_A = compoundA (mkA "pellucid");
lin pelmet_N = mkN "pelmet" "pelmets";
lin pelota_N = mkN "pelota" ;
lin pelt_N = mkN "pelt" "pelts";
lin pelt_V = mkV "pelt" "pelts" "pelted" "pelted" "pelting";
lin pelt_V2 = mkV2 (mkV "pelt" "pelts" "pelted" "pelted" "pelting");
lin pelton_PN = mkPN "Pelton";
lin pelvic_A = compoundA (mkA "pelvic");
lin pelvis_N = mkN "pelvis" "pelvises";
lin pembroke_PN = mkPN "Pembroke";
lin pemmican_N = mkN "pemmican" ;
lin pen_N = mkN "pen" "pens";
lin pen_V2 = mkV2 (mkV "pen" "pens" "penned" "penned" "penning");
lin pen_and_ink_N = mkN "pen - and - ink" ;
lin pen_friend_N = mkN "pen - friend" "pen - friends";
lin pen_name_N = mkN "pen - name" "pen - names";
lin pen_pusher_N = mkN "pen - pusher" "pen - pushers";
lin penal_A = compoundA (mkA "penal");
lin penalization_N = mkN "penalization" "penalizations";
lin penalize_V2 = mkV2 (mkV "penalize" "penalizes" "penalized" "penalized" "penalizing");
lin penalty_N = mkN "penalty" "penalties";
lin penance_N = mkN "penance" ;
lin penarth_PN = mkPN "Penarth";
lin penchant_N = mkN "penchant" "penchants";
lin pencil_N = mkN "pencil" "pencils";
lin pencil_V2 = mkV2 (mkV "pencil" "pencils" "pencilled" "pencilled" "pencilling");
lin pend_V = mkV "pend";
lin pend_V2 = mkV2 (mkV "pend");
lin pendant_N = mkN "pendant" "pendants";
lin pendent_A = compoundA (mkA "pendent");
lin pending_A = compoundA (mkA "pending");
lin pending_Prep = mkPrep "pending";
lin pendlebury_PN = mkPN "Pendlebury";
lin pendulous_A = compoundA (mkA "pendulous");
lin pendulum_N = mkN "pendulum" "pendulums";
lin penelope_PN = mkPN "Penelope";
lin penetrability_N = mkN "penetrability" ;
lin penetrable_A = compoundA (mkA "penetrable");
lin penetrate_V = mkV "penetrate" "penetrates" "penetrated" "penetrated" "penetrating";
lin penetrate_V2 = mkV2 (mkV "penetrate" "penetrates" "penetrated" "penetrated" "penetrating");
lin penetrating_A = compoundA (mkA "penetrating");
lin penetration_N = mkN "penetration" "penetrations";
lin penetrative_A = compoundA (mkA "penetrative");
lin penguin_N = mkN "penguin" "penguins";
lin penicillin_N = mkN "penicillin" ;
lin penicuik_PN = mkPN "Penicuik";
lin peninsula_N = mkN "peninsula" "peninsulas";
lin peninsular_A = compoundA (mkA "peninsular");
lin penis_N = mkN "penis" "penises";
lin penitence_N = mkN "penitence" ;
lin penitent_A = compoundA (mkA "penitent");
lin penitent_N = mkN "penitent" "penitents";
lin penitential_A = compoundA (mkA "penitential");
lin penitentiary_A = compoundA (mkA "penitentiary");
lin penitentiary_N = mkN "penitentiary" "penitentiaries";
lin penki_PN = mkPN "Penki";
lin penknife_N = mkN "penknife" "penknives";
lin penmanship_N = mkN "penmanship" ;
lin penn'orth_N = mkN "penn'orth" "penn'orths";
lin pennant_N = mkN "pennant" "pennants";
lin penniless_A = compoundA (mkA "penniless");
lin pennon_N = mkN "pennon";
lin pennsylvania_PN = mkPN "Pennsylvania";
lin penny_N = mkN "penny" (variants {"pennies"; "pence"});
lin penny_PN = mkPN "Penny";
lin pennyweight_N = mkN "pennyweight";
lin pennyworth_N = mkN "pennyworth";
lin penology_N = mkN "penology" ;
lin penrhyn_PN = mkPN "Penrhyn";
lin penrith_PN = mkPN "Penrith";
lin penryn_PN = mkPN "Penryn";
lin pension_N = mkN "pension";
lin pension_V2 = mkV2 (mkV "pension" "pensions" "pensioned" "pensioned" "pensioning");
lin pensionable_A = compoundA (mkA "pensionable");
lin pensioner_N = mkN "pensioner" "pensioners";
lin pensive_A = compoundA (mkA "pensive");
lin pensiveness_N = mkN "pensiveness" ;
lin penstock_N = mkN "penstock" "penstocks";
lin pent_up_A = compoundA (mkA "pent - up");
lin pentagon_N = mkN "pentagon" "pentagons";
lin pentagonal_A = compoundA (mkA "pentagonal");
lin pentameter_N = mkN "pentameter" "pentameters";
lin pentateuch_N = mkN "pentateuch" "pentateuchs";
lin pentathlon_N = mkN "pentathlon" "pentathlons";
lin pentecost_N = mkN "pentecost" ;
lin pentecostal_A = compoundA (mkA "pentecostal");
lin penthouse_N = mkN "penthouse" "penthouses";
lin penultimate_A = compoundA (mkA "penultimate");
lin penultimate_N = mkN "penultimate" "penultimates";
lin penumbra_N = mkN "penumbra" "penumbras";
lin penurious_A = compoundA (mkA "penurious");
lin penuriousness_N = mkN "penuriousness" ;
lin penury_N = mkN "penury" ;
lin penzance_PN = mkPN "Penzance";
lin peon_N = mkN "peon" "peons";
lin peonage_N = mkN "peonage" ;
lin peony_N = mkN "peony" "peonies";
lin people_N = mkN "people" (variants {"people"; "peoples"});
lin people_V2 = mkV2 (mkV "people" "peoples" "peopled" "peopled" "peopling");
lin pep_N = mkN "pep" ;
lin pep_V2 = mkV2 (mkV "pep" "peps" "pepped" "pepped" "pepping");
lin pepper_N = mkN "pepper" "peppers";
lin pepper_V2 = mkV2 (mkV "pepper" "peppers" "peppered" "peppered" "peppering");
lin pepper_and_salt_N = mkN "pepper - and - salt" ;
lin pepper_mill_N = mkN "pepper - mill" "pepper - mills";
lin pepper_pot_N = mkN "pepper - pot" "pepper - pots";
lin peppercorn_N = mkN "peppercorn" "peppercorns";
lin peppermint_N = mkN "peppermint" "peppermints";
lin peppery_A = compoundA (mkA "peppery");
lin pepsin_N = mkN "pepsin" ;
lin peptic_A = compoundA (mkA "peptic");
lin per_Prep = mkPrep "per";
lin peradventure_Adv = mkAdv "peradventure";
lin perambulate_V = mkV "perambulate" "perambulates" "perambulated" "perambulated" "perambulating";
lin perambulate_V2 = mkV2 (mkV "perambulate" "perambulates" "perambulated" "perambulated" "perambulating");
lin perambulation_N = mkN "perambulation" "perambulations";
lin perambulator_N = mkN "perambulator" "perambulators";
lin perceivable_A = compoundA (mkA "perceivable");
lin perceive_V2 = mkV2 (mkV "perceive" "perceives" "perceived" "perceived" "perceiving");
lin perceive_V2V = mkV2V (mkV "perceive") noPrep to_Prep ;
lin perceive_VS = mkVS (mkV "perceive");
lin perceiver_N = mkN "perceiver" "perceivers";
lin percent_N = mkN "percent" "percent";
lin percentage_N = mkN "percentage" "percentages";
lin perceptibility_N = mkN "perceptibility" ;
lin perceptible_A = compoundA (mkA "perceptible");
lin perception_N = mkN "perception" "perceptions";
lin perceptive_A = compoundA (mkA "perceptive");
lin perceptual_A = compoundA (mkA "perceptual");
lin perch_N = mkN "perch" "perch";
lin perch_V = mkV "perch" "perches" "perched" "perched" "perching";
lin perch_V2 = mkV2 (mkV "perch" "perches" "perched" "perched" "perching");
lin perchance_Adv = mkAdv "perchance";
lin percipient_A = compoundA (mkA "percipient");
lin percolate_V = mkV "percolate" "percolates" "percolated" "percolated" "percolating";
lin percolate_V2 = mkV2 (mkV "percolate" "percolates" "percolated" "percolated" "percolating");
lin percolator_N = mkN "percolator" "percolators";
lin percussion_N = mkN "percussion" "percussions";
lin percussionist_N = mkN "percussionist" "percussionists";
lin percy_PN = mkPN "Percy";
lin perdition_N = mkN "perdition" ;
lin peregrination_N = mkN "peregrination" "peregrinations";
lin peremptory_A = compoundA (mkA "peremptory");
lin perennial_A = compoundA (mkA "perennial");
lin perennial_N = mkN "perennial" "perennials";
lin perfect_A = compoundA (mkA "perfect");
lin perfect_V2 = mkV2 (mkV "perfect" "perfects" "perfected" "perfected" "perfecting");
lin perfectibility_N = mkN "perfectibility" ;
lin perfectible_A = compoundA (mkA "perfectible");
lin perfection_N = mkN "perfection" ;
lin perfectionist_N = mkN "perfectionist" "perfectionists";
lin perfervid_A = compoundA (mkA "perfervid");
lin perfidious_A = compoundA (mkA "perfidious");
lin perfidiousness_N = mkN "perfidiousness" ;
lin perfidy_N = mkN "perfidy" "perfidies";
lin perforate_V2 = mkV2 (mkV "perforate" "perforates" "perforated" "perforated" "perforating");
lin perforation_N = mkN "perforation" "perforations";
lin perforce_Adv = mkAdv "perforce";
lin perform_V = mkV "perform" "performs" "performed" "performed" "performing";
lin perform_V2 = mkV2 (mkV "perform" "performs" "performed" "performed" "performing");
lin performance_N = mkN "performance" "performances";
lin performer_N = mkN "performer" "performers";
lin perfume_N = mkN "perfume" "perfumes";
lin perfume_V2 = mkV2 (mkV "perfume" "perfumes" "perfumed" "perfumed" "perfuming");
lin perfumer_N = mkN "perfumer" "perfumers";
lin perfunctory_A = compoundA (mkA "perfunctory");
lin pergola_N = mkN "pergola" "pergolas";
lin perhaps_Adv = mkAdv "perhaps";
lin peri_N = mkN "peri" "peris";
lin perigee_N = mkN "perigee" "perigees";
lin perihelion_N = mkN "perihelion" "perihelions";
lin peril_N = mkN "peril" "perils";
lin peril_V2 = mkV2 (mkV "peril" "perils" "perilled" "perilled" "perilling");
lin perilous_A = compoundA (mkA "perilous");
lin perimeter_N = mkN "perimeter" "perimeters";
lin period_N = mkN "period" "periods";
lin periodic_A = compoundA (mkA "periodic");
lin periodical_A = compoundA (mkA "periodical");
lin periodical_N = mkN "periodical" "periodicals";
lin peripatetic_A = compoundA (mkA "peripatetic");
lin peripheral_A = compoundA (mkA "peripheral");
lin periphery_N = mkN "periphery" "peripheries";
lin periphrasis_N = mkN "periphrasis" "periphrases" {- FIXME: guessed plural form -};
lin periphrastic_A = compoundA (mkA "periphrastic");
lin periscope_N = mkN "periscope" "periscopes";
lin perish_V = mkV "perish" "perishes" "perished" "perished" "perishing";
lin perish_V2 = mkV2 (mkV "perish" "perishes" "perished" "perished" "perishing");
lin perishable_A = compoundA (mkA "perishable");
lin perisher_N = mkN "perisher" "perishers";
lin peristyle_N = mkN "peristyle" "peristyles";
lin peritonitis_N = mkN "peritonitis" ;
lin periwig_N = mkN "periwig" "periwigs";
lin periwinkle_N = mkN "periwinkle" "periwinkles";
lin perjure_V2 = mkV2 (mkV "perjure" "perjures" "perjured" "perjured" "perjuring");
lin perjurer_N = mkN "perjurer" "perjurers";
lin perjury_N = mkN "perjury" "perjuries";
lin perk_N = mkN "perk" "perks";
lin perk_V = mkV "perk" "perks" "perked" "perked" "perking";
lin perk_V2 = mkV2 (mkV "perk" "perks" "perked" "perked" "perking");
lin perkily_Adv = mkAdv "perkily";
lin perkiness_N = mkN "perkiness" ;
lin perky_A = mkA "perky" "perkier";
lin perm_N = mkN "perm" "perms";
lin perm_PN = mkPN "Perm";
lin perm_V2 = mkV2 (mkV "perm" "perms" "permed" "permed" "perming");
lin permafrost_N = mkN "permafrost" ;
lin permanence_N = mkN "permanence" ;
lin permanency_N = mkN "permanency" "permanencies";
lin permanent_A = compoundA (mkA "permanent");
lin permanganate_N = mkN "permanganate" "permanganates";
lin permeability_N = mkN "permeability" ;
lin permeable_A = compoundA (mkA "permeable");
lin permeate_V = mkV "permeate" "permeates" "permeated" "permeated" "permeating";
lin permeate_V2 = mkV2 (mkV "permeate" "permeates" "permeated" "permeated" "permeating");
lin permeation_N = mkN "permeation" ;
lin permissible_A = compoundA (mkA "permissible");
lin permission_N = mkN "permission" ;
lin permissive_A = compoundA (mkA "permissive");
lin permissiveness_N = mkN "permissiveness" ;
lin permit_N = mkN "permit" "permits";
lin permit_V = mkV "permit" "permits" "permitted" "permitted" "permitting";
lin permit_V2 = mkV2 (mkV "permit" "permits" "permitted" "permitted" "permitting");
lin permit_V2V = mkV2V (mkV "permit" "permits" "permitted" "permitted" "permitting") noPrep to_Prep ;
lin permutation_N = mkN "permutation" "permutations";
lin permute_V2 = mkV2 (mkV "permute" "permutes" "permuted" "permuted" "permuting");
lin pernicious_A = compoundA (mkA "pernicious");
lin perniciousness_N = mkN "perniciousness" ;
lin pernickety_A = compoundA (mkA "pernickety");
lin peroration_N = mkN "peroration" "perorations";
lin peroxide_N = mkN "peroxide" "peroxides";
lin perpendicular_A = compoundA (mkA "perpendicular");
lin perpendicular_N = mkN "perpendicular" "perpendiculars";
lin perpetrate_V2 = mkV2 (mkV "perpetrate" "perpetrates" "perpetrated" "perpetrated" "perpetrating");
lin perpetration_N = mkN "perpetration" "perpetrations";
lin perpetrator_N = mkN "perpetrator" "perpetrators";
lin perpetual_A = compoundA (mkA "perpetual");
lin perpetuate_V2 = mkV2 (mkV "perpetuate" "perpetuates" "perpetuated" "perpetuated" "perpetuating");
lin perpetuation_N = mkN "perpetuation" "perpetuations";
lin perpetuity_N = mkN "perpetuity" "perpetuities";
lin perplex_V2 = mkV2 (mkV "perplex" "perplexes" "perplexed" "perplexed" "perplexing");
lin perplexed_A = compoundA (mkA "perplexed");
lin perplexity_N = mkN "perplexity" "perplexities";
lin perquisite_N = mkN "perquisite" "perquisites";
lin perry_N = mkN "perry" ;
lin persecute_V2 = mkV2 (mkV "persecute" "persecutes" "persecuted" "persecuted" "persecuting");
lin persecution_N = mkN "persecution" "persecutions";
lin persecutor_N = mkN "persecutor" "persecutors";
lin perseverance_N = mkN "perseverance" ;
lin persevere_V = mkV "persevere" "perseveres" "persevered" "persevered" "persevering";
lin persevering_A = compoundA (mkA "persevering");
lin pershore_PN = mkPN "Pershore";
lin persia_PN = mkPN "Persia";
lin persian_A = compoundA (mkA "persian");
lin persian_N = mkN "persian" "persians";
lin persiflage_N = mkN "persiflage" ;
lin persimmon_N = mkN "persimmon" "persimmons";
lin persist_V = mkV "persist" "persists" "persisted" "persisted" "persisting";
lin persistence_N = mkN "persistence" ;
lin persistent_A = compoundA (mkA "persistent");
lin person_N = mkN "person" "persons";
lin persona_N = mkN "persona" "personas";
lin persona_grata_N = mkN "persona grata" "persona gratae" {- FIXME: guessed plural form -};
lin persona_non_grata_N = mkN "persona non grata" "persona non gratae" {- FIXME: guessed plural form -};
lin personable_A = compoundA (mkA "personable");
lin personage_N = mkN "personage" "personages";
lin personal_A = compoundA (mkA "personal");
lin personal_N = mkN "personal" "personals";
lin personality_N = mkN "personality" "personalities";
lin personalize_V2 = mkV2 (mkV "personalize" "personalizes" "personalized" "personalized" "personalizing");
lin personalty_N = mkN "personalty" ;
lin personate_V2 = mkV2 (mkV "personate" "personates" "personated" "personated" "personating");
lin personation_N = mkN "personation" "personations";
lin personification_N = mkN "personification" "personifications";
lin personify_V2 = mkV2 (mkV "personify" "personifies" "personified" "personified" "personifying");
lin perspective_N = mkN "perspective" "perspectives";
lin perspex_N = mkN "perspex" ;
lin perspicacious_A = compoundA (mkA "perspicacious");
lin perspicacity_N = mkN "perspicacity" ;
lin perspicuity_N = mkN "perspicuity" ;
lin perspicuous_A = compoundA (mkA "perspicuous");
lin perspicuousness_N = mkN "perspicuousness" ;
lin perspiration_N = mkN "perspiration" ;
lin perspire_V = mkV "perspire" "perspires" "perspired" "perspired" "perspiring";
lin persuadable_A = compoundA (mkA "persuadable");
lin persuade_V2 = mkV2 (mkV "persuade" "persuades" "persuaded" "persuaded" "persuading");
lin persuasion_N = mkN "persuasion" "persuasions";
lin persuasive_A = compoundA (mkA "persuasive");
lin persuasiveness_N = mkN "persuasiveness" ;
lin pert_A = compoundA (mkA "pert");
lin pertain_V = mkV "pertain" "pertains" "pertained" "pertained" "pertaining";
lin perth_PN = mkPN "Perth";
lin pertinacious_A = compoundA (mkA "pertinacious");
lin pertinacity_N = mkN "pertinacity" ;
lin pertinence_N = mkN "pertinence" ;
lin pertinent_A = compoundA (mkA "pertinent");
lin pertness_N = mkN "pertness" ;
lin perturb_V2 = mkV2 (mkV "perturb" "perturbs" "perturbed" "perturbed" "perturbing");
lin perturbation_N = mkN "perturbation" "perturbations";
lin peru_PN = mkPN "Peru";
lin perugia_PN = mkPN "Perugia";
lin peruke_N = mkN "peruke" "perukes";
lin perusal_N = mkN "perusal" "perusals";
lin peruse_V2 = mkV2 (mkV "peruse" "peruses" "perused" "perused" "perusing");
lin peruvian_A = compoundA (mkA "peruvian");
lin peruvian_N = mkN "peruvian" "peruvians";
lin pervade_V2 = mkV2 (mkV "pervade" "pervades" "pervaded" "pervaded" "pervading");
lin pervasion_N = mkN "pervasion" ;
lin pervasive_A = compoundA (mkA "pervasive");
lin pervasiveness_N = mkN "pervasiveness" ;
lin perverse_A = compoundA (mkA "perverse");
lin perverseness_N = mkN "perverseness" ;
lin perversion_N = mkN "perversion" "perversions";
lin perversity_N = mkN "perversity" "perversities";
lin pervert_N = mkN "pervert" "perverts";
lin pervert_V2 = mkV2 (mkV "pervert" "perverts" "perverted" "perverted" "perverting");
lin pescara_PN = mkPN "Pescara";
lin peseta_N = mkN "peseta" "pesetas";
lin pesky_A = mkA "pesky" "peskier";
lin peso_N = mkN "peso" "pesos";
lin pessary_N = mkN "pessary" "pessaries";
lin pessimism_N = mkN "pessimism" ;
lin pessimist_N = mkN "pessimist" "pessimists";
lin pessimistic_A = compoundA (mkA "pessimistic");
lin pessimistically_Adv = mkAdv "pessimistically";
lin pest_N = mkN "pest" "pests";
lin pester_V2 = mkV2 (mkV "pester" "pesters" "pestered" "pestered" "pestering");
lin pesticide_N = mkN "pesticide" "pesticides";
lin pestiferous_A = compoundA (mkA "pestiferous");
lin pestilence_N = mkN "pestilence" "pestilences";
lin pestilent_A = compoundA (mkA "pestilent");
lin pestilential_A = compoundA (mkA "pestilential");
lin pestle_N = mkN "pestle" "pestles";
lin pestle_V2 = mkV2 (mkV "pestle" "pestles" "pestled" "pestled" "pestling");
lin pet_N = mkN "pet" "pets";
lin pet_V2 = mkV2 (mkV "pet" "pets" "petted" "petted" "petting");
lin petal_N = mkN "petal" "petals";
lin petaled_A = compoundA (mkA "petaled");
lin petalled_A = compoundA (mkA "petalled");
lin petard_N = mkN "petard" "petards";
lin pete_PN = mkPN "Pete";
lin peter_PN = mkPN "Peter";
lin peter_V = mkV "peter" "peters" "petered" "petered" "petering";
lin peterborough_PN = mkPN "Peterborough";
lin peterhead_PN = mkPN "Peterhead";
lin peterlee_PN = mkPN "Peterlee";
lin petersfield_PN = mkPN "Petersfield";
lin petit_bourgeois_N = mkN "petit bourgeois" "petit bourgeoes" {- FIXME: guessed plural form -};
lin petite_A = compoundA (mkA "petite");
lin petition_N = mkN "petition" "petitions";
lin petition_V = mkV "petition" "petitions" "petitioned" "petitioned" "petitioning";
lin petition_V2 = mkV2 (mkV "petition" "petitions" "petitioned" "petitioned" "petitioning");
lin petitioner_N = mkN "petitioner" "petitioners";
lin petrel_N = mkN "petrel" "petrels";
lin petrifaction_N = mkN "petrifaction" "petrifactions";
lin petrify_V = mkV "petrify" "petrifies" "petrified" "petrified" "petrifying";
lin petrify_V2 = mkV2 (mkV "petrify" "petrifies" "petrified" "petrified" "petrifying");
lin petro_chemical_N = mkN "petro - chemical" "petro - chemicals";
lin petrol_N = mkN "petrol" ;
lin petroleum_N = mkN "petroleum" ;
lin petrology_N = mkN "petrology" ;
lin petticoat_N = mkN "petticoat" "petticoats";
lin pettifogging_A = compoundA (mkA "pettifogging");
lin pettily_Adv = mkAdv "pettily";
lin pettiness_N = mkN "pettiness" "pettinesses";
lin pettish_A = compoundA (mkA "pettish");
lin pettishness_N = mkN "pettishness" ;
lin petty_A = mkA "petty" "pettier";
lin petulance_N = mkN "petulance" ;
lin petulant_A = compoundA (mkA "petulant");
lin petunia_N = mkN "petunia" "petunias";
lin pew_N = mkN "pew" "pews";
lin pew_opener_N = mkN "pew - opener" "pew - openers";
lin pewit_N = mkN "pewit" "pewits";
lin pewter_N = mkN "pewter" ;
lin peyote_N = mkN "peyote" "peyotes";
lin pfennig_N = mkN "pfennig" "pfennigs";
lin phaeton_N = mkN "phaeton" "phaetons";
lin phagocyte_N = mkN "phagocyte" "phagocytes";
lin phalanx_N = mkN "phalanx" "phalanxes";
lin phallic_A = compoundA (mkA "phallic");
lin phallus_N = mkN "phallus" "phalluses";
lin phantasm_N = mkN "phantasm" "phantasms";
lin phantasmagoria_N = mkN "phantasmagoria" "phantasmagorias";
lin phantasmal_A = compoundA (mkA "phantasmal");
lin phantasy_N = mkN "phantasy" "phantasies";
lin phantom_N = mkN "phantom" "phantoms";
lin pharaoh_N = mkN "pharaoh" "pharaohs";
lin pharisaic_A = compoundA (mkA "pharisaic");
lin pharisaical_A = compoundA (mkA "pharisaical");
lin pharisee_N = mkN "pharisee" "pharisees";
lin pharmaceutical_A = compoundA (mkA "pharmaceutical");
lin pharmacist_N = mkN "pharmacist" "pharmacists";
lin pharmacological_A = compoundA (mkA "pharmacological");
lin pharmacologist_N = mkN "pharmacologist" "pharmacologists";
lin pharmacology_N = mkN "pharmacology" ;
lin pharmacopoeia_N = mkN "pharmacopoeia" "pharmacopoeias";
lin pharmacy_N = mkN "pharmacy" "pharmacies";
lin pharos_N = mkN "pharos" "IRREG";
lin pharyngitis_N = mkN "pharyngitis" ;
lin pharynx_N = mkN "pharynx" "pharynxes";
lin phase_N = mkN "phase" "phases";
lin phase_V2 = mkV2 (mkV "phase" "phases" "phased" "phased" "phasing");
lin phd_N = mkN "phd" ;
lin pheasant_N = mkN "pheasant" "pheasants";
lin phenobarbitone_N = mkN "phenobarbitone" ;
lin phenol_N = mkN "phenol" ;
lin phenomenal_A = compoundA (mkA "phenomenal");
lin phenomenon_N = mkN "phenomenon" "phenomena" {- FIXME: guessed plural form -};
lin phial_N = mkN "phial" "phials";
lin phil_PN = mkPN "Phil";
lin philadelphia_PN = mkPN "Philadelphia";
lin philander_V = mkV "philander" "philanders" "philandered" "philandered" "philandering";
lin philanderer_N = mkN "philanderer" "philanderers";
lin philanthropic_A = compoundA (mkA "philanthropic");
lin philanthropically_Adv = mkAdv "philanthropically";
lin philanthropist_N = mkN "philanthropist" "philanthropists";
lin philanthropy_N = mkN "philanthropy" ;
lin philatelic_A = compoundA (mkA "philatelic");
lin philatelist_N = mkN "philatelist" "philatelists";
lin philately_N = mkN "philately" ;
lin philharmonic_A = compoundA (mkA "philharmonic");
lin philhellene_A = compoundA (mkA "philhellene");
lin philhellene_N = mkN "philhellene" "philhellenes";
lin philhellenic_A = compoundA (mkA "philhellenic");
lin philip_PN = mkPN "Philip";
lin philippa_PN = mkPN "Philippa";
lin philippine_A = compoundA (mkA "philippine");
lin philippine_N = mkN "philippine" "philippines";
lin philippines_PN = mkPN "Philippines";
lin philistine_N = mkN "philistine" "philistines";
lin philistinism_N = mkN "philistinism" ;
lin philological_A = compoundA (mkA "philological");
lin philologist_N = mkN "philologist" "philologists";
lin philology_N = mkN "philology" ;
lin philosopher_N = mkN "philosopher" "philosophers";
lin philosophic_A = compoundA (mkA "philosophic");
lin philosophical_A = compoundA (mkA "philosophical");
lin philosophize_V = mkV "philosophize" "philosophizes" "philosophized" "philosophized" "philosophizing";
lin philosophy_N = mkN "philosophy" "philosophies";
lin philtre_N = mkN "philtre" "philtres";
lin phlebitis_N = mkN "phlebitis" ;
lin phlegm_N = mkN "phlegm" ;
lin phlegmatic_A = compoundA (mkA "phlegmatic");
lin phlegmatically_Adv = mkAdv "phlegmatically";
lin phlox_N = mkN "phlox" ;
lin phnom_penh_PN = mkPN "Phnom - penh";
lin phobia_N = mkN "phobia" "phobias";
lin phoebe_PN = mkPN "Phoebe";
lin phoenix_N = mkN "phoenix" "phoenixes";
lin phoenix_PN = mkPN "Phoenix";
lin phone_N = mkN "phone" "phones";
lin phone_V = mkV "phone" "phones" "phoned" "phoned" "phoning";
lin phone_V2 = mkV2 (mkV "phone" "phones" "phoned" "phoned" "phoning");
lin phone_in_N = mkN "phone - in" "phone - ins";
lin phonebooth_N = mkN "phonebooth" "phonebooths";
lin phonecall_N = mkN "phonecall" "phonecalls";
lin phoneme_N = mkN "phoneme" "phonemes";
lin phonemic_A = compoundA (mkA "phonemic");
lin phonemics_N = mkN "phonemics" "phonemics";
lin phonetic_A = compoundA (mkA "phonetic");
lin phonetically_Adv = mkAdv "phonetically";
lin phonetician_N = mkN "phonetician" "phoneticians";
lin phonetics_N = mkN "phonetics" "phonetics";
lin phoney_A = compoundA (mkA "phoney");
lin phoney_N = mkN "phoney" "phoneys";
lin phonic_A = compoundA (mkA "phonic");
lin phonics_N = mkN "phonics" "phonics";
lin phonograph_N = mkN "phonograph" "phonographs";
lin phonological_A = compoundA (mkA "phonological");
lin phonology_N = mkN "phonology" ;
lin phony_A = compoundA (mkA "phony");
lin phony_N = mkN "phony" "phonies";
lin phosgene_N = mkN "phosgene" ;
lin phosphate_N = mkN "phosphate" "phosphates";
lin phosphorescence_N = mkN "phosphorescence" ;
lin phosphorescent_A = compoundA (mkA "phosphorescent");
lin phosphoric_A = compoundA (mkA "phosphoric");
lin phosphorous_A = compoundA (mkA "phosphorous");
lin phosphorus_N = mkN "phosphorus" ;
lin photo_N = mkN "photo" "photos";
lin photocopier_N = mkN "photocopier" "photocopiers";
lin photocopy_N = mkN "photocopy" "photocopies";
lin photocopy_V2 = mkV2 (mkV "photocopy" "photocopies" "photocopied" "photocopied" "photocopying");
lin photoelectric_A = compoundA (mkA "photoelectric");
lin photoflash_N = mkN "photoflash" "photoflashes";
lin photogenic_A = compoundA (mkA "photogenic");
lin photograph_N = mkN "photograph" "photographs";
lin photograph_V2 = mkV2 (mkV "photograph" "photographs" "photographed" "photographed" "photographing");
lin photographer_N = mkN "photographer" "photographers";
lin photographic_A = compoundA (mkA "photographic");
lin photographically_Adv = mkAdv "photographically";
lin photography_N = mkN "photography" ;
lin photogravure_N = mkN "photogravure" "photogravures";
lin photolithography_N = mkN "photolithography" ;
lin photometer_N = mkN "photometer" "photometers";
lin photon_N = mkN "photon" "photons";
lin photosensitize_V2 = mkV2 (mkV "photosensitize" "photosensitizes" "photosensitized" "photosensitized" "photosensitizing");
lin photostat_N = mkN "photostat" "photostats";
lin photostat_V2 = mkV2 (mkV "photostat" "photostats" "photostatted" "photostatted" "photostatting");
lin photosynthesis_N = mkN "photosynthesis" ;
lin phrasal_A = compoundA (mkA "phrasal");
lin phrase_N = mkN "phrase" "phrases";
lin phrase_V2 = mkV2 (mkV "phrase" "phrases" "phrased" "phrased" "phrasing");
lin phrase_book_N = mkN "phrase - book" "phrase - books";
lin phraseology_N = mkN "phraseology" ;
lin phrenetic_A = compoundA (mkA "phrenetic");
lin phrenologist_N = mkN "phrenologist" "phrenologists";
lin phrenology_N = mkN "phrenology" ;
lin phthisis_N = mkN "phthisis" ;
lin phut_Adv = mkAdv "phut";
lin phyllis_PN = mkPN "Phyllis";
lin phylum_N = mkN "phylum" "phylums";
lin physic_N = mkN "physic" "physics";
lin physical_A = compoundA (mkA "physical");
lin physician_N = mkN "physician" "physicians";
lin physicist_N = mkN "physicist" "physicists";
lin physics_N = mkN "physics" "physics";
lin physiognomy_N = mkN "physiognomy" "physiognomies";
lin physiological_A = compoundA (mkA "physiological");
lin physiologist_N = mkN "physiologist" "physiologists";
lin physiology_N = mkN "physiology" ;
lin physiotherapist_N = mkN "physiotherapist" "physiotherapists";
lin physiotherapy_N = mkN "physiotherapy" ;
lin physique_N = mkN "physique" "physiques";
lin pi_N = mkN "pi" "pis";
lin piacenza_PN = mkPN "Piacenza";
lin pianissimo_A = compoundA (mkA "pianissimo");
lin pianissimo_Adv = mkAdv "pianissimo";
lin pianist_N = mkN "pianist" "pianists";
lin piano_A = compoundA (mkA "piano");
lin piano_Adv = mkAdv "piano";
lin piano_N = mkN "piano" "pianos";
lin pianoforte_N = mkN "pianoforte" "pianofortes";
lin pianola_N = mkN "pianola" "pianolas";
lin piastre_N = mkN "piastre" "piastres";
lin piazza_N = mkN "piazza" "piazzas";
lin pibroch_N = mkN "pibroch" "pibrochs";
lin pica_N = mkN "pica" "pica";
lin picador_N = mkN "picador" "picadors";
lin picaresque_A = compoundA (mkA "picaresque");
lin piccalilli_N = mkN "piccalilli" ;
lin piccaninny_N = mkN "piccaninny" "piccaninnies";
lin piccolo_N = mkN "piccolo" "piccolos";
lin pick_N = mkN "pick" "picks";
lin pick_V = mkV "pick" "picks" "picked" "picked" "picking";
lin pick_V2 = mkV2 (mkV "pick" "picks" "picked" "picked" "picking");
lin pick_me_up_N = mkN "pick - me - up" "pick - me - ups";
lin pick_up_N = mkN "pick - up" "pick - ups";
lin pickaback_Adv = mkAdv "pickaback";
lin pickaxe_N = mkN "pickaxe" "pickaxes";
lin picker_N = mkN "picker" "pickers";
lin pickerel_N = mkN "pickerel" "pickerel";
lin picket_N = mkN "picket" "pickets";
lin picket_V = mkV "picket" "pickets" "picketed" "picketed" "picketing";
lin picket_V2 = mkV2 (mkV "picket" "pickets" "picketed" "picketed" "picketing");
lin picking_N = mkN "picking" "pickings";
lin pickle_N = mkN "pickle" "pickles";
lin pickle_V2 = mkV2 (mkV "pickle" "pickles" "pickled" "pickled" "pickling");
lin pickpocket_N = mkN "pickpocket" "pickpockets";
lin picnic_N = mkN "picnic" "picnics";
lin picnic_V = mkV "picnic" "picnics" "picnicked" "picnicked" "picnicking";
lin picnicker_N = mkN "picnicker" "picnickers";
lin picric_A = compoundA (mkA "picric");
lin pictorial_A = compoundA (mkA "pictorial");
lin pictorial_N = mkN "pictorial" "pictorials";
lin picture_N = mkN "picture" "pictures";
lin picture_V2 = mkV2 (mkV "picture" "pictures" "pictured" "pictured" "picturing");
lin picture_book_N = mkN "picture - book" "picture - books";
lin picture_card_N = mkN "picture - card" "picture - cards";
lin picture_gallery_N = mkN "picture - gallery" "picture - galleries";
lin picturesque_A = compoundA (mkA "picturesque");
lin picturesqueness_N = mkN "picturesqueness" ;
lin piddle_N = mkN "piddle" "piddles";
lin piddle_V = mkV "piddle" "piddles" "piddled" "piddled" "piddling";
lin piddling_A = compoundA (mkA "piddling");
lin pidgin_N = mkN "pidgin" "pidgins";
lin pie_N = mkN "pie" "pies";
lin pie_crust_N = mkN "pie - crust" ;
lin piebald_A = compoundA (mkA "piebald");
lin piece_N = mkN "piece" "pieces";
lin piece_V2 = mkV2 (mkV "piece" "pieces" "pieced" "pieced" "piecing");
lin piecemeal_A = compoundA (mkA "piecemeal");
lin piecemeal_Adv = mkAdv "piecemeal";
lin piecework_N = mkN "piecework" ;
lin pied_A = compoundA (mkA "pied");
lin pied_a_terre_N = mkN "pied - à - terre" "pied - à - terres";
lin pier_N = mkN "pier" "piers";
lin pier_glass_N = mkN "pier - glass" "pier - glasses";
lin pierce_V = mkV "pierce" "pierces" "pierced" "pierced" "piercing";
lin pierce_V2 = mkV2 (mkV "pierce" "pierces" "pierced" "pierced" "piercing");
lin piercing_A = compoundA (mkA "piercing");
lin pierrot_N = mkN "pierrot" "pierrots";
lin pieta_N = mkN "pietà" "pietàs";
lin piety_N = mkN "piety" "pieties";
lin piffle_N = mkN "piffle" ;
lin piffle_V = mkV "piffle" "piffles" "piffled" "piffled" "piffling";
lin piffling_A = compoundA (mkA "piffling");
lin pig_N = mkN "pig" "pigs";
lin pig_V = mkV "pig" "pigs" "pigged" "pigged" "pigging";
lin pig_headed_A = compoundA (mkA "pig - headed");
lin pig_headedness_N = mkN "pig - headedness" ;
lin pig_iron_N = mkN "pig - iron" ;
lin pig_sticking_N = mkN "pig - sticking" ;
lin pigboat_N = mkN "pigboat" "pigboats";
lin pigeon_N = mkN "pigeon" "pigeons";
lin pigeon_breasted_A = compoundA (mkA "pigeon - breasted");
lin pigeon_toed_A = compoundA (mkA "pigeon - toed");
lin pigeonhole_N = mkN "pigeonhole" "pigeonholes";
lin pigeonhole_V2 = mkV2 (mkV "pigeonhole" "pigeonholes" "pigeonholed" "pigeonholed" "pigeonholing");
lin piggery_N = mkN "piggery" "piggeries";
lin piggish_A = compoundA (mkA "piggish");
lin piggishness_N = mkN "piggishness" ;
lin piggy_A = mkA "piggy" "piggier";
lin piggy_N = mkN "piggy" "piggies";
lin piggyback_N = mkN "piggyback" "piggybacks";
lin piggyback_V = mkV "piggyback";
lin piglet_N = mkN "piglet" "piglets";
lin pigment_N = mkN "pigment" "pigments";
lin pigmentation_N = mkN "pigmentation" "pigmentations";
lin pigmy_N = mkN "pigmy" "pigmies";
lin pigskin_N = mkN "pigskin" ;
lin pigsty_N = mkN "pigsty" "pigsties";
lin pigswill_N = mkN "pigswill" ;
lin pigtail_N = mkN "pigtail" "pigtails";
lin pigwash_N = mkN "pigwash" ;
lin pike_N = mkN "pike" "pike";
lin pikestaff_N = mkN "pikestaff" "pikestaffs";
lin pilaf_N = mkN "pilaf" ;
lin pilaff_N = mkN "pilaff" ;
lin pilaster_N = mkN "pilaster" "pilasters";
lin pilau_N = mkN "pilau" ;
lin pilchard_N = mkN "pilchard" "pilchards";
lin pile_N = mkN "pile" "piles";
lin pile_V = mkV "pile" "piles" "piled" "piled" "piling";
lin pile_V2 = mkV2 (mkV "pile" "piles" "piled" "piled" "piling");
lin pile_driver_N = mkN "pile - driver" "pile - drivers";
lin pile_dwelling_N = mkN "pile - dwelling" "pile - dwellings";
lin pile_up_N = mkN "pile - up" "pile - ups";
lin piles_N = mkN "piles" "piles";
lin pilfer_V = mkV "pilfer" "pilfers" "pilfered" "pilfered" "pilfering";
lin pilfer_V2 = mkV2 (mkV "pilfer" "pilfers" "pilfered" "pilfered" "pilfering");
lin pilferage_N = mkN "pilferage" ;
lin pilferer_N = mkN "pilferer" "pilferers";
lin pilgrim_N = mkN "pilgrim" "pilgrims";
lin pilgrimage_N = mkN "pilgrimage" "pilgrimages";
lin pill_N = mkN "pill" "pills";
lin pill_PN = mkPN "Pill";
lin pillage_N = mkN "pillage" "pillages";
lin pillage_V2 = mkV2 (mkV "pillage" "pillages" "pillaged" "pillaged" "pillaging");
lin pillager_N = mkN "pillager" "pillagers";
lin pillar_N = mkN "pillar" "pillars";
lin pillar_box_N = mkN "pillar - box" "pillar - boxes";
lin pillared_A = compoundA (mkA "pillared");
lin pillbox_N = mkN "pillbox" "pillboxes";
lin pillion_N = mkN "pillion" "pillions";
lin pillory_N = mkN "pillory" "pillories";
lin pillory_V2 = mkV2 (mkV "pillory");
lin pillow_N = mkN "pillow" "pillows";
lin pillow_V2 = mkV2 (mkV "pillow" "pillows" "pillowed" "pillowed" "pillowing");
lin pillow_fight_N = mkN "pillow - fight" "pillow - fights";
lin pillowcase_N = mkN "pillowcase" "pillowcases";
lin pillowslip_N = mkN "pillowslip" "pillowslips";
lin pilot_N = mkN "pilot" "pilots";
lin pilot_V2 = mkV2 (mkV "pilot" "pilots" "piloted" "piloted" "piloting");
lin pilot_boat_N = mkN "pilot - boat" "pilot - boats";
lin pilot_burner_N = mkN "pilot - burner" "pilot - burners";
lin pilot_cloth_N = mkN "pilot - cloth" ;
lin pilot_engine_N = mkN "pilot - engine" "pilot - engines";
lin pilot_fish_N = mkN "pilot - fish" "pilot - fish";
lin pilot_light_N = mkN "pilot - light" "pilot - lights";
lin pimento_N = mkN "pimento" "pimentos";
lin pimp_N = mkN "pimp" "pimps";
lin pimp_V = mkV "pimp" "pimps" "pimped" "pimped" "pimping";
lin pimpernel_N = mkN "pimpernel" "pimpernels";
lin pimple_N = mkN "pimple" "pimples";
lin pimpled_A = compoundA (mkA "pimpled");
lin pimply_A = mkA "pimply" "pimplier";
lin pin_N = mkN "pin" "pins";
lin pin_V2 = mkV2 (mkV "pin" "pins" "pinned" "pinned" "pinning");
lin pin_money_N = mkN "pin - money" ;
lin pin_point_V2 = mkV2 (mkV "pin - point");
lin pin_table_N = mkN "pin - table" "pin - tables";
lin pin_up_N = mkN "pin - up" "pin - ups";
lin pinafore_N = mkN "pinafore" "pinafores";
lin pinball_N = mkN "pinball" ;
lin pince_nez_N = mkN "pince - nez" "pince - nez";
lin pincer_N = mkN "pincer" "pincers";
lin pinch_N = mkN "pinch" "pinches";
lin pinch_V = mkV "pinch" "pinches" "pinched" "pinched" "pinching";
lin pinch_V2 = mkV2 (mkV "pinch" "pinches" "pinched" "pinched" "pinching");
lin pinchbeck_A = compoundA (mkA "pinchbeck");
lin pinchbeck_N = mkN "pinchbeck" "pinchbecks";
lin pincushion_N = mkN "pincushion" "pincushions";
lin pine_N = mkN "pine" "pines";
lin pine_V = mkV "pine" "pines" "pined" "pined" "pining";
lin pineal_A = compoundA (mkA "pineal");
lin pineapple_N = mkN "pineapple" "pineapples";
lin ping_N = mkN "ping" "pings";
lin ping_V = mkV "ping" "pings" "pinged" "pinged" "pinging";
lin pingpong_N = mkN "pingpong" ;
lin pinhead_N = mkN "pinhead" "pinheads";
lin pinion_N = mkN "pinion" "pinions";
lin pinion_V2 = mkV2 (mkV "pinion" "pinions" "pinioned" "pinioned" "pinioning");
lin pink_A = mkA "pink" "pinker";
lin pink_N = mkN "pink" "pinks";
lin pink_V = mkV "pink" "pinks" "pinked" "pinked" "pinking";
lin pink_V2 = mkV2 (mkV "pink" "pinks" "pinked" "pinked" "pinking");
lin pinkish_A = compoundA (mkA "pinkish");
lin pinnace_N = mkN "pinnace" "pinnaces";
lin pinnacle_N = mkN "pinnacle" "pinnacles";
lin pinnacle_V2 = mkV2 (mkV "pinnacle" "pinnacles" "pinnacled" "pinnacled" "pinnacling");
lin pinnate_A = compoundA (mkA "pinnate");
lin pinny_N = mkN "pinny" "pinnies";
lin pinpoint_N = mkN "pinpoint" "pinpoints";
lin pinpoint_V2 = mkV2 (mkV "pinpoint" "pinpoints" "pinpointed" "pinpointed" "pinpointing");
lin pinprick_N = mkN "pinprick" "pinpricks";
lin pinstripe_A = compoundA (mkA "pinstripe");
lin pint_N = mkN "pint" "pints";
lin pioneer_N = mkN "pioneer" "pioneers";
lin pioneer_V = mkV "pioneer" "pioneers" "pioneered" "pioneered" "pioneering";
lin pioneer_V2 = mkV2 (mkV "pioneer" "pioneers" "pioneered" "pioneered" "pioneering");
lin pious_A = compoundA (mkA "pious");
lin pip_N = mkN "pip" "pips";
lin pip_V2 = mkV2 (mkV "pip" "pips" "pipped" "pipped" "pipping");
lin pipal_N = mkN "pipal" "pipals";
lin pipe_N = mkN "pipe" "pipes";
lin pipe_V = mkV "pipe" "pipes" "piped" "piped" "piping";
lin pipe_V2 = mkV2 (mkV "pipe" "pipes" "piped" "piped" "piping");
lin pipe_organ_N = mkN "pipe - organ" "pipe - organs";
lin pipe_rack_N = mkN "pipe - rack" "pipe - racks";
lin pipeclay_N = mkN "pipeclay" ;
lin pipedream_N = mkN "pipedream" "pipedreams";
lin pipeful_N = mkN "pipeful" "pipefuls";
lin pipeline_N = mkN "pipeline" "pipelines";
lin piper_N = mkN "piper" "pipers";
lin pipette_N = mkN "pipette" "pipettes";
lin pipework_N = mkN "pipework" ;
lin piping_A = compoundA (mkA "piping");
lin piping_Adv = mkAdv "piping";
lin piping_N = mkN "piping" ;
lin pippin_N = mkN "pippin" "pippins";
lin pipsqueak_N = mkN "pipsqueak" "pipsqueaks";
lin piquancy_N = mkN "piquancy" ;
lin piquant_A = compoundA (mkA "piquant");
lin pique_N = mkN "pique" "piques";
lin pique_V2 = mkV2 (mkV "pique" "piques" "piqued" "piqued" "piquing");
lin piquet_N = mkN "piquet" ;
lin piracy_N = mkN "piracy" "piracies";
lin piraeus_PN = mkPN "Piraeus";
lin piranha_N = mkN "piranha" "piranhas";
lin pirate_N = mkN "pirate" "pirates";
lin pirate_V2 = mkV2 (mkV "pirate" "pirates" "pirated" "pirated" "pirating");
lin piratical_A = compoundA (mkA "piratical");
lin pirouette_N = mkN "pirouette" "pirouettes";
lin pirouette_V = mkV "pirouette" "pirouettes" "pirouetted" "pirouetted" "pirouetting";
lin pis_aller_N = mkN "pis aller" "IRREG";
lin pisa_PN = mkPN "Pisa";
lin piscatorial_A = compoundA (mkA "piscatorial");
lin pisces_PN = mkPN "Pisces";
lin piss_N = mkN "piss" "pisses";
lin piss_V = mkV "piss" "pisses" "pissed" "pissed" "pissing";
lin piss_V2 = mkV2 (mkV "piss" "pisses" "pissed" "pissed" "pissing");
lin pissed_A = compoundA (mkA "pissed");
lin pistachio_N = mkN "pistachio" "pistachios";
lin pistil_N = mkN "pistil" "pistils";
lin pistol_N = mkN "pistol" "pistols";
lin piston_N = mkN "piston" "pistons";
lin pit_N = mkN "pit" "pits";
lin pit_V2 = mkV2 (mkV "pit" "pits" "pitted" "pitted" "pitting");
lin pit_a_pat_Adv = mkAdv "pit - a - pat";
lin pit_prop_N = mkN "pit - prop" "pit - props";
lin pitch_N = mkN "pitch" "pitches";
lin pitch_V = mkV "pitch" "pitches" "pitched" "pitched" "pitching";
lin pitch_V2 = mkV2 (mkV "pitch" "pitches" "pitched" "pitched" "pitching");
lin pitch_black_A = compoundA (mkA "pitch - black");
lin pitch_dark_A = compoundA (mkA "pitch - dark");
lin pitchblende_N = mkN "pitchblende" ;
lin pitcher_N = mkN "pitcher" "pitchers";
lin pitchfork_N = mkN "pitchfork" "pitchforks";
lin pitchfork_V2 = mkV2 (mkV "pitchfork" "pitchforks" "pitchforked" "pitchforked" "pitchforking");
lin piteous_A = compoundA (mkA "piteous");
lin pitfall_N = mkN "pitfall" "pitfalls";
lin pith_N = mkN "pith" ;
lin pithead_N = mkN "pithead" "pitheads";
lin pithily_Adv = mkAdv "pithily";
lin pithy_A = mkA "pithy" "pithier";
lin pitiable_A = compoundA (mkA "pitiable");
lin pitiful_A = compoundA (mkA "pitiful");
lin pitiless_A = compoundA (mkA "pitiless");
lin pitman_N = mkN "pitman" "pitmen" {- FIXME: guessed plural form -};
lin piton_N = mkN "piton" "pitons";
lin pitsaw_N = mkN "pitsaw" "pitsaws";
lin pittance_N = mkN "pittance" "pittances";
lin pitter_patter_N = mkN "pitter - patter" ;
lin pittsburgh_PN = mkPN "Pittsburgh";
lin pituitary_A = compoundA (mkA "pituitary");
lin pituitary_N = mkN "pituitary" "pituitaries";
lin pity_N = mkN "pity" "pities";
lin pity_V2 = mkV2 (mkV "pity" "pities" "pitied" "pitied" "pitying");
lin pitying_A = compoundA (mkA "pitying");
lin pivot_N = mkN "pivot" "pivots";
lin pivot_V = mkV "pivot" "pivots" "pivoted" "pivoted" "pivoting";
lin pivot_V2 = mkV2 (mkV "pivot" "pivots" "pivoted" "pivoted" "pivoting");
lin pivotal_A = compoundA (mkA "pivotal");
lin pixie_N = mkN "pixie" "pixies";
lin pixilated_A = compoundA (mkA "pixilated");
lin pixy_N = mkN "pixy" "pixies";
lin pizza_N = mkN "pizza" "pizzas";
lin pizzicato_A = compoundA (mkA "pizzicato");
lin pizzicato_Adv = mkAdv "pizzicato";
lin placard_N = mkN "placard" "placards";
lin placard_V2 = mkV2 (mkV "placard" "placards" "placarded" "placarded" "placarding");
lin placate_V2 = mkV2 (mkV "placate" "placates" "placated" "placated" "placating");
lin placatingly_Adv = mkAdv "placatingly";
lin place_N = mkN "place" "places";
lin place_V2 = mkV2 (mkV "place" "places" "placed" "placed" "placing");
lin place_bet_N = mkN "place - bet" "place - bets";
lin place_name_N = mkN "place - name" "place - names";
lin placebo_N = mkN "placebo" "placebos";
lin placeman_N = mkN "placeman" "placemen" {- FIXME: guessed plural form -};
lin placement_N = mkN "placement" "placements";
lin placenta_N = mkN "placenta" "placentas";
lin placeseeker_N = mkN "placeseeker" "placeseekers";
lin placid_A = compoundA (mkA "placid");
lin placidity_N = mkN "placidity" ;
lin placing_N = mkN "placing" "placings";
lin placket_N = mkN "placket" "plackets";
lin plage_N = mkN "plage" "IRREG";
lin plagiarism_N = mkN "plagiarism" "plagiarisms";
lin plagiarist_N = mkN "plagiarist" "plagiarists";
lin plagiarize_V2 = mkV2 (mkV "plagiarize" "plagiarizes" "plagiarized" "plagiarized" "plagiarizing");
lin plague_N = mkN "plague" "plagues";
lin plague_V2 = mkV2 (mkV "plague" "plagues" "plagued" "plagued" "plaguing");
lin plague_spot_N = mkN "plague - spot" "plague - spots";
lin plaguy_A = compoundA (mkA "plaguy");
lin plaice_N = mkN "plaice" "plaice";
lin plaid_N = mkN "plaid" "plaids";
lin plain_A = mkA "plain" "plainer";
lin plain_Adv = mkAdv "plain";
lin plain_N = mkN "plain" "plains";
lin plain_V = mkV "plain" "plains" "plained" "plained" "plaining";
lin plain_V2 = mkV2 (mkV "plain" "plains" "plained" "plained" "plaining");
lin plain_spoken_A = compoundA (mkA "plain - spoken");
lin plainness_N = mkN "plainness" ;
lin plainsman_N = mkN "plainsman" "plainsmen" {- FIXME: guessed plural form -};
lin plaint_N = mkN "plaint" "plaints";
lin plaintiff_N = mkN "plaintiff" "plaintiffs";
lin plaintive_A = compoundA (mkA "plaintive");
lin plaintiveness_N = mkN "plaintiveness" ;
lin plait_N = mkN "plait" "plaits";
lin plait_V2 = mkV2 (mkV "plait" "plaits" "plaited" "plaited" "plaiting");
lin plan_N = mkN "plan" "plans";
lin plan_V = mkV "plan";
lin plan_V2 = mkV2 (mkV "plan");
lin plan_V2V = mkV2V (mkV "plan") noPrep to_Prep ;
lin plan_VS = mkVS (mkV "plan");
lin plan_VV = mkVV (mkV "plan");
lin planchette_N = mkN "planchette" "planchettes";
lin plane_N = mkN "plane" "planes";
lin plane_V = mkV "plane" "planes" "planed" "planed" "planing";
lin plane_V2 = mkV2 (mkV "plane" "planes" "planed" "planed" "planing");
lin plane_tree_N = mkN "plane - tree" "plane - trees";
lin planet_N = mkN "planet" "planets";
lin planetarium_N = mkN "planetarium" "planetariums";
lin planetary_A = compoundA (mkA "planetary");
lin plangent_A = compoundA (mkA "plangent");
lin plank_N = mkN "plank" "planks";
lin plank_V2 = mkV2 (mkV "plank" "planks" "planked" "planked" "planking");
lin plank_bed_N = mkN "plank - bed" "plank - beds";
lin planking_N = mkN "planking" ;
lin plankton_N = mkN "plankton" ;
lin planless_A = compoundA (mkA "planless");
lin planner_N = mkN "planner" "planners";
lin plant_N = mkN "plant" "plants";
lin plant_V2 = mkV2 (mkV "plant" "plants" "planted" "planted" "planting");
lin plant_louse_N = mkN "plant - louse" "plant - lice";
lin plantain_N = mkN "plantain" "plantains";
lin plantation_N = mkN "plantation" "plantations";
lin planter_N = mkN "planter" "planters";
lin plaque_N = mkN "plaque" "plaques";
lin plash_N = mkN "plash" "IRREG";
lin plash_V = mkV "plash" "plashes" "plashed" "plashed" "plashing";
lin plash_V2 = mkV2 (mkV "plash" "plashes" "plashed" "plashed" "plashing");
lin plasm_N = mkN "plasm" ;
lin plasma_N = mkN "plasma" ;
lin plaster_N = mkN "plaster" "plasters";
lin plaster_V2 = mkV2 (mkV "plaster" "plasters" "plastered" "plastered" "plastering");
lin plasterboard_N = mkN "plasterboard" ;
lin plastered_A = compoundA (mkA "plastered");
lin plasterer_N = mkN "plasterer" "plasterers";
lin plastic_A = compoundA (mkA "plastic");
lin plastic_N = mkN "plastic" "plastics";
lin plastic_bomb_N = mkN "plastic - bomb" "plastic - bombs";
lin plasticine_N = mkN "plasticine" ;
lin plasticity_N = mkN "plasticity" ;
lin plastics_N = mkN "plastics" "plastics";
lin plate_N = mkN "plate" "plates";
lin plate_V2 = mkV2 (mkV "plate" "plates" "plated" "plated" "plating");
lin plate_glass_N = mkN "plate - glass" ;
lin plate_powder_N = mkN "plate - powder" ;
lin plate_rack_N = mkN "plate - rack" "plate - racks";
lin plateau_N = mkN "plateau" "plateaus";
lin plateful_N = mkN "plateful" "platefuls";
lin platelayer_N = mkN "platelayer" "platelayers";
lin platform_N = mkN "platform" "platforms";
lin plating_N = mkN "plating" ;
lin platinum_N = mkN "platinum" ;
lin platitude_N = mkN "platitude" "platitudes";
lin platitudinous_A = compoundA (mkA "platitudinous");
lin platonic_A = compoundA (mkA "platonic");
lin platoon_N = mkN "platoon" "platoons";
lin platter_N = mkN "platter" "platters";
lin platypus_N = mkN "platypus" "platypuses";
lin plaudit_N = mkN "plaudit" "plaudits";
lin plausibility_N = mkN "plausibility" "plausibilities";
lin plausible_A = compoundA (mkA "plausible");
lin play_N = mkN "play" "plays";
lin play_V = mkV "play" "plays" "played" "played" "playing";
lin play_V2 = mkV2 (mkV "play" "plays" "played" "played" "playing");
lin play_acting_N = mkN "play - acting" ;
lin play_actor_N = mkN "play - actor" "play - actors";
lin play_box_N = mkN "play - box" "play - boxes";
lin play_off_N = mkN "play - off" "play - offs";
lin play_reading_N = mkN "play - reading" "play - readings";
lin playback_N = mkN "playback" "playbacks";
lin playbill_N = mkN "playbill" "playbills";
lin playboy_N = mkN "playboy" "playboys";
lin player_N = mkN "player" "players";
lin player_piano_N = mkN "player - piano" "player - pianos";
lin playfellow_N = mkN "playfellow" "playfellows";
lin playful_A = compoundA (mkA "playful");
lin playfulness_N = mkN "playfulness" ;
lin playgoer_N = mkN "playgoer" "playgoers";
lin playground_N = mkN "playground" "playgrounds";
lin playgroup_N = mkN "playgroup" "playgroups";
lin playhouse_N = mkN "playhouse" "playhouses";
lin playing_N = mkN "playing" "playings";
lin playing_card_N = mkN "playing - card" "playing - cards";
lin playing_field_N = mkN "playing - field" "playing - fields";
lin playlet_N = mkN "playlet" "playlets";
lin playmate_N = mkN "playmate" "playmates";
lin playpen_N = mkN "playpen" "playpens";
lin playroom_N = mkN "playroom" "playrooms";
lin playschool_N = mkN "playschool" "playschools";
lin playsuit_N = mkN "playsuit" "playsuits";
lin plaything_N = mkN "plaything" "playthings";
lin playtime_N = mkN "playtime" "playtimes";
lin playwright_N = mkN "playwright" "playwrights";
lin plaza_N = mkN "plaza" "plazas";
lin plc_PN = mkPN "Plc";
lin plea_N = mkN "plea" "pleas";
lin pleach_V2 = mkV2 (mkV "pleach" "pleaches" "pleached" "pleached" "pleaching");
lin plead_V = mkV "plead" "pleads" "pleaded" "pleaded" "pleading";
lin plead_V2 = mkV2 (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin plead_VA = mkVA (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin plead_VS = mkVS (mkV "plead" "pleads" "pleaded" "pleaded" "pleading");
lin pleadingly_Adv = mkAdv "pleadingly";
lin pleasance_N = mkN "pleasance" "pleasances";
lin pleasant_A = mkA "pleasant" "pleasanter";
lin pleasantness_N = mkN "pleasantness" ;
lin pleasantry_N = mkN "pleasantry" "pleasantries";
lin please_V = mkV "please" "pleases" "pleased" "pleased" "pleasing";
lin please_V2 = mkV2 (mkV "please" "pleases" "pleased" "pleased" "pleasing");
lin pleased_A = compoundA (mkA "pleased");
lin pleasing_A = compoundA (mkA "pleasing");
lin pleasurable_A = compoundA (mkA "pleasurable");
lin pleasure_N = mkN "pleasure" "pleasures";
lin pleasure_boat_N = mkN "pleasure - boat" "pleasure - boats";
lin pleasure_craft_N = mkN "pleasure - craft" "pleasure - crafts";
lin pleasure_ground_N = mkN "pleasure - ground" "pleasure - grounds";
lin pleat_N = mkN "pleat" "pleats";
lin pleat_V2 = mkV2 (mkV "pleat" "pleats" "pleated" "pleated" "pleating");
lin pleb_N = mkN "pleb" "plebs";
lin plebeian_A = compoundA (mkA "plebeian");
lin plebeian_N = mkN "plebeian" "plebeians";
lin plebiscite_N = mkN "plebiscite" "plebiscites";
lin plectrum_N = mkN "plectrum" "plectrums";
lin pledge_N = mkN "pledge" "pledges";
lin pledge_V2 = mkV2 (mkV "pledge" "pledges" "pledged" "pledged" "pledging");
lin pledge_V2V = mkV2V (mkV "pledge") noPrep to_Prep ;
lin pledge_VS = mkVS (mkV "pledge");
lin plenary_A = compoundA (mkA "plenary");
lin plenipotentiary_N = mkN "plenipotentiary" "plenipotentiaries";
lin plenitude_N = mkN "plenitude" "IRREG";
lin plenteous_A = compoundA (mkA "plenteous");
lin plentiful_A = compoundA (mkA "plentiful");
lin plenty_Adv = mkAdv "plenty";
lin plenty_N = mkN "plenty" ;
lin pleonasm_N = mkN "pleonasm" "pleonasms";
lin plethora_N = mkN "plethora" "plethoras";
lin pleurisy_N = mkN "pleurisy" ;
lin plexus_N = mkN "plexus" "plexus";
lin pliability_N = mkN "pliability" ;
lin pliable_A = compoundA (mkA "pliable");
lin pliancy_N = mkN "pliancy" ;
lin pliant_A = compoundA (mkA "pliant");
lin plight_N = mkN "plight" "plights";
lin plight_V2 = mkV2 (mkV "plight" "plights" "plighted" "plighted" "plighting");
lin plimsoll_N = mkN "plimsoll" "plimsolls";
lin plinth_N = mkN "plinth" "plinths";
lin plod_V = mkV "plod" "plods" "plodded" "plodded" "plodding";
lin plod_V2 = mkV2 (mkV "plod" "plods" "plodded" "plodded" "plodding");
lin plodder_N = mkN "plodder" "plodders";
lin plodding_A = compoundA (mkA "plodding");
lin plonk_Adv = mkAdv "plonk";
lin plonk_N = mkN "plonk" "plonks";
lin plonk_V = mkV "plonk" "plonks" "plonked" "plonked" "plonking";
lin plop_Adv = mkAdv "plop";
lin plop_N = mkN "plop" "plops";
lin plop_V = mkV "plop" "plops" "plopped" "plopped" "plopping";
lin plosive_A = compoundA (mkA "plosive");
lin plosive_N = mkN "plosive" "plosives";
lin plot_N = mkN "plot" "plots";
lin plot_V = mkV "plot" "plots" "plotted" "plotted" "plotting";
lin plot_V2 = mkV2 (mkV "plot" "plots" "plotted" "plotted" "plotting");
lin plotter_N = mkN "plotter" "plotters";
lin plough_N = mkN "plough" "ploughs";
lin plough_V = mkV "plough" "ploughs" "ploughed" "ploughed" "ploughing";
lin plough_V2 = mkV2 (mkV "plough" "ploughs" "ploughed" "ploughed" "ploughing");
lin ploughboy_N = mkN "ploughboy" "ploughboys";
lin ploughman_N = mkN "ploughman" "ploughmen" {- FIXME: guessed plural form -};
lin ploughshare_N = mkN "ploughshare" "ploughshares";
lin plover_N = mkN "plover" "plovers";
lin plow_V = mkV "plow";
lin plow_V2 = mkV2 (mkV "plow");
lin ploy_N = mkN "ploy" "ploys";
lin pluck_N = mkN "pluck" "plucks";
lin pluck_V = mkV "pluck" "plucks" "plucked" "plucked" "plucking";
lin pluck_V2 = mkV2 (mkV "pluck" "plucks" "plucked" "plucked" "plucking");
lin pluckily_Adv = mkAdv "pluckily";
lin plucky_A = mkA "plucky" "pluckier";
lin plug_N = mkN "plug" "plugs";
lin plug_V = mkV "plug" "plugs" "plugged" "plugged" "plugging";
lin plug_V2 = mkV2 (mkV "plug" "plugs" "plugged" "plugged" "plugging");
lin plughole_N = mkN "plughole" "plugholes";
lin plum_N = mkN "plum" "plums";
lin plum_pudding_N = mkN "plum - pudding" "plum - puddings";
lin plumage_N = mkN "plumage" ;
lin plumb_Adv = mkAdv "plumb";
lin plumb_N = mkN "plumb" "plumbs";
lin plumb_V2 = mkV2 (mkV "plumb" "plumbs" "plumbed" "plumbed" "plumbing");
lin plumbago_N = mkN "plumbago" "plumbagos";
lin plumber_N = mkN "plumber" "plumbers";
lin plumbing_N = mkN "plumbing" ;
lin plume_N = mkN "plume" "plumes";
lin plume_V2 = mkV2 (mkV "plume" "plumes" "plumed" "plumed" "pluming");
lin plummet_N = mkN "plummet" "plummets";
lin plummet_V = mkV "plummet" "plummets" "plummeted" "plummeted" "plummeting";
lin plummet_V2 = mkV2 (mkV "plummet" "plummets" "plummeted" "plummeted" "plummeting");
lin plummy_A = mkA "plummy" "plummier";
lin plump_A = mkA "plump" "plumper";
lin plump_Adv = mkAdv "plump";
lin plump_N = mkN "plump" "plumps";
lin plump_V = mkV "plump" "plumps" "plumped" "plumped" "plumping";
lin plump_V2 = mkV2 (mkV "plump" "plumps" "plumped" "plumped" "plumping");
lin plunder_N = mkN "plunder" ;
lin plunder_V = mkV "plunder" "plunders" "plundered" "plundered" "plundering";
lin plunder_V2 = mkV2 (mkV "plunder" "plunders" "plundered" "plundered" "plundering");
lin plunderer_N = mkN "plunderer" "plunderers";
lin plunge_N = mkN "plunge" "plunges";
lin plunge_V = mkV "plunge" "plunges" "plunged" "plunged" "plunging";
lin plunge_V2 = mkV2 (mkV "plunge" "plunges" "plunged" "plunged" "plunging");
lin plunger_N = mkN "plunger" "plungers";
lin plunk_N = mkN "plunk" "plunks";
lin pluperfect_A = compoundA (mkA "pluperfect");
lin pluperfect_N = mkN "pluperfect" "pluperfects";
lin plural_A = compoundA (mkA "plural");
lin plural_N = mkN "plural" "plurals";
lin pluralism_N = mkN "pluralism" ;
lin pluralist_N = mkN "pluralist" "pluralists";
lin plurality_N = mkN "plurality" "pluralities";
lin plus_A = compoundA (mkA "plus");
lin plus_N = mkN "plus" "pluses";
lin plus_Prep = mkPrep "plus";
lin plush_A = mkA "plush" "plusher";
lin plush_N = mkN "plush" ;
lin plushy_A = mkA "plushy" "plushier";
lin pluto_PN = mkPN "Pluto";
lin plutocracy_N = mkN "plutocracy" "plutocracies";
lin plutocrat_N = mkN "plutocrat" "plutocrats";
lin plutocratic_A = compoundA (mkA "plutocratic");
lin plutonium_N = mkN "plutonium" ;
lin ply_N = mkN "ply" "ply";
lin ply_V = mkV "ply" "plies" "plied" "plied" "plying";
lin ply_V2 = mkV2 (mkV "ply" "plies" "plied" "plied" "plying");
lin ply_VS = mkVS (mkV "ply" "plies" "plied" "plied" "plying");
lin plymouth_PN = mkPN "Plymouth";
lin plywood_N = mkN "plywood" ;
lin pneumatic_A = compoundA (mkA "pneumatic");
lin pneumatically_Adv = mkAdv "pneumatically";
lin pneumonia_N = mkN "pneumonia" ;
lin po_N = mkN "po" ;
lin poach_V = mkV "poach" "poaches" "poached" "poached" "poaching";
lin poach_V2 = mkV2 (mkV "poach" "poaches" "poached" "poached" "poaching");
lin poacher_N = mkN "poacher" "poachers";
lin pock_N = mkN "pock" "pocks";
lin pocked_A = compoundA (mkA "pocked");
lin pocket_N = mkN "pocket" "pockets";
lin pocket_V2 = mkV2 (mkV "pocket" "pockets" "pocketed" "pocketed" "pocketing");
lin pocket_book_N = mkN "pocket - book" "pocket - books";
lin pocket_handkerchief_N = mkN "pocket - handkerchief" "pocket - handkerchiefs";
lin pocket_knife_N = mkN "pocket - knife" "pocket - knives";
lin pocket_money_N = mkN "pocket - money" ;
lin pocketful_N = mkN "pocketful" "pocketfuls";
lin pockmarked_A = compoundA (mkA "pockmarked");
lin pod_N = mkN "pod" "pods";
lin pod_V = mkV "pod" "pods" "podded" "podded" "podding";
lin pod_V2 = mkV2 (mkV "pod" "pods" "podded" "podded" "podding");
lin podgy_A = mkA "podgy" "podgier";
lin podiatry_N = mkN "podiatry" ;
lin podium_N = mkN "podium" "podiums";
lin poem_N = mkN "poem" "poems";
lin poesy_N = mkN "poesy" ;
lin poet_N = mkN "poet" "poets";
lin poetess_N = mkN "poetess" "poetesses";
lin poetic_A = compoundA (mkA "poetic");
lin poetical_A = compoundA (mkA "poetical");
lin poetry_N = mkN "poetry" ;
lin pogrom_N = mkN "pogrom" "pogroms";
lin poignancy_N = mkN "poignancy" ;
lin poignant_A = compoundA (mkA "poignant");
lin poinsettia_N = mkN "poinsettia" "poinsettias";
lin point_N = mkN "point" "points";
lin point_V = mkV "point" "points" "pointed" "pointed" "pointing";
lin point_V2 = mkV2 (mkV "point" "points" "pointed" "pointed" "pointing");
lin point_blank_A = compoundA (mkA "point - blank");
lin point_blank_Adv = mkAdv "point - blank";
lin point_duty_N = mkN "point - duty" ;
lin pointed_A = compoundA (mkA "pointed");
lin pointer_N = mkN "pointer" "pointers";
lin pointless_A = compoundA (mkA "pointless");
lin pointsman_N = mkN "pointsman" "pointsmen" {- FIXME: guessed plural form -};
lin poise_N = mkN "poise" ;
lin poise_V = mkV "poise" "poises" "poised" "poised" "poising";
lin poise_V2 = mkV2 (mkV "poise" "poises" "poised" "poised" "poising");
lin poison_N = mkN "poison" "poisons";
lin poison_V2 = mkV2 (mkV "poison" "poisons" "poisoned" "poisoned" "poisoning");
lin poison_gas_N = mkN "poison - gas" "poison - gases";
lin poison_ivy_N = mkN "poison - ivy" "poison - ivies";
lin poisoner_N = mkN "poisoner" "poisoners";
lin poisonous_A = compoundA (mkA "poisonous");
lin poke_N = mkN "poke" "pokes";
lin poke_V = mkV "poke" "pokes" "poked" "poked" "poking";
lin poke_V2 = mkV2 (mkV "poke" "pokes" "poked" "poked" "poking");
lin poke_bonnet_N = mkN "poke - bonnet" "poke - bonnets";
lin poker_N = mkN "poker" "pokers";
lin poker_face_N = mkN "poker - face" "poker - faces";
lin poky_A = mkA "poky" "pokier";
lin poland_PN = mkPN "Poland";
lin polar_A = compoundA (mkA "polar");
lin polaris_N = mkN "polaris" "polares" {- FIXME: guessed plural form -};
lin polarity_N = mkN "polarity" "polarities";
lin polarization_N = mkN "polarization" "polarizations";
lin polarize_V2 = mkV2 (mkV "polarize" "polarizes" "polarized" "polarized" "polarizing");
lin polaroid_N = mkN "polaroid" ;
lin pole_N = mkN "pole" "poles";
lin pole_jumping_N = mkN "pole - jumping" ;
lin pole_star_N = mkN "pole - star" "pole - stars";
lin pole_vault_N = mkN "pole - vault" "pole - vaults";
lin poleax_N = mkN "poleax" "poleaxes";
lin poleax_V2 = mkV2 (mkV "poleax" "poleaxes" "poleaxed" "poleaxed" "poleaxing");
lin poleaxe_N = mkN "poleaxe" "poleaxes";
lin poleaxe_V2 = mkV2 (mkV "poleaxe" "poleaxes" "poleaxed" "poleaxed" "poleaxing");
lin polecat_N = mkN "polecat" "polecats";
lin polemic_A = compoundA (mkA "polemic");
lin polemic_N = mkN "polemic" "polemics";
lin polemically_Adv = mkAdv "polemically";
lin police_V2 = mkV2 (mkV "police" "polices" "policed" "policed" "policing");
lin police_office_N = mkN "police - office" "police - offices";
lin police_officer_N = mkN "police - officer" "police - officers";
lin police_station_N = mkN "police - station" "police - stations";
lin policeman_N = mkN "policeman" "policemen" {- FIXME: guessed plural form -};
lin policewoman_N = mkN "policewoman" "policewomen" {- FIXME: guessed plural form -};
lin policy_N = mkN "policy" "policies";
lin polio_N = mkN "polio" ;
lin poliomyelitis_N = mkN "poliomyelitis" ;
lin polish_A = compoundA (mkA "polish");
lin polish_N = mkN "polish" ;
lin polish_V = mkV "polish" "polishes" "polished" "polished" "polishing";
lin polish_V2 = mkV2 (mkV "polish" "polishes" "polished" "polished" "polishing");
lin polisher_N = mkN "polisher" "polishers";
lin politburo_N = mkN "politburo" "politburos";
lin polite_A = mkA "polite" "politer";
lin politeness_N = mkN "politeness" ;
lin politic_A = compoundA (mkA "politic");
lin political_A = compoundA (mkA "political");
lin politician_N = mkN "politician" "politicians";
lin politicize_V = mkV "politicize" "politicizes" "politicized" "politicized" "politicizing";
lin politicize_V2 = mkV2 (mkV "politicize" "politicizes" "politicized" "politicized" "politicizing");
lin politick_V = mkV "politick" "politicks" "politicked" "politicked" "politicking";
lin politics_N = mkN "politics" "politics";
lin polity_N = mkN "polity" "polities";
lin polka_N = mkN "polka" "polkas";
lin poll_N = mkN "poll" "polls";
lin poll_V = mkV "poll" "polls" "polled" "polled" "polling";
lin poll_V2 = mkV2 (mkV "poll" "polls" "polled" "polled" "polling");
lin poll_tax_N = mkN "poll - tax" "poll - taxes";
lin pollard_N = mkN "pollard" "pollards";
lin pollard_V2 = mkV2 (mkV "pollard" "pollards" "pollarded" "pollarded" "pollarding");
lin pollen_N = mkN "pollen" ;
lin pollinate_V2 = mkV2 (mkV "pollinate" "pollinates" "pollinated" "pollinated" "pollinating");
lin pollination_N = mkN "pollination" ;
lin polling_booth_N = mkN "polling - booth" "polling - booths";
lin polling_day_N = mkN "polling - day" "polling - days";
lin polling_station_N = mkN "polling - station" "polling - stations";
lin pollster_N = mkN "pollster" "pollsters";
lin pollutant_N = mkN "pollutant" "pollutants";
lin pollute_V2 = mkV2 (mkV "pollute" "pollutes" "polluted" "polluted" "polluting");
lin pollution_N = mkN "pollution" ;
lin polly_PN = mkPN "Polly";
lin polo_N = mkN "polo" ;
lin polo_neck_A = compoundA (mkA "polo - neck");
lin polonaise_N = mkN "polonaise" "polonaises";
lin polony_N = mkN "polony" ;
lin poltergeist_N = mkN "poltergeist" "poltergeists";
lin poltroon_N = mkN "poltroon" "poltroons";
lin poltroonery_N = mkN "poltroonery" ;
lin poly_N = mkN "poly" "polys";
lin polyandrous_A = compoundA (mkA "polyandrous");
lin polyandry_N = mkN "polyandry" ;
lin polyanthus_N = mkN "polyanthus" "polyanthuses";
lin polygamist_N = mkN "polygamist" "polygamists";
lin polygamous_A = compoundA (mkA "polygamous");
lin polygamy_N = mkN "polygamy" ;
lin polyglot_A = compoundA (mkA "polyglot");
lin polyglot_N = mkN "polyglot" "polyglots";
lin polygon_N = mkN "polygon" "polygons";
lin polygonal_A = compoundA (mkA "polygonal");
lin polymorphic_A = compoundA (mkA "polymorphic");
lin polymorphous_A = compoundA (mkA "polymorphous");
lin polynomial_A = compoundA (mkA "polynomial");
lin polynomial_N = mkN "polynomial" "polynomials";
lin polyp_N = mkN "polyp" "polyps";
lin polyphonic_A = compoundA (mkA "polyphonic");
lin polyphony_N = mkN "polyphony" ;
lin polypus_N = mkN "polypus" "polypuses";
lin polysyllabic_A = compoundA (mkA "polysyllabic");
lin polysyllable_N = mkN "polysyllable" "polysyllables";
lin polytechnic_N = mkN "polytechnic" "polytechnics";
lin polytheism_N = mkN "polytheism" ;
lin polytheistic_A = compoundA (mkA "polytheistic");
lin polythene_N = mkN "polythene" ;
lin pom_N = mkN "pom" "poms";
lin pomade_N = mkN "pomade" ;
lin pomade_V2 = mkV2 (mkV "pomade" "pomades" "pomaded" "pomaded" "pomading");
lin pomegranate_N = mkN "pomegranate" "pomegranates";
lin pomelo_N = mkN "pomelo" "pomelos";
lin pommel_N = mkN "pommel" "pommels";
lin pommel_V2 = mkV2 (mkV "pommel" "pommels" "pommelled" "pommelled" "pommelling");
lin pommy_N = mkN "pommy" "pommies";
lin pomp_N = mkN "pomp" ;
lin pompon_N = mkN "pompon" "pompons";
lin pomposity_N = mkN "pomposity" "pomposities";
lin pompous_A = compoundA (mkA "pompous");
lin ponce_N = mkN "ponce" "ponces";
lin poncho_N = mkN "poncho" "ponchos";
lin pond_N = mkN "pond" "ponds";
lin ponder_V = mkV "ponder" "ponders" "pondered" "pondered" "pondering";
lin ponder_V2 = mkV2 (mkV "ponder" "ponders" "pondered" "pondered" "pondering");
lin ponder_VS = mkVS (mkV "ponder" "ponders" "pondered" "pondered" "pondering");
lin ponderable_A = compoundA (mkA "ponderable");
lin ponderous_A = compoundA (mkA "ponderous");
lin pone_N = mkN "pone" "pones";
lin pongee_N = mkN "pongee" ;
lin poniard_N = mkN "poniard" "poniards";
lin poniard_V2 = mkV2 (mkV "poniard" "poniards" "poniarded" "poniarded" "poniarding");
lin pont_llan_fraith_PN = mkPN "Pont - llan - fraith";
lin pontardawe_PN = mkPN "Pontardawe";
lin pontardulais_PN = mkPN "Pontardulais";
lin pontefract_PN = mkPN "Pontefract";
lin pontiff_N = mkN "pontiff" "pontiffs";
lin pontifical_A = compoundA (mkA "pontifical");
lin pontificate_N = mkN "pontificate" "pontificates";
lin pontificate_V = mkV "pontificate" "pontificates" "pontificated" "pontificated" "pontificating";
lin pontoon_N = mkN "pontoon" "pontoons";
lin pontycymmer_PN = mkPN "Pontycymmer";
lin pontypool_PN = mkPN "Pontypool";
lin pony_N = mkN "pony" "ponies";
lin pony_trekking_N = mkN "pony - trekking" ;
lin ponytail_N = mkN "ponytail" "ponytails";
lin poodle_N = mkN "poodle" "poodles";
lin poof_N = mkN "poof" "poofs";
lin pooh_pooh_V2 = mkV2 (mkV "pooh - pooh" "pooh - poohs" "pooh - poohed" "pooh - poohed" "pooh - poohing");
lin pool_N = mkN "pool" "pools";
lin pool_V2 = mkV2 (mkV "pool" "pools" "pooled" "pooled" "pooling");
lin poole_PN = mkPN "Poole";
lin poolroom_N = mkN "poolroom" "poolrooms";
lin poona_PN = mkPN "Poona";
lin poop_N = mkN "poop" "poops";
lin poor_A = mkA "poor" "poorer";
lin poor_box_N = mkN "poor - box" "poor - boxes";
lin poor_rate_N = mkN "poor - rate" "poor - rates";
lin poor_spirited_A = compoundA (mkA "poor - spirited");
lin poorhouse_N = mkN "poorhouse" "poorhouses";
lin poorly_A = compoundA (mkA "poorly");
lin poorness_N = mkN "poorness" ;
lin pop_A = compoundA (mkA "pop");
lin pop_Adv = mkAdv "pop";
lin pop_N = mkN "pop" "pops";
lin pop_V = mkV "pop" "pops" "popped" "popped" "popping";
lin pop_V2 = mkV2 (mkV "pop" "pops" "popped" "popped" "popping");
lin popcorn_N = mkN "popcorn" "popcorns";
lin pope_N = mkN "pope" "popes";
lin popery_N = mkN "popery" ;
lin popeyed_A = compoundA (mkA "popeyed");
lin popgun_N = mkN "popgun" "popguns";
lin popinjay_N = mkN "popinjay" "popinjays";
lin popish_A = compoundA (mkA "popish");
lin poplar_N = mkN "poplar" "poplars";
lin poplin_N = mkN "poplin" ;
lin poppa_N = mkN "poppa" "poppas";
lin poppet_N = mkN "poppet" "poppets";
lin poppy_N = mkN "poppy" "poppies";
lin poppycock_N = mkN "poppycock" ;
lin populace_N = mkN "populace" "populaces";
lin popular_A = compoundA (mkA "popular");
lin popularity_N = mkN "popularity" ;
lin popularization_N = mkN "popularization" "popularizations";
lin popularize_V2 = mkV2 (mkV "popularize" "popularizes" "popularized" "popularized" "popularizing");
lin populate_V2 = mkV2 (mkV "populate" "populates" "populated" "populated" "populating");
lin population_N = mkN "population" "populations";
lin populism_N = mkN "populism" ;
lin populist_N = mkN "populist" "populists";
lin populous_A = compoundA (mkA "populous");
lin porcelain_N = mkN "porcelain" ;
lin porch_N = mkN "porch" "porches";
lin porcine_A = compoundA (mkA "porcine");
lin porcupine_N = mkN "porcupine" "porcupines";
lin pore_N = mkN "pore" "pores";
lin pore_V = mkV "pore" "pores" "pored" "pored" "poring";
lin pork_N = mkN "pork" ;
lin pork_barrel_N = mkN "pork - barrel" "pork - barrels";
lin pork_butcher_N = mkN "pork - butcher" "pork - butchers";
lin porker_N = mkN "porker" "porkers";
lin porn_N = mkN "porn" ;
lin pornographer_N = mkN "pornographer" "pornographers";
lin pornographic_A = compoundA (mkA "pornographic");
lin pornography_N = mkN "pornography" ;
lin porosity_N = mkN "porosity" "porosities";
lin porous_A = compoundA (mkA "porous");
lin porousness_N = mkN "porousness" ;
lin porphyry_N = mkN "porphyry" ;
lin porpoise_N = mkN "porpoise" "porpoises";
lin porridge_N = mkN "porridge" ;
lin porringer_N = mkN "porringer" "porringers";
lin port_N = mkN "port" "ports";
lin port_V2 = mkV2 (mkV "port" "ports" "ported" "ported" "porting");
lin port_glasgow_PN = mkPN "Port glasgow";
lin port_talbot_PN = mkPN "Port talbot";
lin portability_N = mkN "portability" ;
lin portable_A = compoundA (mkA "portable");
lin portage_N = mkN "portage" "portages";
lin portal_N = mkN "portal" "portals";
lin portcullis_N = mkN "portcullis" "portcullises";
lin porte_cochere_N = mkN "porte - cochère" "porte - cochères";
lin portend_V2 = mkV2 (mkV "portend" "portends" "portended" "portended" "portending");
lin portent_N = mkN "portent" "portents";
lin portentous_A = compoundA (mkA "portentous");
lin porter_N = mkN "porter" "porters";
lin porterage_N = mkN "porterage" ;
lin porterhouse_N = mkN "porterhouse" "porterhouses";
lin portfolio_N = mkN "portfolio" "portfolios";
lin porthcawl_PN = mkPN "Porthcawl";
lin porthmadog_PN = mkPN "Porthmadog";
lin porthole_N = mkN "porthole" "portholes";
lin portico_N = mkN "portico" "porticos";
lin portiere_N = mkN "portière" "portières";
lin portion_N = mkN "portion" "portions";
lin portion_V2 = mkV2 (mkV "portion" "portions" "portioned" "portioned" "portioning");
lin portishead_PN = mkPN "Portishead";
lin portland_PN = mkPN "Portland";
lin portly_A = compoundA (mkA "portly");
lin portmanteau_N = mkN "portmanteau" "portmanteaus";
lin porto_alegre_PN = mkPN "Porto alegre";
lin portrait_N = mkN "portrait" "portraits";
lin portraitist_N = mkN "portraitist" "portraitists";
lin portraiture_N = mkN "portraiture" ;
lin portray_V2 = mkV2 (mkV "portray" "portrays" "portrayed" "portrayed" "portraying");
lin portrayal_N = mkN "portrayal" "portrayals";
lin portsmouth_PN = mkPN "Portsmouth";
lin portugal_PN = mkPN "Portugal";
lin portuguese_A = compoundA (mkA "Portuguese");
lin portuguese_N = mkN "Portuguese" "Portuguese";
lin pose_N = mkN "pose" "poses";
lin pose_V = mkV "pose" "poses" "posed" "posed" "posing";
lin pose_V2 = mkV2 (mkV "pose" "poses" "posed" "posed" "posing");
lin poser_N = mkN "poser" "posers";
lin poseur_N = mkN "poseur" "poseurs";
lin poseuse_N = mkN "poseuse" "IRREG";
lin posh_A = mkA "posh" "posher";
lin posh_V2 = mkV2 (mkV "posh" "poshes" "poshed" "poshed" "poshing");
lin posit_V2 = mkV2 (mkV "posit" "posits" "posited" "posited" "positing");
lin position_N = mkN "position" "positions";
lin position_V2 = mkV2 (mkV "position" "positions" "positioned" "positioned" "positioning");
lin position_V2V = mkV2V (mkV "position") noPrep to_Prep ;
lin positive_A = compoundA (mkA "positive");
lin positive_N = mkN "positive" "positives";
lin positiveness_N = mkN "positiveness" ;
lin positivism_N = mkN "positivism" ;
lin positivist_N = mkN "positivist" "positivists";
lin posse_N = mkN "posse" "posses";
lin possess_V2 = mkV2 (mkV "possess" "possesses" "possessed" "possessed" "possessing");
lin possession_N = mkN "possession" "possessions";
lin possessive_A = compoundA (mkA "possessive");
lin possessiveness_N = mkN "possessiveness" ;
lin possessor_N = mkN "possessor" "possessors";
lin posset_N = mkN "posset" "possets";
lin possibility_N = mkN "possibility" "possibilities";
lin possible_A = compoundA (mkA "possible");
lin possible_N = mkN "possible" "possibles";
lin possum_N = mkN "possum" "possums";
lin post_N = mkN "post" "posts";
lin post_Prep = mkPrep "post";
lin post_V = mkV "post" "posts" "posted" "posted" "posting";
lin post_V2 = mkV2 (mkV "post" "posts" "posted" "posted" "posting");
lin post_chaise_N = mkN "post - chaise" "post - chaises";
lin post_free_A = compoundA (mkA "post - free");
lin post_free_Adv = mkAdv "post - free";
lin post_haste_Adv = mkAdv "post - haste";
lin post_horse_N = mkN "post - horse" "post - horses";
lin post_meridiem_Adv = mkAdv "post meridiem";
lin post_mortem_A = compoundA (mkA "post - mortem");
lin post_mortem_N = mkN "post - mortem" "post - mortems";
lin post_paid_A = compoundA (mkA "post - paid");
lin post_paid_Adv = mkAdv "post - paid";
lin postage_N = mkN "postage" ;
lin postage_stamp_N = mkN "postage - stamp" "postage - stamps";
lin postal_A = compoundA (mkA "postal");
lin postbag_N = mkN "postbag" "postbags";
lin postbox_N = mkN "postbox" "postboxes";
lin postcard_N = mkN "postcard" "postcards";
lin postcode_N = mkN "postcode" "postcodes";
lin postdate_V2 = mkV2 (mkV "postdate" "postdates" "postdated" "postdated" "postdating");
lin poste_restante_N = mkN "poste restante" ;
lin poster_N = mkN "poster" "posters";
lin posterior_A = compoundA (mkA "posterior");
lin posterior_N = mkN "posterior" "posteriors";
lin posterity_N = mkN "posterity" ;
lin postern_N = mkN "postern" "posterns";
lin postgraduate_A = compoundA (mkA "postgraduate");
lin postgraduate_N = mkN "postgraduate" "postgraduates";
lin posthumous_A = compoundA (mkA "posthumous");
lin postilion_N = mkN "postilion" "postilions";
lin postillion_N = mkN "postillion" "postillions";
lin postman_N = mkN "postman" "postmen" {- FIXME: guessed plural form -};
lin postmark_N = mkN "postmark" "postmarks";
lin postmark_V2 = mkV2 (mkV "postmark" "postmarks" "postmarked" "postmarked" "postmarking");
lin postmaster_N = mkN "postmaster" "postmasters";
lin postmistress_N = mkN "postmistress" "postmistresses";
lin postpone_V2 = mkV2 (mkV "postpone" "postpones" "postponed" "postponed" "postponing");
lin postponement_N = mkN "postponement" "postponements";
lin postprandial_A = compoundA (mkA "postprandial");
lin postscript_N = mkN "postscript" "postscripts";
lin postulant_N = mkN "postulant" "postulants";
lin postulate_N = mkN "postulate" "postulates";
lin postulate_V2 = mkV2 (mkV "postulate" "postulates" "postulated" "postulated" "postulating");
lin postural_A = compoundA (mkA "postural");
lin posture_N = mkN "posture" "postures";
lin posture_V = mkV "posture" "postures" "postured" "postured" "posturing";
lin posture_V2 = mkV2 (mkV "posture" "postures" "postured" "postured" "posturing");
lin posturing_N = mkN "posturing" "posturings";
lin posy_N = mkN "posy" "posies";
lin pot_N = mkN "pot" "pots";
lin pot_V = mkV "pot" "pots" "potted" "potted" "potting";
lin pot_V2 = mkV2 (mkV "pot" "pots" "potted" "potted" "potting");
lin pot_shot_N = mkN "pot - shot" "pot - shots";
lin pot_trained_A = compoundA (mkA "pot - trained");
lin potable_A = compoundA (mkA "potable");
lin potash_N = mkN "potash" ;
lin potassium_N = mkN "potassium" ;
lin potation_N = mkN "potation" "potations";
lin potato_N = mkN "potato" "potatoes";
lin potbellied_A = compoundA (mkA "potbellied");
lin potbelly_N = mkN "potbelly" "potbellies";
lin potboiler_N = mkN "potboiler" "potboilers";
lin potbound_A = compoundA (mkA "potbound");
lin potboy_N = mkN "potboy" "potboys";
lin poteen_N = mkN "poteen" ;
lin potency_N = mkN "potency" "potencies";
lin potent_A = compoundA (mkA "potent");
lin potentate_N = mkN "potentate" "potentates";
lin potential_A = compoundA (mkA "potential");
lin potential_N = mkN "potential" "potentials";
lin potentiality_N = mkN "potentiality" "potentialities";
lin pothead_N = mkN "pothead" "potheads";
lin pother_N = mkN "pother" "pothers";
lin potherb_N = mkN "potherb" "potherbs";
lin pothole_N = mkN "pothole" "potholes";
lin potholer_N = mkN "potholer" "potholers";
lin pothook_N = mkN "pothook" "pothooks";
lin pothouse_N = mkN "pothouse" "pothouses";
lin pothunter_N = mkN "pothunter" "pothunters";
lin potion_N = mkN "potion" "potions";
lin potman_N = mkN "potman" "potmen" {- FIXME: guessed plural form -};
lin potpourri_N = mkN "potpourri" "potpourris";
lin potsdam_PN = mkPN "Potsdam";
lin potsherd_N = mkN "potsherd" "potsherds";
lin pottage_N = mkN "pottage" "pottages";
lin potted_A = compoundA (mkA "potted");
lin potter_N = mkN "potter" "potters";
lin potter_V = mkV "potter" "potters" "pottered" "pottered" "pottering";
lin potterer_N = mkN "potterer" "potterers";
lin potters_bar_PN = mkPN "Potters bar";
lin pottery_N = mkN "pottery" "potteries";
lin potty_A = mkA "potty" "pottier";
lin potty_N = mkN "potty" "potties";
lin pouch_N = mkN "pouch" "pouches";
lin pouch_V2 = mkV2 (mkV "pouch" "pouches" "pouched" "pouched" "pouching");
lin pouf_N = mkN "pouf" "poufs";
lin pouffe_N = mkN "pouffe" "pouffes";
lin poulterer_N = mkN "poulterer" "poulterers";
lin poultice_N = mkN "poultice" "poultices";
lin poultice_V2 = mkV2 (mkV "poultice" "poultices" "poulticed" "poulticed" "poulticing");
lin pounce_N = mkN "pounce" "pounces";
lin pounce_V = mkV "pounce" "pounces" "pounced" "pounced" "pouncing";
lin pound_N = mkN "pound" "pounds";
lin pound_V = mkV "pound" "pounds" "pounded" "pounded" "pounding";
lin pound_V2 = mkV2 (mkV "pound" "pounds" "pounded" "pounded" "pounding");
lin poundage_N = mkN "poundage" ;
lin pounder_N = mkN "pounder" "pounders";
lin pour_V = mkV "pour" "pours" "poured" "poured" "pouring";
lin pour_V2 = mkV2 (mkV "pour" "pours" "poured" "poured" "pouring");
lin pout_N = mkN "pout" "pouts";
lin pout_V = mkV "pout" "pouts" "pouted" "pouted" "pouting";
lin pout_V2 = mkV2 (mkV "pout" "pouts" "pouted" "pouted" "pouting");
lin poutingly_Adv = mkAdv "poutingly";
lin poverty_N = mkN "poverty" ;
lin poverty_stricken_A = compoundA (mkA "poverty - stricken");
lin pow_N = mkN "pow" ;
lin powder_N = mkN "powder" "powders";
lin powder_V = mkV "powder" "powders" "powdered" "powdered" "powdering";
lin powder_V2 = mkV2 (mkV "powder" "powders" "powdered" "powdered" "powdering");
lin powder_flask_N = mkN "powder - flask" "powder - flasks";
lin powder_horn_N = mkN "powder - horn" "powder - horns";
lin powder_magazine_N = mkN "powder - magazine" "powder - magazines";
lin powder_puff_N = mkN "powder - puff" "powder - puffs";
lin powder_room_N = mkN "powder - room" "powder - rooms";
lin powdered_A = compoundA (mkA "powdered");
lin powdery_A = compoundA (mkA "powdery");
lin power_N = mkN "power" "powers";
lin power_V2 = mkV2 (mkV "power" "powers" "powered" "powered" "powering");
lin power_dive_N = mkN "power - dive" "power - dives";
lin power_dive_V2 = mkV2 (mkV "power - dive" "power - dives" "power - dived" "power - dived" "power - diving");
lin power_point_N = mkN "power - point" "power - points";
lin power_station_N = mkN "power - station" "power - stations";
lin powerboat_N = mkN "powerboat" "powerboats";
lin powered_A = compoundA (mkA "powered");
lin powerful_A = compoundA (mkA "powerful");
lin powerhouse_N = mkN "powerhouse" "powerhouses";
lin powerless_A = compoundA (mkA "powerless");
lin powwow_N = mkN "powwow" "powwows";
lin powwow_V = mkV "powwow" "powwows" "powwowed" "powwowed" "powwowing";
lin powys_PN = mkPN "Powys";
lin pox_N = mkN "pox" "IRREG";
lin poynton_PN = mkPN "Poynton";
lin poznan_PN = mkPN "Poznan";
lin pp_N = mkN "p" "pp" ;
lin pr_N = mkN "pr" ;
lin practicability_N = mkN "practicability" ;
lin practicable_A = compoundA (mkA "practicable");
lin practical_A = compoundA (mkA "practical");
lin practicality_N = mkN "practicality" "practicalities";
lin practice_N = mkN "practice" "practices";
lin practice_V = mkV "practice";
lin practice_V2 = mkV2 (mkV "practice");
lin practician_N = mkN "practician" "practicians";
lin practise_V = mkV "practise" "practises" "practised" "practised" "practising";
lin practise_V2 = mkV2 (mkV "practise" "practises" "practised" "practised" "practising");
lin practised_A = compoundA (mkA "practised");
lin practitioner_N = mkN "practitioner" "practitioners";
lin praesidium_N = mkN "praesidium" "praesidiums";
lin praetor_N = mkN "praetor" "praetors";
lin praetorian_A = compoundA (mkA "praetorian");
lin pragmatic_A = compoundA (mkA "pragmatic");
lin pragmatically_Adv = mkAdv "pragmatically";
lin pragmatism_N = mkN "pragmatism" ;
lin pragmatist_N = mkN "pragmatist" "pragmatists";
lin prague_PN = mkPN "Prague";
lin prairie_N = mkN "prairie" "prairies";
lin praise_N = mkN "praise" "praises";
lin praise_V2 = mkV2 (mkV "praise" "praises" "praised" "praised" "praising");
lin praiseworthiness_N = mkN "praiseworthiness" ;
lin praiseworthy_A = compoundA (mkA "praiseworthy");
lin pram_N = mkN "pram" "prams";
lin prance_N = mkN "prance" "prances";
lin prance_V = mkV "prance" "prances" "pranced" "pranced" "prancing";
lin prank_N = mkN "prank" "pranks";
lin prate_V = mkV "prate" "prates" "prated" "prated" "prating";
lin prato_PN = mkPN "Prato";
lin prattle_N = mkN "prattle" ;
lin prattle_V = mkV "prattle" "prattles" "prattled" "prattled" "prattling";
lin prattler_N = mkN "prattler" "prattlers";
lin prawn_N = mkN "prawn" "prawns";
lin prawn_V = mkV "prawn" "prawns" "prawned" "prawned" "prawning";
lin pray_V = mkV "pray" "prays" "prayed" "prayed" "praying";
lin pray_V2 = mkV2 (mkV "pray" "prays" "prayed" "prayed" "praying");
lin prayer_N = mkN "prayer" "prayers";
lin prayer_book_N = mkN "prayer - book" "prayer - books";
lin prayer_mat_N = mkN "prayer - mat" "prayer - mats";
lin prayer_meeting_N = mkN "prayer - meeting" "prayer - meetings";
lin prayer_rug_N = mkN "prayer - rug" "prayer - rugs";
lin prayer_wheel_N = mkN "prayer - wheel" "prayer - wheels";
lin pre_approve_V2 = mkV2 (mkV "pre - approve") ;
lin pre_eminence_N = mkN "pre - eminence" ;
lin pre_eminent_A = compoundA (mkA "pre - eminent");
lin pre_empt_V2 = mkV2 (mkV "pre - empt" "pre - empts" "pre - empted" "pre - empted" "pre - empting");
lin pre_emption_N = mkN "pre - emption" ;
lin pre_emptive_A = compoundA (mkA "pre - emptive");
lin pre_exist_V = mkV "pre - exist" "pre - exists" "pre - existed" "pre - existed" "pre - existing";
lin pre_existence_N = mkN "pre - existence" "pre - existences";
lin pre_existent_A = compoundA (mkA "pre - existent");
lin pre_packaged_A = compoundA (mkA "pre - packaged");
lin pre_raphaelite_A = compoundA (mkA "pre - raphaelite");
lin pre_raphaelite_N = mkN "pre - raphaelite" "pre - raphaelites";
lin pre_register_V2 = mkV2 (mkV "pre - register");
lin pre_sign_V2 = mkV2 (mkV "pre - sign");
lin pre_test_V2 = mkV2 (mkV "pre - test");
lin preach_V = mkV "preach" "preaches" "preached" "preached" "preaching";
lin preach_V2 = mkV2 (mkV "preach" "preaches" "preached" "preached" "preaching");
lin preacher_N = mkN "preacher" "preachers";
lin preachify_V = mkV "preachify" "preachifies" "preachified" "preachified" "preachifying";
lin preamble_N = mkN "preamble" "preambles";
lin prearrange_V2 = mkV2 (mkV "prearrange" "prearranges" "prearranged" "prearranged" "prearranging");
lin prearrangement_N = mkN "prearrangement" "prearrangements";
lin prebend_N = mkN "prebend" "prebends";
lin prebendary_N = mkN "prebendary" "prebendaries";
lin precarious_A = compoundA (mkA "precarious");
lin precariousness_N = mkN "precariousness" ;
lin precast_A = compoundA (mkA "precast");
lin precaution_N = mkN "precaution" "precautions";
lin precautionary_A = compoundA (mkA "precautionary");
lin precede_V = mkV "precede" "precedes" "preceded" "preceded" "preceding";
lin precede_V2 = mkV2 (mkV "precede" "precedes" "preceded" "preceded" "preceding");
lin precedence_N = mkN "precedence" ;
lin precedent_N = mkN "precedent" "precedents";
lin precedented_A = compoundA (mkA "precedented");
lin preceding_A = compoundA (mkA "preceding");
lin precentor_N = mkN "precentor" "precentors";
lin precept_N = mkN "precept" "precepts";
lin preceptor_N = mkN "preceptor" "preceptors";
lin precession_N = mkN "precession" "precessions";
lin precinct_N = mkN "precinct" "precincts";
lin preciosity_N = mkN "preciosity" "preciosities";
lin precious_A = compoundA (mkA "precious");
lin precious_Adv = mkAdv "precious";
lin preciousness_N = mkN "preciousness" ;
lin precipice_N = mkN "precipice" "precipices";
lin precipitate_A = compoundA (mkA "precipitate");
lin precipitate_N = mkN "precipitate" "precipitates";
lin precipitate_V2 = mkV2 (mkV "precipitate" "precipitates" "precipitated" "precipitated" "precipitating");
lin precipitation_N = mkN "precipitation" ;
lin precipitous_A = compoundA (mkA "precipitous");
lin precis_N = mkN "précis" "précis";
lin precis_V2 = mkV2 (mkV "précis" "IRREG" "IRREG" "IRREG" "IRREG");
lin precise_A = compoundA (mkA "precise");
lin preciseness_N = mkN "preciseness" ;
lin precision_N = mkN "precision" ;
lin preclude_V2 = mkV2 (mkV "preclude" "precludes" "precluded" "precluded" "precluding");
lin preclusion_N = mkN "preclusion" "preclusions";
lin precocious_A = compoundA (mkA "precocious");
lin precociousness_N = mkN "precociousness" ;
lin precocity_N = mkN "precocity" ;
lin precognition_N = mkN "precognition" ;
lin preconceive_V2 = mkV2 (mkV "preconceive" "preconceives" "preconceived" "preconceived" "preconceiving");
lin preconception_N = mkN "preconception" "preconceptions";
lin preconcerted_A = compoundA (mkA "preconcerted");
lin precondition_N = mkN "precondition" "preconditions";
lin preconditioned_A = compoundA (mkA "preconditioned");
lin precursor_N = mkN "precursor" "precursors";
lin precursory_A = compoundA (mkA "precursory");
lin predate_V2 = mkV2 (mkV "predate");
lin predator_N = mkN "predator" "predators";
lin predatory_A = compoundA (mkA "predatory");
lin predecease_V2 = mkV2 (mkV "predecease" "predeceases" "predeceased" "predeceased" "predeceasing");
lin predecessor_N = mkN "predecessor" "predecessors";
lin predestinate_A = compoundA (mkA "predestinate");
lin predestinate_V2 = mkV2 (mkV "predestinate" "predestinates" "predestinated" "predestinated" "predestinating");
lin predestination_N = mkN "predestination" "predestinations";
lin predestine_V2 = mkV2 (mkV "predestine" "predestines" "predestined" "predestined" "predestining");
lin predetermination_N = mkN "predetermination" "predeterminations";
lin predetermine_V2 = mkV2 (mkV "predetermine" "predetermines" "predetermined" "predetermined" "predetermining");
lin predicament_N = mkN "predicament" "predicaments";
lin predicate_N = mkN "predicate" "predicates";
lin predicate_V2 = mkV2 (mkV "predicate" "predicates" "predicated" "predicated" "predicating");
lin predicative_A = compoundA (mkA "predicative");
lin predict_V2 = mkV2 (mkV "predict" "predicts" "predicted" "predicted" "predicting");
lin predict_VS = mkVS (mkV "predict");
lin predictability_N = mkN "predictability" ;
lin predictable_A = compoundA (mkA "predictable");
lin prediction_N = mkN "prediction" "predictions";
lin predictor_N = mkN "predictor" "predictors";
lin predigest_V2 = mkV2 (mkV "predigest" "predigests" "predigested" "predigested" "predigesting");
lin predilection_N = mkN "predilection" "predilections";
lin predispose_V2 = mkV2 (mkV "predispose" "predisposes" "predisposed" "predisposed" "predisposing");
lin predisposition_N = mkN "predisposition" "predispositions";
lin predominance_N = mkN "predominance" ;
lin predominant_A = compoundA (mkA "predominant");
lin predominate_V = mkV "predominate" "predominates" "predominated" "predominated" "predominating";
lin preen_V2 = mkV2 (mkV "preen" "preens" "preened" "preened" "preening");
lin prefab_N = mkN "prefab" "prefabs";
lin prefabricate_V2 = mkV2 (mkV "prefabricate" "prefabricates" "prefabricated" "prefabricated" "prefabricating");
lin prefabrication_N = mkN "prefabrication" "prefabrications";
lin preface_N = mkN "preface" "prefaces";
lin preface_V2 = mkV2 (mkV "preface" "prefaces" "prefaced" "prefaced" "prefacing");
lin prefatory_A = compoundA (mkA "prefatory");
lin prefect_N = mkN "prefect" "prefects";
lin prefectural_A = compoundA (mkA "prefectural");
lin prefecture_N = mkN "prefecture" "prefectures";
lin prefer_V2 = mkV2 (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin prefer_V2V = mkV2V (mkV "prefer" "prefers" "preferred" "preferred" "preferring") noPrep to_Prep ;
lin prefer_VV = mkVV (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin prefer_VS = mkVS (mkV "prefer" "prefers" "preferred" "preferred" "preferring");
lin preferable_A = compoundA (mkA "preferable");
lin preference_N = mkN "preference" "preferences";
lin preferential_A = compoundA (mkA "preferential");
lin preferment_N = mkN "preferment" ;
lin prefigure_V2 = mkV2 (mkV "prefigure" "prefigures" "prefigured" "prefigured" "prefiguring");
lin prefix_N = mkN "prefix" "prefixes";
lin prefix_V2 = mkV2 (mkV "prefix" "prefixes" "prefixed" "prefixed" "prefixing");
lin pregnancy_N = mkN "pregnancy" "pregnancies";
lin pregnant_A = compoundA (mkA "pregnant");
lin preheat_V2 = mkV2 (mkV "preheat" "preheats" "preheated" "preheated" "preheating");
lin prehensile_A = compoundA (mkA "prehensile");
lin prehistoric_A = compoundA (mkA "prehistoric");
lin prehistorical_A = compoundA (mkA "prehistorical");
lin prehistory_N = mkN "prehistory" "prehistories";
lin prejudge_V2 = mkV2 (mkV "prejudge" "prejudges" "prejudged" "prejudged" "prejudging");
lin prejudgement_N = mkN "prejudgement" "prejudgements";
lin prejudice_N = mkN "prejudice" "prejudices";
lin prejudice_V2 = mkV2 (mkV "prejudice" "prejudices" "prejudiced" "prejudiced" "prejudicing");
lin prejudicial_A = compoundA (mkA "prejudicial");
lin prelacy_N = mkN "prelacy" "prelacies";
lin prelate_N = mkN "prelate" "prelates";
lin prelim_N = mkN "prelim" "prelims";
lin preliminary_A = compoundA (mkA "preliminary");
lin preliminary_N = mkN "preliminary" "preliminaries";
lin prelude_N = mkN "prelude" "preludes";
lin prelude_V2 = mkV2 (mkV "prelude" "preludes" "preluded" "preluded" "preluding");
lin premarital_A = compoundA (mkA "premarital");
lin premature_A = compoundA (mkA "premature");
lin premeditate_V2 = mkV2 (mkV "premeditate" "premeditates" "premeditated" "premeditated" "premeditating");
lin premeditation_N = mkN "premeditation" ;
lin premier_A = compoundA (mkA "premier");
lin premier_N = mkN "premier" "premiers";
lin premiere_N = mkN "première" "premières";
lin premiere_V = mkV "premiere";
lin premiere_V2 = mkV2 (mkV "premiere");
lin premiership_N = mkN "premiership" "premierships";
lin premise_N = mkN "premise" "premises";
lin premise_V2 = mkV2 (mkV "premise" "premises" "premised" "premised" "premising");
lin premiss_N = mkN "premiss" "premisses";
lin premiss_V2 = mkV2 (mkV "premiss" "premisses" "premissed" "premissed" "premissing");
lin premium_N = mkN "premium" "premiums";
lin premonition_N = mkN "premonition" "premonitions";
lin premonitory_A = compoundA (mkA "premonitory");
lin prenatal_A = compoundA (mkA "prenatal");
lin prentice_N = mkN "prentice" "prentices";
lin preoccupation_N = mkN "preoccupation" "preoccupations";
lin preoccupy_V2 = mkV2 (mkV "preoccupy" "preoccupies" "preoccupied" "preoccupied" "preoccupying");
lin preordain_V2 = mkV2 (mkV "preordain" "preordains" "preordained" "preordained" "preordaining");
lin prep_N = mkN "prep" "preps";
lin prepacked_A = compoundA (mkA "prepacked");
lin preparation_N = mkN "preparation" "preparations";
lin preparatory_A = compoundA (mkA "preparatory");
lin prepare_V = mkV "prepare" "prepares" "prepared" "prepared" "preparing";
lin prepare_V2 = mkV2 (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin prepare_V2V = mkV2V (mkV "prepare" "prepares" "prepared" "prepared" "preparing") noPrep to_Prep ;
lin prepare_VV = mkVV (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin prepare_VS = mkVS (mkV "prepare" "prepares" "prepared" "prepared" "preparing");
lin preparedness_N = mkN "preparedness" ;
lin prepay_V2 = mkV2 (mkV "pre" IrregEng.pay_V);
lin preponderance_N = mkN "preponderance" "preponderances";
lin preponderant_A = compoundA (mkA "preponderant");
lin preponderate_V = mkV "preponderate" "preponderates" "preponderated" "preponderated" "preponderating";
lin preposition_N = mkN "preposition" "prepositions";
lin prepositional_A = compoundA (mkA "prepositional");
lin prepossess_V2 = mkV2 (mkV "prepossess" "prepossesses" "prepossessed" "prepossessed" "prepossessing");
lin prepossessing_A = compoundA (mkA "prepossessing");
lin prepossession_N = mkN "prepossession" "prepossessions";
lin preposterous_A = compoundA (mkA "preposterous");
lin prepuce_N = mkN "prepuce" "prepuces";
lin prerecord_V2 = mkV2 (mkV "prerecord" "prerecords" "prerecorded" "prerecorded" "prerecording");
lin prerequisite_A = compoundA (mkA "prerequisite");
lin prerequisite_N = mkN "prerequisite" "prerequisites";
lin prerogative_N = mkN "prerogative" "prerogatives";
lin pres_N = mkN "pres" ;
lin presage_N = mkN "presage" "presages";
lin presage_V2 = mkV2 (mkV "presage" "presages" "presaged" "presaged" "presaging");
lin presbyter_N = mkN "presbyter" "presbyters";
lin presbyterian_A = compoundA (mkA "presbyterian");
lin presbyterian_N = mkN "presbyterian" "presbyterians";
lin presbyterianism_N = mkN "presbyterianism" ;
lin presbytery_N = mkN "presbytery" "presbyteries";
lin prescience_N = mkN "prescience" ;
lin prescient_A = compoundA (mkA "prescient");
lin prescot_PN = mkPN "Prescot";
lin prescribe_V = mkV "prescribe" "prescribes" "prescribed" "prescribed" "prescribing";
lin prescribe_V2 = mkV2 (mkV "prescribe" "prescribes" "prescribed" "prescribed" "prescribing");
lin prescript_N = mkN "prescript" "prescripts";
lin prescription_N = mkN "prescription" "prescriptions";
lin prescriptive_A = compoundA (mkA "prescriptive");
lin presence_N = mkN "presence" ;
lin present_A = compoundA (mkA "present");
lin present_N = mkN "present" "presents";
lin present_V2 = mkV2 (mkV "present" "presents" "presented" "presented" "presenting");
lin present_day_A = compoundA (mkA "present - day");
lin presentable_A = compoundA (mkA "presentable");
lin presentation_N = mkN "presentation" "presentations";
lin presentiment_N = mkN "presentiment" "presentiments";
lin preservable_A = compoundA (mkA "preservable");
lin preservation_N = mkN "preservation" ;
lin preservative_A = compoundA (mkA "preservative");
lin preservative_N = mkN "preservative" "preservatives";
lin preserve_N = mkN "preserve" "preserves";
lin preserve_V2 = mkV2 (mkV "preserve" "preserves" "preserved" "preserved" "preserving");
lin preserver_N = mkN "preserver" "preservers";
lin preside_V = mkV "preside" "presides" "presided" "presided" "presiding";
lin presidency_N = mkN "presidency" "presidencies";
lin president_N = mkN "president" "presidents";
lin presidential_A = compoundA (mkA "presidential");
lin presidium_N = mkN "presidium" "presidiums";
lin press_N = mkN "press" "presses";
lin press_V = mkV "press" "presses" "pressed" "pressed" "pressing";
lin press_V2 = mkV2 (mkV "press" "presses" "pressed" "pressed" "pressing");
lin press_V2V = mkV2V (mkV "press" "presses" "pressed" "pressed" "pressing") noPrep to_Prep ;
lin press_agency_N = mkN "press - agency" "press - agencies";
lin press_agent_N = mkN "press - agent" "press - agents";
lin press_box_N = mkN "press - box" "press - boxes";
lin press_clipping_N = mkN "press - clipping" "press - clippings";
lin press_cutting_N = mkN "press - cutting" "press - cuttings";
lin press_gallery_N = mkN "press - gallery" "press - galleries";
lin press_gang_N = mkN "press - gang" "press - gangs";
lin press_lord_N = mkN "press - lord" "press - lords";
lin press_photographer_N = mkN "press - photographer" "press - photographers";
lin press_stud_N = mkN "press - stud" "press - studs";
lin press_up_N = mkN "press - up" "press - ups";
lin pressing_A = compoundA (mkA "pressing");
lin pressing_N = mkN "pressing" "pressings";
lin pressman_N = mkN "pressman" "pressmen" {- FIXME: guessed plural form -};
lin pressmark_N = mkN "pressmark" "pressmarks";
lin pressure_N = mkN "pressure" "pressures";
lin pressure_V2 = mkV2 (mkV "pressure");
lin pressure_V2V = mkV2V (mkV "pressure") noPrep to_Prep ;
lin pressure_cooker_N = mkN "pressure - cooker" "pressure - cookers";
lin pressure_gauge_N = mkN "pressure - gauge" "pressure - gauges";
lin pressurized_A = compoundA (mkA "pressurized");
lin prestatyn_PN = mkPN "Prestatyn";
lin prestidigitation_N = mkN "prestidigitation" "prestidigitations";
lin prestidigitator_N = mkN "prestidigitator" "prestidigitators";
lin prestige_N = mkN "prestige" ;
lin prestigious_A = compoundA (mkA "prestigious");
lin prestissimo_A = compoundA (mkA "prestissimo");
lin prestissimo_Adv = mkAdv "prestissimo";
lin presto_A = compoundA (mkA "presto");
lin presto_Adv = mkAdv "presto";
lin preston_PN = mkPN "Preston";
lin prestonpans_PN = mkPN "Prestonpans";
lin prestressed_A = compoundA (mkA "prestressed");
lin prestwich_PN = mkPN "Prestwich";
lin prestwick_PN = mkPN "Prestwick";
lin presumable_A = compoundA (mkA "presumable");
lin presume_V = mkV "presume" "presumes" "presumed" "presumed" "presuming";
lin presume_V2 = mkV2 (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presume_VS = mkVS (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presume_VV = mkVV (mkV "presume" "presumes" "presumed" "presumed" "presuming");
lin presuming_A = compoundA (mkA "presuming");
lin presumption_N = mkN "presumption" "presumptions";
lin presumptive_A = compoundA (mkA "presumptive");
lin presumptuous_A = compoundA (mkA "presumptuous");
lin presuppose_V2 = mkV2 (mkV "presuppose" "presupposes" "presupposed" "presupposed" "presupposing");
lin presupposition_N = mkN "presupposition" "presuppositions";
lin pretence_N = mkN "pretence" "pretences";
lin pretend_V = mkV "pretend" "pretends" "pretended" "pretended" "pretending";
lin pretend_V2 = mkV2 (mkV "pretend" "pretends" "pretended" "pretended" "pretending");
lin pretend_VS = mkVS (mkV "pretend" "pretends" "pretended" "pretended" "pretending");
lin pretendedly_Adv = mkAdv "pretendedly";
lin pretender_N = mkN "pretender" "pretenders";
lin pretension_N = mkN "pretension" "pretensions";
lin pretentious_A = compoundA (mkA "pretentious");
lin pretentiousness_N = mkN "pretentiousness" ;
lin preterit_A = compoundA (mkA "preterit");
lin preterit_N = mkN "preterit" "preterits";
lin preterite_A = compoundA (mkA "preterite");
lin preterite_N = mkN "preterite" "preterites";
lin preternatural_A = compoundA (mkA "preternatural");
lin pretext_N = mkN "pretext" "pretexts";
lin pretor_N = mkN "pretor" "pretors";
lin pretoria_PN = mkPN "Pretoria";
lin prettify_V2 = mkV2 (mkV "prettify" "prettifies" "prettified" "prettified" "prettifying");
lin prettily_Adv = mkAdv "prettily";
lin prettiness_N = mkN "prettiness" ;
lin pretty_A = mkA "pretty" "prettier";
lin pretty_Adv = mkAdv "pretty";
lin pretty_N = mkN "pretty" "pretties";
lin pretty_pretty_A = compoundA (mkA "pretty - pretty");
lin pretzel_N = mkN "pretzel" "pretzels";
lin prevail_V = mkV "prevail" "prevails" "prevailed" "prevailed" "prevailing";
lin prevail_V2 = mkV2 (mkV "prevail" "prevails" "prevailed" "prevailed" "prevailing");
lin prevailing_A = compoundA (mkA "prevailing");
lin prevalence_N = mkN "prevalence" ;
lin prevalent_A = compoundA (mkA "prevalent");
lin prevaricate_V = mkV "prevaricate" "prevaricates" "prevaricated" "prevaricated" "prevaricating";
lin prevarication_N = mkN "prevarication" "prevarications";
lin prevent_V2 = mkV2 (mkV "prevent" "prevents" "prevented" "prevented" "preventing");
lin preventable_A = compoundA (mkA "preventable");
lin preventative_N = mkN "preventative" "preventatives";
lin prevention_N = mkN "prevention" ;
lin preventive_A = compoundA (mkA "preventive");
lin preview_N = mkN "preview" "previews";
lin preview_V2 = mkV2 (mkV "preview" "previews" "previewed" "previewed" "previewing");
lin previous_A = compoundA (mkA "previous");
lin prevision_N = mkN "prevision" "previsions";
lin prey_N = mkN "prey" "IRREG";
lin prey_V = mkV "prey" "preys" "preyed" "preyed" "preying";
lin price_N = mkN "price" "prices";
lin price_V = mkV "price";
lin price_V2 = mkV2 (mkV "price" "prices" "priced" "priced" "pricing");
lin price_V2V = mkV2V (mkV "price") noPrep to_Prep ;
lin price_control_N = mkN "price - control" "price - controls";
lin price_controlled_A = compoundA (mkA "price - controlled");
lin priceless_A = compoundA (mkA "priceless");
lin pricelist_N = mkN "pricelist" "pricelists";
lin pricey_A = mkA "pricey" "priceyyer*";
lin prick_N = mkN "prick" "pricks";
lin prick_V = mkV "prick" "pricks" "pricked" "pricked" "pricking";
lin prick_V2 = mkV2 (mkV "prick" "pricks" "pricked" "pricked" "pricking");
lin pricker_N = mkN "pricker" "prickers";
lin pricking_N = mkN "pricking" "prickings";
lin prickle_N = mkN "prickle" "prickles";
lin prickle_V = mkV "prickle" "prickles" "prickled" "prickled" "prickling";
lin prickle_V2 = mkV2 (mkV "prickle" "prickles" "prickled" "prickled" "prickling");
lin prickly_A = mkA "prickly" "pricklier";
lin pride_N = mkN "pride" "prides";
lin pride_V2 = mkV2 (mkV "pride" "prides" "prided" "prided" "priding");
lin prie_dieu_N = mkN "prie - dieu" "prie - dieus";
lin priest_N = mkN "priest" "priests";
lin priest_ridden_A = compoundA (mkA "priest - ridden");
lin priestcraft_N = mkN "priestcraft" ;
lin priestess_N = mkN "priestess" "priestesses";
lin priesthood_N = mkN "priesthood" "priesthoods";
lin priestlike_A = compoundA (mkA "priestlike");
lin priestly_A = mkA "priestly" "priestlier";
lin prig_N = mkN "prig" "prigs";
lin priggish_A = compoundA (mkA "priggish");
lin priggishness_N = mkN "priggishness" ;
lin prim_A = mkA "prim" "primmer*";
lin prim_V2 = mkV2 (mkV "prim" "prims" "primmed" "primmed" "primming");
lin prima_A = compoundA (mkA "prima");
lin prima_ballerina_N = mkN "prima ballerina" "prima ballerinas";
lin prima_donna_N = mkN "prima donna" "prima donnas";
lin prima_facie_A = compoundA (mkA "prima facie");
lin prima_facie_Adv = mkAdv "prima facie";
lin primacy_N = mkN "primacy" "primacies";
lin primaeval_A = compoundA (mkA "primaeval");
lin primal_A = compoundA (mkA "primal");
lin primary_A = compoundA (mkA "primary");
lin primary_N = mkN "primary" "primaries";
lin primate_N = mkN "primate" "primates";
lin prime_A = compoundA (mkA "prime");
lin prime_N = mkN "prime" ;
lin prime_V2 = mkV2 (mkV "prime" "primes" "primed" "primed" "priming");
lin primer_N = mkN "primer" "primers";
lin primeval_A = compoundA (mkA "primeval");
lin priming_N = mkN "priming" "primings";
lin primitive_A = compoundA (mkA "primitive");
lin primitive_N = mkN "primitive" "primitives";
lin primitiveness_N = mkN "primitiveness" ;
lin primness_N = mkN "primness" ;
lin primogeniture_N = mkN "primogeniture" ;
lin primordial_A = compoundA (mkA "primordial");
lin primp_V2 = mkV2 (mkV "primp" "primps" "primped" "primped" "primping");
lin primrose_N = mkN "primrose" "primroses";
lin primula_N = mkN "primula" "primulas";
lin primus_N = mkN "primus" "primuses";
lin prince_N = mkN "prince" "princes";
lin princedom_N = mkN "princedom" "princedoms";
lin princely_A = mkA "princely" "princelier";
lin princes_risborough_PN = mkPN "Princes risborough";
lin princess_N = mkN "princess" "princesses";
lin principal_A = compoundA (mkA "principal");
lin principal_N = mkN "principal" "principals";
lin principality_N = mkN "principality" "principalities";
lin principle_N = mkN "principle" "principles";
lin principled_A = compoundA (mkA "principled");
lin prink_V2 = mkV2 (mkV "prink" "prinks" "prinked" "prinked" "prinking");
lin print_N = mkN "print" "prints";
lin print_V = mkV "print" "prints" "printed" "printed" "printing";
lin print_V2 = mkV2 (mkV "print" "prints" "printed" "printed" "printing");
lin print_seller_N = mkN "print - seller" "print - sellers";
lin print_shop_N = mkN "print - shop" "print - shops";
lin printable_A = compoundA (mkA "printable");
lin printer_N = mkN "printer" "printers";
lin printing_N = mkN "printing" "printings";
lin printing_ink_N = mkN "printing - ink" "printing - inks";
lin printing_press_N = mkN "printing - press" "printing - presses";
lin printout_N = mkN "printout" "printouts";
lin prior_A = compoundA (mkA "prior");
lin prior_N = mkN "prior" "priors";
lin prioress_N = mkN "prioress" "prioresses";
lin priority_N = mkN "priority" "priorities";
lin priory_N = mkN "priory" "priories";
lin priscilla_PN = mkPN "Priscilla";
lin prise_V2 = mkV2 (mkV "prise" "prises" "prised" "prised" "prising");
lin prism_N = mkN "prism" "prisms";
lin prismatic_A = compoundA (mkA "prismatic");
lin prison_N = mkN "prison" "prisons";
lin prison_breaking_N = mkN "prison - breaking" "prison - breakings";
lin prisoner_N = mkN "prisoner" "prisoners";
lin pristine_A = compoundA (mkA "pristine");
lin privacy_N = mkN "privacy" ;
lin private_A = compoundA (mkA "private");
lin private_N = mkN "private" "privates";
lin privateer_N = mkN "privateer" "privateers";
lin privation_N = mkN "privation" "privations";
lin privatize_V2 = mkV2 (mkV "privatize");
lin privet_N = mkN "privet" ;
lin privilege_N = mkN "privilege" "privileges";
lin privileged_A = compoundA (mkA "privileged");
lin privy_A = compoundA (mkA "privy");
lin privy_N = mkN "privy" "privies";
lin prize_N = mkN "prize" "prizes";
lin prize_V2 = mkV2 (mkV "prize" "prizes" "prized" "prized" "prizing");
lin prize_fight_N = mkN "prize - fight" "prize - fights";
lin prize_money_N = mkN "prize - money" ;
lin prize_ring_N = mkN "prize - ring" "prize - rings";
lin pro_Adv = mkAdv "pro";
lin pro_N = mkN "pro" "pros";
lin pro_forma_A = compoundA (mkA "pro forma");
lin pro_forma_Adv = mkAdv "pro forma";
lin pro_rata_Adv = mkAdv "pro rata";
lin pro_tem_Adv = mkAdv "pro tem";
lin pro_tempore_Adv = mkAdv "pro tempore";
lin probabilistic_A = compoundA (mkA "probabilistic");
lin probabilistically_Adv = mkAdv "probabilistically";
lin probability_N = mkN "probability" "probabilities";
lin probable_A = compoundA (mkA "probable");
lin probable_N = mkN "probable" "probables";
lin probate_N = mkN "probate" "probates";
lin probate_V2 = mkV2 (mkV "probate" "probates" "probated" "probated" "probating");
lin probation_N = mkN "probation" ;
lin probationary_A = compoundA (mkA "probationary");
lin probationer_N = mkN "probationer" "probationers";
lin probe_N = mkN "probe" "probes";
lin probe_V = mkV "probe";
lin probe_V2 = mkV2 (mkV "probe" "probes" "probed" "probed" "probing");
lin probity_N = mkN "probity" ;
lin problem_N = mkN "problem" "problems";
lin problematic_A = compoundA (mkA "problematic");
lin problematically_Adv = mkAdv "problematically";
lin proboscis_N = mkN "proboscis" "proboscises";
lin procedural_A = compoundA (mkA "procedural");
lin procedure_N = mkN "procedure" "procedures";
lin proceed_V = mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding";
lin proceed_V2 = mkV2 (mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding");
lin proceed_V2V = mkV2V (mkV "proceed" "proceeds" "proceeded" "proceeded" "proceeding") noPrep to_Prep ;
lin proceeding_N = mkN "proceeding" "proceedings";
lin process_N = mkN "process" "processes";
lin process_V = mkV "process" "processes" "processed" "processed" "processing";
lin process_V2 = mkV2 (mkV "process" "processes" "processed" "processed" "processing");
lin process_server_N = mkN "process - server" "process - servers";
lin procession_N = mkN "procession" "processions";
lin processional_A = compoundA (mkA "processional");
lin processor_N = mkN "processor" "processors";
lin proclaim_V2 = mkV2 (mkV "proclaim" "proclaims" "proclaimed" "proclaimed" "proclaiming");
lin proclaim_VS = mkVS (mkV "proclaim");
lin proclamation_N = mkN "proclamation" "proclamations";
lin proclivity_N = mkN "proclivity" "proclivities";
lin proconsul_N = mkN "proconsul" "proconsuls";
lin proconsular_A = compoundA (mkA "proconsular");
lin proconsulate_N = mkN "proconsulate" "proconsulates";
lin procrastinate_V = mkV "procrastinate" "procrastinates" "procrastinated" "procrastinated" "procrastinating";
lin procrastination_N = mkN "procrastination" ;
lin procreate_V2 = mkV2 (mkV "procreate" "procreates" "procreated" "procreated" "procreating");
lin procreation_N = mkN "procreation" "procreations";
lin proctor_N = mkN "proctor" "proctors";
lin procurable_A = compoundA (mkA "procurable");
lin procurator_N = mkN "procurator" "procurators";
lin procure_V2 = mkV2 (mkV "procure" "procures" "procured" "procured" "procuring");
lin procurement_N = mkN "procurement" "procurements";
lin procurer_N = mkN "procurer" "procurers";
lin procuress_N = mkN "procuress" "procuresses";
lin prod_N = mkN "prod" "prods";
lin prod_V = mkV "prod" "prods" "prodded" "prodded" "prodding";
lin prod_V2 = mkV2 (mkV "prod" "prods" "prodded" "prodded" "prodding");
lin prod_V2V = mkV2V (mkV "prod" "prods" "prodded" "prodded" "prodding") noPrep to_Prep ;
lin prodigal_A = compoundA (mkA "prodigal");
lin prodigal_N = mkN "prodigal" "prodigals";
lin prodigality_N = mkN "prodigality" ;
lin prodigious_A = compoundA (mkA "prodigious");
lin prodigy_N = mkN "prodigy" "prodigies";
lin produce_N = mkN "produce" ;
lin produce_V = mkV "produce" "produces" "produced" "produced" "producing";
lin produce_V2 = mkV2 (mkV "produce" "produces" "produced" "produced" "producing");
lin producer_N = mkN "producer" "producers";
lin product_N = mkN "product" "products";
lin production_N = mkN "production" "productions";
lin productive_A = compoundA (mkA "productive");
lin productivity_N = mkN "productivity" ;
lin prof_PN = mkPN "Prof";
lin profanation_N = mkN "profanation" "profanations";
lin profane_A = compoundA (mkA "profane");
lin profane_V2 = mkV2 (mkV "profane" "profanes" "profaned" "profaned" "profaning");
lin profaneness_N = mkN "profaneness" ;
lin profanity_N = mkN "profanity" "profanities";
lin profess_V = mkV "profess" "professes" "professed" "professed" "professing";
lin profess_V2 = mkV2 (mkV "profess" "professes" "professed" "professed" "professing");
lin profess_V2V = mkV2V (mkV "profess" "professes" "professed" "professed" "professing") noPrep to_Prep ;
lin professed_A = compoundA (mkA "professed");
lin profession_N = mkN "profession" "professions";
lin professional_A = compoundA (mkA "professional");
lin professional_N = mkN "professional" "professionals";
lin professionalism_N = mkN "professionalism" ;
lin professor_N = mkN "professor" "professors";
lin professorial_A = compoundA (mkA "professorial");
lin professorship_N = mkN "professorship" "professorships";
lin proffer_N = mkN "proffer" "proffers";
lin proffer_V2 = mkV2 (mkV "proffer" "proffers" "proffered" "proffered" "proffering");
lin proficiency_N = mkN "proficiency" ;
lin proficient_A = compoundA (mkA "proficient");
lin profile_N = mkN "profile" "profiles";
lin profile_V2 = mkV2 (mkV "profile" "profiles" "profiled" "profiled" "profiling");
lin profit_N = mkN "profit" "profits";
lin profit_V = mkV "profit" "profits" "profited" "profited" "profiting";
lin profit_V2 = mkV2 (mkV "profit" "profits" "profited" "profited" "profiting");
lin profit_margin_N = mkN "profit - margin" "profit - margins";
lin profit_sharing_N = mkN "profit - sharing" ;
lin profitable_A = compoundA (mkA "profitable");
lin profiteer_N = mkN "profiteer" "profiteers";
lin profiteer_V = mkV "profiteer" "profiteers" "profiteered" "profiteered" "profiteering";
lin profitless_A = compoundA (mkA "profitless");
lin profligacy_N = mkN "profligacy" ;
lin profligate_A = compoundA (mkA "profligate");
lin profligate_N = mkN "profligate" "profligates";
lin profound_A = compoundA (mkA "profound");
lin profundity_N = mkN "profundity" "profundities";
lin profuse_A = compoundA (mkA "profuse");
lin profuseness_N = mkN "profuseness" ;
lin profusion_N = mkN "profusion" ;
lin progenitor_N = mkN "progenitor" "progenitors";
lin prognosis_N = mkN "prognosis" "prognoses" {- FIXME: guessed plural form -};
lin prognostic_A = compoundA (mkA "prognostic");
lin prognostic_N = mkN "prognostic" "prognostics";
lin prognosticate_V2 = mkV2 (mkV "prognosticate" "prognosticates" "prognosticated" "prognosticated" "prognosticating");
lin prognostication_N = mkN "prognostication" "prognostications";
lin program_N = mkN "program" "programs";
lin program_V2 = mkV2 (mkV "program" "programs" "programmed" "programmed" "programming");
lin program_V2V = mkV2V (mkV "program") noPrep to_Prep ;
lin programme_N = mkN "programme" "programmes";
lin programme_V2 = mkV2 (mkV "programme" "programmes" "programmed" "programmed" "programming");
lin programmer_N = mkN "programmer" "programmers";
lin progress_N = mkN "progress" "progresses";
lin progress_V = mkV "progress" "progresses" "progressed" "progressed" "progressing";
lin progress_V2 = mkV2 (mkV "progress" "progresses" "progressed" "progressed" "progressing");
lin progression_N = mkN "progression" ;
lin progressive_A = compoundA (mkA "progressive");
lin progressive_N = mkN "progressive" "progressives";
lin progressiveness_N = mkN "progressiveness" ;
lin prohibit_V = mkV "prohibit";
lin prohibit_V2 = mkV2 (mkV "prohibit" "prohibits" "prohibited" "prohibited" "prohibiting");
lin prohibit_VS = mkVS (mkV "prohibit");
lin prohibition_N = mkN "prohibition" "prohibitions";
lin prohibitionist_N = mkN "prohibitionist" "prohibitionists";
lin prohibitive_A = compoundA (mkA "prohibitive");
lin prohibitory_A = compoundA (mkA "prohibitory");
lin project_N = mkN "project" "projects";
lin project_V = mkV "project" "projects" "projected" "projected" "projecting";
lin project_V2 = mkV2 (mkV "project" "projects" "projected" "projected" "projecting");
lin project_V2V = mkV2V (mkV "project" "projects" "projected" "projected" "projecting") noPrep to_Prep ;
lin project_VS = mkVS (mkV "project" "projects" "projected" "projected" "projecting");
lin projectile_A = compoundA (mkA "projectile");
lin projectile_N = mkN "projectile" "projectiles";
lin projection_N = mkN "projection" "projections";
lin projectionist_N = mkN "projectionist" "projectionists";
lin projector_N = mkN "projector" "projectors";
lin prolapse_N = mkN "prolapse" "prolapses";
lin prolapse_V = mkV "prolapse" "prolapses" "prolapsed" "prolapsed" "prolapsing";
lin prole_N = mkN "prole" "proles";
lin proletarian_A = compoundA (mkA "proletarian");
lin proletarian_N = mkN "proletarian" "proletarians";
lin proletariat_N = mkN "proletariat" "proletariats";
lin proliferate_V = mkV "proliferate" "proliferates" "proliferated" "proliferated" "proliferating";
lin proliferate_V2 = mkV2 (mkV "proliferate" "proliferates" "proliferated" "proliferated" "proliferating");
lin proliferation_N = mkN "proliferation" "proliferations";
lin prolific_A = compoundA (mkA "prolific");
lin prolix_A = compoundA (mkA "prolix");
lin prolixity_N = mkN "prolixity" ;
lin prologue_N = mkN "prologue" "prologues";
lin prolong_V2 = mkV2 (mkV "prolong" "prolongs" "prolonged" "prolonged" "prolonging");
lin prolongation_N = mkN "prolongation" "prolongations";
lin prolonged_A = compoundA (mkA "prolonged");
lin prom_N = mkN "prom" "proms";
lin promenade_N = mkN "promenade" "promenades";
lin promenade_V = mkV "promenade" "promenades" "promenaded" "promenaded" "promenading";
lin promenade_V2 = mkV2 (mkV "promenade" "promenades" "promenaded" "promenaded" "promenading");
lin prominence_N = mkN "prominence" "prominences";
lin prominent_A = compoundA (mkA "prominent");
lin promiscuity_N = mkN "promiscuity" ;
lin promiscuous_A = compoundA (mkA "promiscuous");
lin promise_N = mkN "promise" "promises";
lin promise_V = mkV "promise" "promises" "promised" "promised" "promising";
lin promise_V2 = mkV2 (mkV "promise" "promises" "promised" "promised" "promising");
lin promise_VV = mkVV (mkV "promise" "promises" "promised" "promised" "promising");
lin promise_VS = mkVS (mkV "promise" "promises" "promised" "promised" "promising");
lin promising_A = compoundA (mkA "promising");
lin promissory_A = compoundA (mkA "promissory");
lin promontory_N = mkN "promontory" "promontories";
lin promote_V = mkV "promote";
lin promote_V2 = mkV2 (mkV "promote" "promotes" "promoted" "promoted" "promoting");
lin promoter_N = mkN "promoter" "promoters";
lin promotion_N = mkN "promotion" "promotions";
lin promotional_A = compoundA (mkA "promotional");
lin prompt_A = compoundA (mkA "prompt");
lin prompt_N = mkN "prompt" "prompts";
lin prompt_V2 = mkV2 (mkV "prompt" "prompts" "prompted" "prompted" "prompting");
lin prompt_V2V = mkV2V (mkV "prompt" "prompts" "prompted" "prompted" "prompting") noPrep to_Prep;
lin prompt_box_N = mkN "prompt - box" "prompt - boxes";
lin prompt_copy_N = mkN "prompt - copy" "prompt - copies";
lin prompter_N = mkN "prompter" "prompters";
lin prompting_N = mkN "prompting" "promptings";
lin promptitude_N = mkN "promptitude" ;
lin promptness_N = mkN "promptness" ;
lin promulgate_V2 = mkV2 (mkV "promulgate" "promulgates" "promulgated" "promulgated" "promulgating");
lin promulgation_N = mkN "promulgation" ;
lin prone_A = compoundA (mkA "prone");
lin proneness_N = mkN "proneness" ;
lin prong_N = mkN "prong" "prongs";
lin pronged_A = compoundA (mkA "pronged");
lin pronominal_A = compoundA (mkA "pronominal");
lin pronoun_N = mkN "pronoun" "pronouns";
lin pronounce_V = mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing";
lin pronounce_V2 = mkV2 (mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing");
lin pronounce_VS = mkVS (mkV "pronounce" "pronounces" "pronounced" "pronounced" "pronouncing");
lin pronounceable_A = compoundA (mkA "pronounceable");
lin pronounced_A = compoundA (mkA "pronounced");
lin pronouncement_N = mkN "pronouncement" "pronouncements";
lin pronto_Adv = mkAdv "pronto";
lin pronunciamento_N = mkN "pronunciamento" "pronunciamentos";
lin pronunciation_N = mkN "pronunciation" "pronunciations";
lin proof_A = compoundA (mkA "proof");
lin proof_N = mkN "proof" "proofs";
lin proof_V2 = mkV2 (mkV "proof" "proofs" "proofed" "proofed" "proofing");
lin proofread_V = mkV "proof" IrregEng.read_V;
lin proofread_V2 = mkV2 (mkV "proof" IrregEng.read_V);
lin proofreader_N = mkN "proofreader" "proofreaders";
lin prop_N = mkN "prop" "props";
lin prop_V2 = mkV2 (mkV "prop" "props" "propped" "propped" "propping");
lin propaganda_N = mkN "propaganda" ;
lin propagandist_N = mkN "propagandist" "propagandists";
lin propagandize_V = mkV "propagandize" "propagandizes" "propagandized" "propagandized" "propagandizing";
lin propagate_V = mkV "propagate" "propagates" "propagated" "propagated" "propagating";
lin propagate_V2 = mkV2 (mkV "propagate" "propagates" "propagated" "propagated" "propagating");
lin propagation_N = mkN "propagation" ;
lin propagator_N = mkN "propagator" "propagators";
lin propane_N = mkN "propane" ;
lin propel_V2 = mkV2 (mkV "propel" "propels" "propelled" "propelled" "propelling");
lin propellant_A = compoundA (mkA "propellant");
lin propellant_N = mkN "propellant" "propellants";
lin propellent_A = compoundA (mkA "propellent");
lin propellent_N = mkN "propellent" "propellents";
lin propeller_N = mkN "propeller" "propellers";
lin propensity_N = mkN "propensity" "propensities";
lin proper_A = compoundA (mkA "proper");
lin propertied_A = compoundA (mkA "propertied");
lin property_N = mkN "property" "properties";
lin property_man_N = mkN "property - man" "property - men";
lin property_master_N = mkN "property - master" "property - masters";
lin prophecy_N = mkN "prophecy" "prophecies";
lin prophesy_V = mkV "prophesy" "prophesies" "prophesied" "prophesied" "prophesying";
lin prophesy_V2 = mkV2 (mkV "prophesy" "prophesies" "prophesied" "prophesied" "prophesying");
lin prophet_N = mkN "prophet" "prophets";
lin prophetess_N = mkN "prophetess" "prophetesses";
lin prophetic_A = compoundA (mkA "prophetic");
lin prophetical_A = compoundA (mkA "prophetical");
lin prophylactic_A = compoundA (mkA "prophylactic");
lin prophylactic_N = mkN "prophylactic" "prophylactics";
lin prophylaxis_N = mkN "prophylaxis" ;
lin propinquity_N = mkN "propinquity" ;
lin propitiate_V2 = mkV2 (mkV "propitiate" "propitiates" "propitiated" "propitiated" "propitiating");
lin propitiation_N = mkN "propitiation" ;
lin propitiatory_A = compoundA (mkA "propitiatory");
lin propitious_A = compoundA (mkA "propitious");
lin proponent_N = mkN "proponent" "proponents";
lin proportion_N = mkN "proportion" "proportions";
lin proportion_V2 = mkV2 (mkV "proportion" "proportions" "proportioned" "proportioned" "proportioning");
lin proportionable_A = compoundA (mkA "proportionable");
lin proportional_A = compoundA (mkA "proportional");
lin proportionality_N = mkN "proportionality" ;
lin proportionate_A = compoundA (mkA "proportionate");
lin proposal_N = mkN "proposal" "proposals";
lin propose_V = mkV "propose" "proposes" "proposed" "proposed" "proposing";
lin propose_V2 = mkV2 (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin propose_VV = mkVV (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin propose_VS = mkVS (mkV "propose" "proposes" "proposed" "proposed" "proposing");
lin proposer_N = mkN "proposer" "proposers";
lin proposition_N = mkN "proposition" "propositions";
lin proposition_V2 = mkV2 (mkV "proposition" "propositions" "propositioned" "propositioned" "propositioning");
lin propound_V2 = mkV2 (mkV "propound" "propounds" "propounded" "propounded" "propounding");
lin proprietary_A = compoundA (mkA "proprietary");
lin proprietor_N = mkN "proprietor" "proprietors";
lin proprietress_N = mkN "proprietress" "proprietresses";
lin propriety_N = mkN "propriety" "proprieties";
lin propulsion_N = mkN "propulsion" ;
lin propulsive_A = compoundA (mkA "propulsive");
lin prorogation_N = mkN "prorogation" "prorogations";
lin prorogue_V2 = mkV2 (mkV "prorogue" "prorogues" "prorogued" "prorogued" "proroguing");
lin prosaic_A = compoundA (mkA "prosaic");
lin prosaically_Adv = mkAdv "prosaically";
lin proscenium_N = mkN "proscenium" "prosceniums";
lin proscribe_V2 = mkV2 (mkV "proscribe" "proscribes" "proscribed" "proscribed" "proscribing");
lin proscription_N = mkN "proscription" "proscriptions";
lin prose_N = mkN "prose" ;
lin prosecute_V2 = mkV2 (mkV "prosecute" "prosecutes" "prosecuted" "prosecuted" "prosecuting");
lin prosecution_N = mkN "prosecution" "prosecutions";
lin prosecutor_N = mkN "prosecutor" "prosecutors";
lin proselyte_N = mkN "proselyte" "proselytes";
lin proselytize_V = mkV "proselytize" "proselytizes" "proselytized" "proselytized" "proselytizing";
lin proselytize_V2 = mkV2 (mkV "proselytize" "proselytizes" "proselytized" "proselytized" "proselytizing");
lin prosily_Adv = mkAdv "prosily";
lin prosiness_N = mkN "prosiness" ;
lin prosody_N = mkN "prosody" ;
lin prospect_N = mkN "prospect" "prospects";
lin prospect_V = mkV "prospect" "prospects" "prospected" "prospected" "prospecting";
lin prospective_A = compoundA (mkA "prospective");
lin prospector_N = mkN "prospector" "prospectors";
lin prospectus_N = mkN "prospectus" "prospectuses";
lin prosper_V = mkV "prosper" "prospers" "prospered" "prospered" "prospering";
lin prosper_V2 = mkV2 (mkV "prosper" "prospers" "prospered" "prospered" "prospering");
lin prosperity_N = mkN "prosperity" ;
lin prosperous_A = compoundA (mkA "prosperous");
lin prostate_N = mkN "prostate" "prostates";
lin prostitute_N = mkN "prostitute" "prostitutes";
lin prostitute_V2 = mkV2 (mkV "prostitute" "prostitutes" "prostituted" "prostituted" "prostituting");
lin prostitution_N = mkN "prostitution" ;
lin prostrate_A = compoundA (mkA "prostrate");
lin prostrate_V2 = mkV2 (mkV "prostrate" "prostrates" "prostrated" "prostrated" "prostrating");
lin prostration_N = mkN "prostration" "prostrations";
lin prosy_A = mkA "prosy" "prosier";
lin protagonist_N = mkN "protagonist" "protagonists";
lin protean_A = compoundA (mkA "protean");
lin protect_V = mkV "protect";
lin protect_V2 = mkV2 (mkV "protect" "protects" "protected" "protected" "protecting");
lin protection_N = mkN "protection" "protections";
lin protectionism_N = mkN "protectionism" ;
lin protectionist_N = mkN "protectionist" "protectionists";
lin protective_A = compoundA (mkA "protective");
lin protector_N = mkN "protector" "protectors";
lin protectorate_N = mkN "protectorate" "protectorates";
lin protege_N = mkN "protégé" "protégés";
lin protegee_N = mkN "protégée" "protégées";
lin protein_N = mkN "protein" "proteins";
lin protest_N = mkN "protest" "protests";
lin protest_V = mkV "protest" "protests" "protested" "protested" "protesting";
lin protest_V2 = mkV2 (mkV "protest" "protests" "protested" "protested" "protesting");
lin protestant_A = compoundA (mkA "protestant");
lin protestant_N = mkN "protestant" "protestants";
lin protestantism_N = mkN "protestantism" ;
lin protestation_N = mkN "protestation" "protestations";
lin protester_N = mkN "protester" "protesters";
lin protestingly_Adv = mkAdv "protestingly";
lin protocol_N = mkN "protocol" "protocols";
lin proton_N = mkN "proton" "protons";
lin protoplasm_N = mkN "protoplasm" ;
lin prototype_N = mkN "prototype" "prototypes";
lin protract_V2 = mkV2 (mkV "protract" "protracts" "protracted" "protracted" "protracting");
lin protraction_N = mkN "protraction" "protractions";
lin protractor_N = mkN "protractor" "protractors";
lin protrude_V = mkV "protrude" "protrudes" "protruded" "protruded" "protruding";
lin protrude_V2 = mkV2 (mkV "protrude" "protrudes" "protruded" "protruded" "protruding");
lin protrusion_N = mkN "protrusion" "protrusions";
lin protrusive_A = compoundA (mkA "protrusive");
lin protuberance_N = mkN "protuberance" "protuberances";
lin protuberant_A = compoundA (mkA "protuberant");
lin proud_A = mkA "proud" "prouder";
lin provable_A = compoundA (mkA "provable");
lin prove_V = mkV "prove" "proves" "proved" "proved" "proving";
lin prove_V2 = mkV2 (mkV "prove" "proves" "proved" "proved" "proving");
lin prove_V2V = mkV2V (mkV "prove" "proves" "proved" "proved" "proving") noPrep to_Prep ;
lin prove_VA = mkVA (mkV "prove" "proves" "proved" "proved" "proving");
lin prove_VS = mkVS (mkV "prove" "proves" "proved" "proved" "proving");
lin provenance_N = mkN "provenance" ;
lin provender_N = mkN "provender" ;
lin proverb_N = mkN "proverb" "proverbs";
lin proverbial_A = compoundA (mkA "proverbial");
lin provide_V = mkV "provide" "provides" "provided" "provided" "providing";
lin provide_V2 = mkV2 (mkV "provide" "provides" "provided" "provided" "providing");
lin provide_VS = mkVS (mkV "provide" "provides" "provided" "provided" "providing");
lin providence_N = mkN "providence" ;
lin providence_PN = mkPN "Providence";
lin provident_A = compoundA (mkA "provident");
lin providential_A = compoundA (mkA "providential");
lin provider_N = mkN "provider" "providers";
lin province_N = mkN "province" "provinces";
lin provincial_A = compoundA (mkA "provincial");
lin provincial_N = mkN "provincial" "provincials";
lin provincialism_N = mkN "provincialism" "provincialisms";
lin provision_N = mkN "provision" "provisions";
lin provision_V2 = mkV2 (mkV "provision" "provisions" "provisioned" "provisioned" "provisioning");
lin provisional_A = compoundA (mkA "provisional");
lin proviso_N = mkN "proviso" "provisos";
lin provisory_A = compoundA (mkA "provisory");
lin provocation_N = mkN "provocation" "provocations";
lin provocative_A = compoundA (mkA "provocative");
lin provoke_V2 = mkV2 (mkV "provoke" "provokes" "provoked" "provoked" "provoking");
lin provoking_A = compoundA (mkA "provoking");
lin provost_N = mkN "provost" "provosts";
lin prow_N = mkN "prow" "prows";
lin prowess_N = mkN "prowess" ;
lin prowl_N = mkN "prowl" "prowls";
lin prowl_V = mkV "prowl" "prowls" "prowled" "prowled" "prowling";
lin prowl_V2 = mkV2 (mkV "prowl" "prowls" "prowled" "prowled" "prowling");
lin prowler_N = mkN "prowler" "prowlers";
lin prox_Adv = mkAdv "prox";
lin proximate_A = compoundA (mkA "proximate");
lin proximity_N = mkN "proximity" ;
lin proximo_A = compoundA (mkA "proximo");
lin proxy_N = mkN "proxy" "proxies";
lin pru_PN = mkPN "Pru";
lin prude_N = mkN "prude" "prudes";
lin prudence_N = mkN "prudence" ;
lin prudence_PN = mkPN "Prudence";
lin prudent_A = compoundA (mkA "prudent");
lin prudential_A = compoundA (mkA "prudential");
lin prudery_N = mkN "prudery" "pruderies";
lin prudhoe_PN = mkPN "Prudhoe";
lin prudish_A = compoundA (mkA "prudish");
lin prune_N = mkN "prune" "prunes";
lin prune_V2 = mkV2 (mkV "prune" "prunes" "pruned" "pruned" "pruning");
lin pruning_N = mkN "pruning" ;
lin pruning_hook_N = mkN "pruning - hook" "pruning - hooks";
lin pruning_knife_N = mkN "pruning - knife" "pruning - knives";
lin pruning_saw_N = mkN "pruning - saw" "pruning - saws";
lin prurience_N = mkN "prurience" ;
lin pruriency_N = mkN "pruriency" ;
lin prurient_A = compoundA (mkA "prurient");
lin prussian_A = compoundA (mkA "Prussian");
lin prussian_N = mkN "Prussian" "Prussians";
lin prussic_A = compoundA (mkA "prussic");
lin pry_V = mkV "pry" "pries" "pried" "pried" "prying";
lin pry_V2 = mkV2 (mkV "pry" "pries" "pried" "pried" "prying");
lin pryingly_Adv = mkAdv "pryingly";
lin psalm_N = mkN "psalm" "psalms";
lin psalmist_N = mkN "psalmist" "psalmists";
lin psalmody_N = mkN "psalmody" "psalmodies";
lin psalter_N = mkN "psalter" "psalters";
lin psaltery_N = mkN "psaltery" "psalteries";
lin psephologist_N = mkN "psephologist" "psephologists";
lin psephology_N = mkN "psephology" ;
lin pseud_N = mkN "pseud" "pseuds";
lin pseudo_A = compoundA (mkA "pseudo");
lin pseudo_N = mkN "pseudo" "pseudos";
lin pseudonym_N = mkN "pseudonym" "pseudonyms";
lin pseudonymous_A = compoundA (mkA "pseudonymous");
lin psittacosis_N = mkN "psittacosis" ;
lin psyche_N = mkN "psyche" "psyches";
lin psychedelic_A = compoundA (mkA "psychedelic");
lin psychiatric_A = compoundA (mkA "psychiatric");
lin psychiatrist_N = mkN "psychiatrist" "psychiatrists";
lin psychiatry_N = mkN "psychiatry" ;
lin psychic_A = compoundA (mkA "psychic");
lin psychic_N = mkN "psychic" "psychics";
lin psychical_A = compoundA (mkA "psychical");
lin psychoanalyse_V2 = mkV2 (mkV "psychoanalyse" "psychoanalyses" "psychoanalysed" "psychoanalysed" "psychoanalysing");
lin psychoanalysis_N = mkN "psychoanalysis" ;
lin psychoanalyst_N = mkN "psychoanalyst" "psychoanalysts";
lin psychoanalytic_A = compoundA (mkA "psychoanalytic");
lin psychoanalytical_A = compoundA (mkA "psychoanalytical");
lin psychoanalyze_V2 = mkV2 (mkV "psychoanalyze" "psychoanalyzes" "psychoanalyzed" "psychoanalyzed" "psychoanalyzing");
lin psychological_A = compoundA (mkA "psychological");
lin psychologist_N = mkN "psychologist" "psychologists";
lin psychology_N = mkN "psychology" "psychologies";
lin psychopath_N = mkN "psychopath" "psychopaths";
lin psychopathic_A = compoundA (mkA "psychopathic");
lin psychosis_N = mkN "psychosis" "psychoses" {- FIXME: guessed plural form -};
lin psychosomatic_A = compoundA (mkA "psychosomatic");
lin psychotherapy_N = mkN "psychotherapy" ;
lin psychotic_N = mkN "psychotic" "psychotics";
lin pt_N = mkN "pt" ;
lin pta_N = mkN "pta" ;
lin ptarmigan_N = mkN "ptarmigan" "ptarmigans";
lin pte_PN = mkPN "Pte";
lin pterodactyl_N = mkN "pterodactyl" "pterodactyls";
lin pto_PN = mkPN "Pto";
lin ptomaine_N = mkN "ptomaine" "ptomaines";
lin pty_PN = mkPN "Pty";
lin pub_N = mkN "pub" "pubs";
lin pub_crawl_N = mkN "pub - crawl" "pub - crawls";
lin pub_crawl_V = mkV "pub - crawl" "pub - crawls" "pub - crawled" "pub - crawled" "pub - crawling";
lin puberty_N = mkN "puberty" ;
lin pubic_A = compoundA (mkA "pubic");
lin public_A = compoundA (mkA "public");
lin public_N = mkN "public" "publics";
lin public_spirited_A = compoundA (mkA "public - spirited");
lin publican_N = mkN "publican" "publicans";
lin publication_N = mkN "publication" "publications";
lin publicist_N = mkN "publicist" "publicists";
lin publicity_N = mkN "publicity" ;
lin publicize_V2 = mkV2 (mkV "publicize" "publicizes" "publicized" "publicized" "publicizing");
lin publish_V = mkV "publish";
lin publish_V2 = mkV2 (mkV "publish" "publishes" "published" "published" "publishing");
lin publisher_N = mkN "publisher" "publishers";
lin puce_N = mkN "puce" ;
lin puck_N = mkN "puck" "pucks";
lin pucker_N = mkN "pucker" "puckers";
lin pucker_V = mkV "pucker" "puckers" "puckered" "puckered" "puckering";
lin pucker_V2 = mkV2 (mkV "pucker" "puckers" "puckered" "puckered" "puckering");
lin puckish_A = compoundA (mkA "puckish");
lin pud_N = mkN "pud" ;
lin pudden_N = mkN "pudden" "puddens";
lin pudden_head_N = mkN "pudden - head" "pudden - heads";
lin pudding_N = mkN "pudding" "puddings";
lin pudding_face_N = mkN "pudding - face" "pudding - faces";
lin puddle_N = mkN "puddle" "puddles";
lin puddle_V2 = mkV2 (mkV "puddle" "puddles" "puddled" "puddled" "puddling");
lin puddler_N = mkN "puddler" "puddlers";
lin pudgy_A = mkA "pudgy" "pudgier";
lin pudsey_PN = mkPN "Pudsey";
lin pueblo_N = mkN "pueblo" "pueblos";
lin puerile_A = compoundA (mkA "puerile");
lin puerility_N = mkN "puerility" "puerilities";
lin puerperal_A = compoundA (mkA "puerperal");
lin puff_N = mkN "puff" "puffs";
lin puff_V = mkV "puff" "puffs" "puffed" "puffed" "puffing";
lin puff_V2 = mkV2 (mkV "puff" "puffs" "puffed" "puffed" "puffing");
lin puffball_N = mkN "puffball" "puffballs";
lin puffin_N = mkN "puffin" "puffins";
lin puffiness_N = mkN "puffiness" ;
lin puffy_A = mkA "puffy" "puffier";
lin pug_N = mkN "pug" "pugs";
lin pug_dog_N = mkN "pug - dog" "pug - dogs";
lin pug_nose_A = compoundA (mkA "pug - nose");
lin pug_nose_N = mkN "pug - nose" "pug - noses";
lin pug_nosed_A = compoundA (mkA "pug - nosed");
lin pugilism_N = mkN "pugilism" ;
lin pugilist_N = mkN "pugilist" "pugilists";
lin pugilistic_A = compoundA (mkA "pugilistic");
lin pugnacious_A = compoundA (mkA "pugnacious");
lin pugnacity_N = mkN "pugnacity" ;
lin puissance_N = mkN "puissance" ;
lin puissant_A = compoundA (mkA "puissant");
lin puke_N = mkN "puke" ;
lin puke_V = mkV "puke" "pukes" "puked" "puked" "puking";
lin puke_V2 = mkV2 (mkV "puke" "pukes" "puked" "puked" "puking");
lin pukka_A = compoundA (mkA "pukka");
lin pulchritude_N = mkN "pulchritude" ;
lin pulchritudinous_A = compoundA (mkA "pulchritudinous");
lin pule_V = mkV "pule" "pules" "puled" "puled" "puling";
lin pull_N = mkN "pull" "pulls";
lin pull_V = mkV "pull" "pulls" "pulled" "pulled" "pulling";
lin pull_V2 = mkV2 (mkV "pull" "pulls" "pulled" "pulled" "pulling");
lin pull_in_N = mkN "pull - in" "pull - ins";
lin pull_off_N = mkN "pull - off" "pull - offs";
lin pull_out_N = mkN "pull - out" "pull - outs";
lin pull_through_N = mkN "pull - through" "pull - throughs";
lin pull_up_N = mkN "pull - up" "pull - ups";
lin pullet_N = mkN "pullet" "pullets";
lin pulley_N = mkN "pulley" "pulleys";
lin pulley_block_N = mkN "pulley - block" "pulley - blocks";
lin pullman_N = mkN "pullman" "pullmans";
lin pullover_N = mkN "pullover" "pullovers";
lin pullulate_V = mkV "pullulate" "pullulates" "pullulated" "pullulated" "pullulating";
lin pulmonary_A = compoundA (mkA "pulmonary");
lin pulp_N = mkN "pulp" "pulps";
lin pulp_V = mkV "pulp" "pulps" "pulped" "pulped" "pulping";
lin pulp_V2 = mkV2 (mkV "pulp" "pulps" "pulped" "pulped" "pulping");
lin pulpit_N = mkN "pulpit" "pulpits";
lin pulpy_A = mkA "pulpy" "pulpier";
lin pulque_N = mkN "pulque" ;
lin pulsar_N = mkN "pulsar" "pulsars";
lin pulsate_V = mkV "pulsate" "pulsates" "pulsated" "pulsated" "pulsating";
lin pulsate_V2 = mkV2 (mkV "pulsate" "pulsates" "pulsated" "pulsated" "pulsating");
lin pulsation_N = mkN "pulsation" "pulsations";
lin pulse_N = mkN "pulse" "pulses";
lin pulse_V = mkV "pulse" "pulses" "pulsed" "pulsed" "pulsing";
lin pulverize_V = mkV "pulverize" "pulverizes" "pulverized" "pulverized" "pulverizing";
lin pulverize_V2 = mkV2 (mkV "pulverize" "pulverizes" "pulverized" "pulverized" "pulverizing");
lin puma_N = mkN "puma" "pumas";
lin pumice_N = mkN "pumice" ;
lin pumice_stone_N = mkN "pumice - stone" "pumice - stones";
lin pummel_V2 = mkV2 (mkV "pummel" "pummels" "pummelled" "pummelled" "pummelling");
lin pump_N = mkN "pump" "pumps";
lin pump_V = mkV "pump" "pumps" "pumped" "pumped" "pumping";
lin pump_V2 = mkV2 (mkV "pump" "pumps" "pumped" "pumped" "pumping");
lin pump_room_N = mkN "pump - room" "pump - rooms";
lin pumpernickel_N = mkN "pumpernickel" ;
lin pumpkin_N = mkN "pumpkin" "pumpkins";
lin pun_N = mkN "pun" "puns";
lin pun_V = mkV "pun" "puns" "punned" "punned" "punning";
lin punch_N = mkN "punch" "punches";
lin punch_V2 = mkV2 (mkV "punch" "punches" "punched" "punched" "punching");
lin punch_drunk_A = compoundA (mkA "punch - drunk");
lin punch_up_N = mkN "punch - up" "punch - ups";
lin punchball_N = mkN "punchball" "punchballs";
lin punchbowl_N = mkN "punchbowl" "punchbowls";
lin punching_ball_N = mkN "punching - ball" "punching - balls";
lin punctilio_N = mkN "punctilio" "punctilios";
lin punctilious_A = compoundA (mkA "punctilious");
lin punctiliousness_N = mkN "punctiliousness" ;
lin punctual_A = compoundA (mkA "punctual");
lin punctuality_N = mkN "punctuality" ;
lin punctuate_V2 = mkV2 (mkV "punctuate" "punctuates" "punctuated" "punctuated" "punctuating");
lin punctuation_N = mkN "punctuation" ;
lin puncture_N = mkN "puncture" "punctures";
lin puncture_V = mkV "puncture" "punctures" "punctured" "punctured" "puncturing";
lin puncture_V2 = mkV2 (mkV "puncture" "punctures" "punctured" "punctured" "puncturing");
lin pundit_N = mkN "pundit" "pundits";
lin pungency_N = mkN "pungency" ;
lin pungent_A = compoundA (mkA "pungent");
lin punic_A = compoundA (mkA "punic");
lin punily_Adv = mkAdv "punily";
lin punish_V2 = mkV2 (mkV "punish" "punishes" "punished" "punished" "punishing");
lin punishable_A = compoundA (mkA "punishable");
lin punishment_N = mkN "punishment" "punishments";
lin punitive_A = compoundA (mkA "punitive");
lin punk_N = mkN "punk" "punks";
lin punkah_N = mkN "punkah" "punkahs";
lin punnet_N = mkN "punnet" "punnets";
lin punster_N = mkN "punster" "punsters";
lin punt_N = mkN "punt" "punts";
lin punt_V = mkV "punt" "punts" "punted" "punted" "punting";
lin punt_V2 = mkV2 (mkV "punt" "punts" "punted" "punted" "punting");
lin punter_N = mkN "punter" "punters";
lin puny_A = mkA "puny" "punier";
lin pup_N = mkN "pup" "pups";
lin pupa_N = mkN "pupa" "pupas";
lin pupil_N = mkN "pupil" "pupils";
lin puppet_N = mkN "puppet" "puppets";
lin puppeteer_N = mkN "puppeteer" "puppeteers";
lin puppy_N = mkN "puppy" "puppies";
lin purblind_A = compoundA (mkA "purblind");
lin purchasable_A = compoundA (mkA "purchasable");
lin purchase_N = mkN "purchase" "purchases";
lin purchase_V2 = mkV2 (mkV "purchase" "purchases" "purchased" "purchased" "purchasing");
lin purchaser_N = mkN "purchaser" "purchasers";
lin purdah_N = mkN "purdah" ;
lin pure_A = mkA "pure" "purer";
lin puree_N = mkN "purée" "purées";
lin pureness_N = mkN "pureness" ;
lin purgation_N = mkN "purgation" ;
lin purgative_A = compoundA (mkA "purgative");
lin purgative_N = mkN "purgative" "purgatives";
lin purgatorial_A = compoundA (mkA "purgatorial");
lin purgatory_N = mkN "purgatory" "purgatories";
lin purge_N = mkN "purge" "purges";
lin purge_V2 = mkV2 (mkV "purge" "purges" "purged" "purged" "purging");
lin purification_N = mkN "purification" "purifications";
lin purifier_N = mkN "purifier" "purifiers";
lin purify_V2 = mkV2 (mkV "purify" "purifies" "purified" "purified" "purifying");
lin purist_N = mkN "purist" "purists";
lin puritan_A = compoundA (mkA "puritan");
lin puritan_N = mkN "puritan" "puritans";
lin puritanical_A = compoundA (mkA "puritanical");
lin puritanism_N = mkN "puritanism" ;
lin purity_N = mkN "purity" ;
lin purl_N = mkN "purl" "purls";
lin purl_V = mkV "purl" "purls" "purled" "purled" "purling";
lin purl_V2 = mkV2 (mkV "purl" "purls" "purled" "purled" "purling");
lin purloin_V2 = mkV2 (mkV "purloin" "purloins" "purloined" "purloined" "purloining");
lin purple_A = compoundA (mkA "purple");
lin purple_N = mkN "purple" "purples";
lin purplish_A = compoundA (mkA "purplish");
lin purport_N = mkN "purport" ;
lin purport_V2 = mkV2 (mkV "purport" "purports" "purported" "purported" "purporting");
lin purport_V2V = mkV2V (mkV "purport") noPrep to_Prep ;
lin purpose_N = mkN "purpose" "purposes";
lin purpose_V2 = mkV2 (mkV "purpose" "purposes" "purposed" "purposed" "purposing");
lin purpose_built_A = compoundA (mkA "purpose - built");
lin purposeful_A = compoundA (mkA "purposeful");
lin purposeless_A = compoundA (mkA "purposeless");
lin purposely_Adv = mkAdv "purposely";
lin purposive_A = compoundA (mkA "purposive");
lin purr_N = mkN "purr" "purrs";
lin purr_V = mkV "purr" "purrs" "purred" "purred" "purring";
lin purr_V2 = mkV2 (mkV "purr" "purrs" "purred" "purred" "purring");
lin purr_VS = mkVS (mkV "purr" "purrs" "purred" "purred" "purring");
lin purse_N = mkN "purse" "purses";
lin purse_V2 = mkV2 (mkV "purse" "purses" "pursed" "pursed" "pursing");
lin purse_proud_A = compoundA (mkA "purse - proud");
lin purser_N = mkN "purser" "pursers";
lin pursuance_N = mkN "pursuance" "pursuances";
lin pursuant_A = compoundA (mkA "pursuant");
lin pursue_V = mkV "pursue";
lin pursue_V2 = mkV2 (mkV "pursue" "pursues" "pursued" "pursued" "pursuing");
lin pursuer_N = mkN "pursuer" "pursuers";
lin pursuit_N = mkN "pursuit" "pursuits";
lin pursy_A = compoundA (mkA "pursy");
lin purulence_N = mkN "purulence" ;
lin purulent_A = compoundA (mkA "purulent");
lin purvey_V = mkV "purvey" "purveys" "purveyed" "purveyed" "purveying";
lin purvey_V2 = mkV2 (mkV "purvey" "purveys" "purveyed" "purveyed" "purveying");
lin purveyance_N = mkN "purveyance" "purveyances";
lin purveyor_N = mkN "purveyor" "purveyors";
lin purview_N = mkN "purview" "purviews";
lin pus_N = mkN "pus" ;
lin pusan_PN = mkPN "Pusan";
lin push_N = mkN "push" "pushes";
lin push_V = mkV "push" "pushes" "pushed" "pushed" "pushing";
lin push_V2 = mkV2 (mkV "push" "pushes" "pushed" "pushed" "pushing");
lin push_V2V = mkV2V (mkV "push" "pushes" "pushed" "pushed" "pushing") noPrep to_Prep ;
lin push_VS = mkVS (mkV "push" "pushes" "pushed" "pushed" "pushing");
lin push_bike_N = mkN "push - bike" "push - bikes";
lin pushcart_N = mkN "pushcart" "pushcarts";
lin pushchair_N = mkN "pushchair" "pushchairs";
lin pusher_N = mkN "pusher" "pushers";
lin pushful_A = compoundA (mkA "pushful");
lin pushing_A = compoundA (mkA "pushing");
lin pushover_N = mkN "pushover" "pushovers";
lin pusillanimity_N = mkN "pusillanimity" ;
lin pusillanimous_A = compoundA (mkA "pusillanimous");
lin puss_N = mkN "puss" "IRREG";
lin pussy_N = mkN "pussy" "pussies";
lin pussycat_N = mkN "pussycat" "pussycats";
lin pussyfoot_V = mkV "pussyfoot" "pussyfoots" "pussyfooted" "pussyfooted" "pussyfooting";
lin pustule_N = mkN "pustule" "pustules";
lin put_N = mkN "put" "puts";
lin put_V = IrregEng.put_V;
lin put_V2 = mkV2 (IrregEng.put_V);
lin put_V2V = mkV2V (IrregEng.put_V) noPrep to_Prep ;
lin put_VS = mkVS (IrregEng.put_V);
lin put_down_N = mkN "put - down" "put - downs";
lin put_on_N = mkN "put - on" "put - ons";
lin putative_A = compoundA (mkA "putative");
lin putrefaction_N = mkN "putrefaction" "putrefactions";
lin putrefy_V = mkV "putrefy" "putrefies" "putrefied" "putrefied" "putrefying";
lin putrefy_V2 = mkV2 (mkV "putrefy" "putrefies" "putrefied" "putrefied" "putrefying");
lin putrescence_N = mkN "putrescence" "putrescences";
lin putrescent_A = compoundA (mkA "putrescent");
lin putrid_A = compoundA (mkA "putrid");
lin putridity_N = mkN "putridity" ;
lin putsch_N = mkN "putsch" "putsches";
lin putt_N = mkN "putt" "putts";
lin putt_V = mkV "putt" "putts" "putted" "putted" "putting";
lin putt_V2 = mkV2 (mkV "putt" "putts" "putted" "putted" "putting");
lin puttee_N = mkN "puttee" "puttees";
lin putter_V = mkV "putter" "putters" "puttered" "puttered" "puttering";
lin putter_V2 = mkV2 (mkV "putter" "putters" "puttered" "puttered" "puttering");
lin putting_green_N = mkN "putting - green" "putting - greens";
lin putting_iron_N = mkN "putting - iron" "putting - irons";
lin putty_N = mkN "putty" ;
lin putty_V2 = mkV2 (mkV "putty" "putties" "puttied" "puttied" "puttying");
lin puzzle_N = mkN "puzzle" "puzzles";
lin puzzle_V = mkV "puzzle" "puzzles" "puzzled" "puzzled" "puzzling";
lin puzzle_V2 = mkV2 (mkV "puzzle" "puzzles" "puzzled" "puzzled" "puzzling");
lin puzzlement_N = mkN "puzzlement" "puzzlements";
lin puzzler_N = mkN "puzzler" "puzzlers";
lin pwllheli_PN = mkPN "Pwllheli";
lin pygmy_N = mkN "pygmy" "pygmies";
lin pyjama_A = compoundA (mkA "pyjama");
lin pyle_PN = mkPN "Pyle";
lin pylon_N = mkN "pylon" "pylons";
lin pyongyang_PN = mkPN "Pyongyang";
lin pyorrhoea_N = mkN "pyorrhoea" ;
lin pyramid_N = mkN "pyramid" "pyramids";
lin pyre_N = mkN "pyre" "pyres";
lin pyrites_N = mkN "pyrites" ;
lin pyrotechnic_A = compoundA (mkA "pyrotechnic");
lin pyrrhic_A = compoundA (mkA "pyrrhic");
lin python_N = mkN "python" "pythons";
lin pyx_N = mkN "pyx" "pyxes";
lin qatar_PN = mkPN "Qatar";
lin qatari_A = compoundA (mkA "qatari");
lin qatari_N = mkN "qatari" "qataris";
lin qc_N = mkN "qc" ;
lin qed_PN = mkPN "Qed";
lin qt_N = mkN "qt" "qt";
lin quack_N = mkN "quack" "quacks";
lin quack_V = mkV "quack" "quacks" "quacked" "quacked" "quacking";
lin quack_quack_N = mkN "quack - quack" "quack - quacks";
lin quackery_N = mkN "quackery" ;
lin quad_N = mkN "quad" "quads";
lin quadrangle_N = mkN "quadrangle" "quadrangles";
lin quadrangular_A = compoundA (mkA "quadrangular");
lin quadrant_N = mkN "quadrant" "quadrants";
lin quadratic_A = compoundA (mkA "quadratic");
lin quadrilateral_A = compoundA (mkA "quadrilateral");
lin quadrilateral_N = mkN "quadrilateral" "quadrilaterals";
lin quadrille_N = mkN "quadrille" "quadrilles";
lin quadrillion_N = mkN "quadrillion" "quadrillions";
lin quadrophonic_A = compoundA (mkA "quadrophonic");
lin quadrophony_N = mkN "quadrophony" ;
lin quadruped_N = mkN "quadruped" "quadrupeds";
lin quadruple_A = compoundA (mkA "quadruple");
lin quadruple_N = mkN "quadruple" "quadruples";
lin quadruple_V = mkV "quadruple" "quadruples" "quadrupled" "quadrupled" "quadrupling";
lin quadruple_V2 = mkV2 (mkV "quadruple" "quadruples" "quadrupled" "quadrupled" "quadrupling");
lin quadruplet_N = mkN "quadruplet" "quadruplets";
lin quadruplicate_A = compoundA (mkA "quadruplicate");
lin quadruplicate_N = mkN "quadruplicate" "quadruplicates";
lin quadruplicate_V2 = mkV2 (mkV "quadruplicate" "quadruplicates" "quadruplicated" "quadruplicated" "quadruplicating");
lin quaff_V = mkV "quaff" "quaffs" "quaffed" "quaffed" "quaffing";
lin quaff_V2 = mkV2 (mkV "quaff" "quaffs" "quaffed" "quaffed" "quaffing");
lin quagga_N = mkN "quagga" "quaggas";
lin quagmire_N = mkN "quagmire" "quagmires";
lin quai_d'orsay_N = mkN "quai d'orsay" "IRREG";
lin quail_N = mkN "quail" "quails";
lin quail_V = mkV "quail" "quails" "quailed" "quailed" "quailing";
lin quaint_A = mkA "quaint" "quainter";
lin quaintness_N = mkN "quaintness" ;
lin quake_N = mkN "quake" "quakes";
lin quake_V = mkV "quake" "quakes" "quaked" "quaked" "quaking";
lin quaker_N = mkN "quaker" "quakers";
lin qualification_N = mkN "qualification" "qualifications";
lin qualified_A = compoundA (mkA "qualified");
lin qualifier_N = mkN "qualifier" "qualifiers";
lin qualify_V = mkV "qualify" "qualifies" "qualified" "qualified" "qualifying";
lin qualify_V2 = mkV2 (mkV "qualify" "qualifies" "qualified" "qualified" "qualifying");
lin qualitative_A = compoundA (mkA "qualitative");
lin quality_N = mkN "quality" "qualities";
lin qualm_N = mkN "qualm" "qualms";
lin quandary_N = mkN "quandary" "quandaries";
lin quango_N = mkN "quango" "quangos";
lin quantify_V2 = mkV2 (mkV "quantify" "quantifies" "quantified" "quantified" "quantifying");
lin quantitative_A = compoundA (mkA "quantitative");
lin quantity_N = mkN "quantity" "quantities";
lin quantum_N = mkN "quantum" "quanta" {- FIXME: guessed plural form -};
lin quarantine_N = mkN "quarantine" ;
lin quarantine_V2 = mkV2 (mkV "quarantine" "quarantines" "quarantined" "quarantined" "quarantining");
lin quark_N = mkN "quark" "quarks";
lin quarrel_N = mkN "quarrel" "quarrels";
lin quarrel_V = mkV "quarrel" "quarrels" "quarrelled" "quarrelled" "quarrelling";
lin quarrelsome_A = compoundA (mkA "quarrelsome");
lin quarry_N = mkN "quarry" "quarries";
lin quarry_V = mkV "quarry" "quarries" "quarried" "quarried" "quarrying";
lin quarry_V2 = mkV2 (mkV "quarry" "quarries" "quarried" "quarried" "quarrying");
lin quarryman_N = mkN "quarryman" "quarrymen" {- FIXME: guessed plural form -};
lin quart_N = mkN "quart" "quarts";
lin quarter_N = mkN "quarter" "quarters";
lin quarter_V2 = mkV2 (mkV "quarter" "quarters" "quartered" "quartered" "quartering");
lin quarter_day_N = mkN "quarter - day" "quarter - days";
lin quarter_deck_N = mkN "quarter - deck" "quarter - decks";
lin quarter_plate_N = mkN "quarter - plate" "quarter - plates";
lin quarterfinal_N = mkN "quarterfinal" "quarterfinals";
lin quartering_N = mkN "quartering" "quarterings";
lin quarterlight_N = mkN "quarterlight" "quarterlights";
lin quarterly_A = compoundA (mkA "quarterly");
lin quarterly_Adv = mkAdv "quarterly";
lin quarterly_N = mkN "quarterly" "quarterlies";
lin quartermaster_N = mkN "quartermaster" "quartermasters";
lin quartermaster_general_N = mkN "quartermaster - general" "quartermaster - generals";
lin quarterstaff_N = mkN "quarterstaff" "quarterstaffs";
lin quartet_N = mkN "quartet" "quartets";
lin quarto_N = mkN "quarto" "quartos";
lin quartz_N = mkN "quartz" ;
lin quasar_N = mkN "quasar" "quasars";
lin quash_V2 = mkV2 (mkV "quash" "quashes" "quashed" "quashed" "quashing");
lin quassia_N = mkN "quassia" ;
lin quatercentenary_N = mkN "quatercentenary" "quatercentenaries";
lin quatrain_N = mkN "quatrain" "quatrains";
lin quattrocento_N = mkN "quattrocento" "quattrocentos";
lin quaver_N = mkN "quaver" "quavers";
lin quaver_V = mkV "quaver" "quavers" "quavered" "quavered" "quavering";
lin quaver_V2 = mkV2 (mkV "quaver" "quavers" "quavered" "quavered" "quavering");
lin quay_N = mkN "quay" "quays";
lin queasily_Adv = mkAdv "queasily";
lin queasiness_N = mkN "queasiness" ;
lin queasy_A = mkA "queasy" "queasier";
lin quebec_PN = mkPN "Quebec";
lin queen_N = mkN "queen" "queens";
lin queen_V2 = mkV2 (mkV "queen" "queens" "queened" "queened" "queening");
lin queenborough_in_sheppey_PN = mkPN "Queenborough - in - sheppey";
lin queenly_A = mkA "queenly" "queenlier";
lin queensbury_PN = mkPN "Queensbury";
lin queensferry_PN = mkPN "Queensferry";
lin queensland_PN = mkPN "Queensland";
lin queer_A = mkA "queer" "queerer";
lin queer_N = mkN "queer" "queers";
lin queer_V2 = mkV2 (mkV "queer" "queers" "queered" "queered" "queering");
lin queerness_N = mkN "queerness" ;
lin quell_V2 = mkV2 (mkV "quell" "quells" "quelled" "quelled" "quelling");
lin quench_V2 = mkV2 (mkV "quench" "quenches" "quenched" "quenched" "quenching");
lin quenchless_A = compoundA (mkA "quenchless");
lin quentin_PN = mkPN "Quentin";
lin quern_N = mkN "quern" "querns";
lin querulous_A = compoundA (mkA "querulous");
lin querulousness_N = mkN "querulousness" ;
lin query_N = mkN "query" "queries";
lin query_V = mkV "query" "queries" "queried" "queried" "querying";
lin query_V2 = mkV2 (mkV "query" "queries" "queried" "queried" "querying");
lin quest_N = mkN "quest" "quests";
lin quest_V = mkV "quest" "quests" "quested" "quested" "questing";
lin question_N = mkN "question" "questions";
lin question_V2 = mkV2 (mkV "question" "questions" "questioned" "questioned" "questioning");
lin question_mark_N = mkN "question - mark" "question - marks";
lin question_master_N = mkN "question - master" "question - masters";
lin questionable_A = compoundA (mkA "questionable");
lin questioner_N = mkN "questioner" "questioners";
lin questioningly_Adv = mkAdv "questioningly";
lin questionnaire_N = mkN "questionnaire" "questionnaires";
lin quetzal_N = mkN "quetzal" "quetzals";
lin queue_N = mkN "queue" "queues";
lin queue_V = mkV "queue" "queues" "queued" "queued" (variants {"queueing"; "queuing"});
lin qui_vive_N = mkN "qui vive" ;
lin quibble_N = mkN "quibble" "quibbles";
lin quibble_V = mkV "quibble" "quibbles" "quibbled" "quibbled" "quibbling";
lin quibbler_N = mkN "quibbler" "quibblers";
lin quibbling_A = compoundA (mkA "quibbling");
lin quiche_N = mkN "quiche" "quiches";
lin quick_A = mkA "quick" "quicker";
lin quick_Adv = mkAdv "quick";
lin quick_N = mkN "quick" ;
lin quick_change_A = compoundA (mkA "quick - change");
lin quick_eared_A = compoundA (mkA "quick - eared");
lin quick_eyed_A = compoundA (mkA "quick - eyed");
lin quick_freeze_V2 = mkV2 (mkV "quick-" IrregEng.freeze_V);
lin quick_sighted_A = compoundA (mkA "quick - sighted");
lin quick_tempered_A = compoundA (mkA "quick - tempered");
lin quick_witted_A = compoundA (mkA "quick - witted");
lin quicken_V = mkV "quicken" "quickens" "quickened" "quickened" "quickening";
lin quicken_V2 = mkV2 (mkV "quicken" "quickens" "quickened" "quickened" "quickening");
lin quicker_Adv = mkAdv "quicker";
lin quickest_Adv = mkAdv "quickest";
lin quickie_N = mkN "quickie" "quickies";
lin quicklime_N = mkN "quicklime" ;
lin quickness_N = mkN "quickness" ;
lin quicksand_N = mkN "quicksand" "quicksands";
lin quickset_A = compoundA (mkA "quickset");
lin quicksilver_N = mkN "quicksilver" ;
lin quickstep_N = mkN "quickstep" "quicksteps";
lin quid_N = mkN "quid" "quid";
lin quid_pro_quo_N = mkN "quid pro quo" "quid pro qui" {- FIXME: guessed plural form -};
lin quiescence_N = mkN "quiescence" "IRREG";
lin quiescent_A = compoundA (mkA "quiescent");
lin quiet_A = mkA "quiet" "quieter";
lin quiet_N = mkN "quiet" ;
lin quiet_V = mkV "quiet" "quiets" "quieted" "quieted" "quieting";
lin quiet_V2 = mkV2 (mkV "quiet" "quiets" "quieted" "quieted" "quieting");
lin quieten_V = mkV "quieten" "quietens" "quietened" "quietened" "quietening";
lin quieten_V2 = mkV2 (mkV "quieten" "quietens" "quietened" "quietened" "quietening");
lin quietism_N = mkN "quietism" ;
lin quietist_N = mkN "quietist" "quietists";
lin quietness_N = mkN "quietness" ;
lin quietude_N = mkN "quietude" "IRREG";
lin quietus_N = mkN "quietus" "quietuses";
lin quiff_N = mkN "quiff" "quiffs";
lin quill_N = mkN "quill" "quills";
lin quill_feather_N = mkN "quill - feather" "quill - feathers";
lin quilt_N = mkN "quilt" "quilts";
lin quilt_V2 = mkV2 (mkV "quilt" "quilts" "quilted" "quilted" "quilting");
lin quin_N = mkN "quin" "quins";
lin quince_N = mkN "quince" "quinces";
lin quincentenary_A = compoundA (mkA "quincentenary");
lin quincentenary_N = mkN "quincentenary" "quincentenaries";
lin quinine_N = mkN "quinine" ;
lin quinquagesima_N = mkN "quinquagesima" "quinquagesimas";
lin quinquagesima_PN = mkPN "Quinquagesima";
lin quinsy_N = mkN "quinsy" ;
lin quintal_N = mkN "quintal" "quintals";
lin quintessence_N = mkN "quintessence" "quintessences";
lin quintet_N = mkN "quintet" "quintets";
lin quintuplet_N = mkN "quintuplet" "quintuplets";
lin quip_N = mkN "quip" "quips";
lin quip_V = mkV "quip" "quips" "quipped" "quipped" "quipping";
lin quip_VS = mkVS (mkV "quip" "quips" "quipped" "quipped" "quipping");
lin quire_N = mkN "quire" "quires";
lin quirk_N = mkN "quirk" "quirks";
lin quisling_N = mkN "quisling" "quislings";
lin quit_A = compoundA (mkA "quit");
lin quit_V = mkV "quit";
lin quit_V2 = mkV2 (mkV "quit" "quits" "quitted" "quitted" "quitting");
lin quite_Predet = ss "quite";
lin quito_PN = mkPN "Quito";
lin quits_A = compoundA (mkA "quits");
lin quittance_N = mkN "quittance" "quittances";
lin quitter_N = mkN "quitter" "quitters";
lin quiver_N = mkN "quiver" "quivers";
lin quiver_V = mkV "quiver" "quivers" "quivered" "quivered" "quivering";
lin quiver_V2 = mkV2 (mkV "quiver" "quivers" "quivered" "quivered" "quivering");
lin quixotic_A = compoundA (mkA "quixotic");
lin quixotically_Adv = mkAdv "quixotically";
lin quiz_N = mkN "quiz" "quizzes";
lin quiz_V2 = mkV2 (mkV "quiz" "quizzes" "quizzed" "quizzed" "quizzing");
lin quizmaster_N = mkN "quizmaster" "quizmasters";
lin quizzical_A = compoundA (mkA "quizzical");
lin quoin_N = mkN "quoin" "quoins";
lin quoit_N = mkN "quoit" "quoits";
lin quonset_N = mkN "quonset" "quonsets";
lin quorum_N = mkN "quorum" "quorums";
lin quot_V = mkV "quot";
lin quot_VS = mkVS (mkV "quot");
lin quota_N = mkN "quota" "quotas";
lin quotability_N = mkN "quotability" ;
lin quotable_A = compoundA (mkA "quotable");
lin quotation_N = mkN "quotation" "quotations";
lin quote_N = mkN "quote" "quotes";
lin quote_V = mkV "quote";
lin quote_V2 = mkV2 (mkV "quote" "quotes" "quoted" "quoted" "quoting");
lin quotidian_A = compoundA (mkA "quotidian");
lin quotient_N = mkN "quotient" "quotients";
lin qv_PN = mkPN "Qv";
lin ra_N = mkN "ra" ;
lin rabbi_N = mkN "rabbi" "rabbis";
lin rabbinical_A = compoundA (mkA "rabbinical");
lin rabbit_N = mkN "rabbit" "rabbits";
lin rabbit_V = mkV "rabbit" "rabbits" "rabbited" "rabbited" "rabbiting";
lin rabbit_burrow_N = mkN "rabbit - burrow" "rabbit - burrows";
lin rabbit_hole_N = mkN "rabbit - hole" "rabbit - holes";
lin rabbit_hutch_N = mkN "rabbit - hutch" "rabbit - hutches";
lin rabbit_punch_N = mkN "rabbit - punch" "rabbit - punches";
lin rabbit_warren_N = mkN "rabbit - warren" "rabbit - warrens";
lin rabble_N = mkN "rabble" "rabbles";
lin rabble_rousing_A = compoundA (mkA "rabble - rousing");
lin rabelaisian_A = compoundA (mkA "rabelaisian");
lin rabid_A = compoundA (mkA "rabid");
lin rabies_N = mkN "rabies" ;
lin raccoon_N = mkN "raccoon" "raccoons";
lin race_N = mkN "race" "races";
lin race_V = mkV "race" "races" "raced" "raced" "racing";
lin race_V2 = mkV2 (mkV "race" "races" "raced" "raced" "racing");
lin race_V2V = mkV2V (mkV "race" "races" "raced" "raced" "racing") noPrep to_Prep ;
lin race_VV = mkVV (mkV "race" "races" "raced" "raced" "racing") ;
lin race_meeting_N = mkN "race - meeting" "race - meetings";
lin racecard_N = mkN "racecard" "racecards";
lin racecourse_N = mkN "racecourse" "racecourses";
lin racehorse_N = mkN "racehorse" "racehorses";
lin raceme_N = mkN "raceme" "racemes";
lin racer_N = mkN "racer" "racers";
lin rachel_PN = mkPN "Rachel";
lin racial_A = compoundA (mkA "racial");
lin racialism_N = mkN "racialism" ;
lin racialist_N = mkN "racialist" "racialists";
lin racily_Adv = mkAdv "racily";
lin raciness_N = mkN "raciness" ;
lin racing_N = mkN "racing" ;
lin racism_N = mkN "racism" ;
lin racist_N = mkN "racist" "racists";
lin rack_N = mkN "rack" "racks";
lin rack_V2 = mkV2 (mkV "rack" "racks" "racked" "racked" "racking");
lin rack_railway_N = mkN "rack - railway" "rack - railways";
lin rack_rent_N = mkN "rack - rent" "rack - rents";
lin racket_N = mkN "racket" "rackets";
lin racket_V = mkV "racket" "rackets" "racketed" "racketed" "racketing";
lin racketeer_N = mkN "racketeer" "racketeers";
lin racketeering_N = mkN "racketeering" ;
lin raconteur_N = mkN "raconteur" "raconteurs";
lin racoon_N = mkN "racoon" "racoons";
lin racquet_N = mkN "racquet" "racquets";
lin racy_A = mkA "racy" "racier";
lin rada_PN = mkPN "Rada";
lin radar_N = mkN "radar" ;
lin radcliffe_PN = mkPN "Radcliffe";
lin radcliffe_on_trent_PN = mkPN "Radcliffe on trent";
lin raddled_A = compoundA (mkA "raddled");
lin radial_A = compoundA (mkA "radial");
lin radial_N = mkN "radial" "radials";
lin radiance_N = mkN "radiance" ;
lin radiant_A = compoundA (mkA "radiant");
lin radiate_V = mkV "radiate" "radiates" "radiated" "radiated" "radiating";
lin radiate_V2 = mkV2 (mkV "radiate" "radiates" "radiated" "radiated" "radiating");
lin radiation_N = mkN "radiation" "radiations";
lin radiator_N = mkN "radiator" "radiators";
lin radical_A = compoundA (mkA "radical");
lin radical_N = mkN "radical" "radicals";
lin radicalism_N = mkN "radicalism" ;
lin radicle_N = mkN "radicle" "radicles";
lin radio_N = mkN "radio" "radios";
lin radio_V2 = mkV2 (mkV "radio");
lin radio_gramophone_N = mkN "radio - gramophone" "radio - gramophones";
lin radio_location_N = mkN "radio - location" "radio - locations";
lin radio_set_N = mkN "radio - set" "radio - sets";
lin radio_telescope_N = mkN "radio - telescope" "radio - telescopes";
lin radioactive_A = compoundA (mkA "radioactive");
lin radioactivity_N = mkN "radioactivity" ;
lin radiogram_N = mkN "radiogram" "radiograms";
lin radiograph_N = mkN "radiograph" "radiographs";
lin radiographer_N = mkN "radiographer" "radiographers";
lin radiography_N = mkN "radiography" ;
lin radioisotope_N = mkN "radioisotope" "radioisotopes";
lin radiologist_N = mkN "radiologist" "radiologists";
lin radiology_N = mkN "radiology" ;
lin radiotherapist_N = mkN "radiotherapist" "radiotherapists";
lin radiotherapy_N = mkN "radiotherapy" ;
lin radish_N = mkN "radish" "radishes";
lin radium_N = mkN "radium" ;
lin radius_N = mkN "radius" "radii" {- FIXME: guessed plural form -};
lin radlett_PN = mkPN "Radlett";
lin radstock_PN = mkPN "Radstock";
lin raf_N = mkN "raf" ;
lin raffia_N = mkN "raffia" ;
lin raffish_A = compoundA (mkA "raffish");
lin raffle_N = mkN "raffle" "raffles";
lin raffle_V2 = mkV2 (mkV "raffle" "raffles" "raffled" "raffled" "raffling");
lin raft_N = mkN "raft" "rafts";
lin raft_V = mkV "raft" "rafts" "rafted" "rafted" "rafting";
lin raft_V2 = mkV2 (mkV "raft" "rafts" "rafted" "rafted" "rafting");
lin rafter_N = mkN "rafter" "rafters";
lin raftered_A = compoundA (mkA "raftered");
lin raftsman_N = mkN "raftsman" "raftsmen" {- FIXME: guessed plural form -};
lin rag_N = mkN "rag" "rags";
lin rag_V2 = mkV2 (mkV "rag" "rags" "ragged" "ragged" "ragging");
lin rag_day_N = mkN "rag - day" "rag - days";
lin ragamuffin_N = mkN "ragamuffin" "ragamuffins";
lin ragbag_N = mkN "ragbag" "ragbags";
lin rage_N = mkN "rage" "rages";
lin rage_V = mkV "rage" "rages" "raged" "raged" "raging";
lin ragged_A = compoundA (mkA "ragged");
lin raggedness_N = mkN "raggedness" ;
lin raglan_N = mkN "raglan" "raglans";
lin ragout_N = mkN "ragout" "ragouts";
lin ragtag_N = mkN "ragtag" "ragtags";
lin ragtime_N = mkN "ragtime" ;
lin raid_N = mkN "raid" "raids";
lin raid_V = mkV "raid" "raids" "raided" "raided" "raiding";
lin raid_V2 = mkV2 (mkV "raid" "raids" "raided" "raided" "raiding");
lin raider_N = mkN "raider" "raiders";
lin rail_N = mkN "rail" "rails";
lin rail_V = mkV "rail" "rails" "railed" "railed" "railing";
lin rail_V2 = mkV2 (mkV "rail" "rails" "railed" "railed" "railing");
lin railcar_N = mkN "railcar" "railcars";
lin railhead_N = mkN "railhead" "railheads";
lin railing_N = mkN "railing" "railings";
lin raillery_N = mkN "raillery" "railleries";
lin railroad_N = mkN "railroad" "railroads";
lin railroad_V2 = mkV2 (mkV "railroad" "railroads" "railroaded" "railroaded" "railroading");
lin railway_N = mkN "railway" "railways";
lin railwayman_N = mkN "railwayman" "railwaymen" {- FIXME: guessed plural form -};
lin raiment_N = mkN "raiment" ;
lin rain_N = mkN "rain" "rains";
lin rain_V = mkV "rain" "rains" "rained" "rained" "raining";
lin rain_V2 = mkV2 (mkV "rain" "rains" "rained" "rained" "raining");
lin rain_gauge_N = mkN "rain - gauge" "rain - gauges";
lin rainbow_N = mkN "rainbow" "rainbows";
lin raincoat_N = mkN "raincoat" "raincoats";
lin raindrop_N = mkN "raindrop" "raindrops";
lin rainfall_N = mkN "rainfall" "rainfalls";
lin rainford_PN = mkPN "Rainford";
lin rainproof_A = compoundA (mkA "rainproof");
lin rainwater_N = mkN "rainwater" ;
lin rainy_A = mkA "rainy" "rainier";
lin raise_N = mkN "raise" "raises";
lin raise_V2 = mkV2 (mkV "raise" "raises" "raised" "raised" "raising");
lin raiser_N = mkN "raiser" "raisers";
lin raisin_N = mkN "raisin" "raisins";
lin raison_d'etre_N = mkN "raison d'être" "IRREG";
lin raj_N = mkN "raj" "IRREG";
lin rajah_N = mkN "rajah" "rajahs";
lin rake_N = mkN "rake" "rakes";
lin rake_V = mkV "rake" "rakes" "raked" "raked" "raking";
lin rake_V2 = mkV2 (mkV "rake" "rakes" "raked" "raked" "raking");
lin rake_off_N = mkN "rake - off" "rake - offs";
lin rakish_A = compoundA (mkA "rakish");
lin rakishness_N = mkN "rakishness" ;
lin rallentando_A = compoundA (mkA "rallentando");
lin rallentando_Adv = mkAdv "rallentando";
lin rally_N = mkN "rally" "rallies";
lin rally_V = mkV "rally" "rallies" "rallied" "rallied" "rallying";
lin rally_V2 = mkV2 (mkV "rally" "rallies" "rallied" "rallied" "rallying");
lin rally_V2V = mkV2V (mkV "rally" "rallies" "rallied" "rallied" "rallying") noPrep to_Prep ;
lin ralph_PN = mkPN "Ralph";
lin ram_N = mkN "ram" "rams";
lin ram_V2 = mkV2 (mkV "ram" "rams" "rammed" "rammed" "ramming");
lin ramadan_N = mkN "ramadan" "ramadans";
lin ramadan_PN = mkPN "Ramadan";
lin ramble_N = mkN "ramble" "rambles";
lin ramble_V = mkV "ramble" "rambles" "rambled" "rambled" "rambling";
lin rambler_N = mkN "rambler" "ramblers";
lin rambling_A = compoundA (mkA "rambling");
lin rambunctious_A = compoundA (mkA "rambunctious");
lin ramification_N = mkN "ramification" "ramifications";
lin ramify_V = mkV "ramify" "ramifies" "ramified" "ramified" "ramifying";
lin ramify_V2 = mkV2 (mkV "ramify" "ramifies" "ramified" "ramified" "ramifying");
lin ramjet_N = mkN "ramjet" "ramjets";
lin ramp_N = mkN "ramp" "ramps";
lin ramp_V2 = mkV2 (mkV "ramp" "ramps" "ramped" "ramped" "ramping");
lin rampage_N = mkN "rampage" "rampages";
lin rampage_V = mkV "rampage" "rampages" "rampaged" "rampaged" "rampaging";
lin rampageous_A = compoundA (mkA "rampageous");
lin rampant_A = compoundA (mkA "rampant");
lin rampart_N = mkN "rampart" "ramparts";
lin ramrod_N = mkN "ramrod" "ramrods";
lin ramsbottom_PN = mkPN "Ramsbottom";
lin ramsgate_PN = mkPN "Ramsgate";
lin ramshackle_A = compoundA (mkA "ramshackle");
lin ranch_N = mkN "ranch" "ranches";
lin rancher_N = mkN "rancher" "ranchers";
lin rancid_A = compoundA (mkA "rancid");
lin rancorous_A = compoundA (mkA "rancorous");
lin rancour_N = mkN "rancour" ;
lin rand_N = mkN "rand" "rands";
lin randolph_PN = mkPN "Randolph";
lin random_N = mkN "random" "IRREG";
lin randomly_Adv = mkAdv "randomly";
lin randomness_N = mkN "randomness" ;
lin randy_A = mkA "randy" "randier";
lin ranee_N = mkN "ranee" "ranees";
lin range_N = mkN "range" "ranges";
lin range_V = mkV "range" "ranges" "ranged" "ranged" "ranging";
lin range_V2 = mkV2 (mkV "range" "ranges" "ranged" "ranged" "ranging");
lin rangefinder_N = mkN "rangefinder" "rangefinders";
lin ranger_N = mkN "ranger" "rangers";
lin rangoon_PN = mkPN "Rangoon";
lin rani_N = mkN "rani" "ranis";
lin rank_A = compoundA (mkA "rank");
lin rank_N = mkN "rank" "ranks";
lin rank_V = mkV "rank" "ranks" "ranked" "ranked" "ranking";
lin rank_V2 = mkV2 (mkV "rank" "ranks" "ranked" "ranked" "ranking");
lin rank_VS = mkVS (mkV "rank" "ranks" "ranked" "ranked" "ranking");
lin ranker_N = mkN "ranker" "rankers";
lin ranking_N = mkN "ranking" "rankings";
lin rankle_V = mkV "rankle" "rankles" "rankled" "rankled" "rankling";
lin rankness_N = mkN "rankness" ;
lin ransack_V2 = mkV2 (mkV "ransack" "ransacks" "ransacked" "ransacked" "ransacking");
lin ransom_N = mkN "ransom" "ransoms";
lin ransom_V2 = mkV2 (mkV "ransom" "ransoms" "ransomed" "ransomed" "ransoming");
lin rant_N = mkN "rant" "rants";
lin rant_V = mkV "rant" "rants" "ranted" "ranted" "ranting";
lin rant_V2 = mkV2 (mkV "rant" "rants" "ranted" "ranted" "ranting");
lin ranter_N = mkN "ranter" "ranters";
lin rap_N = mkN "rap" "raps";
lin rap_V = mkV "rap" "raps" "rapped" "rapped" "rapping";
lin rap_V2 = mkV2 (mkV "rap" "raps" "rapped" "rapped" "rapping");
lin rapacious_A = compoundA (mkA "rapacious");
lin rapacity_N = mkN "rapacity" ;
lin rape_N = mkN "rape" "rapes";
lin rape_V2 = mkV2 (mkV "rape" "rapes" "raped" "raped" "raping");
lin rapid_A = compoundA (mkA "rapid");
lin rapid_N = mkN "rapid" "rapids";
lin rapidity_N = mkN "rapidity" ;
lin rapier_N = mkN "rapier" "rapiers";
lin rapier_thrust_N = mkN "rapier - thrust" "rapier - thrusts";
lin rapine_N = mkN "rapine" ;
lin rapist_N = mkN "rapist" "rapists";
lin rapport_N = mkN "rapport" "rapports";
lin rapprochement_N = mkN "rapprochement" "rapprochements";
lin rapscallion_N = mkN "rapscallion" "rapscallions";
lin rapt_A = compoundA (mkA "rapt");
lin rapture_N = mkN "rapture" "raptures";
lin rapturous_A = compoundA (mkA "rapturous");
lin rare_A = mkA "rare" "rarer";
lin rarebit_N = mkN "rarebit" "rarebits";
lin rarefaction_N = mkN "rarefaction" ;
lin rarefy_V = mkV "rarefy" "rarefies" "rarefied" "rarefied" "rarefying";
lin rarefy_V2 = mkV2 (mkV "rarefy" "rarefies" "rarefied" "rarefied" "rarefying");
lin rareness_N = mkN "rareness" ;
lin raring_A = compoundA (mkA "raring");
lin rarity_N = mkN "rarity" "rarities";
lin rascal_N = mkN "rascal" "rascals";
lin rascally_A = compoundA (mkA "rascally");
lin rase_V2 = mkV2 (mkV "rase" "rases" "rased" "rased" "rasing");
lin rash_A = mkA "rash" "rasher";
lin rash_N = mkN "rash" "rashes";
lin rasher_N = mkN "rasher" "rashers";
lin rashness_N = mkN "rashness" ;
lin rasp_N = mkN "rasp" "rasps";
lin rasp_V = mkV "rasp" "rasps" "rasped" "rasped" "rasping";
lin rasp_V2 = mkV2 (mkV "rasp" "rasps" "rasped" "rasped" "rasping");
lin raspberry_N = mkN "raspberry" "raspberries";
lin raspingly_Adv = mkAdv "raspingly";
lin rat_N = mkN "rat" "rats";
lin rat_V = mkV "rat";
lin rat_V2 = mkV2 (mkV "rat" "rats" "ratted" "ratted" "ratting");
lin rat_a_tat_tat_N = mkN "rat - a - tat - tat" "rat - a - tat - tats";
lin rat_tat_N = mkN "rat - tat" "rat - tats";
lin ratability_N = mkN "ratability" ;
lin ratable_A = compoundA (mkA "ratable");
lin ratan_N = mkN "ratan" "ratans";
lin ratch_N = mkN "ratch" "ratches";
lin ratchet_N = mkN "ratchet" "ratchets";
lin rate_N = mkN "rate" "rates";
lin rate_V = mkV "rate" "rates" "rated" "rated" "rating";
lin rate_V2 = mkV2 (mkV "rate" "rates" "rated" "rated" "rating");
lin rate_VA = mkVA (mkV "rate" "rates" "rated" "rated" "rating");
lin rate_VS = mkVS (mkV "rate" "rates" "rated" "rated" "rating");
lin rateability_N = mkN "rateability" ;
lin rateable_A = compoundA (mkA "rateable");
lin ratepayer_N = mkN "ratepayer" "ratepayers";
lin rather_Adv = mkAdv "rather";
lin ratification_N = mkN "ratification" "ratifications";
lin ratify_V2 = mkV2 (mkV "ratify" "ratifies" "ratified" "ratified" "ratifying");
lin rating_N = mkN "rating" "ratings";
lin ratio_N = mkN "ratio" "ratios";
lin ratiocination_N = mkN "ratiocination" ;
lin ration_N = mkN "ration" "rations";
lin ration_V2 = mkV2 (mkV "ration" "rations" "rationed" "rationed" "rationing");
lin rational_A = compoundA (mkA "rational");
lin rationale_N = mkN "rationale" "rationales";
lin rationalism_N = mkN "rationalism" ;
lin rationalist_N = mkN "rationalist" "rationalists";
lin rationalistic_A = compoundA (mkA "rationalistic");
lin rationality_N = mkN "rationality" "rationalities";
lin rationalization_N = mkN "rationalization" "rationalizations";
lin rationalize_V2 = mkV2 (mkV "rationalize" "rationalizes" "rationalized" "rationalized" "rationalizing");
lin ratlin_N = mkN "ratlin" "ratlins";
lin ratline_N = mkN "ratline" "ratlines";
lin rattan_N = mkN "rattan" "rattans";
lin ratter_N = mkN "ratter" "ratters";
lin rattle_N = mkN "rattle" "rattles";
lin rattle_V = mkV "rattle" "rattles" "rattled" "rattled" "rattling";
lin rattle_V2 = mkV2 (mkV "rattle" "rattles" "rattled" "rattled" "rattling");
lin rattlebrained_A = compoundA (mkA "rattlebrained");
lin rattlepated_A = compoundA (mkA "rattlepated");
lin rattler_N = mkN "rattler" "rattlers";
lin rattlesnake_N = mkN "rattlesnake" "rattlesnakes";
lin rattling_A = compoundA (mkA "rattling");
lin rattling_Adv = mkAdv "rattling";
lin ratty_A = mkA "ratty" "rattier";
lin raucous_A = compoundA (mkA "raucous");
lin ravage_N = mkN "ravage" "ravages";
lin ravage_V = mkV "ravage" "ravages" "ravaged" "ravaged" "ravaging";
lin ravage_V2 = mkV2 (mkV "ravage" "ravages" "ravaged" "ravaged" "ravaging");
lin rave_N = mkN "rave" "raves";
lin rave_V = mkV "rave" "raves" "raved" "raved" "raving";
lin rave_V2 = mkV2 (mkV "rave" "raves" "raved" "raved" "raving");
lin rave_up_N = mkN "rave - up" "rave - ups";
lin ravel_V = mkV "ravel" "ravels" "ravelled" "ravelled" "ravelling";
lin ravel_V2 = mkV2 (mkV "ravel" "ravels" "ravelled" "ravelled" "ravelling");
lin raven_N = mkN "raven" "ravens";
lin ravening_A = compoundA (mkA "ravening");
lin ravenna_PN = mkPN "Ravenna";
lin ravenous_A = compoundA (mkA "ravenous");
lin raver_N = mkN "raver" "ravers";
lin ravine_N = mkN "ravine" "ravines";
lin raving_A = compoundA (mkA "raving");
lin raving_Adv = mkAdv "raving";
lin ravioli_N = mkN "ravioli" "raviolis";
lin ravish_V2 = mkV2 (mkV "ravish" "ravishes" "ravished" "ravished" "ravishing");
lin ravishingly_Adv = mkAdv "ravishingly";
lin ravishment_N = mkN "ravishment" "ravishments";
lin raw_A = compoundA (mkA "raw");
lin raw_N = mkN "raw" "IRREG";
lin rawboned_A = compoundA (mkA "rawboned");
lin rawhide_A = compoundA (mkA "rawhide");
lin rawtenstall_PN = mkPN "Rawtenstall";
lin ray_N = mkN "ray" "rays";
lin ray_PN = mkPN "Ray";
lin ray_V = mkV "ray" "rays" "rayed" "rayed" "raying";
lin ray_V2 = mkV2 (mkV "ray" "rays" "rayed" "rayed" "raying");
lin raymond_PN = mkPN "Raymond";
lin rayon_N = mkN "rayon" ;
lin raze_V2 = mkV2 (mkV "raze" "razes" "razed" "razed" "razing");
lin razor_N = mkN "razor" "razors";
lin razor_V2 = mkV2 (mkV "razor" "razors" "razored" "razored" "razoring");
lin razor_edge_N = mkN "razor - edge" "razor - edges";
lin razorback_N = mkN "razorback" "razorbacks";
lin razorbacked_A = compoundA (mkA "razorbacked");
lin razorblade_N = mkN "razorblade" "razorblades";
lin razzle_N = mkN "razzle" "IRREG";
lin razzle_dazzle_N = mkN "razzle - dazzle" "IRREG";
lin rc_PN = mkPN "Rc";
lin rd_PN = mkPN "Rd";
lin re_N = mkN "re" "IRREG";
lin re_address_V2 = mkV2 (mkV "re - address" "re - addresses" "re - addressed" "re - addressed" "re - addressing");
lin re_afforest_V2 = mkV2 (mkV "re - afforest" "re - afforests" "re - afforested" "re - afforested" "re - afforesting");
lin re_afforestation_N = mkN "re - afforestation" "re - afforestations";
lin re_count_N = mkN "re - count" "re - counts";
lin re_count_V2 = mkV2 (mkV "re - count" "re - counts" "re - counted" "re - counted" "re - counting");
lin re_cover_V2 = mkV2 (mkV "re - cover" "re - covers" "re - covered" "re - covered" "re - covering");
lin re_create_V2 = mkV2 (mkV "re - create");
lin re_echo_N = mkN "re - echo" "re - echoes";
lin re_echo_V = mkV "re - echo" "re - echos" "re - echoed" "re - echoed" "re - echoing";
lin re_elect_V2 = mkV2 (mkV "re - elect");
lin re_emerge_V = mkV "re - emerge";
lin re_emphasize_V2 = mkV2 (mkV "re - emphasize");
lin re_enter_V = mkV "re - enter";
lin re_enter_V2 = mkV2 (mkV "re - enter");
lin re_entry_N = mkN "re - entry" "re - entries";
lin re_establish_V2 = mkV2 (mkV "re - establish");
lin re_evaluate_V2 = mkV2 (mkV "re - evaluate");
lin re_examine_V2 = mkV2 (mkV "re - examine");
lin re_form_V = mkV "re - form" "re - forms" "re - formed" "re - formed" "re - forming";
lin re_form_V2 = mkV2 (mkV "re - form" "re - forms" "re - formed" "re - formed" "re - forming");
lin re_formation_N = mkN "re - formation" "re - formations";
lin re_join_V2 = mkV2 (mkV "re - join" "re - joins" "re - joined" "re - joined" "re - joining");
lin re_supply_V2 = mkV2 (mkV "re - supply");
lin reach_N = mkN "reach" "reaches";
lin reach_V = mkV "reach" "reaches" "reached" "reached" "reaching";
lin reach_V2 = mkV2 (mkV "reach" "reaches" "reached" "reached" "reaching");
lin reach_V2V = mkV2V (mkV "reach" "reaches" "reached" "reached" "reaching") noPrep to_Prep ;
lin reach_VA = mkVA (mkV "reach" "reaches" "reached" "reached" "reaching");
lin react_V = mkV "react" "reacts" "reacted" "reacted" "reacting";
lin reaction_N = mkN "reaction" "reactions";
lin reactionary_N = mkN "reactionary" "reactionaries";
lin reactivate_V2 = mkV2 (mkV "reactivate");
lin reactor_N = mkN "reactor" "reactors";
lin read_N = mkN "read" "IRREG";
lin read_V = IrregEng.read_V;
lin read_V2 = mkV2 (IrregEng.read_V);
lin read_VA = mkVA (IrregEng.read_V);
lin read_VS = mkVS (IrregEng.read_V);
lin readability_N = mkN "readability" ;
lin readable_A = compoundA (mkA "readable");
lin reader_N = mkN "reader" "readers";
lin readership_N = mkN "readership" "readerships";
lin readily_Adv = mkAdv "readily";
lin readiness_N = mkN "readiness" ;
lin reading_N = mkN "reading" "readings";
lin reading_PN = mkPN "Reading";
lin reading_lamp_N = mkN "reading - lamp" "reading - lamps";
lin reading_room_N = mkN "reading - room" "reading - rooms";
lin readjust_V2 = mkV2 (mkV "readjust" "readjusts" "readjusted" "readjusted" "readjusting");
lin readjustment_N = mkN "readjustment" "readjustments";
lin readmission_N = mkN "readmission" "readmissions";
lin readmit_V2 = mkV2 (mkV "readmit" "readmits" "readmitted" "readmitted" "readmitting");
lin ready_A = mkA "ready" "readier";
lin ready_N = mkN "ready" "readies";
lin ready_V2 = mkV2 (mkV "ready");
lin ready_made_A = compoundA (mkA "ready - made");
lin reaffiliation_N = mkN "reaffiliation" "reaffiliations";
lin reaffirm_V2 = mkV2 (mkV "reaffirm" "reaffirms" "reaffirmed" "reaffirmed" "reaffirming");
lin reagent_N = mkN "reagent" "reagents";
lin real_A = compoundA (mkA "real");
lin real_N = mkN "real" "reals";
lin realign_V2 = mkV2 (mkV "realign");
lin realism_N = mkN "realism" ;
lin realist_N = mkN "realist" "realists";
lin realistic_A = compoundA (mkA "realistic");
lin realistically_Adv = mkAdv "realistically";
lin reality_N = mkN "reality" "realities";
lin realizable_A = compoundA (mkA "realizable");
lin realization_N = mkN "realization" ;
lin realize_V2 = mkV2 (mkV "realize" "realizes" "realized" "realized" "realizing");
lin realize_VS = mkVS (mkV "realize");
lin reallocation_N = mkN "reallocation" "reallocations";
lin realm_N = mkN "realm" "realms";
lin realtor_N = mkN "realtor" "realtors";
lin realty_N = mkN "realty" "realties";
lin ream_N = mkN "ream" "reams";
lin reanimate_V2 = mkV2 (mkV "reanimate" "reanimates" "reanimated" "reanimated" "reanimating");
lin reap_V = mkV "reap" "reaps" "reaped" "reaped" "reaping";
lin reap_V2 = mkV2 (mkV "reap" "reaps" "reaped" "reaped" "reaping");
lin reaper_N = mkN "reaper" "reapers";
lin reaping_hook_N = mkN "reaping - hook" "reaping - hooks";
lin reappear_V = mkV "reappear" "reappears" "reappeared" "reappeared" "reappearing";
lin reappearance_N = mkN "reappearance" "reappearances";
lin reappoint_V = mkV "reappoint";
lin reappoint_V2 = mkV2 (mkV "reappoint");
lin reappraisal_N = mkN "reappraisal" "reappraisals";
lin reappraise_V2 = mkV2 (mkV "reappraise");
lin rear_N = mkN "rear" "rears";
lin rear_V = mkV "rear" "rears" "reared" "reared" "rearing";
lin rear_V2 = mkV2 (mkV "rear" "rears" "reared" "reared" "rearing");
lin rear_admiral_N = mkN "rear - admiral" "rear - admirals";
lin rearguard_N = mkN "rearguard" "rearguards";
lin rearm_V = mkV "rearm" "rearms" "rearmed" "rearmed" "rearming";
lin rearm_V2 = mkV2 (mkV "rearm" "rearms" "rearmed" "rearmed" "rearming");
lin rearmament_N = mkN "rearmament" "rearmaments";
lin rearmost_A = compoundA (mkA "rearmost");
lin rearrange_V2 = mkV2 (mkV "rearrange" "rearranges" "rearranged" "rearranged" "rearranging");
lin rearrangement_N = mkN "rearrangement" "rearrangements";
lin rearward_N = mkN "rearward" "rearwards";
lin rearwards_Adv = mkAdv "rearwards";
lin reason_N = mkN "reason" "reasons";
lin reason_V = mkV "reason" "reasons" "reasoned" "reasoned" "reasoning";
lin reason_V2 = mkV2 (mkV "reason" "reasons" "reasoned" "reasoned" "reasoning");
lin reason_VS = mkVS (mkV "reason" "reasons" "reasoned" "reasoned" "reasoning");
lin reasonable_A = compoundA (mkA "reasonable");
lin reasonableness_N = mkN "reasonableness" ;
lin reasoning_N = mkN "reasoning" ;
lin reasonless_A = compoundA (mkA "reasonless");
lin reassemble_V = mkV "reassemble" "reassembles" "reassembled" "reassembled" "reassembling";
lin reassemble_V2 = mkV2 (mkV "reassemble" "reassembles" "reassembled" "reassembled" "reassembling");
lin reassert_V2 = mkV2 (mkV "reassert");
lin reassess_V2 = mkV2 (mkV "reassess" "reassesses" "reassessed" "reassessed" "reassessing");
lin reassessment_N = mkN "reassessment" "reassessments";
lin reassign_V2 = mkV2 (mkV "reassign");
lin reassume_V2 = mkV2 (mkV "reassume");
lin reassurance_N = mkN "reassurance" "reassurances";
lin reassure_V2 = mkV2 (mkV "reassure" "reassures" "reassured" "reassured" "reassuring");
lin reassure_VS = mkVS (mkV "reassure");
lin reassuring_A = compoundA (mkA "reassuring");
lin reattribute_V2 = mkV2 (mkV "reattribute" "reattributes" "reattributed" "reattributed" "reattributing");
lin rebarbative_A = compoundA (mkA "rebarbative");
lin rebate_N = mkN "rebate" "rebates";
lin rebecca_PN = mkPN "Rebecca";
lin rebel_N = mkN "rebel" "rebels";
lin rebel_V = mkV "rebel" "rebels" "rebelled" "rebelled" "rebelling";
lin rebellion_N = mkN "rebellion" "rebellions";
lin rebellious_A = compoundA (mkA "rebellious");
lin rebelliousness_N = mkN "rebelliousness" ;
lin rebind_V2 = mkV2 (mkV "re" IrregEng.bind_V);
lin rebirth_N = mkN "rebirth" "rebirths";
lin reborn_A = compoundA (mkA "reborn");
lin rebound_N = mkN "rebound" "rebounds";
lin rebound_V = mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding";
lin rebound_V2 = mkV2 (mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding");
lin rebound_V2V = mkV2V (mkV "rebound" "rebounds" "rebounded" "rebounded" "rebounding") noPrep to_Prep ;
lin rebuff_N = mkN "rebuff" "rebuffs";
lin rebuff_V = mkV "rebuff";
lin rebuff_V2 = mkV2 (mkV "rebuff" "rebuffs" "rebuffed" "rebuffed" "rebuffing");
lin rebuild_V2 = mkV2 (mkV "re" IrregEng.build_V);
lin rebuke_N = mkN "rebuke" "rebukes";
lin rebuke_V2 = mkV2 (mkV "rebuke" "rebukes" "rebuked" "rebuked" "rebuking");
lin rebukingly_Adv = mkAdv "rebukingly";
lin rebus_N = mkN "rebus" "rebuses";
lin rebut_V2 = mkV2 (mkV "rebut" "rebuts" "rebutted" "rebutted" "rebutting");
lin rebuttal_N = mkN "rebuttal" "rebuttals";
lin rec_PN = mkPN "Rec";
lin recalcitrance_N = mkN "recalcitrance" ;
lin recalcitrancy_N = mkN "recalcitrancy" ;
lin recalcitrant_A = compoundA (mkA "recalcitrant");
lin recalculate_V2 = mkV2 (mkV "recalculate");
lin recall_N = mkN "recall" "recalls";
lin recall_V2 = mkV2 (mkV "recall" "recalls" "recalled" "recalled" "recalling");
lin recall_VS = mkVS (mkV "recall");
lin recant_V = mkV "recant" "recants" "recanted" "recanted" "recanting";
lin recant_V2 = mkV2 (mkV "recant" "recants" "recanted" "recanted" "recanting");
lin recantation_N = mkN "recantation" "recantations";
lin recap_N = mkN "recap" "recaps";
lin recap_V = mkV "recap" "recaps" "recapped" "recapped" "recapping";
lin recap_V2 = mkV2 (mkV "recap" "recaps" "recapped" "recapped" "recapping");
lin recapitulate_V = mkV "recapitulate" "recapitulates" "recapitulated" "recapitulated" "recapitulating";
lin recapitulate_V2 = mkV2 (mkV "recapitulate" "recapitulates" "recapitulated" "recapitulated" "recapitulating");
lin recapitulation_N = mkN "recapitulation" "recapitulations";
lin recapture_V2 = mkV2 (mkV "recapture" "recaptures" "recaptured" "recaptured" "recapturing");
lin recast_V2 = mkV2 (mkV "re" IrregEng.cast_V);
lin recce_N = mkN "recce" "recces";
lin recd_PN = mkPN "Recd";
lin recede_V = mkV "recede" "recedes" "receded" "receded" "receding";
lin receipt_N = mkN "receipt" "receipts";
lin receipt_V2 = mkV2 (mkV "receipt" "receipts" "receipted" "receipted" "receipting");
lin receivable_A = compoundA (mkA "receivable");
lin receive_V = mkV "receive" "receives" "received" "received" "receiving";
lin receive_V2 = mkV2 (mkV "receive" "receives" "received" "received" "receiving");
lin received_A = compoundA (mkA "received");
lin receiver_N = mkN "receiver" "receivers";
lin receivership_N = mkN "receivership" "receiverships";
lin receiving_set_N = mkN "receiving - set" "receiving - sets";
lin recent_A = compoundA (mkA "recent");
lin recentralize_V2 = mkV2 (mkV "recentralize");
lin receptacle_N = mkN "receptacle" "receptacles";
lin reception_N = mkN "reception" "receptions";
lin reception_desk_N = mkN "reception - desk" "reception - desks";
lin receptionist_N = mkN "receptionist" "receptionists";
lin receptive_A = compoundA (mkA "receptive");
lin receptiveness_N = mkN "receptiveness" ;
lin receptivity_N = mkN "receptivity" ;
lin recess_N = mkN "recess" "recesses";
lin recess_V2 = mkV2 (mkV "recess" "recesses" "recessed" "recessed" "recessing");
lin recession_N = mkN "recession" "recessions";
lin recessional_A = compoundA (mkA "recessional");
lin recessional_N = mkN "recessional" "recessionals";
lin recessive_A = compoundA (mkA "recessive");
lin rechauffe_N = mkN "réchauffé" "réchauffés";
lin recherche_A = compoundA (mkA "recherché");
lin recidivism_N = mkN "recidivism" ;
lin recidivist_N = mkN "recidivist" "recidivists";
lin recife_PN = mkPN "Recife";
lin recipe_N = mkN "recipe" "recipes";
lin recipient_N = mkN "recipient" "recipients";
lin reciprocal_A = compoundA (mkA "reciprocal");
lin reciprocal_N = mkN "reciprocal" "reciprocals";
lin reciprocate_V = mkV "reciprocate" "reciprocates" "reciprocated" "reciprocated" "reciprocating";
lin reciprocate_V2 = mkV2 (mkV "reciprocate" "reciprocates" "reciprocated" "reciprocated" "reciprocating");
lin reciprocation_N = mkN "reciprocation" ;
lin reciprocity_N = mkN "reciprocity" ;
lin recital_N = mkN "recital" "recitals";
lin recitalist_N = mkN "recitalist" "recitalists";
lin recitation_N = mkN "recitation" "recitations";
lin recitative_N = mkN "recitative" "recitatives";
lin recite_V = mkV "recite" "recites" "recited" "recited" "reciting";
lin recite_V2 = mkV2 (mkV "recite" "recites" "recited" "recited" "reciting");
lin reckless_A = compoundA (mkA "reckless");
lin recklessness_N = mkN "recklessness" ;
lin recklinghausen_PN = mkPN "Recklinghausen";
lin reckon_V = mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning";
lin reckon_V2 = mkV2 (mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning");
lin reckon_VS = mkVS (mkV "reckon" "reckons" "reckoned" "reckoned" "reckoning");
lin reckoner_N = mkN "reckoner" "reckoners";
lin reckoning_N = mkN "reckoning" "reckonings";
lin reclaim_V2 = mkV2 (mkV "reclaim" "reclaims" "reclaimed" "reclaimed" "reclaiming");
lin reclamation_N = mkN "reclamation" ;
lin reclassify_V2 = mkV2 (mkV "reclassify");
lin recline_V = mkV "recline" "reclines" "reclined" "reclined" "reclining";
lin recline_V2 = mkV2 (mkV "recline" "reclines" "reclined" "reclined" "reclining");
lin recluse_N = mkN "recluse" "recluses";
lin recognition_N = mkN "recognition" ;
lin recognizable_A = compoundA (mkA "recognizable");
lin recognizance_N = mkN "recognizance" "recognizances";
lin recognize_V2 = mkV2 (mkV "recognize" "recognizes" "recognized" "recognized" "recognizing");
lin recognize_VS = mkVS (mkV "recognize");
lin recoil_N = mkN "recoil" "recoils";
lin recoil_V = mkV "recoil" "recoils" "recoiled" "recoiled" "recoiling";
lin recollect_V = mkV "recollect" "recollects" "recollected" "recollected" "recollecting";
lin recollect_V2 = mkV2 (mkV "recollect" "recollects" "recollected" "recollected" "recollecting");
lin recollection_N = mkN "recollection" "recollections";
lin recommend_V2 = mkV2 (mkV "recommend" "recommends" "recommended" "recommended" "recommending");
lin recommend_VS = mkVS (mkV "recommend");
lin recommendation_N = mkN "recommendation" "recommendations";
lin recommit_V2 = mkV2 (mkV "recommit" "recommits" "recommitted" "recommitted" "recommitting");
lin recompense_N = mkN "recompense" "recompenses";
lin recompense_V2 = mkV2 (mkV "recompense" "recompenses" "recompensed" "recompensed" "recompensing");
lin reconcilable_A = compoundA (mkA "reconcilable");
lin reconcile_V2 = mkV2 (mkV "reconcile" "reconciles" "reconciled" "reconciled" "reconciling");
lin reconciliation_N = mkN "reconciliation" "reconciliations";
lin recondite_A = compoundA (mkA "recondite");
lin recondition_V2 = mkV2 (mkV "recondition" "reconditions" "reconditioned" "reconditioned" "reconditioning");
lin reconnaissance_N = mkN "reconnaissance" "reconnaissances";
lin reconnoitre_V = mkV "reconnoitre" "reconnoitres" "reconnoitred" "reconnoitred" "reconnoitring";
lin reconnoitre_V2 = mkV2 (mkV "reconnoitre" "reconnoitres" "reconnoitred" "reconnoitred" "reconnoitring");
lin reconsecrate_V2 = mkV2 (mkV "reconsecrate" "reconsecrates" "reconsecrated" "reconsecrated" "reconsecrating");
lin reconsider_V2 = mkV2 (mkV "reconsider" "reconsiders" "reconsidered" "reconsidered" "reconsidering");
lin reconsider_VS = mkVS (mkV "reconsider" "reconsiders" "reconsidered" "reconsidered" "reconsidering");
lin reconstruct_V2 = mkV2 (mkV "reconstruct" "reconstructs" "reconstructed" "reconstructed" "reconstructing");
lin reconstruction_N = mkN "reconstruction" "reconstructions";
lin reconvict_V2 = mkV2 (mkV "reconvict" "reconvicts" "reconvicted" "reconvicted" "reconvicting");
lin record_N = mkN "record" "records";
lin record_V2 = mkV2 (mkV "record" "records" "recorded" "recorded" "recording");
lin record_breaking_A = compoundA (mkA "record - breaking");
lin record_player_N = mkN "record - player" "record - players";
lin recorder_N = mkN "recorder" "recorders";
lin recording_N = mkN "recording" "recordings";
lin recount_V2 = mkV2 (mkV "recount" "recounts" "recounted" "recounted" "recounting");
lin recount_VS = mkVS (mkV "recount");
lin recoup_V2 = mkV2 (mkV "recoup" "recoups" "recouped" "recouped" "recouping");
lin recourse_N = mkN "recourse" ;
lin recover_V = mkV "recover" "recovers" "recovered" "recovered" "recovering";
lin recover_V2 = mkV2 (mkV "recover" "recovers" "recovered" "recovered" "recovering");
lin recover_V2V = mkV2V (mkV "recover" "recovers" "recovered" "recovered" "recovering") noPrep to_Prep ;
lin recoverable_A = compoundA (mkA "recoverable");
lin recovery_N = mkN "recovery" "recoveries";
lin recreant_A = compoundA (mkA "recreant");
lin recreant_N = mkN "recreant" "recreants";
lin recreate_V2 = mkV2 (mkV "recreate" "recreates" "recreated" "recreated" "recreating");
lin recreation_N = mkN "recreation" "recreations";
lin recreational_A = compoundA (mkA "recreational");
lin recriminate_V = mkV "recriminate" "recriminates" "recriminated" "recriminated" "recriminating";
lin recrimination_N = mkN "recrimination" "recriminations";
lin recriminatory_A = compoundA (mkA "recriminatory");
lin recrudescence_N = mkN "recrudescence" "recrudescences";
lin recruit_N = mkN "recruit" "recruits";
lin recruit_V = mkV "recruit" "recruits" "recruited" "recruited" "recruiting";
lin recruit_V2 = mkV2 (mkV "recruit" "recruits" "recruited" "recruited" "recruiting");
lin recruitment_N = mkN "recruitment" "recruitments";
lin rectal_A = compoundA (mkA "rectal");
lin rectangle_N = mkN "rectangle" "rectangles";
lin rectangular_A = compoundA (mkA "rectangular");
lin rectification_N = mkN "rectification" "rectifications";
lin rectifier_N = mkN "rectifier" "rectifiers";
lin rectify_V2 = mkV2 (mkV "rectify" "rectifies" "rectified" "rectified" "rectifying");
lin rectilinear_A = compoundA (mkA "rectilinear");
lin rectitude_N = mkN "rectitude" ;
lin recto_N = mkN "recto" "rectos";
lin rector_N = mkN "rector" "rectors";
lin rectory_N = mkN "rectory" "rectories";
lin rectum_N = mkN "rectum" "rectums";
lin recumbent_A = compoundA (mkA "recumbent");
lin recuperate_V = mkV "recuperate" "recuperates" "recuperated" "recuperated" "recuperating";
lin recuperate_V2 = mkV2 (mkV "recuperate" "recuperates" "recuperated" "recuperated" "recuperating");
lin recuperation_N = mkN "recuperation" "recuperations";
lin recuperative_A = compoundA (mkA "recuperative");
lin recur_V = mkV "recur" "recurs" "recurred" "recurred" "recurring";
lin recurrence_N = mkN "recurrence" "recurrences";
lin recurrent_A = compoundA (mkA "recurrent");
lin recurve_V = mkV "recurve" "recurves" "recurved" "recurved" "recurving";
lin recurve_V2 = mkV2 (mkV "recurve" "recurves" "recurved" "recurved" "recurving");
lin recusancy_N = mkN "recusancy" ;
lin recusant_A = compoundA (mkA "recusant");
lin recusant_N = mkN "recusant" "recusants";
lin recycle_V2 = mkV2 (mkV "recycle" "recycles" "recycled" "recycled" "recycling");
lin red_A = mkA "red" "redder*";
lin red_N = mkN "red" "reds";
lin red_hot_A = compoundA (mkA "red - hot");
lin red_rimmed_A = compoundA (mkA "red - rimmed");
lin redact_V2 = mkV2 (mkV "redact" "redacts" "redacted" "redacted" "redacting");
lin redaction_N = mkN "redaction" "redactions";
lin redbreast_N = mkN "redbreast" "redbreasts";
lin redbrick_A = compoundA (mkA "redbrick");
lin redbridge_PN = mkPN "Redbridge";
lin redcap_N = mkN "redcap" "redcaps";
lin redcoat_N = mkN "redcoat" "redcoats";
lin redden_V = mkV "redden" "reddens" "reddened" "reddened" "reddening";
lin redden_V2 = mkV2 (mkV "redden" "reddens" "reddened" "reddened" "reddening");
lin reddish_A = compoundA (mkA "reddish");
lin redditch_PN = mkPN "Redditch";
lin redecorate_V2 = mkV2 (mkV "redecorate" "redecorates" "redecorated" "redecorated" "redecorating");
lin redeem_V2 = mkV2 (mkV "redeem" "redeems" "redeemed" "redeemed" "redeeming");
lin redeemable_A = compoundA (mkA "redeemable");
lin redeemer_N = mkN "redeemer" "redeemers";
lin redefine_V2 = mkV2 (mkV "redefine" "redefines" "redefined" "redefined" "redefining");
lin redemption_N = mkN "redemption" ;
lin redemptive_A = compoundA (mkA "redemptive");
lin redeploy_V2 = mkV2 (mkV "redeploy" "redeploys" "redeployed" "redeployed" "redeploying");
lin redeployment_N = mkN "redeployment" "redeployments";
lin redesign_V2 = mkV2 (mkV "redesign" "redesigns" "redesigned" "redesigned" "redesigning");
lin redevelop_V2 = mkV2 (mkV "redevelop" "redevelops" "redeveloped" "redeveloped" "redeveloping");
lin redevelopment_N = mkN "redevelopment" "redevelopments";
lin redhead_N = mkN "redhead" "redheads";
lin rediffusion_N = mkN "rediffusion" ;
lin rediscover_V2 = mkV2 (mkV "rediscover" "rediscovers" "rediscovered" "rediscovered" "rediscovering");
lin rediscovery_N = mkN "rediscovery" "rediscoveries";
lin redisposition_N = mkN "redisposition" "redispositions";
lin redistribute_V2 = mkV2 (mkV "redistribute" "redistributes" "redistributed" "redistributed" "redistributing");
lin redistribution_N = mkN "redistribution" "redistributions";
lin redline_V2 = mkV2 (mkV "redline");
lin redness_N = mkN "redness" ;
lin redo_V2 = mkV2 (mkV "re" IrregEng.do_V);
lin redolence_N = mkN "redolence" ;
lin redolent_A = compoundA (mkA "redolent");
lin redouble_V = mkV "redouble" "redoubles" "redoubled" "redoubled" "redoubling";
lin redouble_V2 = mkV2 (mkV "redouble" "redoubles" "redoubled" "redoubled" "redoubling");
lin redoubt_N = mkN "redoubt" "redoubts";
lin redoubtable_A = compoundA (mkA "redoubtable");
lin redound_V = mkV "redound" "redounds" "redounded" "redounded" "redounding";
lin redraw_V2 = mkV2 (mkV "redraw");
lin redress_N = mkN "redress" ;
lin redress_V2 = mkV2 (mkV "redress" "redresses" "redressed" "redressed" "redressing");
lin redruth_PN = mkPN "Redruth";
lin redskin_N = mkN "redskin" "redskins";
lin reduce_V = mkV "reduce" "reduces" "reduced" "reduced" "reducing";
lin reduce_V2 = mkV2 (mkV "reduce" "reduces" "reduced" "reduced" "reducing");
lin reducible_A = compoundA (mkA "reducible");
lin reductio_ad_absurdum_N = mkN "reductio ad absurdum" "reductio ad absurda" {- FIXME: guessed plural form -};
lin reduction_N = mkN "reduction" "reductions";
lin redundance_N = mkN "redundance" "redundances";
lin redundancy_N = mkN "redundancy" "redundancies";
lin redundant_A = compoundA (mkA "redundant");
lin reduplicate_V2 = mkV2 (mkV "reduplicate" "reduplicates" "reduplicated" "reduplicated" "reduplicating");
lin reduplication_N = mkN "reduplication" "reduplications";
lin redwing_N = mkN "redwing" "redwings";
lin redwood_N = mkN "redwood" "redwoods";
lin reed_N = mkN "reed" "reeds";
lin reedy_A = mkA "reedy" "reedier";
lin reef_N = mkN "reef" "reefs";
lin reef_V2 = mkV2 (mkV "reef" "reefs" "reefed" "reefed" "reefing");
lin reef_knot_N = mkN "reef - knot" "reef - knots";
lin reefer_N = mkN "reefer" "reefers";
lin reek_N = mkN "reek" ;
lin reek_V = mkV "reek" "reeks" "reeked" "reeked" "reeking";
lin reel_N = mkN "reel" "reels";
lin reel_V = mkV "reel" "reels" "reeled" "reeled" "reeling";
lin reel_V2 = mkV2 (mkV "reel" "reels" "reeled" "reeled" "reeling");
lin reeve_N = mkN "reeve" "reeves";
lin reexamine_V = mkV "reexamine";
lin ref_N = mkN "ref" ;
lin reface_V2 = mkV2 (mkV "reface" "refaces" "refaced" "refaced" "refacing");
lin refashion_N = mkN "refashion" "refashions";
lin refashion_V2 = mkV2 (mkV "refashion" "refashions" "refashioned" "refashioned" "refashioning");
lin refection_N = mkN "refection" "refections";
lin refectory_N = mkN "refectory" "refectories";
lin refer_V = mkV "refer" "refers" "referred" "referred" "referring";
lin refer_V2 = mkV2 (mkV "refer" "refers" "referred" "referred" "referring");
lin referable_A = compoundA (mkA "referable");
lin referee_N = mkN "referee" "referees";
lin referee_V = mkV "referee" "IRREG" "IRREG" "IRREG" "IRREG";
lin referee_V2 = mkV2 (mkV "referee" "IRREG" "IRREG" "IRREG" "IRREG");
lin reference_N = mkN "reference" "references";
lin referendum_N = mkN "referendum" "referendums";
lin referential_A = compoundA (mkA "referential");
lin refill_N = mkN "refill" "refills";
lin refill_V2 = mkV2 (mkV "refill" "refills" "refilled" "refilled" "refilling");
lin refinance_V = mkV "refinance";
lin refinance_V2 = mkV2 (mkV "refinance");
lin refine_V = mkV "refine" "refines" "refined" "refined" "refining";
lin refine_V2 = mkV2 (mkV "refine" "refines" "refined" "refined" "refining");
lin refinement_N = mkN "refinement" "refinements";
lin refiner_N = mkN "refiner" "refiners";
lin refinery_N = mkN "refinery" "refineries";
lin refit_N = mkN "refit" "refits";
lin refit_V = mkV "refit" "refits" "refitted" "refitted" "refitting";
lin refit_V2 = mkV2 (mkV "refit" "refits" "refitted" "refitted" "refitting");
lin reflate_V2 = mkV2 (mkV "reflate" "reflates" "reflated" "reflated" "reflating");
lin reflation_N = mkN "reflation" ;
lin reflect_V = mkV "reflect" "reflects" "reflected" "reflected" "reflecting";
lin reflect_V2 = mkV2 (mkV "reflect" "reflects" "reflected" "reflected" "reflecting");
lin reflection_N = mkN "reflection" "reflections";
lin reflective_A = compoundA (mkA "reflective");
lin reflector_N = mkN "reflector" "reflectors";
lin reflex_A = compoundA (mkA "reflex");
lin reflex_N = mkN "reflex" "reflexes";
lin reflexion_N = mkN "reflexion" "reflexions";
lin reflexive_A = compoundA (mkA "reflexive");
lin reflexive_N = mkN "reflexive" "reflexives";
lin refloat_V = mkV "refloat" "refloats" "refloated" "refloated" "refloating";
lin refloat_V2 = mkV2 (mkV "refloat" "refloats" "refloated" "refloated" "refloating");
lin reflux_N = mkN "reflux" "refluxes";
lin refocus_V = mkV "refocus";
lin refocus_V2 = mkV2 (mkV "refocus");
lin refocus_V2V = mkV2V (mkV "refocus") noPrep to_Prep ;
lin reforest_V2 = mkV2 (mkV "reforest" "reforests" "reforested" "reforested" "reforesting");
lin reforestation_N = mkN "reforestation" "reforestations";
lin reform_N = mkN "reform" "reforms";
lin reform_V = mkV "reform" "reforms" "reformed" "reformed" "reforming";
lin reform_V2 = mkV2 (mkV "reform" "reforms" "reformed" "reformed" "reforming");
lin reformation_N = mkN "reformation" "reformations";
lin reformatory_A = compoundA (mkA "reformatory");
lin reformatory_N = mkN "reformatory" "reformatories";
lin reformer_N = mkN "reformer" "reformers";
lin reformulate_V2 = mkV2 (mkV "reformulate");
lin refract_V2 = mkV2 (mkV "refract" "refracts" "refracted" "refracted" "refracting");
lin refraction_N = mkN "refraction" "refractions";
lin refractory_A = compoundA (mkA "refractory");
lin refrain_N = mkN "refrain" "refrains";
lin refrain_V = mkV "refrain" "refrains" "refrained" "refrained" "refraining";
lin refresh_V2 = mkV2 (mkV "refresh" "refreshes" "refreshed" "refreshed" "refreshing");
lin refresher_N = mkN "refresher" "refreshers";
lin refreshing_A = compoundA (mkA "refreshing");
lin refreshment_N = mkN "refreshment" "refreshments";
lin refrigerant_A = compoundA (mkA "refrigerant");
lin refrigerant_N = mkN "refrigerant" "refrigerants";
lin refrigerate_V2 = mkV2 (mkV "refrigerate" "refrigerates" "refrigerated" "refrigerated" "refrigerating");
lin refrigeration_N = mkN "refrigeration" "refrigerations";
lin refrigerator_N = mkN "refrigerator" "refrigerators";
lin refuel_V = mkV "refuel" "refuels" "refuelled" "refuelled" "refuelling";
lin refuel_V2 = mkV2 (mkV "refuel" "refuels" "refuelled" "refuelled" "refuelling");
lin refuge_N = mkN "refuge" "refuges";
lin refugee_N = mkN "refugee" "refugees";
lin refulgence_N = mkN "refulgence" ;
lin refulgent_A = compoundA (mkA "refulgent");
lin refund_N = mkN "refund" "refunds";
lin refund_V2 = mkV2 (mkV "refund" "refunds" "refunded" "refunded" "refunding");
lin refurbish_V2 = mkV2 (mkV "refurbish" "refurbishes" "refurbished" "refurbished" "refurbishing");
lin refurnish_V2 = mkV2 (mkV "refurnish" "refurnishes" "refurnished" "refurnished" "refurnishing");
lin refusal_N = mkN "refusal" "refusals";
lin refuse_N = mkN "refuse" ;
lin refuse_V = mkV "refuse" "refuses" "refused" "refused" "refusing";
lin refuse_V2 = mkV2 (mkV "refuse" "refuses" "refused" "refused" "refusing");
lin refuse_VV = mkVV (mkV "refuse" "refuses" "refused" "refused" "refusing");
lin refuse_collector_N = mkN "refuse - collector" "refuse - collectors";
lin refutable_A = compoundA (mkA "refutable");
lin refutation_N = mkN "refutation" "refutations";
lin refute_V2 = mkV2 (mkV "refute" "refutes" "refuted" "refuted" "refuting");
lin reg_PN = mkPN "Reg";
lin regain_V2 = mkV2 (mkV "regain" "regains" "regained" "regained" "regaining");
lin regal_A = compoundA (mkA "regal");
lin regale_V2 = mkV2 (mkV "regale" "regales" "regaled" "regaled" "regaling");
lin regard_N = mkN "regard" "regards";
lin regard_V = mkV "regard";
lin regard_V2 = mkV2 (mkV "regard" "regards" "regarded" "regarded" "regarding");
lin regard_VS = mkVS (mkV "regard");
lin regardful_A = compoundA (mkA "regardful");
lin regardless_A = compoundA (mkA "regardless");
lin regatta_N = mkN "regatta" "regattas";
lin regency_N = mkN "regency" "regencies";
lin regenerate_A = compoundA (mkA "regenerate");
lin regenerate_V = mkV "regenerate" "regenerates" "regenerated" "regenerated" "regenerating";
lin regenerate_V2 = mkV2 (mkV "regenerate" "regenerates" "regenerated" "regenerated" "regenerating");
lin regeneration_N = mkN "regeneration" ;
lin regensburg_PN = mkPN "Regensburg";
lin regent_A = compoundA (mkA "regent");
lin regent_N = mkN "regent" "regents";
lin reggae_N = mkN "reggae" ;
lin regicide_N = mkN "regicide" "regicides";
lin regime_1_N = mkN "regime" "regimes";
lin regime_2_N = mkN "régime" "régimes";
lin regimen_N = mkN "regimen" "regimens";
lin regiment_N = mkN "regiment" "regiments";
lin regiment_V2 = mkV2 (mkV "regiment" "regiments" "regimented" "regimented" "regimenting");
lin regimental_A = compoundA (mkA "regimental");
lin regimentation_N = mkN "regimentation" ;
lin regina_PN = mkPN "Regina";
lin reginald_PN = mkPN "Reginald";
lin region_N = mkN "region" "regions";
lin regional_A = compoundA (mkA "regional");
lin register_N = mkN "register" "registers";
lin register_V = mkV "register" "registers" "registered" "registered" "registering";
lin register_V2 = mkV2 (mkV "register" "registers" "registered" "registered" "registering");
lin registrar_N = mkN "registrar" "registrars";
lin registration_N = mkN "registration" "registrations";
lin registry_N = mkN "registry" "registries";
lin regnant_A = compoundA (mkA "regnant");
lin regress_V = mkV "regress" "regresses" "regressed" "regressed" "regressing";
lin regression_N = mkN "regression" "regressions";
lin regressive_A = compoundA (mkA "regressive");
lin regret_N = mkN "regret" "regrets";
lin regret_V2 = mkV2 (mkV "regret" "regrets" "regretted" "regretted" "regretting");
lin regret_VS = mkVS (mkV "regret");
lin regretful_A = compoundA (mkA "regretful");
lin regrettable_A = compoundA (mkA "regrettable");
lin regroup_V = mkV "regroup" "regroups" "regrouped" "regrouped" "regrouping";
lin regroup_V2 = mkV2 (mkV "regroup" "regroups" "regrouped" "regrouped" "regrouping");
lin regular_A = compoundA (mkA "regular");
lin regular_N = mkN "regular" "regulars";
lin regularity_N = mkN "regularity" "regularities";
lin regularization_N = mkN "regularization" "regularizations";
lin regularize_V2 = mkV2 (mkV "regularize" "regularizes" "regularized" "regularized" "regularizing");
lin regulate_V2 = mkV2 (mkV "regulate" "regulates" "regulated" "regulated" "regulating");
lin regulation_N = mkN "regulation" "regulations";
lin regulator_N = mkN "regulator" "regulators";
lin regum_V2 = mkV2 (mkV "regum");
lin regurgitate_V = mkV "regurgitate" "regurgitates" "regurgitated" "regurgitated" "regurgitating";
lin regurgitate_V2 = mkV2 (mkV "regurgitate" "regurgitates" "regurgitated" "regurgitated" "regurgitating");
lin rehabilitate_V2 = mkV2 (mkV "rehabilitate" "rehabilitates" "rehabilitated" "rehabilitated" "rehabilitating");
lin rehabilitation_N = mkN "rehabilitation" "rehabilitations";
lin rehash_N = mkN "rehash" "rehashes";
lin rehash_V2 = mkV2 (mkV "rehash" "rehashes" "rehashed" "rehashed" "rehashing");
lin rehear_V2 = mkV2 (mkV "re" IrregEng.hear_V);
lin rehearing_N = mkN "rehearing" "rehearings";
lin rehearsal_N = mkN "rehearsal" "rehearsals";
lin rehearse_V = mkV "rehearse" "rehearses" "rehearsed" "rehearsed" "rehearsing";
lin rehearse_V2 = mkV2 (mkV "rehearse" "rehearses" "rehearsed" "rehearsed" "rehearsing");
lin rehouse_V2 = mkV2 (mkV "rehouse" "rehouses" "rehoused" "rehoused" "rehousing");
lin reich_N = mkN "reich" "reichs";
lin reigate_PN = mkPN "Reigate";
lin reign_N = mkN "reign" "reigns";
lin reign_V = mkV "reign" "reigns" "reigned" "reigned" "reigning";
lin reignite_V2 = mkV2 (mkV "reignite");
lin reimburse_V2 = mkV2 (mkV "reimburse" "reimburses" "reimbursed" "reimbursed" "reimbursing");
lin reimbursement_N = mkN "reimbursement" "reimbursements";
lin reimpose_V2 = mkV2 (mkV "reimpose");
lin reimposition_N = mkN "reimposition" "reimpositions";
lin rein_N = mkN "rein" "reins";
lin rein_V2 = mkV2 (mkV "rein" "reins" "reined" "reined" "reining");
lin reincarnate_A = compoundA (mkA "reincarnate");
lin reincarnate_V2 = mkV2 (mkV "reincarnate" "reincarnates" "reincarnated" "reincarnated" "reincarnating");
lin reincarnation_N = mkN "reincarnation" "reincarnations";
lin reindeer_N = mkN "reindeer" "reindeer";
lin reindict_V2 = mkV2 (mkV "reindict");
lin reinforce_V2 = mkV2 (mkV "reinforce" "reinforces" "reinforced" "reinforced" "reinforcing");
lin reinforcement_N = mkN "reinforcement" "reinforcements";
lin reinstall_V2 = mkV2 (mkV "reinstall");
lin reinstate_V2 = mkV2 (mkV "reinstate" "reinstates" "reinstated" "reinstated" "reinstating");
lin reinstatement_N = mkN "reinstatement" "reinstatements";
lin reinstitute_V2 = mkV2 (mkV "reinstitute");
lin reinsurance_N = mkN "reinsurance" "reinsurances";
lin reinsure_V2 = mkV2 (mkV "reinsure" "reinsures" "reinsured" "reinsured" "reinsuring");
lin reintegrate_V2 = mkV2 (mkV "reintegrate" "reintegrates" "reintegrated" "reintegrated" "reintegrating");
lin reinterpret_V2 = mkV2 (mkV "reinterpret" "reinterprets" "reinterpreted" "reinterpreted" "reinterpreting");
lin reinterpretation_N = mkN "reinterpretation" "reinterpretations";
lin reintroduce_V2 = mkV2 (mkV "reintroduce");
lin reinvent_V2 = mkV2 (mkV "reinvent");
lin reinvest_V2 = mkV2 (mkV "reinvest");
lin reinvigorate_V2 = mkV2 (mkV "reinvigorate");
lin reissue_N = mkN "reissue" "reissues";
lin reissue_V2 = mkV2 (mkV "reissue" "reissues" "reissued" "reissued" "reissuing");
lin reiterate_V2 = mkV2 (mkV "reiterate" "reiterates" "reiterated" "reiterated" "reiterating");
lin reiterate_VS = mkVS (mkV "reiterate");
lin reiteration_N = mkN "reiteration" "reiterations";
lin reject_N = mkN "reject" "rejects";
lin reject_V2 = mkV2 (mkV "reject" "rejects" "rejected" "rejected" "rejecting");
lin rejection_N = mkN "rejection" "rejections";
lin rejig_V2 = mkV2 (mkV "rejig" "rejigs" "rejigged" "rejigged" "rejigging");
lin rejoice_V = mkV "rejoice" "rejoices" "rejoiced" "rejoiced" "rejoicing";
lin rejoice_V2 = mkV2 (mkV "rejoice" "rejoices" "rejoiced" "rejoiced" "rejoicing");
lin rejoicing_N = mkN "rejoicing" ;
lin rejoin_V = mkV "rejoin" "rejoins" "rejoined" "rejoined" "rejoining";
lin rejoin_V2 = mkV2 (mkV "rejoin" "rejoins" "rejoined" "rejoined" "rejoining");
lin rejoinder_N = mkN "rejoinder" "rejoinders";
lin rejuvenate_V = mkV "rejuvenate" "rejuvenates" "rejuvenated" "rejuvenated" "rejuvenating";
lin rejuvenate_V2 = mkV2 (mkV "rejuvenate" "rejuvenates" "rejuvenated" "rejuvenated" "rejuvenating");
lin rejuvenation_N = mkN "rejuvenation" "rejuvenations";
lin rekindle_V = mkV "rekindle" "rekindles" "rekindled" "rekindled" "rekindling";
lin rekindle_V2 = mkV2 (mkV "rekindle" "rekindles" "rekindled" "rekindled" "rekindling");
lin relapse_N = mkN "relapse" "relapses";
lin relapse_V = mkV "relapse" "relapses" "relapsed" "relapsed" "relapsing";
lin relate_V = mkV "relate" "relates" "related" "related" "relating";
lin relate_V2 = mkV2 (mkV "relate" "relates" "related" "related" "relating");
lin relation_N = mkN "relation" "relations";
lin relationship_N = mkN "relationship" "relationships";
lin relative_A = compoundA (mkA "relative");
lin relative_N = mkN "relative" "relatives";
lin relativity_N = mkN "relativity" ;
lin relax_V = mkV "relax" "relaxes" "relaxed" "relaxed" "relaxing";
lin relax_V2 = mkV2 (mkV "relax" "relaxes" "relaxed" "relaxed" "relaxing");
lin relaxation_N = mkN "relaxation" "relaxations";
lin relay_N = mkN "relay" "relays";
lin relay_V2 = mkV2 (mkV "re" IrregEng.lay_V);
lin release_N = mkN "release" "releases";
lin release_V2 = mkV2 (mkV "release" "releases" "released" "released" "releasing");
lin relegate_V2 = mkV2 (mkV "relegate" "relegates" "relegated" "relegated" "relegating");
lin relegation_N = mkN "relegation" ;
lin relent_V = mkV "relent" "relents" "relented" "relented" "relenting";
lin relentless_A = compoundA (mkA "relentless");
lin relevance_N = mkN "relevance" "relevances";
lin relevancy_N = mkN "relevancy" ;
lin relevant_A = compoundA (mkA "relevant");
lin reliability_N = mkN "reliability" ;
lin reliable_A = compoundA (mkA "reliable");
lin reliance_N = mkN "reliance" ;
lin reliant_A = compoundA (mkA "reliant");
lin relic_N = mkN "relic" "relics";
lin relict_N = mkN "relict" "relicts";
lin relief_N = mkN "relief" "reliefs";
lin relieve_V2 = mkV2 (mkV "relieve" "relieves" "relieved" "relieved" "relieving");
lin religion_N = mkN "religion" "religions";
lin religious_A = compoundA (mkA "religious");
lin religious_N = mkN "religious" "religious";
lin reline_V2 = mkV2 (mkV "reline" "relines" "relined" "relined" "relining");
lin relinquish_V2 = mkV2 (mkV "relinquish" "relinquishes" "relinquished" "relinquished" "relinquishing");
lin reliquary_N = mkN "reliquary" "reliquaries";
lin relish_N = mkN "relish" "relishes";
lin relish_V2 = mkV2 (mkV "relish" "relishes" "relished" "relished" "relishing");
lin relish_VS = mkVS (mkV "relish");
lin relive_V2 = mkV2 (mkV "relive" "relives" "relived" "relived" "reliving");
lin relocate_V = mkV "relocate" "relocates" "relocated" "relocated" "relocating";
lin relocate_V2 = mkV2 (mkV "relocate" "relocates" "relocated" "relocated" "relocating");
lin relocation_N = mkN "relocation" ;
lin reluctance_N = mkN "reluctance" ;
lin reluctant_A = compoundA (mkA "reluctant");
lin rely_V = mkV "rely" "relies" "relied" "relied" "relying";
lin remain_V = mkV "remain";
lin remain_V2 = mkV2 (mkV "remain");
lin remain_VA = mkVA (mkV "remain" "remains" "remained" "remained" "remaining");
lin remain_VV = mkVV (mkV "remain" "remains" "remained" "remained" "remaining");
lin remain_VS = mkVS (mkV "remain" "remains" "remained" "remained" "remaining");
lin remainder_N = mkN "remainder" "remainders";
lin remake_N = mkN "remake" "remakes";
lin remake_V2 = mkV2 (mkV "re" IrregEng.make_V);
lin remand_N = mkN "remand" ;
lin remand_V2 = mkV2 (mkV "remand" "remands" "remanded" "remanded" "remanding");
lin remark_N = mkN "remark" "remarks";
lin remark_V = mkV "remark" "remarks" "remarked" "remarked" "remarking";
lin remark_V2 = mkV2 (mkV "remark" "remarks" "remarked" "remarked" "remarking");
lin remark_VS = mkVS (mkV "remark" "remarks" "remarked" "remarked" "remarking");
lin remarkable_A = compoundA (mkA "remarkable");
lin remarriage_N = mkN "remarriage" "remarriages";
lin remarry_V = mkV "remarry" "remarries" "remarried" "remarried" "remarrying";
lin remarry_V2 = mkV2 (mkV "remarry" "remarries" "remarried" "remarried" "remarrying");
lin remediable_A = compoundA (mkA "remediable");
lin remedial_A = compoundA (mkA "remedial");
lin remedy_N = mkN "remedy" "remedies";
lin remedy_V2 = mkV2 (mkV "remedy" "remedies" "remedied" "remedied" "remedying");
lin remember_V = mkV "remember" "remembers" "remembered" "remembered" "remembering";
lin remember_V2 = mkV2 (mkV "remember" "remembers" "remembered" "remembered" "remembering");
lin remember_VS = mkVS (mkV "remember" "remembers" "remembered" "remembered" "remembering");
lin remembrance_N = mkN "remembrance" "remembrances";
lin remilitarization_N = mkN "remilitarization" "remilitarizations";
lin remilitarize_V2 = mkV2 (mkV "remilitarize" "remilitarizes" "remilitarized" "remilitarized" "remilitarizing");
lin remind_V2 = mkV2 (mkV "remind" "reminds" "reminded" "reminded" "reminding");
lin reminder_N = mkN "reminder" "reminders";
lin reminisce_V = mkV "reminisce" "reminisces" "reminisced" "reminisced" "reminiscing";
lin reminiscence_N = mkN "reminiscence" "reminiscences";
lin reminiscent_A = compoundA (mkA "reminiscent");
lin remiss_A = compoundA (mkA "remiss");
lin remission_N = mkN "remission" "remissions";
lin remissness_N = mkN "remissness" ;
lin remit_V = mkV "remit" "remits" "remitted" "remitted" "remitting";
lin remit_V2 = mkV2 (mkV "remit" "remits" "remitted" "remitted" "remitting");
lin remittance_N = mkN "remittance" "remittances";
lin remittent_A = compoundA (mkA "remittent");
lin remnant_N = mkN "remnant" "remnants";
lin remodel_V = variants {mkV "remodel" "remodels" "remodeled"  "remodeled"  "remodeling";
                          mkV "remodel" "remodels" "remodelled" "remodelled" "remodelling"};
lin remodel_V2 = mkV2 (variants {mkV "remodel" "remodels" "remodeled"  "remodeled"  "remodeling";
                                 mkV "remodel" "remodels" "remodelled" "remodelled" "remodelling"});
lin remonstrance_N = mkN "remonstrance" "remonstrances";
lin remonstrate_V = mkV "remonstrate" "remonstrates" "remonstrated" "remonstrated" "remonstrating";
lin remorse_N = mkN "remorse" ;
lin remorseful_A = compoundA (mkA "remorseful");
lin remorseless_A = compoundA (mkA "remorseless");
lin remote_A = mkA "remote" "remoter";
lin remoteness_N = mkN "remoteness" ;
lin remould_V2 = mkV2 (mkV "remould" "remoulds" "remoulded" "remoulded" "remoulding");
lin remount_N = mkN "remount" "remounts";
lin remount_V = mkV "remount" "remounts" "remounted" "remounted" "remounting";
lin remount_V2 = mkV2 (mkV "remount" "remounts" "remounted" "remounted" "remounting");
lin removable_A = compoundA (mkA "removable");
lin removal_N = mkN "removal" "removals";
lin remove_N = mkN "remove" "removes";
lin remove_V = mkV "remove" "removes" "removed" "removed" "removing";
lin remove_V2 = mkV2 (mkV "remove" "removes" "removed" "removed" "removing");
lin removed_A = compoundA (mkA "removed");
lin remover_N = mkN "remover" "removers";
lin remscheid_PN = mkPN "Remscheid";
lin remunerate_V2 = mkV2 (mkV "remunerate" "remunerates" "remunerated" "remunerated" "remunerating");
lin remuneration_N = mkN "remuneration" ;
lin remunerative_A = compoundA (mkA "remunerative");
lin renaissance_N = mkN "renaissance" "renaissances";
lin renal_A = compoundA (mkA "renal");
lin rename_V2 = mkV2 (mkV "rename" "renames" "renamed" "renamed" "renaming");
lin rename_VS = mkVS (mkV "rename");
lin renascence_N = mkN "renascence" "renascences";
lin renascent_A = compoundA (mkA "renascent");
lin rend_V2 = mkV2 (mkV "rend" "IRREG" "IRREG" "IRREG" "IRREG");
lin render_V2 = mkV2 (mkV "render" "renders" "rendered" "rendered" "rendering");
lin render_VS = mkVS (mkV "render");
lin rendering_N = mkN "rendering" "renderings";
lin rendezvous_N = mkN "rendezvous" "rendezvous";
lin rendezvous_V = mkV "rendezvous" "IRREG" "IRREG" "IRREG" "IRREG";
lin rendezvouse_V = mkV "rendezvouse";
lin rendition_N = mkN "rendition" "renditions";
lin renegade_N = mkN "renegade" "renegades";
lin renegade_V = mkV "renegade" "renegades" "renegaded" "renegaded" "renegading";
lin renege_V = mkV "renege" "reneges" "reneged" "reneged" "reneging";
lin renegotiate_V2 = mkV2 (mkV "renegotiate");
lin renegue_V = mkV "renegue" "renegues" "renegued" "renegued" "reneguing";
lin renew_V2 = mkV2 (mkV "renew" "renews" "renewed" "renewed" "renewing");
lin renewable_A = compoundA (mkA "renewable");
lin renewal_N = mkN "renewal" "renewals";
lin renfrew_PN = mkPN "Renfrew";
lin rennes_PN = mkPN "Rennes";
lin rennet_N = mkN "rennet" ;
lin renounce_V2 = mkV2 (mkV "renounce" "renounces" "renounced" "renounced" "renouncing");
lin renovate_V2 = mkV2 (mkV "renovate" "renovates" "renovated" "renovated" "renovating");
lin renovation_N = mkN "renovation" "renovations";
lin renovator_N = mkN "renovator" "renovators";
lin renown_N = mkN "renown" ;
lin renowned_A = compoundA (mkA "renowned");
lin rent_N = mkN "rent" "rents";
lin rent_V = mkV "rent" "rents" "rented" "rented" "renting";
lin rent_V2 = mkV2 (mkV "rent" "rents" "rented" "rented" "renting");
lin rent_collector_N = mkN "rent - collector" "rent - collectors";
lin rent_free_A = compoundA (mkA "rent - free");
lin rent_free_Adv = mkAdv "rent - free";
lin rent_rebate_N = mkN "rent - rebate" "rent - rebates";
lin rent_roll_N = mkN "rent - roll" "rent - rolls";
lin rentable_A = compoundA (mkA "rentable");
lin rental_N = mkN "rental" "rentals";
lin rentier_N = mkN "rentier" "rentiers";
lin renunciation_N = mkN "renunciation" ;
lin reoffer_V2 = mkV2 (mkV "reoffer");
lin reopen_V = mkV "reopen" "reopens" "reopened" "reopened" "reopening";
lin reopen_V2 = mkV2 (mkV "reopen" "reopens" "reopened" "reopened" "reopening");
lin reorganization_N = mkN "reorganization" "reorganizations";
lin reorganize_V = mkV "reorganize" "reorganizes" "reorganized" "reorganized" "reorganizing";
lin reorganize_V2 = mkV2 (mkV "reorganize" "reorganizes" "reorganized" "reorganized" "reorganizing");
lin reorient_V = mkV "reorient" "reorients" "reoriented" "reoriented" "reorienting";
lin reorient_V2 = mkV2 (mkV "reorient" "reorients" "reoriented" "reoriented" "reorienting");
lin reorientate_V = mkV "reorientate" "reorientates" "reorientated" "reorientated" "reorientating";
lin reorientate_V2 = mkV2 (mkV "reorientate" "reorientates" "reorientated" "reorientated" "reorientating");
lin reorientation_N = mkN "reorientation" ;
lin rep_N = mkN "rep" "reps";
lin repackage_V2 = mkV2 (mkV "repackage");
lin repaint_V2 = mkV2 (mkV "repaint" "repaints" "repainted" "repainted" "repainting");
lin repair_N = mkN "repair" "repairs";
lin repair_V = mkV "repair" "repairs" "repaired" "repaired" "repairing";
lin repair_V2 = mkV2 (mkV "repair" "repairs" "repaired" "repaired" "repairing");
lin repairable_A = compoundA (mkA "repairable");
lin repairer_N = mkN "repairer" "repairers";
lin reparable_A = compoundA (mkA "reparable");
lin reparation_N = mkN "reparation" "reparations";
lin repartee_N = mkN "repartee" "repartees";
lin repass_V2 = mkV2 (mkV "repass");
lin repast_N = mkN "repast" "repasts";
lin repatriate_N = mkN "repatriate" "repatriates";
lin repatriate_V2 = mkV2 (mkV "repatriate" "repatriates" "repatriated" "repatriated" "repatriating");
lin repatriation_N = mkN "repatriation" "repatriations";
lin repay_V = mkV "re" IrregEng.pay_V;
lin repay_V2 = mkV2 (mkV "re" IrregEng.pay_V);
lin repayable_A = compoundA (mkA "repayable");
lin repayment_N = mkN "repayment" "repayments";
lin repeal_N = mkN "repeal" "repeals";
lin repeal_V2 = mkV2 (mkV "repeal" "repeals" "repealed" "repealed" "repealing");
lin repeat_N = mkN "repeat" "repeats";
lin repeat_V = mkV "repeat" "repeats" "repeated" "repeated" "repeating";
lin repeat_V2 = mkV2 (mkV "repeat" "repeats" "repeated" "repeated" "repeating");
lin repeat_VS = mkVS (mkV "repeat" "repeats" "repeated" "repeated" "repeating");
lin repeatable_A = compoundA (mkA "repeatable");
lin repeater_N = mkN "repeater" "repeaters";
lin repel_V2 = mkV2 (mkV "repel" "repels" "repelled" "repelled" "repelling");
lin repellent_A = compoundA (mkA "repellent");
lin repellent_N = mkN "repellent" ;
lin repent_V = mkV "repent" "repents" "repented" "repented" "repenting";
lin repent_V2 = mkV2 (mkV "repent" "repents" "repented" "repented" "repenting");
lin repentance_N = mkN "repentance" ;
lin repentant_A = compoundA (mkA "repentant");
lin repercussion_N = mkN "repercussion" "repercussions";
lin repertoire_N = mkN "repertoire" "repertoires";
lin repertory_N = mkN "repertory" "repertories";
lin repetition_N = mkN "repetition" "repetitions";
lin repetitious_A = compoundA (mkA "repetitious");
lin repetitive_A = compoundA (mkA "repetitive");
lin repine_V = mkV "repine" "repines" "repined" "repined" "repining";
lin replace_V2 = mkV2 (mkV "replace" "replaces" "replaced" "replaced" "replacing");
lin replace_VV = ingVV (mkV "replace");
lin replaceable_A = compoundA (mkA "replaceable");
lin replacement_N = mkN "replacement" "replacements";
lin replant_V2 = mkV2 (mkV "replant" "replants" "replanted" "replanted" "replanting");
lin replaster_V2 = mkV2 (mkV "replaster");
lin replay_N = mkN "replay" "replays";
lin replay_V2 = mkV2 (mkV "replay" "replays" "replayed" "replayed" "replaying");
lin replenish_V2 = mkV2 (mkV "replenish" "replenishes" "replenished" "replenished" "replenishing");
lin replenishment_N = mkN "replenishment" "replenishments";
lin replete_A = compoundA (mkA "replete");
lin repletion_N = mkN "repletion" ;
lin replica_N = mkN "replica" "replicas";
lin replicate_V2 = mkV2 (mkV "replicate");
lin reply_N = mkN "reply" "replies";
lin reply_V = mkV "reply" "replies" "replied" "replied" "replying";
lin reply_V2 = mkV2 (mkV "reply" "replies" "replied" "replied" "replying");
lin reply_VS = mkVS (mkV "reply" "replies" "replied" "replied" "replying");
lin reply_paid_A = compoundA (mkA "reply - paid");
lin repoint_V2 = mkV2 (mkV "repoint" "repoints" "repointed" "repointed" "repointing");
lin repond_V = mkV "repond";
lin report_N = mkN "report" "reports";
lin report_V = mkV "report" "reports" "reported" "reported" "reporting";
lin report_V2 = mkV2 (mkV "report" "reports" "reported" "reported" "reporting");
lin report_V2V = mkV2V (mkV "report" "reports" "reported" "reported" "reporting") noPrep to_Prep ;
lin report_VS = mkVS (mkV "report" "reports" "reported" "reported" "reporting");
lin reportable_A = compoundA (mkA "reportable");
lin reportage_N = mkN "reportage" ;
lin reportedly_Adv = mkAdv "reportedly";
lin reporter_N = mkN "reporter" "reporters";
lin repose_N = mkN "repose" ;
lin repose_V = mkV "repose" "reposes" "reposed" "reposed" "reposing";
lin repose_V2 = mkV2 (mkV "repose" "reposes" "reposed" "reposed" "reposing");
lin reposeful_A = compoundA (mkA "reposeful");
lin repossess_V2 = mkV2 (mkV "repossess");
lin reposition_V2 = mkV2 (mkV "reposition");
lin repository_N = mkN "repository" "repositories";
lin repot_V2 = mkV2 (mkV "repot" "repots" "repotted" "repotted" "repotting");
lin repp_N = mkN "repp" ;
lin reprehend_V2 = mkV2 (mkV "reprehend" "reprehends" "reprehended" "reprehended" "reprehending");
lin reprehensible_A = compoundA (mkA "reprehensible");
lin represent_V = mkV "represent";
lin represent_V2 = mkV2 (mkV "represent" "represents" "represented" "represented" "representing");
lin representation_N = mkN "representation" "representations";
lin representative_A = compoundA (mkA "representative");
lin representative_N = mkN "representative" "representatives";
lin repress_V2 = mkV2 (mkV "repress" "represses" "repressed" "repressed" "repressing");
lin repressed_A = compoundA (mkA "repressed");
lin repression_N = mkN "repression" "repressions";
lin repressive_A = compoundA (mkA "repressive");
lin reprieve_N = mkN "reprieve" "reprieves";
lin reprieve_V2 = mkV2 (mkV "reprieve" "reprieves" "reprieved" "reprieved" "reprieving");
lin reprimand_N = mkN "reprimand" "reprimands";
lin reprimand_V2 = mkV2 (mkV "reprimand" "reprimands" "reprimanded" "reprimanded" "reprimanding");
lin reprint_N = mkN "reprint" "reprints";
lin reprint_V2 = mkV2 (mkV "reprint" "reprints" "reprinted" "reprinted" "reprinting");
lin reprisal_N = mkN "reprisal" "reprisals";
lin reproach_N = mkN "reproach" "reproaches";
lin reproach_V2 = mkV2 (mkV "reproach" "reproaches" "reproached" "reproached" "reproaching");
lin reproachful_A = compoundA (mkA "reproachful");
lin reprobate_N = mkN "reprobate" "reprobates";
lin reprobate_V2 = mkV2 (mkV "reprobate" "reprobates" "reprobated" "reprobated" "reprobating");
lin reprobation_N = mkN "reprobation" ;
lin reproduce_V = mkV "reproduce" "reproduces" "reproduced" "reproduced" "reproducing";
lin reproduce_V2 = mkV2 (mkV "reproduce" "reproduces" "reproduced" "reproduced" "reproducing");
lin reproducer_N = mkN "reproducer" "reproducers";
lin reproducible_A = compoundA (mkA "reproducible");
lin reproduction_N = mkN "reproduction" "reproductions";
lin reproductive_A = compoundA (mkA "reproductive");
lin reproof_N = mkN "reproof" "reproofs";
lin reproof_V2 = mkV2 (mkV "reproof" "reproofs" "reproofed" "reproofed" "reproofing");
lin reprove_V2 = mkV2 (mkV "reprove" "reproves" "reproved" "reproved" "reproving");
lin reprovingly_Adv = mkAdv "reprovingly";
lin reps_N = mkN "reps" ;
lin reptile_N = mkN "reptile" "reptiles";
lin reptilian_A = compoundA (mkA "reptilian");
lin reptilian_N = mkN "reptilian" "reptilians";
lin republic_N = mkN "republic" "republics";
lin republican_A = compoundA (mkA "republican");
lin republican_N = mkN "republican" "republicans";
lin republicanism_N = mkN "republicanism" ;
lin repudiate_V2 = mkV2 (mkV "repudiate" "repudiates" "repudiated" "repudiated" "repudiating");
lin repudiation_N = mkN "repudiation" "repudiations";
lin repugnance_N = mkN "repugnance" ;
lin repugnant_A = compoundA (mkA "repugnant");
lin repulse_N = mkN "repulse" "repulses";
lin repulse_V2 = mkV2 (mkV "repulse" "repulses" "repulsed" "repulsed" "repulsing");
lin repulsion_N = mkN "repulsion" ;
lin repulsive_A = compoundA (mkA "repulsive");
lin repurchase_V2 = mkV2 (mkV "repurchase");
lin reputable_A = compoundA (mkA "reputable");
lin reputation_N = mkN "reputation" "reputations";
lin repute_N = mkN "repute" ;
lin repute_V2 = mkV2 (mkV "repute" "reputes" "reputed" "reputed" "reputing");
lin reputed_A = compoundA (mkA "reputed");
lin request_N = mkN "request" "requests";
lin request_V2 = mkV2 (mkV "request" "requests" "requested" "requested" "requesting");
lin request_VS = mkVS (mkV "request");
lin requiem_N = mkN "requiem" "requiems";
lin require_V = mkV "require";
lin require_V2 = mkV2 (mkV "require");
lin require_V2V = mkV2V (mkV "require") noPrep to_Prep;
lin require_VV = mkVV (mkV "require");
lin require_VS = mkVS (mkV "require");
lin requirement_N = mkN "requirement" "requirements";
lin requisite_A = compoundA (mkA "requisite");
lin requisite_N = mkN "requisite" "requisites";
lin requisition_N = mkN "requisition" "requisitions";
lin requisition_V2 = mkV2 (mkV "requisition" "requisitions" "requisitioned" "requisitioned" "requisitioning");
lin requital_N = mkN "requital" ;
lin requite_V2 = mkV2 (mkV "requite" "requites" "requited" "requited" "requiting");
lin reread_V2 = mkV2 (mkV "re" IrregEng.read_V);
lin reredos_N = mkN "reredos" "reredoses";
lin reroute_V2 = mkV2 (mkV "reroute");
lin rerun_N = mkN "rerun" "reruns";
lin rerun_V2 = mkV2 (mkV "re" IrregEng.run_V);
lin res_N = mkN "res" ;
lin reschedule_V2 = mkV2 (mkV "reschedule");
lin rescind_V2 = mkV2 (mkV "rescind" "rescinds" "rescinded" "rescinded" "rescinding");
lin rescript_N = mkN "rescript" "rescripts";
lin rescue_N = mkN "rescue" "rescues";
lin rescue_V2 = mkV2 (mkV "rescue" "rescues" "rescued" "rescued" "rescuing");
lin rescuer_N = mkN "rescuer" "rescuers";
lin research_N = mkN "research" "researches";
lin research_V = mkV "research" "researches" "researched" "researched" "researching";
lin research_V2 = mkV2 (mkV "research" "researches" "researched" "researched" "researching");
lin researcher_N = mkN "researcher" "researchers";
lin reseat_V2 = mkV2 (mkV "reseat" "reseats" "reseated" "reseated" "reseating");
lin reseed_V2 = mkV2 (mkV "reseed" "reseeds" "reseeded" "reseeded" "reseeding");
lin resell_V2 = mkV2 (mkV "re" IrregEng.sell_V);
lin resemblance_N = mkN "resemblance" "resemblances";
lin resemble_V2 = mkV2 (mkV "resemble" "resembles" "resembled" "resembled" "resembling");
lin resent_V2 = mkV2 (mkV "resent" "resents" "resented" "resented" "resenting");
lin resent_VS = mkVS (mkV "resent" "resents" "resented" "resented" "resenting");
lin resentful_A = compoundA (mkA "resentful");
lin resentment_N = mkN "resentment" ;
lin reservation_N = mkN "reservation" "reservations";
lin reserve_N = mkN "reserve" "reserves";
lin reserve_V = mkV "reserve";
lin reserve_V2 = mkV2 (mkV "reserve" "reserves" "reserved" "reserved" "reserving");
lin reserved_A = compoundA (mkA "reserved");
lin reservist_N = mkN "reservist" "reservists";
lin reservoir_N = mkN "reservoir" "reservoirs";
lin reset_V = mkV "reset";
lin reset_V2 = mkV2 (mkV "re" IrregEng.set_V);
lin resettle_V = mkV "resettle" "resettles" "resettled" "resettled" "resettling";
lin resettle_V2 = mkV2 (mkV "resettle" "resettles" "resettled" "resettled" "resettling");
lin resettlement_N = mkN "resettlement" "resettlements";
lin reshape_V2 = mkV2 (mkV "reshape" "reshapes" "reshaped" "reshaped" "reshaping");
lin reshuffle_N = mkN "reshuffle" "reshuffles";
lin reshuffle_V2 = mkV2 (mkV "reshuffle" "reshuffles" "reshuffled" "reshuffled" "reshuffling");
lin reside_V = mkV "reside" "resides" "resided" "resided" "residing";
lin residence_N = mkN "residence" "residences";
lin residency_N = mkN "residency" "residencies";
lin resident_A = compoundA (mkA "resident");
lin resident_N = mkN "resident" "residents";
lin residential_A = compoundA (mkA "residential");
lin residual_A = compoundA (mkA "residual");
lin residuary_A = compoundA (mkA "residuary");
lin residue_N = mkN "residue" "residues";
lin resign_V = mkV "resign" "resigns" "resigned" "resigned" "resigning";
lin resign_V2 = mkV2 (mkV "resign" "resigns" "resigned" "resigned" "resigning");
lin resign_V2V = mkV2V (mkV "resign" "resigns" "resigned" "resigned" "resigning") noPrep to_Prep ;
lin resign_VS = mkVS (mkV "resign" "resigns" "resigned" "resigned" "resigning");
lin resign_VV = mkVV (mkV "resign" "resigns" "resigned" "resigned" "resigning") ;
lin resignation_N = mkN "resignation" "resignations";
lin resigned_A = compoundA (mkA "resigned");
lin resilience_N = mkN "resilience" ;
lin resiliency_N = mkN "resiliency" ;
lin resilient_A = compoundA (mkA "resilient");
lin resin_N = mkN "resin" "resins";
lin resinated_A = compoundA (mkA "resinated");
lin resinous_A = compoundA (mkA "resinous");
lin resist_V = mkV "resist" "resists" "resisted" "resisted" "resisting";
lin resist_V2 = mkV2 (mkV "resist" "resists" "resisted" "resisted" "resisting");
lin resist_VS = mkVS (mkV "resist" "resists" "resisted" "resisted" "resisting");
lin resistance_N = mkN "resistance" "resistances";
lin resistant_A = compoundA (mkA "resistant");
lin resister_N = mkN "resister" "resisters";
lin resistive_A = compoundA (mkA "resistive");
lin resistivity_N = mkN "resistivity" ;
lin resistless_A = compoundA (mkA "resistless");
lin resistor_N = mkN "resistor" "resistors";
lin resold_V2 = mkV2 (mkV "resold");
lin resole_V2 = mkV2 (mkV "resole" "resoles" "resoled" "resoled" "resoling");
lin resolute_A = compoundA (mkA "resolute");
lin resoluteness_N = mkN "resoluteness" ;
lin resolution_N = mkN "resolution" "resolutions";
lin resolvable_A = compoundA (mkA "resolvable");
lin resolve_N = mkN "resolve" "resolves";
lin resolve_V = mkV "resolve" "resolves" "resolved" "resolved" "resolving";
lin resolve_V2 = mkV2 (mkV "resolve" "resolves" "resolved" "resolved" "resolving");
lin resonance_N = mkN "resonance" ;
lin resonant_A = compoundA (mkA "resonant");
lin resonate_V = mkV "resonate" "resonates" "resonated" "resonated" "resonating";
lin resonate_V2 = mkV2 (mkV "resonate" "resonates" "resonated" "resonated" "resonating");
lin resonator_N = mkN "resonator" "resonators";
lin resort_N = mkN "resort" "resorts";
lin resort_V = mkV "resort" "resorts" "resorted" "resorted" "resorting";
lin resound_V = mkV "resound" "resounds" "resounded" "resounded" "resounding";
lin resound_V2 = mkV2 (mkV "resound" "resounds" "resounded" "resounded" "resounding");
lin resoundingly_Adv = mkAdv "resoundingly";
lin resource_N = mkN "resource" "resources";
lin resourceful_A = compoundA (mkA "resourceful");
lin resourceless_A = compoundA (mkA "resourceless");
lin respect_N = mkN "respect" "respects";
lin respect_V2 = mkV2 (mkV "respect" "respects" "respected" "respected" "respecting");
lin respectability_N = mkN "respectability" "respectabilities";
lin respectable_A = compoundA (mkA "respectable");
lin respecter_N = mkN "respecter" "respecters";
lin respectful_A = compoundA (mkA "respectful");
lin respective_A = compoundA (mkA "respective");
lin respiration_N = mkN "respiration" "respirations";
lin respirator_N = mkN "respirator" "respirators";
lin respiratory_A = compoundA (mkA "respiratory");
lin respire_V = mkV "respire" "respires" "respired" "respired" "respiring";
lin respite_N = mkN "respite" "respites";
lin respite_V2 = mkV2 (mkV "respite" "respites" "respited" "respited" "respiting");
lin resplendence_N = mkN "resplendence" ;
lin resplendency_N = mkN "resplendency" ;
lin resplendent_A = compoundA (mkA "resplendent");
lin respond_V = mkV "respond" "responds" "responded" "responded" "responding";
lin respond_V2 = mkV2 (mkV "respond" "responds" "responded" "responded" "responding");
lin respond_VS = mkVS (mkV "respond" "responds" "responded" "responded" "responding");
lin respondent_N = mkN "respondent" "respondents";
lin response_N = mkN "response" "responses";
lin responsibility_N = mkN "responsibility" "responsibilities";
lin responsible_A = compoundA (mkA "responsible");
lin responsive_A = compoundA (mkA "responsive");
lin responsiveness_N = mkN "responsiveness" ;
lin rest_N = mkN "rest" "rests";
lin rest_V = mkV "rest" "rests" "rested" "rested" "resting";
lin rest_V2 = mkV2 (mkV "rest" "rests" "rested" "rested" "resting");
lin rest_VS = mkVS (mkV "rest" "rests" "rested" "rested" "resting");
lin rest_cure_N = mkN "rest - cure" "rest - cures";
lin rest_day_N = mkN "rest - day" "rest - days";
lin rest_home_N = mkN "rest - home" "rest - homes";
lin rest_house_N = mkN "rest - house" "rest - houses";
lin restart_V = mkV "restart" "restarts" "restarted" "restarted" "restarting";
lin restart_V2 = mkV2 (mkV "restart" "restarts" "restarted" "restarted" "restarting");
lin restate_V2 = mkV2 (mkV "restate" "restates" "restated" "restated" "restating");
lin restate_V2V = mkV2V (mkV "restate") noPrep to_Prep ;
lin restatement_N = mkN "restatement" "restatements";
lin restaurant_N = mkN "restaurant" "restaurants";
lin restauranteur_N = mkN "restauranteur" "restauranteurs";
lin restaurateur_N = mkN "restaurateur" "restaurateurs";
lin restful_A = compoundA (mkA "restful");
lin restfulness_N = mkN "restfulness" ;
lin restitution_N = mkN "restitution" ;
lin restive_A = compoundA (mkA "restive");
lin restiveness_N = mkN "restiveness" ;
lin restless_A = compoundA (mkA "restless");
lin restlessness_N = mkN "restlessness" ;
lin restock_V2 = mkV2 (mkV "restock" "restocks" "restocked" "restocked" "restocking");
lin restoration_N = mkN "restoration" "restorations";
lin restorative_A = compoundA (mkA "restorative");
lin restorative_N = mkN "restorative" "restoratives";
lin restore_V2 = mkV2 (mkV "restore" "restores" "restored" "restored" "restoring");
lin restorer_N = mkN "restorer" "restorers";
lin restrain_V2 = mkV2 (mkV "restrain" "restrains" "restrained" "restrained" "restraining");
lin restrained_A = compoundA (mkA "restrained");
lin restraint_N = mkN "restraint" "restraints";
lin restrict_V = mkV "restrict";
lin restrict_V2 = mkV2 (mkV "restrict" "restricts" "restricted" "restricted" "restricting");
lin restriction_N = mkN "restriction" "restrictions";
lin restrictive_A = compoundA (mkA "restrictive");
lin restrictiveness_N = mkN "restrictiveness" ;
lin restructure_V = mkV "restructure";
lin restructure_V2 = mkV2 (mkV "restructure" "restructures" "restructured" "restructured" "restructuring");
lin restructure_V2V = mkV2V (mkV "restructure") noPrep to_Prep ;
lin result_N = mkN "result" "results";
lin result_V = mkV "result" "results" "resulted" "resulted" "resulting";
lin resultant_A = compoundA (mkA "resultant");
lin resume_N = mkN "résumé" "résumés";
lin resume_V = mkV "resume";
lin resume_V2 = mkV2 (mkV "resume" "resumes" "resumed" "resumed" "resuming");
lin resume_VS = mkVS (mkV "resume");
lin resumption_N = mkN "resumption" "resumptions";
lin resurface_V = mkV "resurface" "resurfaces" "resurfaced" "resurfaced" "resurfacing";
lin resurface_V2 = mkV2 (mkV "resurface" "resurfaces" "resurfaced" "resurfaced" "resurfacing");
lin resurgence_N = mkN "resurgence" "resurgences";
lin resurgent_A = compoundA (mkA "resurgent");
lin resurrect_V = mkV "resurrect" "resurrects" "resurrected" "resurrected" "resurrecting";
lin resurrect_V2 = mkV2 (mkV "resurrect" "resurrects" "resurrected" "resurrected" "resurrecting");
lin resurrection_N = mkN "resurrection" ;
lin resuscitate_V = mkV "resuscitate" "resuscitates" "resuscitated" "resuscitated" "resuscitating";
lin resuscitate_V2 = mkV2 (mkV "resuscitate" "resuscitates" "resuscitated" "resuscitated" "resuscitating");
lin resuscitation_N = mkN "resuscitation" "resuscitations";
lin ret_PN = mkPN "Ret";
lin ret_V2 = mkV2 (mkV "ret" "rets" "retted" "retted" "retting");
lin retail_Adv = mkAdv "retail";
lin retail_N = mkN "retail" "retails";
lin retail_V = mkV "retail" "retails" "retailed" "retailed" "retailing";
lin retail_V2 = mkV2 (mkV "retail" "retails" "retailed" "retailed" "retailing");
lin retailer_N = mkN "retailer" "retailers";
lin retain_V2 = mkV2 (mkV "retain" "retains" "retained" "retained" "retaining");
lin retain_V2V = mkV2V (mkV "retain") noPrep to_Prep ;
lin retainer_N = mkN "retainer" "retainers";
lin retake_N = mkN "retake" "retakes";
lin retake_V2 = mkV2 (mkV "re" IrregEng.take_V);
lin retaliate_V = mkV "retaliate" "retaliates" "retaliated" "retaliated" "retaliating";
lin retaliation_N = mkN "retaliation" ;
lin retaliative_A = compoundA (mkA "retaliative");
lin retaliatory_A = compoundA (mkA "retaliatory");
lin retard_V2 = mkV2 (mkV "retard" "retards" "retarded" "retarded" "retarding");
lin retardation_N = mkN "retardation" "retardations";
lin retch_V = mkV "retch" "retches" "retched" "retched" "retching";
lin retd_PN = mkPN "Retd";
lin retell_V2 = mkV2 (mkV "re" IrregEng.tell_V);
lin retention_N = mkN "retention" ;
lin retentive_A = compoundA (mkA "retentive");
lin retentiveness_N = mkN "retentiveness" ;
lin retford_PN = mkPN "Retford";
lin rethink_N = mkN "rethink" "rethinks";
lin rethink_V = mkV "re" IrregEng.think_V;
lin rethink_V2 = mkV2 (mkV "re" IrregEng.think_V);
lin reticence_N = mkN "reticence" "reticences";
lin reticent_A = compoundA (mkA "reticent");
lin reticulate_A = compoundA (mkA "reticulate");
lin reticulate_V = mkV "reticulate" "reticulates" "reticulated" "reticulated" "reticulating";
lin reticulate_V2 = mkV2 (mkV "reticulate" "reticulates" "reticulated" "reticulated" "reticulating");
lin reticulation_N = mkN "reticulation" "reticulations";
lin reticule_N = mkN "reticule" "reticules";
lin retina_N = mkN "retina" "retinas";
lin retinal_A = compoundA (mkA "retinal");
lin retinue_N = mkN "retinue" "retinues";
lin retire_N = mkN "retire" "IRREG";
lin retire_V = mkV "retire" "retires" "retired" "retired" "retiring";
lin retire_V2 = mkV2 (mkV "retire" "retires" "retired" "retired" "retiring");
lin retired_A = compoundA (mkA "retired");
lin retirement_N = mkN "retirement" "retirements";
lin retiring_A = compoundA (mkA "retiring");
lin retool_V2 = mkV2 (mkV "retool" "retools" "retooled" "retooled" "retooling");
lin retort_N = mkN "retort" "retorts";
lin retort_V = mkV "retort" "retorts" "retorted" "retorted" "retorting";
lin retort_V2 = mkV2 (mkV "retort" "retorts" "retorted" "retorted" "retorting");
lin retouch_V2 = mkV2 (mkV "retouch" "retouches" "retouched" "retouched" "retouching");
lin retrace_V2 = mkV2 (mkV "retrace" "retraces" "retraced" "retraced" "retracing");
lin retract_V = mkV "retract" "retracts" "retracted" "retracted" "retracting";
lin retract_V2 = mkV2 (mkV "retract" "retracts" "retracted" "retracted" "retracting");
lin retractable_A = compoundA (mkA "retractable");
lin retractile_A = compoundA (mkA "retractile");
lin retraction_N = mkN "retraction" "retractions";
lin retransmit_V2 = mkV2 (mkV "retransmit" "retransmits" "retransmitted" "retransmitted" "retransmitting");
lin retread_N = mkN "retread" "retreads";
lin retread_V2 = mkV2 (mkV "retread" "retreads" "retreaded" "retreaded" "retreading");
lin retreat_N = mkN "retreat" "retreats";
lin retreat_V = mkV "retreat" "retreats" "retreated" "retreated" "retreating";
lin retreat_V2 = mkV2 (mkV "retreat" "retreats" "retreated" "retreated" "retreating");
lin retrench_V = mkV "retrench" "retrenches" "retrenched" "retrenched" "retrenching";
lin retrench_V2 = mkV2 (mkV "retrench" "retrenches" "retrenched" "retrenched" "retrenching");
lin retrenchment_N = mkN "retrenchment" "retrenchments";
lin retrial_N = mkN "retrial" "retrials";
lin retribution_N = mkN "retribution" ;
lin retributive_A = compoundA (mkA "retributive");
lin retrievable_A = compoundA (mkA "retrievable");
lin retrieval_N = mkN "retrieval" ;
lin retrieve_V = mkV "retrieve" "retrieves" "retrieved" "retrieved" "retrieving";
lin retrieve_V2 = mkV2 (mkV "retrieve" "retrieves" "retrieved" "retrieved" "retrieving");
lin retriever_N = mkN "retriever" "retrievers";
lin retroactive_A = compoundA (mkA "retroactive");
lin retrofit_V2 = mkV2 (mkV "retrofit");
lin retrograde_A = compoundA (mkA "retrograde");
lin retrograde_V = mkV "retrograde" "retrogrades" "retrograded" "retrograded" "retrograding";
lin retrogress_V = mkV "retrogress" "retrogresses" "retrogressed" "retrogressed" "retrogressing";
lin retrogression_N = mkN "retrogression" "retrogressions";
lin retrogressive_A = compoundA (mkA "retrogressive");
lin retrorocket_N = mkN "retrorocket" "retrorockets";
lin retrospect_N = mkN "retrospect" ;
lin retrospection_N = mkN "retrospection" "retrospections";
lin retrospective_A = compoundA (mkA "retrospective");
lin retrousse_A = compoundA (mkA "retroussé");
lin retroversion_N = mkN "retroversion" "retroversions";
lin retsina_N = mkN "retsina" ;
lin return_N = mkN "return" "returns";
lin return_V = mkV "return" "returns" "returned" "returned" "returning";
lin return_V2 = mkV2 (mkV "return" "returns" "returned" "returned" "returning");
lin return_V2V = mkV2V (mkV "return" "returns" "returned" "returned" "returning") noPrep to_Prep ;
lin returnable_A = compoundA (mkA "returnable");
lin reunification_N = mkN "reunification" ;
lin reunion_N = mkN "reunion" "reunions";
lin reunite_V = mkV "reunite" "reunites" "reunited" "reunited" "reuniting";
lin reunite_V2 = mkV2 (mkV "reunite" "reunites" "reunited" "reunited" "reuniting");
lin rev_N = mkN "rev" "revs";
lin rev_PN = mkPN "Rev";
lin rev_V = mkV "rev" "revs" "revved" "revved" "revving";
lin rev_V2 = mkV2 (mkV "rev" "revs" "revved" "revved" "revving");
lin revaluation_N = mkN "revaluation" "revaluations";
lin revalue_V2 = mkV2 (mkV "revalue" "revalues" "revalued" "revalued" "revaluing");
lin revamp_V2 = mkV2 (mkV "revamp" "revamps" "revamped" "revamped" "revamping");
lin revd_PN = mkPN "Revd";
lin reveal_V2 = mkV2 (mkV "reveal" "reveals" "revealed" "revealed" "revealing");
lin reveal_VS = mkVS (mkV "reveal");
lin reveille_N = mkN "reveille" "reveilles";
lin revel_N = mkN "revel" "revels";
lin revel_V = mkV "revel" "revels" "reveled" "reveled" "reveling";
lin revelation_N = mkN "revelation" "revelations";
lin reveller_N = mkN "reveller" "revellers";
lin revelry_N = mkN "revelry" "revelries";
lin revenge_N = mkN "revenge" ;
lin revenge_V2 = mkV2 (mkV "revenge" "revenges" "revenged" "revenged" "revenging");
lin revengeful_A = compoundA (mkA "revengeful");
lin revenue_N = mkN "revenue" "revenues";
lin reverberant_A = compoundA (mkA "reverberant");
lin reverberate_V = mkV "reverberate" "reverberates" "reverberated" "reverberated" "reverberating";
lin reverberate_V2 = mkV2 (mkV "reverberate" "reverberates" "reverberated" "reverberated" "reverberating");
lin reverberation_N = mkN "reverberation" "reverberations";
lin revere_V2 = mkV2 (mkV "revere" "reveres" "revered" "revered" "revering");
lin reverence_N = mkN "reverence" ;
lin reverence_V2 = mkV2 (mkV "reverence" "reverences" "reverenced" "reverenced" "reverencing");
lin reverend_A = compoundA (mkA "reverend");
lin reverend_N = mkN "reverend" "reverends";
lin reverent_A = compoundA (mkA "reverent");
lin reverential_A = compoundA (mkA "reverential");
lin reverie_N = mkN "reverie" "reveries";
lin revers_N = mkN "revers" "IRREG";
lin reversal_N = mkN "reversal" "reversals";
lin reverse_A = compoundA (mkA "reverse");
lin reverse_N = mkN "reverse" "reverses";
lin reverse_V = mkV "reverse" "reverses" "reversed" "reversed" "reversing";
lin reverse_V2 = mkV2 (mkV "reverse" "reverses" "reversed" "reversed" "reversing");
lin reversibility_N = mkN "reversibility" ;
lin reversible_A = compoundA (mkA "reversible");
lin reversion_N = mkN "reversion" "reversions";
lin reversionary_A = compoundA (mkA "reversionary");
lin revert_V = mkV "revert" "reverts" "reverted" "reverted" "reverting";
lin revertible_A = compoundA (mkA "revertible");
lin revetment_N = mkN "revetment" "revetments";
lin review_N = mkN "review" "reviews";
lin review_V = mkV "review" "reviews" "reviewed" "reviewed" "reviewing";
lin review_V2 = mkV2 (mkV "review" "reviews" "reviewed" "reviewed" "reviewing");
lin reviewer_N = mkN "reviewer" "reviewers";
lin revile_V = mkV "revile" "reviles" "reviled" "reviled" "reviling";
lin revile_V2 = mkV2 (mkV "revile" "reviles" "reviled" "reviled" "reviling");
lin revise_N = mkN "revise" "revises";
lin revise_V = mkV "revise";
lin revise_V2 = mkV2 (mkV "revise" "revises" "revised" "revised" "revising");
lin reviser_N = mkN "reviser" "revisers";
lin revision_N = mkN "revision" "revisions";
lin revisionism_N = mkN "revisionism" ;
lin revisionist_N = mkN "revisionist" "revisionists";
lin revisit_V2 = mkV2 (mkV "revisit" "revisits" "revisited" "revisited" "revisiting");
lin revitalization_N = mkN "revitalization" "revitalizations";
lin revitalize_V2 = mkV2 (mkV "revitalize" "revitalizes" "revitalized" "revitalized" "revitalizing");
lin revival_N = mkN "revival" "revivals";
lin revivalist_N = mkN "revivalist" "revivalists";
lin revive_V = mkV "revive" "revives" "revived" "revived" "reviving";
lin revive_V2 = mkV2 (mkV "revive" "revives" "revived" "revived" "reviving");
lin revivify_V2 = mkV2 (mkV "revivify" "revivifies" "revivified" "revivified" "revivifying");
lin revocable_A = compoundA (mkA "revocable");
lin revocation_N = mkN "revocation" "revocations";
lin revoke_N = mkN "revoke" "revokes";
lin revoke_V = mkV "revoke" "revokes" "revoked" "revoked" "revoking";
lin revoke_V2 = mkV2 (mkV "revoke" "revokes" "revoked" "revoked" "revoking");
lin revolt_N = mkN "revolt" "revolts";
lin revolt_V = mkV "revolt" "revolts" "revolted" "revolted" "revolting";
lin revolt_V2 = mkV2 (mkV "revolt" "revolts" "revolted" "revolted" "revolting");
lin revolting_A = compoundA (mkA "revolting");
lin revolution_N = mkN "revolution" "revolutions";
lin revolutionary_A = compoundA (mkA "revolutionary");
lin revolutionary_N = mkN "revolutionary" "revolutionarys";
lin revolutionize_V2 = mkV2 (mkV "revolutionize" "revolutionizes" "revolutionized" "revolutionized" "revolutionizing");
lin revolve_V = mkV "revolve" "revolves" "revolved" "revolved" "revolving";
lin revolve_V2 = mkV2 (mkV "revolve" "revolves" "revolved" "revolved" "revolving");
lin revolver_N = mkN "revolver" "revolvers";
lin revue_N = mkN "revue" "revues";
lin revulsion_N = mkN "revulsion" ;
lin reward_N = mkN "reward" "rewards";
lin reward_V2 = mkV2 (mkV "reward" "rewards" "rewarded" "rewarded" "rewarding");
lin rewire_V2 = mkV2 (mkV "rewire" "rewires" "rewired" "rewired" "rewiring");
lin reword_V2 = mkV2 (mkV "reword" "rewords" "reworded" "reworded" "rewording");
lin rework_V2 = mkV2 (mkV "rework");
lin rewrite_N = mkN "rewrite" "rewrites";
lin rewrite_V2 = mkV2 (mkV "re" IrregEng.write_V);
lin rex_PN = mkPN "Rex";
lin reykjavik_PN = mkPN "Reykjavik";
lin rhapsodize_V = mkV "rhapsodize" "rhapsodizes" "rhapsodized" "rhapsodized" "rhapsodizing";
lin rhapsody_N = mkN "rhapsody" "rhapsodies";
lin rhea_N = mkN "rhea" "rheas";
lin rheims_PN = mkPN "Rheims";
lin rhenish_A = compoundA (mkA "rhenish");
lin rheostat_N = mkN "rheostat" "rheostats";
lin rhesus_N = mkN "rhesus" "rhesuses";
lin rhetoric_N = mkN "rhetoric" ;
lin rhetorical_A = compoundA (mkA "rhetorical");
lin rhetorician_N = mkN "rhetorician" "rhetoricians";
lin rheum_N = mkN "rheum" ;
lin rheumatic_A = compoundA (mkA "rheumatic");
lin rheumatic_N = mkN "rheumatic" "rheumatics";
lin rheumatism_N = mkN "rheumatism" ;
lin rheumatoid_A = compoundA (mkA "rheumatoid");
lin rheydt_PN = mkPN "Rheydt";
lin rhinal_A = compoundA (mkA "rhinal");
lin rhine_PN = mkPN "Rhine";
lin rhinestone_N = mkN "rhinestone" "rhinestones";
lin rhino_N = mkN "rhino" "rhinos";
lin rhinoceros_N = mkN "rhinoceros" "rhinoceros";
lin rhizome_N = mkN "rhizome" "rhizomes";
lin rhode_PN = mkPN "Rhode";
lin rhododendron_N = mkN "rhododendron" "rhododendrons";
lin rhomb_N = mkN "rhomb" "rhombs";
lin rhomboid_A = compoundA (mkA "rhomboid");
lin rhomboid_N = mkN "rhomboid" "rhomboids";
lin rhombus_N = mkN "rhombus" "rhombuses";
lin rhondda_PN = mkPN "Rhondda";
lin rhosllanerchrugog_PN = mkPN "Rhosllanerchrugog";
lin rhubarb_N = mkN "rhubarb" ;
lin rhyl_PN = mkPN "Rhyl";
lin rhyme_N = mkN "rhyme" "rhymes";
lin rhyme_V = mkV "rhyme" "rhymes" "rhymed" "rhymed" "rhyming";
lin rhyme_V2 = mkV2 (mkV "rhyme" "rhymes" "rhymed" "rhymed" "rhyming");
lin rhymed_A = compoundA (mkA "rhymed");
lin rhymester_N = mkN "rhymester" "rhymesters";
lin rhymney_PN = mkPN "Rhymney";
lin rhythm_N = mkN "rhythm" "rhythms";
lin rhythmic_A = compoundA (mkA "rhythmic");
lin rhythmical_A = compoundA (mkA "rhythmical");
lin rib_N = mkN "rib" "ribs";
lin rib_V2 = mkV2 (mkV "rib" "ribs" "ribbed" "ribbed" "ribbing");
lin ribald_A = compoundA (mkA "ribald");
lin ribald_N = mkN "ribald" "ribalds";
lin ribaldry_N = mkN "ribaldry" ;
lin riband_N = mkN "riband" "ribands";
lin ribbon_N = mkN "ribbon" "ribbons";
lin riboflavin_N = mkN "riboflavin" ;
lin rice_N = mkN "rice" ;
lin rice_paper_N = mkN "rice - paper" ;
lin rich_A = mkA "rich" "richer";
lin richard_PN = mkPN "Richard";
lin richmond_PN = mkPN "Richmond";
lin richmond_upon_thames_PN = mkPN "Richmond upon thames";
lin richness_N = mkN "richness" ;
lin rick_N = mkN "rick" "ricks";
lin rick_PN = mkPN "Rick";
lin rick_V2 = mkV2 (mkV "rick" "ricks" "ricked" "ricked" "ricking");
lin rickets_N = mkN "rickets" "rickets";
lin rickety_A = compoundA (mkA "rickety");
lin rickmansworth_PN = mkPN "Rickmansworth";
lin rickshaw_N = mkN "rickshaw" "rickshaws";
lin ricky_PN = mkPN "Ricky";
lin ricochet_N = mkN "ricochet" "ricochets";
lin ricochet_V = mkV "ricochet" "ricochets" "ricocheted" "ricocheted" "ricocheting";
lin ricochet_V2 = mkV2 (mkV "ricochet" "ricochets" "ricocheted" "ricocheted" "ricocheting");
lin rid_V = mkV "rid";
lin rid_V2 = mkV2 (IrregEng.rid_V);
lin riddance_N = mkN "riddance" ;
lin riddle_N = mkN "riddle" "riddles";
lin riddle_V2 = mkV2 (mkV "riddle" "riddles" "riddled" "riddled" "riddling");
lin ride_N = mkN "ride" "rides";
lin ride_V = IrregEng.ride_V;
lin ride_V2 = mkV2 (IrregEng.ride_V);
lin rider_N = mkN "rider" "riders";
lin riderless_A = compoundA (mkA "riderless");
lin ridge_N = mkN "ridge" "ridges";
lin ridge_V2 = mkV2 (mkV "ridge" "ridges" "ridged" "ridged" "ridging");
lin ridge_tile_N = mkN "ridge - tile" "ridge - tiles";
lin ridgepole_N = mkN "ridgepole" "ridgepoles";
lin ridicule_N = mkN "ridicule" "ridicules";
lin ridicule_V2 = mkV2 (mkV "ridicule" "ridicules" "ridiculed" "ridiculed" "ridiculing");
lin ridiculous_A = compoundA (mkA "ridiculous");
lin riding_N = mkN "riding" "ridings";
lin riding_habit_N = mkN "riding - habit" "riding - habits";
lin riding_lamp_N = mkN "riding - lamp" "riding - lamps";
lin riding_light_N = mkN "riding - light" "riding - lights";
lin riding_master_N = mkN "riding - master" "riding - masters";
lin riding_school_N = mkN "riding - school" "riding - schools";
lin riesling_N = mkN "riesling" "rieslings";
lin rife_A = compoundA (mkA "rife");
lin riff_N = mkN "riff" "riffs";
lin riff_raff_N = mkN "riff - raff" "riff - rafves" {- FIXME: guessed plural form -};
lin riffle_V = mkV "riffle" "riffles" "riffled" "riffled" "riffling";
lin riffle_V2 = mkV2 (mkV "riffle" "riffles" "riffled" "riffled" "riffling");
lin rifle_N = mkN "rifle" "rifles";
lin rifle_V2 = mkV2 (mkV "rifle" "rifles" "rifled" "rifled" "rifling");
lin rifle_range_N = mkN "rifle - range" "rifle - ranges";
lin rifle_shot_N = mkN "rifle - shot" "rifle - shots";
lin rifleman_N = mkN "rifleman" "riflemen" {- FIXME: guessed plural form -};
lin rift_N = mkN "rift" "rifts";
lin rift_valley_N = mkN "rift - valley" "rift - valleys";
lin rig_N = mkN "rig" "rigs";
lin rig_V = mkV "rig" "rigs" "rigged" "rigged" "rigging";
lin rig_V2 = mkV2 (mkV "rig" "rigs" "rigged" "rigged" "rigging");
lin riga_PN = mkPN "Riga";
lin rigger_N = mkN "rigger" "riggers";
lin rigging_N = mkN "rigging" ;
lin right_A = compoundA (mkA "right");
lin right_Adv = mkAdv "right";
lin right_N = mkN "right" "rights";
lin right_V2 = mkV2 (mkV "right" "rights" "righted" "righted" "righting");
lin right_angled_A = compoundA (mkA "right - angled");
lin right_down_A = compoundA (mkA "right - down");
lin right_down_Adv = mkAdv "right - down";
lin right_hand_A = compoundA (mkA "right - hand");
lin right_handed_A = compoundA (mkA "right - handed");
lin right_hander_N = mkN "right - hander" "right - handers";
lin right_minded_A = compoundA (mkA "right - minded");
lin right_turn_N = mkN "right - turn" "right - turns";
lin right_wing_N = mkN "right - wing" "right - wings";
lin right_winger_N = mkN "right - winger" "right - wingers";
lin righteous_A = compoundA (mkA "righteous");
lin righteousness_N = mkN "righteousness" ;
lin rightful_A = compoundA (mkA "rightful");
lin rightfulness_N = mkN "rightfulness" ;
lin rightist_A = compoundA (mkA "rightist");
lin rightist_N = mkN "rightist" "rightists";
lin rightness_N = mkN "rightness" ;
lin rigid_A = compoundA (mkA "rigid");
lin rigidity_N = mkN "rigidity" "rigidities";
lin rigmarole_N = mkN "rigmarole" "rigmaroles";
lin rigor_mortis_N = mkN "rigor mortis" ;
lin rigorous_A = compoundA (mkA "rigorous");
lin rigour_N = mkN "rigour" "rigours";
lin rigout_N = mkN "rigout" "rigouts";
lin rijeka_PN = mkPN "Rijeka";
lin rile_V2 = mkV2 (mkV "rile" "riles" "riled" "riled" "riling");
lin rill_N = mkN "rill" "rills";
lin rim_N = mkN "rim" "rims";
lin rim_V2 = mkV2 (mkV "rim" "rims" "rimmed" "rimmed" "rimming");
lin rime_N = mkN "rime" ;
lin rime_V2 = mkV2 (mkV "rime" "rimes" "rimed" "rimed" "riming");
lin rimini_PN = mkPN "Rimini";
lin rind_N = mkN "rind" "rinds";
lin rinderpest_N = mkN "rinderpest" ;
lin ring_N = mkN "ring" "rings";
lin ring_V = mkV "ring" "rings" "ringed" "ringed" "ringing";
lin ring_V2 = mkV2 (mkV "ring" "rings" "ringed" "ringed" "ringing");
lin ring_armour_N = mkN "ring - armour" ;
lin ring_finger_N = mkN "ring - finger" "ring - fingers";
lin ring_mail_N = mkN "ring - mail" ;
lin ring_road_N = mkN "ring - road" "ring - roads";
lin ringer_N = mkN "ringer" "ringers";
lin ringleader_N = mkN "ringleader" "ringleaders";
lin ringlet_N = mkN "ringlet" "ringlets";
lin ringmaster_N = mkN "ringmaster" "ringmasters";
lin ringside_N = mkN "ringside" "ringsides";
lin ringwood_PN = mkPN "Ringwood";
lin ringworm_N = mkN "ringworm" ;
lin rink_N = mkN "rink" "rinks";
lin rinse_N = mkN "rinse" "rinses";
lin rinse_V2 = mkV2 (mkV "rinse" "rinses" "rinsed" "rinsed" "rinsing");
lin rio_de_janeiro_PN = mkPN "Rio de janeiro";
lin riot_N = mkN "riot" "riots";
lin riot_V = mkV "riot" "riots" "rioted" "rioted" "rioting";
lin rioter_N = mkN "rioter" "rioters";
lin riotous_A = compoundA (mkA "riotous");
lin rip_N = mkN "rip" "rips";
lin rip_PN = mkPN "Rip";
lin rip_V = mkV "rip" "rips" "ripped" "ripped" "ripping";
lin rip_V2 = mkV2 (mkV "rip" "rips" "ripped" "ripped" "ripping");
lin rip_off_N = mkN "rip - off" "rip - offs";
lin rip_roaring_A = compoundA (mkA "rip - roaring");
lin riparian_A = compoundA (mkA "riparian");
lin ripcord_N = mkN "ripcord" "ripcords";
lin ripe_A = mkA "ripe" "riper";
lin ripen_V = mkV "ripen" "ripens" "ripened" "ripened" "ripening";
lin ripen_V2 = mkV2 (mkV "ripen" "ripens" "ripened" "ripened" "ripening");
lin ripeness_N = mkN "ripeness" ;
lin ripley_PN = mkPN "Ripley";
lin ripon_PN = mkPN "Ripon";
lin riposte_N = mkN "riposte" "ripostes";
lin riposte_V = mkV "riposte" "ripostes" "riposted" "riposted" "riposting";
lin ripple_N = mkN "ripple" "ripples";
lin ripple_V = mkV "ripple" "ripples" "rippled" "rippled" "rippling";
lin ripple_V2 = mkV2 (mkV "ripple" "ripples" "rippled" "rippled" "rippling");
lin ripsaw_N = mkN "ripsaw" "ripsaws";
lin riptide_N = mkN "riptide" "riptides";
lin risborough_PN = mkPN "Risborough";
lin risca_PN = mkPN "Risca";
lin rise_N = mkN "rise" "rises";
lin rise_V = IrregEng.rise_V;
lin rise_V2 = mkV2 (IrregEng.rise_V);
lin rise_VA = mkVA (IrregEng.rise_V);
lin riser_N = mkN "riser" "risers";
lin rishton_PN = mkPN "Rishton";
lin risibility_N = mkN "risibility" ;
lin risible_A = compoundA (mkA "risible");
lin rising_N = mkN "rising" "risings";
lin risk_N = mkN "risk" "risks";
lin risk_V2 = mkV2 (mkV "risk" "risks" "risked" "risked" "risking");
lin risk_VS = mkVS (mkV "risk");
lin riskily_Adv = mkAdv "riskily";
lin riskiness_N = mkN "riskiness" ;
lin risky_A = mkA "risky" "riskier";
lin risotto_N = mkN "risotto" "risottos";
lin risque_A = compoundA (mkA "risqué");
lin rissole_N = mkN "rissole" "rissoles";
lin rita_PN = mkPN "Rita";
lin rite_N = mkN "rite" "rites";
lin ritual_A = compoundA (mkA "ritual");
lin ritual_N = mkN "ritual" "rituals";
lin ritualism_N = mkN "ritualism" ;
lin ritualist_N = mkN "ritualist" "ritualists";
lin ritualistic_A = compoundA (mkA "ritualistic");
lin ritzy_A = compoundA (mkA "ritzy");
lin rival_N = mkN "rival" "rivals";
lin rival_V2 = mkV2 (mkV "rival" "rivals" "rivalled" "rivalled" "rivalling");
lin rivalry_N = mkN "rivalry" "rivalries";
lin rive_V = mkV "rive" "rives" "rived" "rived" "riving";
lin rive_V2 = mkV2 (mkV "rive" "rives" "rived" "rived" "riving");
lin river_N = mkN "river" "rivers";
lin river_basin_N = mkN "river - basin" "river - basins";
lin river_bed_N = mkN "river - bed" "river - beds";
lin riverside_N = mkN "riverside" "riversides";
lin rivet_N = mkN "rivet" "rivets";
lin rivet_V = mkV "rivet";
lin rivet_V2 = mkV2 (mkV "rivet" "rivets" "riveted" "riveted" "riveting");
lin riveter_N = mkN "riveter" "riveters";
lin riviera_PN = mkPN "Riviera";
lin rivulet_N = mkN "rivulet" "rivulets";
lin rly_N = mkN "rly" ;
lin rm_N = mkN "rm" ;
lin rn_N = mkN "rn" ;
lin roach_N = mkN "roach" "roach";
lin road_N = mkN "road" "roads";
lin road_book_N = mkN "road - book" "road - books";
lin road_hog_N = mkN "road - hog" "road - hogs";
lin road_metal_N = mkN "road - metal" ;
lin road_sense_N = mkN "road - sense" ;
lin roadbed_N = mkN "roadbed" "roadbeds";
lin roadblock_N = mkN "roadblock" "roadblocks";
lin roadhouse_N = mkN "roadhouse" "roadhouses";
lin roadless_A = compoundA (mkA "roadless");
lin roadman_N = mkN "roadman" "roadmen" {- FIXME: guessed plural form -};
lin roadmender_N = mkN "roadmender" "roadmenders";
lin roadside_N = mkN "roadside" "roadsides";
lin roadstead_N = mkN "roadstead" "roadsteads";
lin roadster_N = mkN "roadster" "roadsters";
lin roadway_N = mkN "roadway" "roadways";
lin roadworthy_A = compoundA (mkA "roadworthy");
lin roam_V = mkV "roam" "roams" "roamed" "roamed" "roaming";
lin roam_V2 = mkV2 (mkV "roam" "roams" "roamed" "roamed" "roaming");
lin roan_A = compoundA (mkA "roan");
lin roan_N = mkN "roan" "roans";
lin roar_N = mkN "roar" "roars";
lin roar_V = mkV "roar" "roars" "roared" "roared" "roaring";
lin roar_V2 = mkV2 (mkV "roar" "roars" "roared" "roared" "roaring");
lin roaring_A = compoundA (mkA "roaring");
lin roaring_Adv = mkAdv "roaring";
lin roast_A = compoundA (mkA "roast");
lin roast_N = mkN "roast" "roasts";
lin roast_V = mkV "roast" "roasts" "roasted" "roasted" "roasting";
lin roast_V2 = mkV2 (mkV "roast" "roasts" "roasted" "roasted" "roasting");
lin roaster_N = mkN "roaster" "roasters";
lin roasting_N = mkN "roasting" "roastings";
lin rob_PN = mkPN "Rob";
lin rob_V2 = mkV2 (mkV "rob" "robs" "robbed" "robbed" "robbing");
lin robber_N = mkN "robber" "robbers";
lin robbery_N = mkN "robbery" "robberies";
lin robe_N = mkN "robe" "robes";
lin robe_V = mkV "robe" "robes" "robed" "robed" "robing";
lin robe_V2 = mkV2 (mkV "robe" "robes" "robed" "robed" "robing");
lin robert_PN = mkPN "Robert";
lin robin_N = mkN "robin" "robins";
lin robin_PN = mkPN "Robin";
lin robot_N = mkN "robot" "robots";
lin robust_A = compoundA (mkA "robust");
lin robustness_N = mkN "robustness" ;
lin roc_N = mkN "roc" "rocs";
lin rochdale_PN = mkPN "Rochdale";
lin rochester_PN = mkPN "Rochester";
lin rock_'n_roll_N = mkN "rock-'n - roll" ;
lin rock_N = mkN "rock" "rocks";
lin rock_V = mkV "rock" "rocks" "rocked" "rocked" "rocking";
lin rock_V2 = mkV2 (mkV "rock" "rocks" "rocked" "rocked" "rocking");
lin rock_bottom_N = mkN "rock - bottom" ;
lin rock_cake_N = mkN "rock - cake" "rock - cakes";
lin rock_climbing_N = mkN "rock - climbing" ;
lin rock_crystal_N = mkN "rock - crystal" "rock - crystals";
lin rock_garden_N = mkN "rock - garden" "rock - gardens";
lin rock_plant_N = mkN "rock - plant" "rock - plants";
lin rock_salmon_N = mkN "rock - salmon" "rock - salmon";
lin rock_salt_N = mkN "rock - salt" ;
lin rocker_N = mkN "rocker" "rockers";
lin rockery_N = mkN "rockery" "rockeries";
lin rocket_N = mkN "rocket" "rockets";
lin rocket_V = mkV "rocket" "rockets" "rocketed" "rocketed" "rocketing";
lin rocket_base_N = mkN "rocket - base" "rocket - bases";
lin rocket_range_N = mkN "rocket - range" "rocket - ranges";
lin rocketry_N = mkN "rocketry" ;
lin rocking_chair_N = mkN "rocking - chair" "rocking - chairs";
lin rocking_horse_N = mkN "rocking - horse" "rocking - horses";
lin rocky_A = mkA "rocky" "rockier";
lin rococo_A = compoundA (mkA "rococo");
lin rod_N = mkN "rod" "rods";
lin rod_PN = mkPN "Rod";
lin rodent_N = mkN "rodent" "rodents";
lin rodeo_N = mkN "rodeo" "rodeos";
lin rodney_PN = mkPN "Rodney";
lin rodomontade_N = mkN "rodomontade" ;
lin roe_N = mkN "roe" "roe";
lin roebuck_N = mkN "roebuck" "roebucks";
lin roentgen_N = mkN "roentgen" "roentgens";
lin rogation_N = mkN "rogation" "rogations";
lin roger_PN = mkPN "Roger";
lin rogue_N = mkN "rogue" "rogues";
lin rogue_elephant_N = mkN "rogue - elephant" "rogue - elephants";
lin roguery_N = mkN "roguery" "rogueries";
lin roguish_A = compoundA (mkA "roguish");
lin roguishness_N = mkN "roguishness" ;
lin roil_V2 = mkV2 (mkV "roil");
lin roisterer_N = mkN "roisterer" "roisterers";
lin role_1_N = mkN "role" "roles";
lin role_2_N = mkN "rôle" "rôles";
lin roll_N = mkN "roll" "rolls";
lin roll_V = mkV "roll" "rolls" "rolled" "rolled" "rolling";
lin roll_V2 = mkV2 (mkV "roll" "rolls" "rolled" "rolled" "rolling");
lin roll_call_N = mkN "roll - call" "roll - calls";
lin roll_on_N = mkN "roll - on" "roll - ons";
lin roller_N = mkN "roller" "rollers";
lin roller_skate_N = mkN "roller - skate" "roller - skates";
lin rollicking_A = compoundA (mkA "rollicking");
lin rolling_N = mkN "rolling" ;
lin rolling_mill_N = mkN "rolling - mill" "rolling - mills";
lin rolling_pin_N = mkN "rolling - pin" "rolling - pins";
lin rolling_stock_N = mkN "rolling - stock" ;
lin roly_poly_N = mkN "roly - poly" "roly - polies";
lin romaic_A = compoundA (mkA "romaic");
lin romaic_N = mkN "romaic" ;
lin roman_A = compoundA (mkA "roman");
lin roman_N = mkN "roman" "romans";
lin romance_A = compoundA (mkA "romance");
lin romance_N = mkN "romance" "romances";
lin romance_V = mkV "romance" "romances" "romanced" "romanced" "romancing";
lin romance_V2 = mkV2 (mkV "romance" "romances" "romanced" "romanced" "romancing");
lin romanesque_N = mkN "romanesque" ;
lin romania_PN = mkPN "Romania";
lin romanian_A = compoundA (mkA "Romanian");
lin romanian_N = mkN "Romanian" "Romanians";
lin romantic_A = compoundA (mkA "romantic");
lin romantic_N = mkN "romantic" "romantics";
lin romantically_Adv = mkAdv "romantically";
lin romanticism_N = mkN "romanticism" ;
lin romanticist_N = mkN "romanticist" "romanticists";
lin romanticize_V = mkV "romanticize" "romanticizes" "romanticized" "romanticized" "romanticizing";
lin romanticize_V2 = mkV2 (mkV "romanticize" "romanticizes" "romanticized" "romanticized" "romanticizing");
lin romany_A = compoundA (mkA "romany");
lin romany_N = mkN "romany" "romanies";
lin rome_PN = mkPN "Rome";
lin romish_A = compoundA (mkA "romish");
lin romp_N = mkN "romp" "romps";
lin romp_V = mkV "romp" "romps" "romped" "romped" "romping";
lin romper_N = mkN "romper" "rompers";
lin romsey_PN = mkPN "Romsey";
lin ron_PN = mkPN "Ron";
lin ronald_PN = mkPN "Ronald";
lin rondeau_N = mkN "rondeau" "rondeaus";
lin rondel_N = mkN "rondel" "rondels";
lin rondo_N = mkN "rondo" "rondos";
lin roneo_N = mkN "roneo" "roneos";
lin roneo_V2 = mkV2 (mkV "roneo" "roneos" "roneoed" "roneoed" "roneoing");
lin ronnie_PN = mkPN "Ronnie";
lin rontgen_N = mkN "röntgen" "röntgens";
lin rood_N = mkN "rood" "roods";
lin rood_tree_N = mkN "rood - tree" "rood - trees";
lin roof_N = mkN "roof" "roofs";
lin roof_V2 = mkV2 (mkV "roof" "roofs" "roofed" "roofed" "roofing");
lin roof_garden_N = mkN "roof - garden" "roof - gardens";
lin roof_tree_N = mkN "roof - tree" "roof - trees";
lin roofing_N = mkN "roofing" ;
lin roofless_A = compoundA (mkA "roofless");
lin rook_N = mkN "rook" "rooks";
lin rook_V2 = mkV2 (mkV "rook" "rooks" "rooked" "rooked" "rooking");
lin rookery_N = mkN "rookery" "rookeries";
lin rookie_N = mkN "rookie" "rookies";
lin room_N = mkN "room" "rooms";
lin room_V = mkV "room" "rooms" "roomed" "roomed" "rooming";
lin room_mate_N = mkN "room - mate" "room - mates";
lin roomed_A = compoundA (mkA "roomed");
lin roomer_N = mkN "roomer" "roomers";
lin roomful_N = mkN "roomful" "roomfuls";
lin roomily_Adv = mkAdv "roomily";
lin roomy_A = mkA "roomy" "roomier";
lin roost_N = mkN "roost" "roosts";
lin roost_V = mkV "roost" "roosts" "roosted" "roosted" "roosting";
lin rooster_N = mkN "rooster" "roosters";
lin root_N = mkN "root" "roots";
lin root_V = mkV "root" "roots" "rooted" "rooted" "rooting";
lin root_V2 = mkV2 (mkV "root" "roots" "rooted" "rooted" "rooting");
lin rootle_V = mkV "rootle" "rootles" "rootled" "rootled" "rootling";
lin rootless_A = compoundA (mkA "rootless");
lin rope_N = mkN "rope" "ropes";
lin rope_V2 = mkV2 (mkV "rope" "ropes" "roped" "roped" "roping");
lin rope_dancer_N = mkN "rope - dancer" "rope - dancers";
lin rope_ladder_N = mkN "rope - ladder" "rope - ladders";
lin rope_yard_N = mkN "rope - yard" "rope - yards";
lin rope_yarn_N = mkN "rope - yarn" ;
lin ropewalk_N = mkN "ropewalk" "ropewalks";
lin ropewalker_N = mkN "ropewalker" "ropewalkers";
lin ropeway_N = mkN "ropeway" "ropeways";
lin ropey_A = mkA "ropey" "ropeyyer*";
lin roquefort_N = mkN "roquefort" ;
lin rosalie_PN = mkPN "Rosalie";
lin rosalind_PN = mkPN "Rosalind";
lin rosamund_PN = mkPN "Rosamund";
lin rosario_PN = mkPN "Rosario";
lin rosary_N = mkN "rosary" "rosaries";
lin roscommon_PN = mkPN "Roscommon";
lin rose_N = mkN "rose" "roses";
lin rose_PN = mkPN "Rose";
lin rose_V = mkV "rose";
lin rose_V2 = mkV2 (mkV "rose");
lin rose_bed_N = mkN "rose - bed" "rose - beds";
lin rose_leaf_N = mkN "rose - leaf" "rose - leaves";
lin rose_red_A = compoundA (mkA "rose - red");
lin rose_water_N = mkN "rose - water" ;
lin roseate_A = compoundA (mkA "roseate");
lin rosebud_N = mkN "rosebud" "rosebuds";
lin rosemary_N = mkN "rosemary" ;
lin rosemary_PN = mkPN "Rosemary";
lin rosette_N = mkN "rosette" "rosettes";
lin rosewood_N = mkN "rosewood" ;
lin rosie_PN = mkPN "Rosie";
lin rosin_N = mkN "rosin" ;
lin rosin_V2 = mkV2 (mkV "rosin" "rosins" "rosinned" "rosinned" "rosinning");
lin roslyn_PN = mkPN "Roslyn";
lin ross_on_wye_PN = mkPN "Ross - on - wye";
lin rossington_PN = mkPN "Rossington";
lin rosslare_PN = mkPN "Rosslare";
lin roster_N = mkN "roster" "rosters";
lin rostock_PN = mkPN "Rostock";
lin rostov_na_donu_PN = mkPN "Rostov - na - donu";
lin rostrum_N = mkN "rostrum" "rostrums";
lin rosy_A = mkA "rosy" "rosier";
lin rot_N = mkN "rot" ;
lin rot_V = mkV "rot" "rots" "rotted" "rotted" "rotting";
lin rot_V2 = mkV2 (mkV "rot" "rots" "rotted" "rotted" "rotting");
lin rota_N = mkN "rota" "rotas";
lin rotarian_N = mkN "rotarian" "rotarians";
lin rotary_A = compoundA (mkA "rotary");
lin rotary_N = mkN "rotary" "rotaries";
lin rotate_V = mkV "rotate" "rotates" "rotated" "rotated" "rotating";
lin rotate_V2 = mkV2 (mkV "rotate" "rotates" "rotated" "rotated" "rotating");
lin rotation_N = mkN "rotation" "rotations";
lin rotational_A = compoundA (mkA "rotational");
lin rotatory_A = compoundA (mkA "rotatory");
lin rote_N = mkN "rote" "IRREG";
lin rotgut_N = mkN "rotgut" ;
lin rotherham_PN = mkPN "Rotherham";
lin rothesay_PN = mkPN "Rothesay";
lin rothwell_PN = mkPN "Rothwell";
lin rotisserie_N = mkN "rotisserie" "rotisseries";
lin rotogravure_N = mkN "rotogravure" "rotogravures";
lin rotor_N = mkN "rotor" "rotors";
lin rotten_A = compoundA (mkA "rotten");
lin rottenness_N = mkN "rottenness" ;
lin rotter_N = mkN "rotter" "rotters";
lin rotterdam_PN = mkPN "Rotterdam";
lin rotund_A = compoundA (mkA "rotund");
lin rotunda_N = mkN "rotunda" "rotundas";
lin rotundity_N = mkN "rotundity" ;
lin roubaix_PN = mkPN "Roubaix";
lin rouble_N = mkN "rouble" "roubles";
lin roue_N = mkN "roué" "roués";
lin rouen_PN = mkPN "Rouen";
lin rouge_N = mkN "rouge" ;
lin rouge_V = mkV "rouge" "rouges" "rouged" "rouged" "rouging";
lin rouge_V2 = mkV2 (mkV "rouge" "rouges" "rouged" "rouged" "rouging");
lin rough_A = mkA "rough" "rougher";
lin rough_Adv = mkAdv "rough";
lin rough_N = mkN "rough" "roughs";
lin rough_V2 = mkV2 (mkV "rough" "roughs" "roughed" "roughed" "roughing");
lin rough_and_tumble_A = compoundA (mkA "rough - and - tumble");
lin rough_and_tumble_N = mkN "rough - and - tumble" "rough - and - tumbles";
lin rough_dry_V2 = mkV2 (mkV "rough - dry" "rough - dries" "rough - dried" "rough - dried" "rough - drying");
lin rough_hewn_A = compoundA (mkA "rough - hewn");
lin rough_house_V = mkV "rough - house" "rough - houses" "rough - housed" "rough - housed" "rough - housing";
lin rough_house_V2 = mkV2 (mkV "rough - house" "rough - houses" "rough - housed" "rough - housed" "rough - housing");
lin rough_spoken_A = compoundA (mkA "rough - spoken");
lin roughage_N = mkN "roughage" ;
lin roughcast_N = mkN "roughcast" ;
lin roughcast_V2 = mkV2 (mkV "rough" IrregEng.cast_V);
lin roughen_V = mkV "roughen" "roughens" "roughened" "roughened" "roughening";
lin roughen_V2 = mkV2 (mkV "roughen" "roughens" "roughened" "roughened" "roughening");
lin roughish_A = compoundA (mkA "roughish");
lin roughneck_N = mkN "roughneck" "roughnecks";
lin roughness_N = mkN "roughness" ;
lin roughrider_N = mkN "roughrider" "roughriders";
lin roughshod_A = compoundA (mkA "roughshod");
lin roulette_N = mkN "roulette" ;
lin round_A = mkA "round" "rounder";
lin round_Adv = mkAdv "round";
lin round_N = mkN "round" "rounds";
lin round_V = mkV "round" "rounds" "rounded" "rounded" "rounding";
lin round_V2 = mkV2 (mkV "round" "rounds" "rounded" "rounded" "rounding");
lin round_arm_A = compoundA (mkA "round - arm");
lin round_arm_Adv = mkAdv "round - arm";
lin round_backed_A = compoundA (mkA "round - backed");
lin round_eyed_A = compoundA (mkA "round - eyed");
lin round_hand_N = mkN "round - hand" ;
lin round_shot_N = mkN "round - shot" "round - shots";
lin round_shouldered_A = compoundA (mkA "round - shouldered");
lin round_the_clock_A = compoundA (mkA "round - the - clock");
lin round_the_clock_Adv = mkAdv "round - the - clock";
lin roundabout_A = compoundA (mkA "roundabout");
lin roundabout_N = mkN "roundabout" "roundabouts";
lin roundel_N = mkN "roundel" "roundels";
lin roundelay_N = mkN "roundelay" "roundelays";
lin roundhead_N = mkN "roundhead" "roundheads";
lin roundhouse_N = mkN "roundhouse" "roundhouses";
lin roundish_A = compoundA (mkA "roundish");
lin roundness_N = mkN "roundness" ;
lin roundsman_N = mkN "roundsman" "roundsmen" {- FIXME: guessed plural form -};
lin roundup_N = mkN "roundup" "roundups";
lin rouse_V = mkV "rouse" "rouses" "roused" "roused" "rousing";
lin rouse_V2 = mkV2 (mkV "rouse" "rouses" "roused" "roused" "rousing");
lin rout_N = mkN "rout" "routs";
lin rout_V2 = mkV2 (mkV "rout" "routs" "routed" "routed" "routing");
lin route_N = mkN "route" "routes";
lin route_V2 = mkV2 (mkV "route" "routes" "routed" "routed" "routing");
lin routemarch_N = mkN "routemarch" "routemarches";
lin routine_A = compoundA (mkA "routine");
lin routine_N = mkN "routine" "routines";
lin rove_V = mkV "rove" "roves" "roved" "roved" "roving";
lin rove_V2 = mkV2 (mkV "rove" "roves" "roved" "roved" "roving");
lin rover_N = mkN "rover" "rovers";
lin row_N = mkN "row" "rows";
lin row_V = mkV "row" "rows" "rowed" "rowed" "rowing";
lin row_V2 = mkV2 (mkV "row" "rows" "rowed" "rowed" "rowing");
lin rowan_N = mkN "rowan" "rowans";
lin rowan_berry_N = mkN "rowan - berry" "rowan - berries";
lin rowan_tree_N = mkN "rowan - tree" "rowan - trees";
lin rowboat_N = mkN "rowboat" "rowboats";
lin rowdily_Adv = mkAdv "rowdily";
lin rowdiness_N = mkN "rowdiness" ;
lin rowdy_A = mkA "rowdy" "rowdier";
lin rowdy_N = mkN "rowdy" "rowdies";
lin rowdyism_N = mkN "rowdyism" ;
lin rowel_N = mkN "rowel" "rowels";
lin rower_N = mkN "rower" "rowers";
lin rowing_N = mkN "rowing" ;
lin rowing_boat_N = mkN "rowing - boat" "rowing - boats";
lin rowing_club_N = mkN "rowing - club" "rowing - clubs";
lin rowlands_gill_PN = mkPN "Rowlands gill";
lin rowlock_N = mkN "rowlock" "rowlocks";
lin roy_PN = mkPN "Roy";
lin royal_A = compoundA (mkA "royal");
lin royalist_N = mkN "royalist" "royalists";
lin royalty_N = mkN "royalty" "royalties";
lin royston_PN = mkPN "Royston";
lin rpm_N = mkN "rpm" "rpm";
lin rspca_N = mkN "rspca" ;
lin rsvp_PN = mkPN "Rsvp";
lin rt_hon_PN = mkPN "Rt hon";
lin rub_N = mkN "rub" "rubs";
lin rub_V = mkV "rub" "rubs" "rubbed" "rubbed" "rubbing";
lin rub_V2 = mkV2 (mkV "rub" "rubs" "rubbed" "rubbed" "rubbing");
lin rub_a_dub_N = mkN "rub - a - dub" ;
lin rub_down_N = mkN "rub - down" "rub - downs";
lin rub_up_N = mkN "rub - up" "rub - ups";
lin rubber_N = mkN "rubber" "rubbers";
lin rubber_V2 = mkV2 (mkV "rubber" "rubbers" "rubbered" "rubbered" "rubbering");
lin rubber_necking_V = mkV "rubber - necking";
lin rubber_stamp_V2 = mkV2 (mkV "rubber - stamp" "rubber - stamps" "rubber - stamped" "rubber - stamped" "rubber - stamping");
lin rubberize_V2 = mkV2 (mkV "rubberize" "rubberizes" "rubberized" "rubberized" "rubberizing");
lin rubberneck_N = mkN "rubberneck" "rubbernecks";
lin rubberneck_V = mkV "rubberneck" "rubbernecks" "rubbernecked" "rubbernecked" "rubbernecking";
lin rubbery_A = compoundA (mkA "rubbery");
lin rubbing_N = mkN "rubbing" "rubbings";
lin rubbish_N = mkN "rubbish" ;
lin rubbish_V2 = mkV2 (mkV "rubbish" "rubbishes" "rubbished" "rubbished" "rubbishing");
lin rubbishing_N = mkN "rubbishing" "rubbishings";
lin rubbishy_A = compoundA (mkA "rubbishy");
lin rubble_N = mkN "rubble" ;
lin rubicon_N = mkN "rubicon" "rubicons";
lin rubicund_A = compoundA (mkA "rubicund");
lin rubric_N = mkN "rubric" "rubrics";
lin ruby_A = compoundA (mkA "ruby");
lin ruby_N = mkN "ruby" "rubies";
lin ruck_N = mkN "ruck" "rucks";
lin ruck_V = mkV "ruck" "rucks" "rucked" "rucked" "rucking";
lin ruck_V2 = mkV2 (mkV "ruck" "rucks" "rucked" "rucked" "rucking");
lin rucksack_N = mkN "rucksack" "rucksacks";
lin ruckus_N = mkN "ruckus" "ruckuss";
lin rudder_N = mkN "rudder" "rudders";
lin rudderless_A = compoundA (mkA "rudderless");
lin ruddiness_N = mkN "ruddiness" ;
lin ruddington_PN = mkPN "Ruddington";
lin ruddle_N = mkN "ruddle" ;
lin ruddle_V2 = mkV2 (mkV "ruddle" "ruddles" "ruddled" "ruddled" "ruddling");
lin ruddy_A = mkA "ruddy" "ruddier";
lin rude_A = mkA "rude" "ruder";
lin rudeness_N = mkN "rudeness" "rudenesses";
lin rudiment_N = mkN "rudiment" "rudiments";
lin rudimentary_A = compoundA (mkA "rudimentary");
lin rudolf_PN = mkPN "Rudolf";
lin rudy_PN = mkPN "Rudy";
lin rue_N = mkN "rue" ;
lin rue_V2 = mkV2 (mkV "rue" "rues" "rued" "rued" "ruing");
lin rueful_A = compoundA (mkA "rueful");
lin ruff_N = mkN "ruff" "ruffs";
lin ruff_V = mkV "ruff" "ruffs" "ruffed" "ruffed" "ruffing";
lin ruff_V2 = mkV2 (mkV "ruff" "ruffs" "ruffed" "ruffed" "ruffing");
lin ruffian_N = mkN "ruffian" "ruffians";
lin ruffianism_N = mkN "ruffianism" ;
lin ruffianly_A = compoundA (mkA "ruffianly");
lin ruffle_N = mkN "ruffle" "ruffles";
lin ruffle_V = mkV "ruffle" "ruffles" "ruffled" "ruffled" "ruffling";
lin ruffle_V2 = mkV2 (mkV "ruffle" "ruffles" "ruffled" "ruffled" "ruffling");
lin rug_N = mkN "rug" "rugs";
lin rugby_N = mkN "rugby" ;
lin rugby_PN = mkPN "Rugby";
lin rugeley_PN = mkPN "Rugeley";
lin rugged_A = compoundA (mkA "rugged");
lin ruggedness_N = mkN "ruggedness" ;
lin rugger_N = mkN "rugger" ;
lin ruin_N = mkN "ruin" "ruins";
lin ruin_V2 = mkV2 (mkV "ruin" "ruins" "ruined" "ruined" "ruining");
lin ruin_VS = mkVS (mkV "ruin");
lin ruination_N = mkN "ruination" ;
lin ruinous_A = compoundA (mkA "ruinous");
lin rule_N = mkN "rule" "rules";
lin rule_V = mkV "rule" "rules" "ruled" "ruled" "ruling";
lin rule_V2 = mkV2 (mkV "rule" "rules" "ruled" "ruled" "ruling");
lin rule_VS = mkVS (mkV "rule" "rules" "ruled" "ruled" "ruling");
lin ruler_N = mkN "ruler" "rulers";
lin ruling_A = compoundA (mkA "ruling");
lin ruling_N = mkN "ruling" "rulings";
lin rum_N = mkN "rum" ;
lin rum_runner_N = mkN "rum - runner" "rum - runners";
lin rumba_N = mkN "rumba" "rumbas";
lin rumble_N = mkN "rumble" "rumbles";
lin rumble_V = mkV "rumble" "rumbles" "rumbled" "rumbled" "rumbling";
lin rumble_V2 = mkV2 (mkV "rumble" "rumbles" "rumbled" "rumbled" "rumbling");
lin rumbling_N = mkN "rumbling" "rumblings";
lin rumbustious_A = compoundA (mkA "rumbustious");
lin ruminant_A = compoundA (mkA "ruminant");
lin ruminant_N = mkN "ruminant" "ruminants";
lin ruminate_V = mkV "ruminate" "ruminates" "ruminated" "ruminated" "ruminating";
lin rumination_N = mkN "rumination" ;
lin ruminative_A = compoundA (mkA "ruminative");
lin rummage_N = mkN "rummage" ;
lin rummage_V = mkV "rummage" "rummages" "rummaged" "rummaged" "rummaging";
lin rummage_V2 = mkV2 (mkV "rummage" "rummages" "rummaged" "rummaged" "rummaging");
lin rummy_A = mkA "rummy" "rummyyer*";
lin rummy_N = mkN "rummy" ;
lin rumor_V2 = mkV2 (mkV "rumor" "rumors" "rumored" "rumored" "rumoring");
lin rumor_V2V = mkV2V (mkV "rumor" "rumors" "rumored" "rumored" "rumoring") noPrep to_Prep ;
lin rumor_VS = mkVS (mkV "rumor" "rumors" "rumored" "rumored" "rumoring");
lin rumour_N = mkN "rumour" "rumours";
lin rumour_V2 = mkV2 (mkV "rumour" "rumours" "rumoured" "rumoured" "rumouring");
lin rumour_monger_N = mkN "rumour - monger" "rumour - mongers";
lin rump_N = mkN "rump" "rumps";
lin rump_steak_N = mkN "rump - steak" "rump - steaks";
lin rumple_V2 = mkV2 (mkV "rumple" "rumples" "rumpled" "rumpled" "rumpling");
lin rumpus_N = mkN "rumpus" "rumpi" {- FIXME: guessed plural form -};
lin run_N = mkN "run" "runs";
lin run_V = IrregEng.run_V;
lin run_V2 = mkV2 (IrregEng.run_V);
lin run_VS = mkVS (IrregEng.run_V);
lin run_of_the_mill_A = compoundA (mkA "run - of - the - mill");
lin run_off_N = mkN "run - off" "run - offs";
lin run_through_N = mkN "run - through" "run - throughs";
lin run_up_N = mkN "run - up" "run - ups";
lin runaway_A = compoundA (mkA "runaway");
lin runaway_N = mkN "runaway" "runaways";
lin runcorn_PN = mkPN "Runcorn";
lin rundown_A = compoundA (mkA "rundown");
lin rundown_N = mkN "rundown" "rundowns";
lin rune_N = mkN "rune" "runes";
lin rung_N = mkN "rung" "rungs";
lin rung_V2V = mkV2V (mkV "rung") noPrep to_Prep ;
lin runic_A = compoundA (mkA "runic");
lin runnel_N = mkN "runnel" "runnels";
lin runner_N = mkN "runner" "runners";
lin runner_up_N = mkN "runner - up" "IRREG";
lin running_A = compoundA (mkA "running");
lin running_N = mkN "running" ;
lin running_board_N = mkN "running - board" "running - boards";
lin runny_A = mkA "runny" "runnier";
lin runt_N = mkN "runt" "runts";
lin runway_N = mkN "runway" "runways";
lin rupee_N = mkN "rupee" "rupees";
lin rupert_PN = mkPN "Rupert";
lin rupiah_N = mkN "rupiah" "rupiahs";
lin rupture_N = mkN "rupture" "ruptures";
lin rupture_V = mkV "rupture" "ruptures" "ruptured" "ruptured" "rupturing";
lin rupture_V2 = mkV2 (mkV "rupture" "ruptures" "ruptured" "ruptured" "rupturing");
lin rural_A = compoundA (mkA "rural");
lin ruritanian_A = compoundA (mkA "ruritanian");
lin ruse_N = mkN "ruse" "ruses";
lin rush_N = mkN "rush" "rushes";
lin rush_V = mkV "rush" "rushes" "rushed" "rushed" "rushing";
lin rush_V2 = mkV2 (mkV "rush" "rushes" "rushed" "rushed" "rushing");
lin rush_V2V = mkV2V (mkV "rush" "rushes" "rushed" "rushed" "rushing") noPrep to_Prep ;
lin rush_VS = mkVS (mkV "rush" "rushes" "rushed" "rushed" "rushing");
lin rushlight_N = mkN "rushlight" "rushlights";
lin rushy_A = mkA "rushy" "rushier";
lin rusk_N = mkN "rusk" "rusks";
lin russet_A = compoundA (mkA "russet");
lin russet_N = mkN "russet" "russets";
lin russia_PN = mkPN "Russia";
lin russian_A = compoundA (mkA "Russian");
lin russian_N = mkN "Russian" "Russians";
lin rust_N = mkN "rust" ;
lin rust_V = mkV "rust" "rusts" "rusted" "rusted" "rusting";
lin rust_V2 = mkV2 (mkV "rust" "rusts" "rusted" "rusted" "rusting");
lin rustic_A = compoundA (mkA "rustic");
lin rustic_N = mkN "rustic" "rustics";
lin rusticate_V = mkV "rusticate" "rusticates" "rusticated" "rusticated" "rusticating";
lin rusticate_V2 = mkV2 (mkV "rusticate" "rusticates" "rusticated" "rusticated" "rusticating");
lin rusticity_N = mkN "rusticity" ;
lin rustiness_N = mkN "rustiness" ;
lin rustle_N = mkN "rustle" ;
lin rustle_V = mkV "rustle" "rustles" "rustled" "rustled" "rustling";
lin rustle_V2 = mkV2 (mkV "rustle" "rustles" "rustled" "rustled" "rustling");
lin rustler_N = mkN "rustler" "rustlers";
lin rustless_A = compoundA (mkA "rustless");
lin rustling_N = mkN "rustling" "rustlings";
lin rusty_A = mkA "rusty" "rustier";
lin rut_N = mkN "rut" "ruts";
lin rut_V2 = mkV2 (mkV "rut" "ruts" "rutted" "rutted" "rutting");
lin ruth_PN = mkPN "Ruth";
lin rutherglen_PN = mkPN "Rutherglen";
lin ruthless_A = compoundA (mkA "ruthless");
lin ruthlessness_N = mkN "ruthlessness" ;
lin rutland_PN = mkPN "Rutland";
lin rwanda_PN = mkPN "Rwanda";
lin rwandan_A = compoundA (mkA "rwandan");
lin rwandan_N = mkN "rwandan" "rwandans";
lin ryde_PN = mkPN "Ryde";
lin rye_N = mkN "rye" ;
lin rye_bread_N = mkN "rye - bread" ;
lin ryehill_PN = mkPN "Ryehill";
lin saarbrucken_PN = mkPN "Saarbrucken";
lin sabadeli_PN = mkPN "Sabadeli";
lin sabah_PN = mkPN "Sabah";
lin sabahan_A = compoundA (mkA "sabahan");
lin sabahan_N = mkN "sabahan" "sabahans";
lin sabbatarian_A = compoundA (mkA "sabbatarian");
lin sabbatarian_N = mkN "sabbatarian" "sabbatarians";
lin sabbath_N = mkN "sabbath" "sabbaths";
lin sabbatical_A = compoundA (mkA "sabbatical");
lin sabbatical_N = mkN "sabbatical" "sabbaticals";
lin sable_A = compoundA (mkA "sable");
lin sable_N = mkN "sable" "sables";
lin sabot_N = mkN "sabot" "sabots";
lin sabotage_N = mkN "sabotage" ;
lin sabotage_V2 = mkV2 (mkV "sabotage" "sabotages" "sabotaged" "sabotaged" "sabotaging");
lin saboteur_N = mkN "saboteur" "saboteurs";
lin sabre_N = mkN "sabre" "sabres";
lin sabre_V2 = mkV2 (mkV "sabre" "sabres" "sabred" "sabred" "sabring");
lin sabre_rattling_N = mkN "sabre - rattling" ;
lin sabre_toothed_A = compoundA (mkA "sabre - toothed");
lin sac_N = mkN "sac" "sacs";
lin saccharin_N = mkN "saccharin" ;
lin saccharine_A = compoundA (mkA "saccharine");
lin sacerdotal_A = compoundA (mkA "sacerdotal");
lin sacerdotalism_N = mkN "sacerdotalism" ;
lin sachet_N = mkN "sachet" "sachets";
lin sack_N = mkN "sack" "sacks";
lin sack_V2 = mkV2 (mkV "sack" "sacks" "sacked" "sacked" "sacking");
lin sack_race_N = mkN "sack - race" "sack - races";
lin sackbut_N = mkN "sackbut" "sackbuts";
lin sackcloth_N = mkN "sackcloth" ;
lin sacking_N = mkN "sacking" ;
lin sacrament_N = mkN "sacrament" "sacraments";
lin sacramental_A = compoundA (mkA "sacramental");
lin sacramento_PN = mkPN "Sacramento";
lin sacred_A = compoundA (mkA "sacred");
lin sacredness_N = mkN "sacredness" ;
lin sacrifice_N = mkN "sacrifice" "sacrifices";
lin sacrifice_V = mkV "sacrifice" "sacrifices" "sacrificed" "sacrificed" "sacrificing";
lin sacrifice_V2 = mkV2 (mkV "sacrifice" "sacrifices" "sacrificed" "sacrificed" "sacrificing");
lin sacrificial_A = compoundA (mkA "sacrificial");
lin sacrilege_N = mkN "sacrilege" ;
lin sacrilegious_A = compoundA (mkA "sacrilegious");
lin sacristan_N = mkN "sacristan" "sacristans";
lin sacristy_N = mkN "sacristy" "sacristies";
lin sacrosanct_A = compoundA (mkA "sacrosanct");
lin sad_A = mkA "sad" "sadder*";
lin sadden_V = mkV "sadden" "saddens" "saddened" "saddened" "saddening";
lin sadden_V2 = mkV2 (mkV "sadden" "saddens" "saddened" "saddened" "saddening");
lin saddle_N = mkN "saddle" "saddles";
lin saddle_V = mkV "saddle";
lin saddle_V2 = mkV2 (mkV "saddle" "saddles" "saddled" "saddled" "saddling");
lin saddle_sore_A = compoundA (mkA "saddle - sore");
lin saddlebag_N = mkN "saddlebag" "saddlebags";
lin saddler_N = mkN "saddler" "saddlers";
lin saddlery_N = mkN "saddlery" "saddleries";
lin sadhu_N = mkN "sadhu" "sadhus";
lin sadism_N = mkN "sadism" ;
lin sadist_N = mkN "sadist" "sadists";
lin sadistic_A = compoundA (mkA "sadistic");
lin sadness_N = mkN "sadness" ;
lin sado_masochist_N = mkN "sado - masochist" "sado - masochists";
lin sadomasochism_N = mkN "sadomasochism" ;
lin sae_N = mkN "sae" ;
lin safari_N = mkN "safari" "safaris";
lin safe_A = mkA "safe" "safer";
lin safe_N = mkN "safe" "safes";
lin safe_conduct_N = mkN "safe - conduct" ;
lin safe_deposit_A = compoundA (mkA "safe - deposit");
lin safe_deposit_N = mkN "safe - deposit" "safe - deposits";
lin safecracker_N = mkN "safecracker" "safecrackers";
lin safeguard_N = mkN "safeguard" "safeguards";
lin safeguard_V2 = mkV2 (mkV "safeguard" "safeguards" "safeguarded" "safeguarded" "safeguarding");
lin safekeeping_N = mkN "safekeeping" ;
lin safeness_N = mkN "safeness" ;
lin safety_N = mkN "safety" ;
lin safety_belt_N = mkN "safety - belt" "safety - belts";
lin safety_bolt_N = mkN "safety - bolt" "safety - bolts";
lin safety_catch_N = mkN "safety - catch" "safety - catches";
lin safety_curtain_N = mkN "safety - curtain" "safety - curtains";
lin safety_factor_N = mkN "safety - factor" "safety - factors";
lin safety_lamp_N = mkN "safety - lamp" "safety - lamps";
lin safety_lock_N = mkN "safety - lock" "safety - locks";
lin safety_match_N = mkN "safety - match" "safety - matches";
lin safety_pin_N = mkN "safety - pin" "safety - pins";
lin safety_razor_N = mkN "safety - razor" "safety - razors";
lin safety_valve_N = mkN "safety - valve" "safety - valves";
lin saffron_N = mkN "saffron" "saffrons";
lin saffron_walden_PN = mkPN "Saffron walden";
lin sag_N = mkN "sag" "sags";
lin sag_V = mkV "sag" "sags" "sagged" "sagged" "sagging";
lin saga_N = mkN "saga" "sagas";
lin sagacious_A = compoundA (mkA "sagacious");
lin sagacity_N = mkN "sagacity" ;
lin sage_A = compoundA (mkA "sage");
lin sage_N = mkN "sage" "sages";
lin sage_green_A = compoundA (mkA "sage - green");
lin sage_green_N = mkN "sage - green" ;
lin sagittarius_PN = mkPN "Sagittarius";
lin sago_N = mkN "sago" ;
lin sahib_N = mkN "sahib" "sahibs";
lin said_A = compoundA (mkA "said");
lin saigon_PN = mkPN "Saigon";
lin sail_N = mkN "sail" "sails";
lin sail_V = mkV "sail" "sails" "sailed" "sailed" "sailing";
lin sail_V2 = mkV2 (mkV "sail" "sails" "sailed" "sailed" "sailing");
lin sailcloth_N = mkN "sailcloth" ;
lin sailing_N = mkN "sailing" "sailings";
lin sailing_boat_N = mkN "sailing - boat" "sailing - boats";
lin sailing_master_N = mkN "sailing - master" "sailing - masters";
lin sailing_ship_N = mkN "sailing - ship" "sailing - ships";
lin sailing_vessel_N = mkN "sailing - vessel" "sailing - vessels";
lin sailor_N = mkN "sailor" "sailors";
lin saint's_day_N = mkN "saint's - day" "saint's - days";
lin saint_N = mkN "saint" "saints";
lin sainted_A = compoundA (mkA "sainted");
lin sainthood_N = mkN "sainthood" ;
lin saintlike_A = compoundA (mkA "saintlike");
lin saintliness_N = mkN "saintliness" ;
lin saintly_A = mkA "saintly" "saintlier";
lin sake_1_N = mkN "sake" "sakes";
lin sake_2_N = mkN "saké" "sakés" ;
lin sal_volatile_N = mkN "sal volatile" "sal volatiles" ;
lin salaam_N = mkN "salaam" "salaams";
lin salaam_V = mkV "salaam" "salaams" "salaamed" "salaamed" "salaaming";
lin salable_A = compoundA (mkA "salable");
lin salacious_A = compoundA (mkA "salacious");
lin salaciousness_N = mkN "salaciousness" ;
lin salacity_N = mkN "salacity" ;
lin salad_N = mkN "salad" "salads";
lin salad_dressing_N = mkN "salad - dressing" "salad - dressings";
lin salad_oil_N = mkN "salad - oil" "salad - oils";
lin salamanca_PN = mkPN "Salamanca";
lin salamander_N = mkN "salamander" "salamanders";
lin salami_N = mkN "salami" ;
lin salaried_A = compoundA (mkA "salaried");
lin salary_N = mkN "salary" "salaries";
lin sale_N = mkN "sale" "sales";
lin sale_PN = mkPN "Sale";
lin saleable_A = compoundA (mkA "saleable");
lin salerno_PN = mkPN "Salerno";
lin saleroom_N = mkN "saleroom" "salerooms";
lin salesman_N = mkN "salesman" "salesmen" {- FIXME: guessed plural form -};
lin salesmanship_N = mkN "salesmanship" ;
lin saleswoman_N = mkN "saleswoman" "saleswomen" {- FIXME: guessed plural form -};
lin salford_PN = mkPN "Salford";
lin salience_N = mkN "salience" ;
lin salient_A = compoundA (mkA "salient");
lin salient_N = mkN "salient" "salients";
lin saline_A = compoundA (mkA "saline");
lin saline_N = mkN "saline" "salines";
lin salinity_N = mkN "salinity" ;
lin salisbury_PN = mkPN "Salisbury";
lin saliva_N = mkN "saliva" ;
lin salivary_A = compoundA (mkA "salivary");
lin salivate_V = mkV "salivate" "salivates" "salivated" "salivated" "salivating";
lin sallow_A = mkA "sallow" "sallower";
lin sallow_V = mkV "sallow" "sallows" "sallowed" "sallowed" "sallowing";
lin sallow_V2 = mkV2 (mkV "sallow" "sallows" "sallowed" "sallowed" "sallowing");
lin sally_N = mkN "sally" "sallies";
lin sally_PN = mkPN "Sally";
lin sally_V = mkV "sally" "sallies" "sallied" "sallied" "sallying";
lin salmon_N = mkN "salmon" "salmon";
lin salon_N = mkN "salon" "salons";
lin saloon_N = mkN "saloon" "saloons";
lin salsify_N = mkN "salsify" ;
lin salt_A = compoundA (mkA "salt");
lin salt_N = mkN "salt" "salts";
lin salt_PN = mkPN "Salt";
lin salt_V2 = mkV2 (mkV "salt" "salts" "salted" "salted" "salting");
lin salt_cellar_N = mkN "salt - cellar" "salt - cellars";
lin salt_lick_N = mkN "salt - lick" "salt - licks";
lin saltash_PN = mkPN "Saltash";
lin saltburn_PN = mkPN "Saltburn";
lin saltcoats_PN = mkPN "Saltcoats";
lin saltiness_N = mkN "saltiness" ;
lin saltpan_N = mkN "saltpan" "saltpans";
lin saltpetre_N = mkN "saltpetre" ;
lin saltwater_N = mkN "saltwater" ;
lin saltworks_N = mkN "saltworks" "saltworks";
lin salty_A = mkA "salty" "saltier";
lin salubrious_A = compoundA (mkA "salubrious");
lin salubrity_N = mkN "salubrity" ;
lin salutary_A = compoundA (mkA "salutary");
lin salutation_N = mkN "salutation" "salutations";
lin salute_N = mkN "salute" "salutes";
lin salute_V = mkV "salute" "salutes" "saluted" "saluted" "saluting";
lin salute_V2 = mkV2 (mkV "salute" "salutes" "saluted" "saluted" "saluting");
lin salvador_PN = mkPN "Salvador";
lin salvadorean_A = compoundA (mkA "salvadorean");
lin salvadorean_N = mkN "salvadorean" "salvadoreans";
lin salvage_N = mkN "salvage" ;
lin salvage_V2 = mkV2 (mkV "salvage" "salvages" "salvaged" "salvaged" "salvaging");
lin salvation_N = mkN "salvation" ;
lin salve_N = mkN "salve" "salves";
lin salve_V2 = mkV2 (mkV "salve" "salves" "salved" "salved" "salving");
lin salver_N = mkN "salver" "salvers";
lin salvia_N = mkN "salvia" "salvias";
lin salvo_N = mkN "salvo" "salvos";
lin salzburg_PN = mkPN "Salzburg";
lin sam_PN = mkPN "Sam";
lin samantha_PN = mkPN "Samantha";
lin samaritan_N = mkN "samaritan" "samaritans";
lin samba_N = mkN "samba" "sambas";
lin same_A = compoundA (mkA "same");
lin same_Adv = mkAdv "same";
lin sameness_N = mkN "sameness" ;
lin sammy_PN = mkPN "Sammy";
lin samoa_PN = mkPN "Samoa";
lin samoan_A = compoundA (mkA "samoan");
lin samoan_N = mkN "samoan" "samoans";
lin samovar_N = mkN "samovar" "samovars";
lin sampan_N = mkN "sampan" "sampans";
lin sample_N = mkN "sample" "samples";
lin sample_V2 = mkV2 (mkV "sample" "samples" "sampled" "sampled" "sampling");
lin sampler_N = mkN "sampler" "samplers";
lin samuel_PN = mkPN "Samuel";
lin samurai_N = mkN "samurai" "samurai";
lin san_antonio_PN = mkPN "San antonio";
lin san_bernardino_PN = mkPN "San bernardino";
lin san_diego_PN = mkPN "San diego";
lin san_francisco_PN = mkPN "San francisco";
lin san_jose_PN = mkPN "San jose";
lin san_juan_PN = mkPN "San juan";
lin san_marinese_A = compoundA (mkA "san marinese");
lin san_marinese_N = mkN "san marinese" "san marinese";
lin san_marino_PN = mkPN "San marino";
lin san_sebastian_PN = mkPN "San sebastian";
lin sanatorium_N = mkN "sanatorium" "sanatoriums";
lin sanctification_N = mkN "sanctification" "sanctifications";
lin sanctify_V2 = mkV2 (mkV "sanctify" "sanctifies" "sanctified" "sanctified" "sanctifying");
lin sanctimonious_A = compoundA (mkA "sanctimonious");
lin sanction_N = mkN "sanction" "sanctions";
lin sanction_V2 = mkV2 (mkV "sanction" "sanctions" "sanctioned" "sanctioned" "sanctioning");
lin sanctity_N = mkN "sanctity" "sanctities";
lin sanctuary_N = mkN "sanctuary" "sanctuaries";
lin sanctum_N = mkN "sanctum" "sanctums";
lin sand_N = mkN "sand" "sands";
lin sand_V2 = mkV2 (mkV "sand" "sands" "sanded" "sanded" "sanding");
lin sand_bar_N = mkN "sand - bar" "sand - bars";
lin sandal_N = mkN "sandal" "sandals";
lin sandalled_A = compoundA (mkA "sandalled");
lin sandalwood_N = mkN "sandalwood" ;
lin sandbach_PN = mkPN "Sandbach";
lin sandbag_N = mkN "sandbag" "sandbags";
lin sandbank_N = mkN "sandbank" "sandbanks";
lin sandblast_V2 = mkV2 (mkV "sandblast" "sandblasts" "sandblasted" "sandblasted" "sandblasting");
lin sandboy_N = mkN "sandboy" "sandboys";
lin sandfly_N = mkN "sandfly" "sandflies";
lin sandglass_N = mkN "sandglass" "sandglasses";
lin sandiness_N = mkN "sandiness" ;
lin sandown_PN = mkPN "Sandown";
lin sandpaper_N = mkN "sandpaper" "sandpapers";
lin sandpaper_V2 = mkV2 (mkV "sandpaper" "sandpapers" "sandpapered" "sandpapered" "sandpapering");
lin sandpiper_N = mkN "sandpiper" "sandpipers";
lin sandpit_N = mkN "sandpit" "sandpits";
lin sandra_PN = mkPN "Sandra";
lin sandstone_N = mkN "sandstone" ;
lin sandstorm_N = mkN "sandstorm" "sandstorms";
lin sandwich_N = mkN "sandwich" "sandwiches";
lin sandwich_V = mkV "sandwich";
lin sandwich_V2 = mkV2 (mkV "sandwich" "sandwiches" "sandwiched" "sandwiched" "sandwiching");
lin sandwich_board_N = mkN "sandwich - board" "sandwich - boards";
lin sandwichman_N = mkN "sandwichman" "sandwichmen" {- FIXME: guessed plural form -};
lin sandy_A = mkA "sandy" "sandier";
lin sandy_PN = mkPN "Sandy";
lin sane_A = mkA "sane" "saner";
lin sang_froid_N = mkN "sang froid" ;
lin sango_N = mkN "sango" ;
lin sanguinary_A = compoundA (mkA "sanguinary");
lin sanguine_A = compoundA (mkA "sanguine");
lin sanitary_A = compoundA (mkA "sanitary");
lin sanitation_N = mkN "sanitation" ;
lin sanitize_V2 = mkV2 (mkV "sanitize");
lin sanity_N = mkN "sanity" ;
lin sanskrit_N = mkN "sanskrit" ;
lin santa_claus_N = mkN "santa claus" "santa clauses";
lin santa_claus_PN = mkPN "Santa claus";
lin santander_PN = mkPN "Santander";
lin santiago_PN = mkPN "Santiago";
lin santo_domingo_PN = mkPN "Santo domingo";
lin santos_PN = mkPN "Santos";
lin sao_paolo_PN = mkPN "Sao paolo";
lin sap_N = mkN "sap" "saps";
lin sap_V = mkV "sap" "saps" "sapped" "sapped" "sapping";
lin sap_V2 = mkV2 (mkV "sap" "saps" "sapped" "sapped" "sapping");
lin saphead_N = mkN "saphead" "sapheads";
lin sapience_N = mkN "sapience" ;
lin sapient_A = compoundA (mkA "sapient");
lin sapless_A = compoundA (mkA "sapless");
lin sapling_N = mkN "sapling" "saplings";
lin sapper_N = mkN "sapper" "sappers";
lin sapphic_A = compoundA (mkA "sapphic");
lin sapphire_N = mkN "sapphire" "sapphires";
lin sapporo_PN = mkPN "Sapporo";
lin sappy_A = mkA "sappy" "sappier";
lin sapwood_N = mkN "sapwood" ;
lin sara_PN = mkPN "Sara";
lin saraband_N = mkN "saraband" "sarabands";
lin saracen_N = mkN "saracen" "saracens";
lin sarah_PN = mkPN "Sarah";
lin sarajevo_PN = mkPN "Sarajevo";
lin saratov_PN = mkPN "Saratov";
lin sarawak_PN = mkPN "Sarawak";
lin sarawakian_A = compoundA (mkA "sarawakian");
lin sarawakian_N = mkN "sarawakian" "sarawakians";
lin sarcasm_N = mkN "sarcasm" "sarcasms";
lin sarcastic_A = compoundA (mkA "sarcastic");
lin sarcastically_Adv = mkAdv "sarcastically";
lin sarcophagus_N = mkN "sarcophagus" "sarcophagi" {- FIXME: guessed plural form -};
lin sardine_N = mkN "sardine" "sardines";
lin sardonic_A = compoundA (mkA "sardonic");
lin sardonically_Adv = mkAdv "sardonically";
lin sari_N = mkN "sari" "saris";
lin sarisbury_PN = mkPN "Sarisbury";
lin sarong_N = mkN "sarong" "sarongs";
lin sarsaparilla_N = mkN "sarsaparilla" ;
lin sartorial_A = compoundA (mkA "sartorial");
lin sash_N = mkN "sash" "sashes";
lin sash_cord_N = mkN "sash - cord" "sash - cords";
lin sash_line_N = mkN "sash - line" "sash - lines";
lin saskatchewan_PN = mkPN "Saskatchewan";
lin sassari_PN = mkPN "Sassari";
lin sassenach_N = mkN "sassenach" "sassenachs";
lin sat_PN = mkPN "Sat";
lin satan_N = mkN "satan" "satans";
lin satanic_A = compoundA (mkA "satanic");
lin satchel_N = mkN "satchel" "satchels";
lin sate_V2 = mkV2 (mkV "sate" "sates" "sated" "sated" "sating");
lin sateen_N = mkN "sateen" ;
lin satellite_N = mkN "satellite" "satellites";
lin satiable_A = compoundA (mkA "satiable");
lin satiate_V2 = mkV2 (mkV "satiate" "satiates" "satiated" "satiated" "satiating");
lin satiety_N = mkN "satiety" ;
lin satin_A = compoundA (mkA "satin");
lin satin_N = mkN "satin" ;
lin satinwood_N = mkN "satinwood" ;
lin satire_N = mkN "satire" "satires";
lin satirical_A = compoundA (mkA "satirical");
lin satirist_N = mkN "satirist" "satirists";
lin satirize_V2 = mkV2 (mkV "satirize" "satirizes" "satirized" "satirized" "satirizing");
lin satisfaction_N = mkN "satisfaction" "satisfactions";
lin satisfactory_A = compoundA (mkA "satisfactory");
lin satisfy_V = mkV "satisfy" "satisfies" "satisfied" "satisfied" "satisfying";
lin satisfy_V2 = mkV2 (mkV "satisfy" "satisfies" "satisfied" "satisfied" "satisfying");
lin satisfying_A = compoundA (mkA "satisfying");
lin satrap_N = mkN "satrap" "satraps";
lin satsuma_N = mkN "satsuma" "satsumas";
lin saturate_V2 = mkV2 (mkV "saturate" "saturates" "saturated" "saturated" "saturating");
lin saturation_N = mkN "saturation" ;
lin saturday_N = mkN "Saturday" "Saturdays";
lin saturday_PN = mkPN "Saturday";
lin saturn_PN = mkPN "Saturn";
lin saturnalia_N = mkN "saturnalia" "saturnalias";
lin saturnine_A = compoundA (mkA "saturnine");
lin satyr_N = mkN "satyr" "satyrs";
lin satyric_A = compoundA (mkA "satyric");
lin sauce_N = mkN "sauce" "sauces";
lin sauce_V2 = mkV2 (mkV "sauce" "sauces" "sauced" "sauced" "saucing");
lin sauce_boat_N = mkN "sauce - boat" "sauce - boats";
lin saucepan_N = mkN "saucepan" "saucepans";
lin saucer_N = mkN "saucer" "saucers";
lin saucer_eyed_A = compoundA (mkA "saucer - eyed");
lin sauchie_PN = mkPN "Sauchie";
lin saucily_Adv = mkAdv "saucily";
lin sauciness_N = mkN "sauciness" ;
lin saucy_A = mkA "saucy" "saucier";
lin saudi_arabia_PN = mkPN "Saudi arabia";
lin saudi_arabian_A = compoundA (mkA "saudi arabian");
lin saudi_arabian_N = mkN "saudi arabian" "saudi arabians";
lin sauerkraut_N = mkN "sauerkraut" ;
lin sauna_N = mkN "sauna" "saunas";
lin saunter_N = mkN "saunter" "saunters";
lin saunter_V = mkV "saunter" "saunters" "sauntered" "sauntered" "sauntering";
lin saunterer_N = mkN "saunterer" "saunterers";
lin saurian_A = compoundA (mkA "saurian");
lin saurian_N = mkN "saurian" "saurians";
lin sausage_N = mkN "sausage" "sausages";
lin sausage_dog_N = mkN "sausage - dog" "sausage - dogs";
lin sausage_meat_N = mkN "sausage - meat" ;
lin sausage_roll_N = mkN "sausage - roll" "sausage - rolls";
lin saute_A = compoundA (mkA "sauté");
lin saute_V2 = mkV2 (mkV "sauté" "sautés" "sautéed" "sautéed" "sautéing");
lin savage_A = compoundA (mkA "savage");
lin savage_N = mkN "savage" "savages";
lin savage_V2 = mkV2 (mkV "savage" "savages" "savaged" "savaged" "savaging");
lin savageness_N = mkN "savageness" ;
lin savagery_N = mkN "savagery" ;
lin savanna_N = mkN "savanna" "savannas";
lin savannah_N = mkN "savannah" "savannahs";
lin savant_N = mkN "savant" "savants";
lin save_N = mkN "save" "saves";
lin save_V = mkV "save" "saves" "saved" "saved" "saving";
lin save_V2 = mkV2 (mkV "save" "saves" "saved" "saved" "saving");
lin saveloy_N = mkN "saveloy" "saveloys";
lin saver_N = mkN "saver" "savers";
lin saving_A = compoundA (mkA "saving");
lin saving_N = mkN "saving" "savings";
lin savings_bank_N = mkN "savings - bank" "savings - banks";
lin saviour_N = mkN "saviour" "saviours";
lin savoir_faire_N = mkN "savoir - faire" ;
lin savore_V2 = mkV2 (mkV "savore");
lin savory_N = mkN "savory" ;
lin savour_N = mkN "savour" "savours";
lin savour_V = mkV "savour" "savours" "savoured" "savoured" "savouring";
lin savour_V2 = mkV2 (mkV "savour" "savours" "savoured" "savoured" "savouring");
lin savoury_A = compoundA (mkA "savoury");
lin savoury_N = mkN "savoury" "savouries";
lin savoy_N = mkN "savoy" "savoys";
lin savvy_N = mkN "savvy" ;
lin savvy_V = mkV "savvy" "IRREG" "IRREG" "IRREG" "IRREG";
lin saw_N = mkN "saw" "saws";
lin saw_V = mkV "saw" "saws" "sawed" "sawed" "sawing";
lin saw_V2 = mkV2 (mkV "saw" "saws" "sawed" "sawed" "sawing");
lin saw_pit_N = mkN "saw - pit" "saw - pits";
lin sawbridgeworth_PN = mkPN "Sawbridgeworth";
lin sawdust_N = mkN "sawdust" ;
lin sawhorse_N = mkN "sawhorse" "sawhorses";
lin sawmill_N = mkN "sawmill" "sawmills";
lin sawyer_N = mkN "sawyer" "sawyers";
lin sax_N = mkN "sax" "saxes";
lin saxhorn_N = mkN "saxhorn" "saxhorns";
lin saxifrage_N = mkN "saxifrage" ;
lin saxon_A = compoundA (mkA "saxon");
lin saxon_N = mkN "saxon" "saxons";
lin saxophone_N = mkN "saxophone" "saxophones";
lin saxophonist_N = mkN "saxophonist" "saxophonists";
lin say_N = mkN "say" "IRREG";
lin say_V = IrregEng.say_V;
lin say_V2 = mkV2 (IrregEng.say_V);
lin say_VA = mkVA (IrregEng.say_V);
lin say_VV = mkVV (IrregEng.say_V);
lin say_VS = mkVS (IrregEng.say_V);
lin saying_N = mkN "saying" "sayings";
lin scab_N = mkN "scab" "scabs";
lin scabbard_N = mkN "scabbard" "scabbards";
lin scabby_A = mkA "scabby" "scabbier";
lin scabies_N = mkN "scabies" ;
lin scabious_N = mkN "scabious" ;
lin scabrous_A = compoundA (mkA "scabrous");
lin scaffold_N = mkN "scaffold" "scaffolds";
lin scaffolding_N = mkN "scaffolding" ;
lin scalawag_N = mkN "scalawag" "scalawags";
lin scald_N = mkN "scald" "scalds";
lin scald_V2 = mkV2 (mkV "scald" "scalds" "scalded" "scalded" "scalding");
lin scale_N = mkN "scale" "scales";
lin scale_V = mkV "scale" "scales" "scaled" "scaled" "scaling";
lin scale_V2 = mkV2 (mkV "scale" "scales" "scaled" "scaled" "scaling");
lin scaling_ladder_N = mkN "scaling - ladder" "scaling - ladders";
lin scallop_N = mkN "scallop" "scallops";
lin scallop_V2 = mkV2 (mkV "scallop" "scallops" "scalloped" "scalloped" "scalloping");
lin scallop_shell_N = mkN "scallop - shell" "scallop - shells";
lin scallywag_N = mkN "scallywag" "scallywags";
lin scalp_N = mkN "scalp" "scalps";
lin scalp_V2 = mkV2 (mkV "scalp" "scalps" "scalped" "scalped" "scalping");
lin scalpel_N = mkN "scalpel" "scalpels";
lin scaly_A = mkA "scaly" "scalier";
lin scam_V2 = mkV2 (mkV "scam");
lin scamp_N = mkN "scamp" "scamps";
lin scamp_V2 = mkV2 (mkV "scamp" "scamps" "scamped" "scamped" "scamping");
lin scamper_N = mkN "scamper" "scampers";
lin scamper_V = mkV "scamper" "scampers" "scampered" "scampered" "scampering";
lin scan_V = mkV "scan" "scans" "scanned" "scanned" "scanning";
lin scan_V2 = mkV2 (mkV "scan" "scans" "scanned" "scanned" "scanning");
lin scandal_N = mkN "scandal" "scandals";
lin scandalize_V2 = mkV2 (mkV "scandalize" "scandalizes" "scandalized" "scandalized" "scandalizing");
lin scandalmonger_N = mkN "scandalmonger" "scandalmongers";
lin scandalmongering_N = mkN "scandalmongering" ;
lin scandalous_A = compoundA (mkA "scandalous");
lin scandinavian_A = compoundA (mkA "Scandinavian");
lin scandinavian_N = mkN "Scandinavian" "Scandinavians";
lin scanner_N = mkN "scanner" "scanners";
lin scansion_N = mkN "scansion" ;
lin scant_A = compoundA (mkA "scant");
lin scant_V2 = mkV2 (mkV "scant" "scants" "scanted" "scanted" "scanting");
lin scantily_Adv = mkAdv "scantily";
lin scantiness_N = mkN "scantiness" ;
lin scantling_N = mkN "scantling" "scantlings";
lin scanty_A = mkA "scanty" "scantier";
lin scapegoat_N = mkN "scapegoat" "scapegoats";
lin scapegrace_N = mkN "scapegrace" "scapegraces";
lin scapula_N = mkN "scapula" "scapulas";
lin scar_N = mkN "scar" "scars";
lin scar_V = mkV "scar" "scars" "scarred" "scarred" "scarring";
lin scar_V2 = mkV2 (mkV "scar" "scars" "scarred" "scarred" "scarring");
lin scarab_N = mkN "scarab" "scarabs";
lin scarborough_PN = mkPN "Scarborough";
lin scarce_A = mkA "scarce" "scarcer";
lin scarcity_N = mkN "scarcity" "scarcities";
lin scare_N = mkN "scare" "scares";
lin scare_V = mkV "scare" "scares" "scared" "scared" "scaring";
lin scare_V2 = mkV2 (mkV "scare" "scares" "scared" "scared" "scaring");
lin scarecrow_N = mkN "scarecrow" "scarecrows";
lin scaremonger_N = mkN "scaremonger" "scaremongers";
lin scarf_N = mkN "scarf" "scarfs";
lin scarf_pin_N = mkN "scarf - pin" "scarf - pins";
lin scarify_V2 = mkV2 (mkV "scarify" "scarifies" "scarified" "scarified" "scarifying");
lin scarlet_A = compoundA (mkA "scarlet");
lin scarlet_N = mkN "scarlet" "scarlets";
lin scarp_N = mkN "scarp" "scarps";
lin scarper_V = mkV "scarper" "scarpers" "scarpered" "scarpered" "scarpering";
lin scary_A = mkA "scary" "scarier";
lin scathing_A = compoundA (mkA "scathing");
lin scatter_N = mkN "scatter" "scatters";
lin scatter_V = mkV "scatter" "scatters" "scattered" "scattered" "scattering";
lin scatter_V2 = mkV2 (mkV "scatter" "scatters" "scattered" "scattered" "scattering");
lin scatterbrain_N = mkN "scatterbrain" "scatterbrains";
lin scatterbrained_A = compoundA (mkA "scatterbrained");
lin scattered_A = compoundA (mkA "scattered");
lin scatty_A = mkA "scatty" "scattier";
lin scavenge_V = mkV "scavenge" "scavenges" "scavenged" "scavenged" "scavenging";
lin scavenger_N = mkN "scavenger" "scavengers";
lin scenario_N = mkN "scenario" "scenarios";
lin scenarist_N = mkN "scenarist" "scenarists";
lin scene_N = mkN "scene" "scenes";
lin scene_painter_N = mkN "scene - painter" "scene - painters";
lin scene_shifter_N = mkN "scene - shifter" "scene - shifters";
lin scenery_N = mkN "scenery" ;
lin scenic_A = compoundA (mkA "scenic");
lin scenically_Adv = mkAdv "scenically";
lin scent_N = mkN "scent" "scents";
lin scent_V2 = mkV2 (mkV "scent" "scents" "scented" "scented" "scenting");
lin scentless_A = compoundA (mkA "scentless");
lin sceptered_A = compoundA (mkA "sceptered");
lin sceptic_N = mkN "sceptic" "sceptics";
lin sceptical_A = compoundA (mkA "sceptical");
lin scepticism_N = mkN "scepticism" ;
lin sceptre_N = mkN "sceptre" "sceptres";
lin sceptred_A = compoundA (mkA "sceptred");
lin schedule_N = mkN "schedule" "schedules";
lin schedule_V = mkV "schedule";
lin schedule_V2 = mkV2 (mkV "schedule" "schedules" "scheduled" "scheduled" "scheduling");
lin schedule_VV = mkVV (mkV "schedule");
lin schema_N = mkN "schema" "schemas";
lin schematic_A = compoundA (mkA "schematic");
lin schematically_Adv = mkAdv "schematically";
lin scheme_N = mkN "scheme" "schemes";
lin scheme_V = mkV "scheme" "schemes" "schemed" "schemed" "scheming";
lin scheme_V2 = mkV2 (mkV "scheme" "schemes" "schemed" "schemed" "scheming");
lin schemer_N = mkN "schemer" "schemers";
lin scherzo_N = mkN "scherzo" "scherzos";
lin schism_N = mkN "schism" "schisms";
lin schismatic_A = compoundA (mkA "schismatic");
lin schist_N = mkN "schist" "schists";
lin schizoid_A = compoundA (mkA "schizoid");
lin schizophrenia_N = mkN "schizophrenia" ;
lin schizophrenic_A = compoundA (mkA "schizophrenic");
lin schizophrenic_N = mkN "schizophrenic" "schizophrenics";
lin schmaltz_N = mkN "schmaltz" ;
lin schmaltzy_A = mkA "schmaltzy" "schmaltzier";
lin schmalz_N = mkN "schmalz" ;
lin schmalzy_A = mkA "schmalzy" "schmalzier";
lin schnapps_N = mkN "schnapps" ;
lin schnitzel_N = mkN "schnitzel" "schnitzels";
lin schnorkel_N = mkN "schnorkel" "schnorkels";
lin scholar_N = mkN "scholar" "scholars";
lin scholarly_A = compoundA (mkA "scholarly");
lin scholarship_N = mkN "scholarship" "scholarships";
lin scholastic_A = compoundA (mkA "scholastic");
lin scholasticism_N = mkN "scholasticism" ;
lin school_N = mkN "school" "schools";
lin school_V2 = mkV2 (mkV "school" "schools" "schooled" "schooled" "schooling");
lin school_board_N = mkN "school - board" "school - boards";
lin schoolbook_N = mkN "schoolbook" "schoolbooks";
lin schoolboy_N = mkN "schoolboy" "schoolboys";
lin schoolchild_N = mkN "schoolchild" "schoolchildren" {- FIXME: guessed plural form -};
lin schoolfellow_N = mkN "schoolfellow" "schoolfellows";
lin schoolfriend_N = mkN "schoolfriend" "schoolfriends";
lin schoolgirl_N = mkN "schoolgirl" "schoolgirls";
lin schoolhouse_N = mkN "schoolhouse" "schoolhouses";
lin schooling_N = mkN "schooling" ;
lin schoolman_N = mkN "schoolman" "schoolmen" {- FIXME: guessed plural form -};
lin schoolmaster_N = mkN "schoolmaster" "schoolmasters";
lin schoolmate_N = mkN "schoolmate" "schoolmates";
lin schoolmistress_N = mkN "schoolmistress" "schoolmistresses";
lin schoolroom_N = mkN "schoolroom" "schoolrooms";
lin schoolteacher_N = mkN "schoolteacher" "schoolteachers";
lin schooltime_N = mkN "schooltime" "schooltimes";
lin schooner_N = mkN "schooner" "schooners";
lin schottische_N = mkN "schottische" "schottisches";
lin schwa_N = mkN "schwa" "schwas";
lin schwerin_PN = mkPN "Schwerin";
lin sci_fi_N = mkN "sci fi" ;
lin sciatic_A = compoundA (mkA "sciatic");
lin sciatica_N = mkN "sciatica" ;
lin science_N = mkN "science" "sciences";
lin scientific_A = compoundA (mkA "scientific");
lin scientifically_Adv = mkAdv "scientifically";
lin scientist_N = mkN "scientist" "scientists";
lin scimitar_N = mkN "scimitar" "scimitars";
lin scintilla_N = mkN "scintilla" "scintillas";
lin scintillate_V = mkV "scintillate" "scintillates" "scintillated" "scintillated" "scintillating";
lin scintillation_N = mkN "scintillation" "scintillations";
lin scion_N = mkN "scion" "scions";
lin sclerosis_N = mkN "sclerosis" ;
lin scoff_N = mkN "scoff" "scoffs";
lin scoff_V = mkV "scoff" "scoffs" "scoffed" "scoffed" "scoffing";
lin scoff_V2 = mkV2 (mkV "scoff" "scoffs" "scoffed" "scoffed" "scoffing");
lin scoffer_N = mkN "scoffer" "scoffers";
lin scoffingly_Adv = mkAdv "scoffingly";
lin scold_N = mkN "scold" "scolds";
lin scold_V = mkV "scold" "scolds" "scolded" "scolded" "scolding";
lin scold_V2 = mkV2 (mkV "scold" "scolds" "scolded" "scolded" "scolding");
lin scolding_N = mkN "scolding" "scoldings";
lin scollop_N = mkN "scollop" "scollops";
lin scollop_V2 = mkV2 (mkV "scollop" "scollops" "scolloped" "scolloped" "scolloping");
lin sconce_N = mkN "sconce" "sconces";
lin scone_N = mkN "scone" "scones";
lin scoop_N = mkN "scoop" "scoops";
lin scoop_V = mkV "scoop";
lin scoop_V2 = mkV2 (mkV "scoop" "scoops" "scooped" "scooped" "scooping");
lin scoopful_N = mkN "scoopful" "scoopfuls";
lin scoot_V = mkV "scoot" "scoots" "scooted" "scooted" "scooting";
lin scoot_V2 = mkV2 (mkV "scoot" "scoots" "scooted" "scooted" "scooting");
lin scooter_N = mkN "scooter" "scooters";
lin scope_N = mkN "scope" ;
lin scorbutic_A = compoundA (mkA "scorbutic");
lin scorch_N = mkN "scorch" "scorches";
lin scorch_V = mkV "scorch" "scorches" "scorched" "scorched" "scorching";
lin scorch_V2 = mkV2 (mkV "scorch" "scorches" "scorched" "scorched" "scorching");
lin scorcher_N = mkN "scorcher" "scorchers";
lin scorching_A = compoundA (mkA "scorching");
lin scorching_Adv = mkAdv "scorching";
lin score_N = mkN "score" "scores";
lin score_V = mkV "score" "scores" "scored" "scored" "scoring";
lin score_V2 = mkV2 (mkV "score" "scores" "scored" "scored" "scoring");
lin scoreboard_N = mkN "scoreboard" "scoreboards";
lin scorebook_N = mkN "scorebook" "scorebooks";
lin scorecard_N = mkN "scorecard" "scorecards";
lin scorer_N = mkN "scorer" "scorers";
lin scorn_N = mkN "scorn" ;
lin scorn_V2 = mkV2 (mkV "scorn" "scorns" "scorned" "scorned" "scorning");
lin scornful_A = compoundA (mkA "scornful");
lin scorpio_PN = mkPN "Scorpio";
lin scorpion_N = mkN "scorpion" "scorpions";
lin scot_N = mkN "scot" "scots";
lin scot_free_Adv = mkAdv "scot - free";
lin scotch_A = compoundA (mkA "scotch");
lin scotch_N = mkN "scotch" "scotches";
lin scotch_V2 = mkV2 (mkV "scotch" "scotches" "scotched" "scotched" "scotching");
lin scotchman_N = mkN "scotchman" "scotchmen" {- FIXME: guessed plural form -};
lin scotchwoman_N = mkN "scotchwoman" "scotchwomen" {- FIXME: guessed plural form -};
lin scotland_PN = mkPN "Scotland";
lin scotland_yard_PN = mkPN "Scotland yard";
lin scots_A = compoundA (mkA "scots");
lin scotsman_N = mkN "scotsman" "scotsmen" {- FIXME: guessed plural form -};
lin scotswoman_N = mkN "scotswoman" "scotswomen" {- FIXME: guessed plural form -};
lin scottish_A = compoundA (mkA "scottish");
lin scoundrel_N = mkN "scoundrel" "scoundrels";
lin scoundrelly_A = compoundA (mkA "scoundrelly");
lin scour_N = mkN "scour" "scours";
lin scour_V = mkV "scour" "scours" "scoured" "scoured" "scouring";
lin scour_V2 = mkV2 (mkV "scour" "scours" "scoured" "scoured" "scouring");
lin scourer_N = mkN "scourer" "scourers";
lin scourge_N = mkN "scourge" "scourges";
lin scourge_V2 = mkV2 (mkV "scourge" "scourges" "scourged" "scourged" "scourging");
lin scout_N = mkN "scout" "scouts";
lin scout_V = mkV "scout" "scouts" "scouted" "scouted" "scouting";
lin scout_V2 = mkV2 (mkV "scout" "scouts" "scouted" "scouted" "scouting");
lin scoutmaster_N = mkN "scoutmaster" "scoutmasters";
lin scow_N = mkN "scow" "scows";
lin scowl_N = mkN "scowl" "scowls";
lin scowl_V = mkV "scowl" "scowls" "scowled" "scowled" "scowling";
lin scrabble_N = mkN "scrabble" "scrabbles";
lin scrabble_V = mkV "scrabble" "scrabbles" "scrabbled" "scrabbled" "scrabbling";
lin scrag_N = mkN "scrag" "scrags";
lin scrag_V2 = mkV2 (mkV "scrag" "scrags" "scragged" "scragged" "scragging");
lin scrag_end_N = mkN "scrag - end" "scrag - ends";
lin scraggy_A = mkA "scraggy" "scraggier";
lin scram_V = mkV "scram" "scrams" "scrammed" "scrammed" "scramming";
lin scramble_N = mkN "scramble" "scrambles";
lin scramble_V = mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling";
lin scramble_V2 = mkV2 (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling");
lin scramble_VV = mkVV (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling");
lin scramble_V2V = mkV2V (mkV "scramble" "scrambles" "scrambled" "scrambled" "scrambling") noPrep to_Prep ;
lin scrambler_N = mkN "scrambler" "scramblers";
lin scrap_N = mkN "scrap" "scraps";
lin scrap_V = mkV "scrap";
lin scrap_V2 = mkV2 (mkV "scrap" "scraps" "scrapped" "scrapped" "scrapping");
lin scrap_iron_N = mkN "scrap - iron" ;
lin scrapbook_N = mkN "scrapbook" "scrapbooks";
lin scrape_N = mkN "scrape" "scrapes";
lin scrape_V = mkV "scrape" "scrapes" "scraped" "scraped" "scraping";
lin scrape_V2 = mkV2 (mkV "scrape" "scrapes" "scraped" "scraped" "scraping");
lin scraper_N = mkN "scraper" "scrapers";
lin scrapheap_N = mkN "scrapheap" "scrapheaps";
lin scraping_N = mkN "scraping" "scrapings";
lin scrappily_Adv = mkAdv "scrappily";
lin scrappiness_N = mkN "scrappiness" ;
lin scrappy_A = mkA "scrappy" "scrappier";
lin scratch_N = mkN "scratch" "scratches";
lin scratch_V = mkV "scratch" "scratches" "scratched" "scratched" "scratching";
lin scratch_V2 = mkV2 (mkV "scratch" "scratches" "scratched" "scratched" "scratching");
lin scratch_pad_N = mkN "scratch - pad" "scratch - pads";
lin scratch_race_N = mkN "scratch - race" "scratch - races";
lin scratchy_A = mkA "scratchy" "scratchier";
lin scrawl_N = mkN "scrawl" "scrawls";
lin scrawl_V = mkV "scrawl" "scrawls" "scrawled" "scrawled" "scrawling";
lin scrawl_V2 = mkV2 (mkV "scrawl" "scrawls" "scrawled" "scrawled" "scrawling");
lin scrawny_A = mkA "scrawny" "scrawnier";
lin scream_N = mkN "scream" "screams";
lin scream_V = mkV "scream" "screams" "screamed" "screamed" "screaming";
lin scream_V2 = mkV2 (mkV "scream" "screams" "screamed" "screamed" "screaming");
lin scream_VS = mkVS (mkV "scream" "screams" "screamed" "screamed" "screaming");
lin screamingly_Adv = mkAdv "screamingly";
lin scree_N = mkN "scree" "screes";
lin screech_N = mkN "screech" "screeches";
lin screech_V = mkV "screech" "screeches" "screeched" "screeched" "screeching";
lin screech_V2 = mkV2 (mkV "screech" "screeches" "screeched" "screeched" "screeching");
lin screech_owl_N = mkN "screech - owl" "screech - owls";
lin screed_N = mkN "screed" "screeds";
lin screen_N = mkN "screen" "screens";
lin screen_V = mkV "screen" "screens" "screened" "screened" "screening";
lin screen_V2 = mkV2 (mkV "screen" "screens" "screened" "screened" "screening");
lin screw_N = mkN "screw" "screws";
lin screw_V = mkV "screw" "screws" "screwed" "screwed" "screwing";
lin screw_V2 = mkV2 (mkV "screw" "screws" "screwed" "screwed" "screwing");
lin screw_topped_A = compoundA (mkA "screw - topped");
lin screwball_A = compoundA (mkA "screwball");
lin screwball_N = mkN "screwball" "screwballs";
lin screwdriver_N = mkN "screwdriver" "screwdrivers";
lin screwy_A = mkA "screwy" "screwier";
lin scribble_N = mkN "scribble" "scribbles";
lin scribble_V = mkV "scribble" "scribbles" "scribbled" "scribbled" "scribbling";
lin scribble_V2 = mkV2 (mkV "scribble" "scribbles" "scribbled" "scribbled" "scribbling");
lin scribbler_N = mkN "scribbler" "scribblers";
lin scribbling_block_N = mkN "scribbling - block" "scribbling - blocks";
lin scribe_N = mkN "scribe" "scribes";
lin scrimmage_N = mkN "scrimmage" "scrimmages";
lin scrimmage_V = mkV "scrimmage" "scrimmages" "scrimmaged" "scrimmaged" "scrimmaging";
lin scrimmage_V2 = mkV2 (mkV "scrimmage" "scrimmages" "scrimmaged" "scrimmaged" "scrimmaging");
lin scrimp_V = mkV "scrimp" "scrimps" "scrimped" "scrimped" "scrimping";
lin scrimp_V2 = mkV2 (mkV "scrimp" "scrimps" "scrimped" "scrimped" "scrimping");
lin scrimshank_V = mkV "scrimshank" "scrimshanks" "scrimshanked" "scrimshanked" "scrimshanking";
lin scrimshanker_N = mkN "scrimshanker" "scrimshankers";
lin scrip_N = mkN "scrip" "scrips";
lin script_N = mkN "script" "scripts";
lin scripted_A = compoundA (mkA "scripted");
lin scriptural_A = compoundA (mkA "scriptural");
lin scripture_N = mkN "scripture" "scriptures";
lin scriptwriter_N = mkN "scriptwriter" "scriptwriters";
lin scrivener_N = mkN "scrivener" "scriveners";
lin scrofula_N = mkN "scrofula" ;
lin scrofulous_A = compoundA (mkA "scrofulous");
lin scroll_N = mkN "scroll" "scrolls";
lin scrooge_N = mkN "scrooge" "scrooges";
lin scrotum_N = mkN "scrotum" "scrotums";
lin scrounge_V = mkV "scrounge" "scrounges" "scrounged" "scrounged" "scrounging";
lin scrounge_V2 = mkV2 (mkV "scrounge" "scrounges" "scrounged" "scrounged" "scrounging");
lin scrounger_N = mkN "scrounger" "scroungers";
lin scrub_N = mkN "scrub" "scrubs";
lin scrub_V = mkV "scrub" "scrubs" "scrubbed" "scrubbed" "scrubbing";
lin scrub_V2 = mkV2 (mkV "scrub" "scrubs" "scrubbed" "scrubbed" "scrubbing");
lin scrubbing_brush_N = mkN "scrubbing - brush" "scrubbing - brushes";
lin scrubby_A = mkA "scrubby" "scrubbier";
lin scruff_N = mkN "scruff" "scruffs";
lin scruffy_A = mkA "scruffy" "scruffier";
lin scrum_N = mkN "scrum" "scrums";
lin scrummage_N = mkN "scrummage" "scrummages";
lin scrumptious_A = compoundA (mkA "scrumptious");
lin scrunch_N = mkN "scrunch" "scrunches";
lin scrunch_V2 = mkV2 (mkV "scrunch" "scrunches" "scrunched" "scrunched" "scrunching");
lin scruple_N = mkN "scruple" "scruples";
lin scruple_V = mkV "scruple" "scruples" "scrupled" "scrupled" "scrupling";
lin scrupulous_A = compoundA (mkA "scrupulous");
lin scrutineer_N = mkN "scrutineer" "scrutineers";
lin scrutinize_V2 = mkV2 (mkV "scrutinize" "scrutinizes" "scrutinized" "scrutinized" "scrutinizing");
lin scrutiny_N = mkN "scrutiny" "scrutinies";
lin scud_N = mkN "scud" "scuds";
lin scud_V = mkV "scud" "scuds" "scudded" "scudded" "scudding";
lin scuff_V = mkV "scuff" "scuffs" "scuffed" "scuffed" "scuffing";
lin scuff_V2 = mkV2 (mkV "scuff" "scuffs" "scuffed" "scuffed" "scuffing");
lin scuffle_V = mkV "scuffle" "scuffles" "scuffled" "scuffled" "scuffling";
lin scull_N = mkN "scull" "sculls";
lin scull_V = mkV "scull" "sculls" "sculled" "sculled" "sculling";
lin scull_V2 = mkV2 (mkV "scull" "sculls" "sculled" "sculled" "sculling");
lin sculler_N = mkN "sculler" "scullers";
lin scullery_N = mkN "scullery" "sculleries";
lin scullion_N = mkN "scullion" "scullions";
lin sculpt_V = mkV "sculpt" "sculpts" "sculpted" "sculpted" "sculpting";
lin sculpt_V2 = mkV2 (mkV "sculpt" "sculpts" "sculpted" "sculpted" "sculpting");
lin sculptor_N = mkN "sculptor" "sculptors";
lin sculptress_N = mkN "sculptress" "sculptresses";
lin sculptural_A = compoundA (mkA "sculptural");
lin sculpture_N = mkN "sculpture" "sculptures";
lin sculpture_V = mkV "sculpture" "sculptures" "sculptured" "sculptured" "sculpturing";
lin sculpture_V2 = mkV2 (mkV "sculpture" "sculptures" "sculptured" "sculptured" "sculpturing");
lin scum_N = mkN "scum" ;
lin scummy_A = mkA "scummy" "scummier";
lin scunthorpe_PN = mkPN "Scunthorpe";
lin scupper_N = mkN "scupper" "scuppers";
lin scupper_V2 = mkV2 (mkV "scupper" "scuppers" "scuppered" "scuppered" "scuppering");
lin scurf_N = mkN "scurf" ;
lin scurfy_A = mkA "scurfy" "scurfier";
lin scurrility_N = mkN "scurrility" ;
lin scurrilous_A = compoundA (mkA "scurrilous");
lin scurry_N = mkN "scurry" "scurries";
lin scurry_V = mkV "scurry" "scurries" "scurried" "scurried" "scurrying";
lin scurvy_A = compoundA (mkA "scurvy");
lin scurvy_N = mkN "scurvy" ;
lin scut_N = mkN "scut" "scuts";
lin scutcheon_N = mkN "scutcheon" "scutcheons";
lin scuttle_N = mkN "scuttle" "scuttles";
lin scuttle_V = mkV "scuttle" "scuttles" "scuttled" "scuttled" "scuttling";
lin scuttle_V2 = mkV2 (mkV "scuttle" "scuttles" "scuttled" "scuttled" "scuttling");
lin scylla_N = mkN "scylla" "scyllas";
lin scythe_N = mkN "scythe" "scythes";
lin scythe_V2 = mkV2 (mkV "scythe" "scythes" "scythed" "scythed" "scything");
lin sea_N = mkN "sea" "seas";
lin sea_anemone_N = mkN "sea - anemone" "sea - anemones";
lin sea_animal_N = mkN "sea - animal" "sea - animals";
lin sea_bathing_N = mkN "sea - bathing" ;
lin sea_boat_N = mkN "sea - boat" "sea - boats";
lin sea_bream_N = mkN "sea - bream" "sea - bream";
lin sea_breeze_N = mkN "sea - breeze" "sea - breezes";
lin sea_coal_N = mkN "sea - coal" ;
lin sea_cow_N = mkN "sea - cow" "sea - cows";
lin sea_dog_N = mkN "sea - dog" "sea - dogs";
lin sea_fish_N = mkN "sea - fish" "sea - fish";
lin sea_girt_A = compoundA (mkA "sea - girt");
lin sea_god_N = mkN "sea - god" "sea - gods";
lin sea_green_A = compoundA (mkA "sea - green");
lin sea_green_N = mkN "sea - green" ;
lin sea_horse_N = mkN "sea - horse" "sea - horses";
lin sea_level_N = mkN "sea - level" "IRREG";
lin sea_lion_N = mkN "sea - lion" "sea - lions";
lin sea_power_N = mkN "sea - power" ;
lin sea_rover_N = mkN "sea - rover" "sea - rovers";
lin sea_snake_N = mkN "sea - snake" "sea - snakes";
lin sea_urchin_N = mkN "sea - urchin" "sea - urchins";
lin sea_wall_N = mkN "sea - wall" "sea - walls";
lin sea_water_N = mkN "sea - water" ;
lin seabed_N = mkN "seabed" "seabeds";
lin seabird_N = mkN "seabird" "seabirds";
lin seaboard_N = mkN "seaboard" "seaboards";
lin seaborne_A = compoundA (mkA "seaborne");
lin seafarer_N = mkN "seafarer" "seafarers";
lin seafaring_A = compoundA (mkA "seafaring");
lin seafood_N = mkN "seafood" "seafoods";
lin seaford_PN = mkPN "Seaford";
lin seafront_N = mkN "seafront" "seafronts";
lin seagoing_A = compoundA (mkA "seagoing");
lin seagull_N = mkN "seagull" "seagulls";
lin seaham_PN = mkPN "Seaham";
lin seakale_N = mkN "seakale" ;
lin seal_N = mkN "seal" "seals";
lin seal_V = mkV "seal" "seals" "sealed" "sealed" "sealing";
lin seal_V2 = mkV2 (mkV "seal" "seals" "sealed" "sealed" "sealing");
lin seal_VS = mkVS (mkV "seal" "seals" "sealed" "sealed" "sealing");
lin seal_ring_N = mkN "seal - ring" "seal - rings";
lin sealer_N = mkN "sealer" "sealers";
lin sealing_wax_N = mkN "sealing - wax" ;
lin sealskin_N = mkN "sealskin" "sealskins";
lin sealyham_N = mkN "sealyham" "sealyhams";
lin seam_N = mkN "seam" "seams";
lin seam_V2 = mkV2 (mkV "seam" "seams" "seamed" "seamed" "seaming");
lin seaman_N = mkN "seaman" "seamen" {- FIXME: guessed plural form -};
lin seamanlike_A = compoundA (mkA "seamanlike");
lin seamanship_N = mkN "seamanship" ;
lin seamless_A = compoundA (mkA "seamless");
lin seamstress_N = mkN "seamstress" "seamstresses";
lin seamus_PN = mkPN "Seamus";
lin seamy_A = mkA "seamy" "seamier";
lin sean_PN = mkPN "Sean";
lin seance_N = mkN "séance" "séances";
lin seaplane_N = mkN "seaplane" "seaplanes";
lin seaport_N = mkN "seaport" "seaports";
lin sear_A = compoundA (mkA "sear");
lin sear_V2 = mkV2 (mkV "sear" "sears" "seared" "seared" "searing");
lin search_N = mkN "search" "searches";
lin search_V = mkV "search" "searches" "searched" "searched" "searching";
lin search_V2 = mkV2 (mkV "search" "searches" "searched" "searched" "searching");
lin search_party_N = mkN "search - party" "search - parties";
lin search_warrant_N = mkN "search - warrant" "search - warrants";
lin searcher_N = mkN "searcher" "searchers";
lin searching_A = compoundA (mkA "searching");
lin searchlight_N = mkN "searchlight" "searchlights";
lin searing_iron_N = mkN "searing - iron" "searing - irons";
lin seascape_N = mkN "seascape" "seascapes";
lin seashell_N = mkN "seashell" "seashells";
lin seashore_N = mkN "seashore" "seashores";
lin seasick_A = compoundA (mkA "seasick");
lin seasickness_N = mkN "seasickness" ;
lin seaside_N = mkN "seaside" "seasides";
lin season_N = mkN "season" "seasons";
lin season_V = mkV "season" "seasons" "seasoned" "seasoned" "seasoning";
lin season_V2 = mkV2 (mkV "season" "seasons" "seasoned" "seasoned" "seasoning");
lin season_ticket_N = mkN "season - ticket" "season - tickets";
lin seasonable_A = compoundA (mkA "seasonable");
lin seasonal_A = compoundA (mkA "seasonal");
lin seasoning_N = mkN "seasoning" "seasonings";
lin seat_N = mkN "seat" "seats";
lin seat_V2 = mkV2 (mkV "seat" "seats" "seated" "seated" "seating");
lin seat_belt_N = mkN "seat - belt" "seat - belts";
lin seating_room_N = mkN "seating - room" ;
lin seaton_burn_PN = mkPN "Seaton burn";
lin seaton_delaval_PN = mkPN "Seaton delaval";
lin seattle_PN = mkPN "Seattle";
lin seaward_A = compoundA (mkA "seaward");
lin seawards_Adv = mkAdv "seawards";
lin seaway_N = mkN "seaway" "seaways";
lin seaweed_N = mkN "seaweed" "seaweeds";
lin seaworthiness_N = mkN "seaworthiness" ;
lin seaworthy_A = compoundA (mkA "seaworthy");
lin sec_N = mkN "sec" "secs";
lin secede_V = mkV "secede" "secedes" "seceded" "seceded" "seceding";
lin secession_N = mkN "secession" "secessions";
lin secessionist_N = mkN "secessionist" "secessionists";
lin seclude_V2 = mkV2 (mkV "seclude" "secludes" "secluded" "secluded" "secluding");
lin secluded_A = compoundA (mkA "secluded");
lin seclusion_N = mkN "seclusion" ;
lin second_N = mkN "second" ;
lin second_V2 = mkV2 (mkV "second" "seconds" "seconded" "seconded" "seconding");
lin second_best_A = compoundA (mkA "second - best");
lin second_best_Adv = mkAdv "second - best";
lin second_best_N = mkN "second - best" "IRREG";
lin second_class_A = compoundA (mkA "second - class");
lin second_class_Adv = mkAdv "second - class";
lin second_class_N = mkN "second - class" ;
lin second_guess_V2 = mkV2 (mkV "second - guess");
lin second_hand_A = compoundA (mkA "second - hand");
lin second_hand_N = mkN "second - hand" "second - hands";
lin second_rate_A = compoundA (mkA "second - rate");
lin second_rater_N = mkN "second - rater" "second - raters";
lin second_sighted_A = compoundA (mkA "second - sighted");
lin secondary_A = compoundA (mkA "secondary");
lin seconder_N = mkN "seconder" "seconders";
lin secondment_N = mkN "secondment" "secondments";
lin secrecy_N = mkN "secrecy" ;
lin secret_A = compoundA (mkA "secret");
lin secret_N = mkN "secret" "secrets";
lin secretarial_A = compoundA (mkA "secretarial");
lin secretariat_N = mkN "secretariat" "secretariats";
lin secretary_N = mkN "secretary" "secretaries";
lin secretary_general_N = mkN "secretary - general" "secretary - generals";
lin secrete_V2 = mkV2 (mkV "secrete" "secretes" "secreted" "secreted" "secreting");
lin secretion_N = mkN "secretion" "secretions";
lin secretive_A = compoundA (mkA "secretive");
lin secretiveness_N = mkN "secretiveness" ;
lin sect_N = mkN "sect" "sects";
lin sectarian_A = compoundA (mkA "sectarian");
lin sectarian_N = mkN "sectarian" "sectarians";
lin sectarianism_N = mkN "sectarianism" ;
lin section_N = mkN "section" "sections";
lin sectional_A = compoundA (mkA "sectional");
lin sectionalism_N = mkN "sectionalism" ;
lin sector_N = mkN "sector" "sectors";
lin secular_A = compoundA (mkA "secular");
lin secularism_N = mkN "secularism" ;
lin secularist_N = mkN "secularist" "secularists";
lin secularize_V2 = mkV2 (mkV "secularize" "secularizes" "secularized" "secularized" "secularizing");
lin secure_A = compoundA (mkA "secure");
lin secure_V2 = mkV2 (mkV "secure" "secures" "secured" "secured" "securing");
lin securicor_PN = mkPN "Securicor";
lin security_N = mkN "security" "securities";
lin sedan_N = mkN "sedan" "sedans";
lin sedan_chair_N = mkN "sedan - chair" "sedan - chairs";
lin sedate_A = compoundA (mkA "sedate");
lin sedate_V2 = mkV2 (mkV "sedate" "sedates" "sedated" "sedated" "sedating");
lin sedateness_N = mkN "sedateness" ;
lin sedation_N = mkN "sedation" ;
lin sedative_A = compoundA (mkA "sedative");
lin sedative_N = mkN "sedative" "sedatives";
lin sedentary_A = compoundA (mkA "sedentary");
lin sedge_N = mkN "sedge" "sedges";
lin sedgy_A = mkA "sedgy" "sedgier";
lin sediment_N = mkN "sediment" ;
lin sedimentary_A = compoundA (mkA "sedimentary");
lin sedition_N = mkN "sedition" ;
lin seditious_A = compoundA (mkA "seditious");
lin seduce_V2 = mkV2 (mkV "seduce" "seduces" "seduced" "seduced" "seducing");
lin seducer_N = mkN "seducer" "seducers";
lin seduction_N = mkN "seduction" "seductions";
lin seductive_A = compoundA (mkA "seductive");
lin sedulous_A = compoundA (mkA "sedulous");
lin see_N = mkN "see" "sees";
lin see_V = IrregEng.see_V;
lin see_V2 = mkV2 (IrregEng.see_V);
lin see_V2V = mkV2V (IrregEng.see_V) noPrep to_Prep ;
lin see_VA = mkVA (IrregEng.see_V);
lin see_VS = mkVS (IrregEng.see_V);
lin see_through_A = compoundA (mkA "see - through");
lin seed_N = mkN "seed" "seed";
lin seed_V = mkV "seed" "seeds" "seeded" "seeded" "seeding";
lin seed_V2 = mkV2 (mkV "seed" "seeds" "seeded" "seeded" "seeding");
lin seed_corn_N = mkN "seed - corn" ;
lin seedbed_N = mkN "seedbed" "seedbeds";
lin seedcake_N = mkN "seedcake" "seedcakes";
lin seedily_Adv = mkAdv "seedily";
lin seediness_N = mkN "seediness" ;
lin seedless_A = compoundA (mkA "seedless");
lin seedling_N = mkN "seedling" "seedlings";
lin seedsman_N = mkN "seedsman" "seedsmen";
lin seedtime_N = mkN "seedtime" "seedtimes";
lin seedy_A = mkA "seedy" "seedier";
lin seek_V2 = mkV2 (IrregEng.seek_V);
lin seek_VV = mkVV (IrregEng.seek_V);
lin seek_VS = mkVS (IrregEng.seek_V);
lin seeker_N = mkN "seeker" "seekers";
lin seem_V = mkV "seem" "seems" "seemed" "seemed" "seeming";
lin seem_V2 = mkV2 (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VA = mkVA (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VV = mkVV (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seem_VS = mkVS (mkV "seem" "seems" "seemed" "seemed" "seeming");
lin seeming_A = compoundA (mkA "seeming");
lin seemliness_N = mkN "seemliness" ;
lin seemly_A = mkA "seemly" "seemlier";
lin seep_V = mkV "seep" "seeps" "seeped" "seeped" "seeping";
lin seepage_N = mkN "seepage" ;
lin seer_N = mkN "seer" "seers";
lin seersucker_N = mkN "seersucker" ;
lin seesaw_N = mkN "seesaw" "seesaws";
lin seesaw_V = mkV "seesaw" "seesaws" "seesawed" "seesawed" "seesawing";
lin seethe_V = mkV "seethe" "seethes" "seethed" "seethed" "seething";
lin seethe_V2 = mkV2 (mkV "seethe" "seethes" "seethed" "seethed" "seething");
lin segment_N = mkN "segment" "segments";
lin segment_V = mkV "segment" "segments" "segmented" "segmented" "segmenting";
lin segment_V2 = mkV2 (mkV "segment" "segments" "segmented" "segmented" "segmenting");
lin segmentation_N = mkN "segmentation" "segmentations";
lin segregate_V2 = mkV2 (mkV "segregate" "segregates" "segregated" "segregated" "segregating");
lin segregation_N = mkN "segregation" "segregations";
lin seignior_N = mkN "seignior" "seigniors";
lin seine_N = mkN "seine" "seines";
lin seine_V = mkV "seine" "seines" "seined" "seined" "seining";
lin seine_V2 = mkV2 (mkV "seine" "seines" "seined" "seined" "seining");
lin seismic_A = compoundA (mkA "seismic");
lin seismograph_N = mkN "seismograph" "seismographs";
lin seismologist_N = mkN "seismologist" "seismologists";
lin seismology_N = mkN "seismology" ;
lin seize_V = mkV "seize" "seizes" "seized" "seized" "seizing";
lin seize_V2 = mkV2 (mkV "seize" "seizes" "seized" "seized" "seizing");
lin seizure_N = mkN "seizure" "seizures";
lin selby_PN = mkPN "Selby";
lin seldom_Adv = mkAdv "seldom";
lin select_A = compoundA (mkA "select");
lin select_V = mkV "select";
lin select_V2 = mkV2 (mkV "select" "selects" "selected" "selected" "selecting");
lin select_V2V = mkV2V (mkV "select") noPrep to_Prep ;
lin select_VV = mkVV (mkV "select");
lin selection_N = mkN "selection" "selections";
lin selective_A = compoundA (mkA "selective");
lin selectivity_N = mkN "selectivity" ;
lin selector_N = mkN "selector" "selectors";
lin selenium_N = mkN "selenium" ;
lin self_N = mkN "self" "selves" {- FIXME: guessed plural form -};
lin self_abasement_N = mkN "self - abasement" ;
lin self_abnegation_N = mkN "self - abnegation" ;
lin self_absorbed_A = compoundA (mkA "self - absorbed");
lin self_acting_A = compoundA (mkA "self - acting");
lin self_activating_A = compoundA (mkA "self - activating");
lin self_addressed_A = compoundA (mkA "self - addressed");
lin self_appointed_A = compoundA (mkA "self - appointed");
lin self_assertion_N = mkN "self - assertion" ;
lin self_assertive_A = compoundA (mkA "self - assertive");
lin self_assurance_N = mkN "self - assurance" ;
lin self_assured_A = compoundA (mkA "self - assured");
lin self_centred_A = compoundA (mkA "self - centred");
lin self_collected_A = compoundA (mkA "self - collected");
lin self_coloured_A = compoundA (mkA "self - coloured");
lin self_command_N = mkN "self - command" ;
lin self_communion_N = mkN "self - communion" ;
lin self_complacency_N = mkN "self - complacency" ;
lin self_confessed_A = compoundA (mkA "self - confessed");
lin self_confidence_N = mkN "self - confidence" ;
lin self_confident_A = compoundA (mkA "self - confident");
lin self_conscious_A = compoundA (mkA "self - conscious");
lin self_consciousness_N = mkN "self - consciousness" ;
lin self_contained_A = compoundA (mkA "self - contained");
lin self_control_N = mkN "self - control" ;
lin self_defence_N = mkN "self - defence" ;
lin self_denial_N = mkN "self - denial" ;
lin self_denying_A = compoundA (mkA "self - denying");
lin self_destruct_V = mkV "self - destruct";
lin self_determination_N = mkN "self - determination" ;
lin self_educated_A = compoundA (mkA "self - educated");
lin self_effacing_A = compoundA (mkA "self - effacing");
lin self_employed_A = compoundA (mkA "self - employed");
lin self_esteem_N = mkN "self - esteem" ;
lin self_evident_A = compoundA (mkA "self - evident");
lin self_examination_N = mkN "self - examination" "self - examinations";
lin self_explanatory_A = compoundA (mkA "self - explanatory");
lin self_help_N = mkN "self - help" ;
lin self_importance_N = mkN "self - importance" ;
lin self_important_A = compoundA (mkA "self - important");
lin self_imposed_A = compoundA (mkA "self - imposed");
lin self_indulgence_N = mkN "self - indulgence" ;
lin self_indulgent_A = compoundA (mkA "self - indulgent");
lin self_insure_V = mkV "self - insure";
lin self_interest_N = mkN "self - interest" ;
lin self_locking_A = compoundA (mkA "self - locking");
lin self_made_A = compoundA (mkA "self - made");
lin self_opinionated_A = compoundA (mkA "self - opinionated");
lin self_pity_N = mkN "self - pity" ;
lin self_possessed_A = compoundA (mkA "self - possessed");
lin self_possession_N = mkN "self - possession" ;
lin self_preservation_N = mkN "self - preservation" ;
lin self_raising_A = compoundA (mkA "self - raising");
lin self_reliance_N = mkN "self - reliance" ;
lin self_reliant_A = compoundA (mkA "self - reliant");
lin self_respect_N = mkN "self - respect" ;
lin self_respecting_A = compoundA (mkA "self - respecting");
lin self_righteous_A = compoundA (mkA "self - righteous");
lin self_rule_N = mkN "self - rule" ;
lin self_sacrifice_N = mkN "self - sacrifice" "self - sacrifices";
lin self_sacrificing_A = compoundA (mkA "self - sacrificing");
lin self_same_A = compoundA (mkA "self - same");
lin self_sealing_A = compoundA (mkA "self - sealing");
lin self_seeker_N = mkN "self - seeker" "self - seekers";
lin self_seeking_A = compoundA (mkA "self - seeking");
lin self_seeking_N = mkN "self - seeking" ;
lin self_service_N = mkN "self - service" ;
lin self_sown_A = compoundA (mkA "self - sown");
lin self_starter_N = mkN "self - starter" "self - starters";
lin self_styled_A = compoundA (mkA "self - styled");
lin self_sufficiency_N = mkN "self - sufficiency" ;
lin self_sufficient_A = compoundA (mkA "self - sufficient");
lin self_sufficing_A = compoundA (mkA "self - sufficing");
lin self_supporting_A = compoundA (mkA "self - supporting");
lin self_will_N = mkN "self - will" ;
lin self_willed_A = compoundA (mkA "self - willed");
lin self_winding_A = compoundA (mkA "self - winding");
lin selfconsciously_Adv = mkAdv "selfconsciously";
lin selfish_A = compoundA (mkA "selfish");
lin selfishness_N = mkN "selfishness" ;
lin selkirk_PN = mkPN "Selkirk";
lin sell_N = mkN "sell" "IRREG";
lin sell_V = IrregEng.sell_V;
lin sell_V2 = mkV2 (IrregEng.sell_V);
lin sell_VA = mkVA (IrregEng.sell_V);
lin sell_VS = mkVS (IrregEng.sell_V);
lin seller_N = mkN "seller" "sellers";
lin selling_N = mkN "selling" ;
lin sellout_N = mkN "sellout" "sellouts";
lin selsey_PN = mkPN "Selsey";
lin selston_PN = mkPN "Selston";
lin selvage_N = mkN "selvage" "selvages";
lin selvedge_N = mkN "selvedge" "selvedges";
lin semantic_A = compoundA (mkA "semantic");
lin semantics_N = mkN "semantics" "semantics";
lin semaphore_N = mkN "semaphore" ;
lin semaphore_V = mkV "semaphore" "semaphores" "semaphored" "semaphored" "semaphoring";
lin semaphore_V2 = mkV2 (mkV "semaphore" "semaphores" "semaphored" "semaphored" "semaphoring");
lin semarang_PN = mkPN "Semarang";
lin semblance_N = mkN "semblance" "semblances";
lin semen_N = mkN "semen" ;
lin semester_N = mkN "semester" "semesters";
lin semibreve_N = mkN "semibreve" "semibreves";
lin semicircle_N = mkN "semicircle" "semicircles";
lin semicircular_A = compoundA (mkA "semicircular");
lin semicolon_N = mkN "semicolon" "semicolons";
lin semiconducting_A = compoundA (mkA "semiconducting");
lin semiconductor_N = mkN "semiconductor" "semiconductors";
lin semiconscious_A = compoundA (mkA "semiconscious");
lin semidetached_A = compoundA (mkA "semidetached");
lin semifinal_N = mkN "semifinal" "semifinals";
lin semifinalist_N = mkN "semifinalist" "semifinalists";
lin seminal_A = compoundA (mkA "seminal");
lin seminar_N = mkN "seminar" "seminars";
lin seminarist_N = mkN "seminarist" "seminarists";
lin seminary_N = mkN "seminary" "seminaries";
lin semiofficial_A = compoundA (mkA "semiofficial");
lin semiquaver_N = mkN "semiquaver" "semiquavers";
lin semirigid_A = compoundA (mkA "semirigid");
lin semite_A = compoundA (mkA "semite");
lin semite_N = mkN "semite" "semites";
lin semitic_A = compoundA (mkA "semitic");
lin semitone_N = mkN "semitone" "semitones";
lin semitropical_A = compoundA (mkA "semitropical");
lin semivowel_N = mkN "semivowel" "semivowels";
lin semolina_N = mkN "semolina" ;
lin sempstress_N = mkN "sempstress" "sempstresses";
lin senate_N = mkN "senate" "senates";
lin senator_N = mkN "senator" "senators";
lin senatorial_A = compoundA (mkA "senatorial");
lin send_V = IrregEng.send_V;
lin send_V2 = mkV2 (IrregEng.send_V);
lin send_V2V = mkV2V (IrregEng.send_V) noPrep to_Prep ;
lin send_VS = mkVS (IrregEng.send_V);
lin send_up_N = mkN "send - up" "send - ups";
lin sender_N = mkN "sender" "senders";
lin sendoff_N = mkN "sendoff" "sendoffs";
lin senegal_PN = mkPN "Senegal";
lin senegalese_A = compoundA (mkA "senegalese");
lin senegalese_N = mkN "senegalese" "senegalese";
lin senescence_N = mkN "senescence" ;
lin senescent_A = compoundA (mkA "senescent");
lin seneschal_N = mkN "seneschal" "seneschals";
lin senile_A = compoundA (mkA "senile");
lin senility_N = mkN "senility" ;
lin senior_A = compoundA (mkA "senior");
lin senior_N = mkN "senior" "seniors";
lin seniority_N = mkN "seniority" ;
lin senna_N = mkN "senna" ;
lin senor_N = mkN "señor" "IRREG";
lin senora_N = mkN "senora" "senoras";
lin senorita_N = mkN "senorita" "senoritas";
lin sensation_N = mkN "sensation" "sensations";
lin sensational_A = compoundA (mkA "sensational");
lin sensationalism_N = mkN "sensationalism" ;
lin sensationalist_N = mkN "sensationalist" "sensationalists";
lin sense_N = mkN "sense" "senses";
lin sense_V2 = mkV2 (mkV "sense" "senses" "sensed" "sensed" "sensing");
lin sense_VS = mkVS (mkV "sense");
lin sense_organ_N = mkN "sense - organ" "sense - organs";
lin senseless_A = compoundA (mkA "senseless");
lin senselessness_N = mkN "senselessness" ;
lin sensibility_N = mkN "sensibility" "sensibilities";
lin sensible_A = compoundA (mkA "sensible");
lin sensitive_A = compoundA (mkA "sensitive");
lin sensitivity_N = mkN "sensitivity" "sensitivities";
lin sensitization_N = mkN "sensitization" ;
lin sensitize_V2 = mkV2 (mkV "sensitize" "sensitizes" "sensitized" "sensitized" "sensitizing");
lin sensory_A = compoundA (mkA "sensory");
lin sensual_A = compoundA (mkA "sensual");
lin sensualism_N = mkN "sensualism" ;
lin sensualist_N = mkN "sensualist" "sensualists";
lin sensuality_N = mkN "sensuality" ;
lin sensuous_A = compoundA (mkA "sensuous");
lin sensuousness_N = mkN "sensuousness" ;
lin sentence_N = mkN "sentence" "sentences";
lin sentence_V = mkV "sentence";
lin sentence_V2 = mkV2 (mkV "sentence" "sentences" "sentenced" "sentenced" "sentencing");
lin sententious_A = compoundA (mkA "sententious");
lin sentient_A = compoundA (mkA "sentient");
lin sentiment_N = mkN "sentiment" "sentiments";
lin sentimental_A = compoundA (mkA "sentimental");
lin sentimentalist_N = mkN "sentimentalist" "sentimentalists";
lin sentimentality_N = mkN "sentimentality" ;
lin sentimentalize_V = mkV "sentimentalize" "sentimentalizes" "sentimentalized" "sentimentalized" "sentimentalizing";
lin sentimentalize_V2 = mkV2 (mkV "sentimentalize" "sentimentalizes" "sentimentalized" "sentimentalized" "sentimentalizing");
lin sentinel_N = mkN "sentinel" "sentinels";
lin sentry_N = mkN "sentry" "sentries";
lin sentry_box_N = mkN "sentry - box" "sentry - boxes";
lin sentry_go_N = mkN "sentry - go" "sentry - gi" {- FIXME: guessed plural form -};
lin seoul_PN = mkPN "Seoul";
lin sepal_N = mkN "sepal" "sepals";
lin separability_N = mkN "separability" ;
lin separable_A = compoundA (mkA "separable");
lin separate_A = compoundA (mkA "separate");
lin separate_N = mkN "separate" "separates";
lin separate_V = mkV "separate" "separates" "separated" "separated" "separating";
lin separate_V2 = mkV2 (mkV "separate" "separates" "separated" "separated" "separating");
lin separation_N = mkN "separation" "separations";
lin separatist_N = mkN "separatist" "separatists";
lin separator_N = mkN "separator" "separators";
lin sepia_N = mkN "sepia" ;
lin sepsis_N = mkN "sepsis" ;
lin sept_PN = mkPN "Sept";
lin september_N = mkN "september" "septembers";
lin september_PN = mkPN "September";
lin septet_N = mkN "septet" "septets";
lin septic_A = compoundA (mkA "septic");
lin septicaemia_N = mkN "septicaemia" ;
lin septicemia_N = mkN "septicemia" ;
lin septuagenarian_N = mkN "septuagenarian" "septuagenarians";
lin septuagint_N = mkN "septuagint" "septuagints";
lin sepulchral_A = compoundA (mkA "sepulchral");
lin sepulchre_N = mkN "sepulchre" "sepulchres";
lin sepulture_N = mkN "sepulture" ;
lin sequel_N = mkN "sequel" "sequels";
lin sequence_N = mkN "sequence" "sequences";
lin sequent_A = compoundA (mkA "sequent");
lin sequential_A = compoundA (mkA "sequential");
lin sequester_V2 = mkV2 (mkV "sequester" "sequesters" "sequestered" "sequestered" "sequestering");
lin sequestered_A = compoundA (mkA "sequestered");
lin sequestrate_V2 = mkV2 (mkV "sequestrate" "sequestrates" "sequestrated" "sequestrated" "sequestrating");
lin sequestration_N = mkN "sequestration" "sequestrations";
lin sequin_N = mkN "sequin" "sequins";
lin sequoia_N = mkN "sequoia" "sequoias";
lin seraglio_N = mkN "seraglio" "seraglios";
lin seraph_N = mkN "seraph" "seraphs";
lin seraphic_A = compoundA (mkA "seraphic");
lin serbo_croat_N = mkN "serbo - croat" ;
lin sere_A = compoundA (mkA "sere");
lin serenade_N = mkN "serenade" "serenades";
lin serenade_V2 = mkV2 (mkV "serenade" "serenades" "serenaded" "serenaded" "serenading");
lin serendipity_N = mkN "serendipity" ;
lin serene_A = compoundA (mkA "serene");
lin serenity_N = mkN "serenity" ;
lin serf_N = mkN "serf" "serfs";
lin serfdom_N = mkN "serfdom" ;
lin serge_N = mkN "serge" ;
lin sergeant_N = mkN "sergeant" "sergeants";
lin sergeant_major_N = mkN "sergeant - major" "sergeant - majors";
lin serial_A = compoundA (mkA "serial");
lin serial_N = mkN "serial" "serials";
lin serialize_V2 = mkV2 (mkV "serialize" "serializes" "serialized" "serialized" "serializing");
lin seriatim_Adv = mkAdv "seriatim";
lin sericultural_A = compoundA (mkA "sericultural");
lin sericulture_N = mkN "sericulture" "sericultures";
lin sericulturist_N = mkN "sericulturist" "sericulturists";
lin series_N = mkN "series" "series";
lin seriocomic_A = compoundA (mkA "seriocomic");
lin serious_A = compoundA (mkA "serious");
lin seriousness_N = mkN "seriousness" ;
lin serjeant_N = mkN "serjeant" "serjeants";
lin serjeant_at_arms_N = mkN "serjeant - at - arms" "serjeants - at - arms";
lin sermon_N = mkN "sermon" "sermons";
lin sermonize_V = mkV "sermonize" "sermonizes" "sermonized" "sermonized" "sermonizing";
lin sermonize_V2 = mkV2 (mkV "sermonize" "sermonizes" "sermonized" "sermonized" "sermonizing");
lin serous_A = compoundA (mkA "serous");
lin serpent_N = mkN "serpent" "serpents";
lin serpentine_A = compoundA (mkA "serpentine");
lin serrated_A = compoundA (mkA "serrated");
lin serried_A = compoundA (mkA "serried");
lin serum_N = mkN "serum" ;
lin servant_N = mkN "servant" "servants";
lin serve_N = mkN "serve" "serves";
lin serve_V = mkV "serve" "serves" "served" "served" "serving";
lin serve_V2 = mkV2 (mkV "serve" "serves" "served" "served" "serving");
lin serve_VV = mkVV (mkV "serve" "serves" "served" "served" "serving");
lin serve_VS = mkVS (mkV "serve" "serves" "served" "served" "serving");
lin server_N = mkN "server" "servers";
lin service_N = mkN "service" "services";
lin service_V2 = mkV2 (mkV "service" "services" "serviced" "serviced" "servicing");
lin serviceable_A = compoundA (mkA "serviceable");
lin serviceman_N = mkN "serviceman" "servicemen" {- FIXME: guessed plural form -};
lin serviette_N = mkN "serviette" "serviettes";
lin servile_A = compoundA (mkA "servile");
lin servility_N = mkN "servility" ;
lin serving_N = mkN "serving" "servings";
lin servitor_N = mkN "servitor" "servitors";
lin servitude_N = mkN "servitude" ;
lin sesame_N = mkN "sesame" ;
lin sesotho_N = mkN "sesotho" ;
lin sesquipedalian_A = compoundA (mkA "sesquipedalian");
lin session_N = mkN "session" "sessions";
lin set_N = mkN "set" "sets";
lin set_V = IrregEng.set_V;
lin set_V2 = mkV2 (IrregEng.set_V);
lin set_VV = mkVV (IrregEng.set_V);
lin set_VS = mkVS (IrregEng.set_V);
lin set_square_N = mkN "set - square" "set - squares";
lin set_to_N = mkN "set - to" "set - tos";
lin set_up_N = mkN "set - up" "set - ups";
lin setback_N = mkN "setback" "setbacks";
lin setswana_N = mkN "setswana" ;
lin sett_N = mkN "sett" "setts";
lin settee_N = mkN "settee" "settees";
lin setter_N = mkN "setter" "setters";
lin setting_N = mkN "setting" "settings";
lin settle_N = mkN "settle" "settles";
lin settle_V = mkV "settle" "settles" "settled" "settled" "settling";
lin settle_V2 = mkV2 (mkV "settle" "settles" "settled" "settled" "settling");
lin settle_VA = mkVA (mkV "settle" "settles" "settled" "settled" "settling");
lin settle_VS = mkVS (mkV "settle" "settles" "settled" "settled" "settling");
lin settled_A = compoundA (mkA "settled");
lin settlement_N = mkN "settlement" "settlements";
lin settler_N = mkN "settler" "settlers";
lin seven_sisters_PN = mkPN "Seven sisters";
lin sevenfold_A = compoundA (mkA "sevenfold");
lin sevenfold_Adv = mkAdv "sevenfold";
lin sevenoaks_PN = mkPN "Sevenoaks";
lin sever_V = mkV "sever" "severs" "severed" "severed" "severing";
lin sever_V2 = mkV2 (mkV "sever" "severs" "severed" "severed" "severing");
lin several_A = compoundA (mkA "several");
lin severally_Adv = mkAdv "severally";
lin severance_N = mkN "severance" ;
lin severe_A = mkA "severe" "severer";
lin severity_N = mkN "severity" "severities";
lin sevilla_PN = mkPN "Sevilla";
lin seville_PN = mkPN "Seville";
lin sew_V = IrregEng.sew_V;
lin sew_V2 = mkV2 (IrregEng.sew_V);
lin sewage_N = mkN "sewage" ;
lin sewage_farm_N = mkN "sewage - farm" "sewage - farms";
lin sewage_works_N = mkN "sewage - works" "sewage - works";
lin sewer_N = mkN "sewer" "sewers";
lin sewer_gas_N = mkN "sewer - gas" ;
lin sewer_rat_N = mkN "sewer - rat" "sewer - rats";
lin sewerage_N = mkN "sewerage" "sewerages";
lin sewing_N = mkN "sewing" ;
lin sewing_machine_N = mkN "sewing - machine" "sewing - machines";
lin sex_N = mkN "sex" "sexes";
lin sex_V2 = mkV2 (mkV "sex" "sexes" "sexed" "sexed" "sexing");
lin sex_starved_A = compoundA (mkA "sex - starved");
lin sexagenarian_A = compoundA (mkA "sexagenarian");
lin sexagenarian_N = mkN "sexagenarian" "sexagenarians";
lin sexed_A = compoundA (mkA "sexed");
lin sexism_N = mkN "sexism" ;
lin sexist_A = compoundA (mkA "sexist");
lin sexist_N = mkN "sexist" "sexists";
lin sexless_A = compoundA (mkA "sexless");
lin sextant_N = mkN "sextant" "sextants";
lin sextet_N = mkN "sextet" "sextets";
lin sextette_N = mkN "sextette" "sextettes";
lin sexton_N = mkN "sexton" "sextons";
lin sexual_A = compoundA (mkA "sexual");
lin sexuality_N = mkN "sexuality" ;
lin sexy_A = mkA "sexy" "sexier";
lin seychelles_PN = mkPN "Seychelles";
lin seychellois_A = compoundA (mkA "seychellois");
lin seychellois_N = mkN "seychellois" "seychellois";
lin sgd_PN = mkPN "Sgd";
lin sgt_PN = mkPN "Sgt";
lin shabbily_Adv = mkAdv "shabbily";
lin shabbiness_N = mkN "shabbiness" ;
lin shabby_A = mkA "shabby" "shabbier";
lin shabby_genteel_A = compoundA (mkA "shabby - genteel");
lin shack_N = mkN "shack" "shacks";
lin shack_V = mkV "shack" "shacks" "shacked" "shacked" "shacking";
lin shackle_N = mkN "shackle" "shackles";
lin shackle_V2 = mkV2 (mkV "shackle" "shackles" "shackled" "shackled" "shackling");
lin shad_N = mkN "shad" "shad";
lin shaddock_N = mkN "shaddock" "shaddocks";
lin shade_N = mkN "shade" "shades";
lin shade_V = mkV "shade" "shades" "shaded" "shaded" "shading";
lin shade_V2 = mkV2 (mkV "shade" "shades" "shaded" "shaded" "shading");
lin shade_tree_N = mkN "shade - tree" "shade - trees";
lin shading_N = mkN "shading" "shadings";
lin shadow_N = mkN "shadow" "shadows";
lin shadow_V2 = mkV2 (mkV "shadow" "shadows" "shadowed" "shadowed" "shadowing");
lin shadow_boxing_N = mkN "shadow - boxing" ;
lin shadowy_A = mkA "shadowy" "shadowier";
lin shady_A = mkA "shady" "shadier";
lin shaft_N = mkN "shaft" "shafts";
lin shag_N = mkN "shag" ;
lin shag_V = mkV "shag" "shags" "shagged" "shagged" "shagging";
lin shag_V2 = mkV2 (mkV "shag" "shags" "shagged" "shagged" "shagging");
lin shaggily_Adv = mkAdv "shaggily";
lin shagginess_N = mkN "shagginess" ;
lin shagging_N = mkN "shagging" ;
lin shaggy_A = mkA "shaggy" "shaggier";
lin shah_N = mkN "shah" "shahs";
lin shake_N = mkN "shake" "shakes";
lin shake_V = IrregEng.shake_V;
lin shake_V2 = mkV2 (IrregEng.shake_V);
lin shake_up_N = mkN "shake - up" "shake - ups";
lin shakedown_N = mkN "shakedown" "shakedowns";
lin shakeout_N = mkN "shakeout" "shakeouts";
lin shaker_N = mkN "shaker" "shakers";
lin shakespearian_A = compoundA (mkA "shakespearian");
lin shakily_Adv = mkAdv "shakily";
lin shakiness_N = mkN "shakiness" ;
lin shaking_N = mkN "shaking" "shakings";
lin shaky_A = mkA "shaky" "shakier";
lin shale_N = mkN "shale" ;
lin shale_oil_N = mkN "shale - oil" ;
lin shallot_N = mkN "shallot" "shallots";
lin shallow_A = mkA "shallow" "shallower";
lin shallow_N = mkN "shallow" "shallows";
lin shallow_V = mkV "shallow" "shallows" "shallowed" "shallowed" "shallowing";
lin sham_A = compoundA (mkA "sham");
lin sham_N = mkN "sham" "IRREG";
lin sham_V = mkV "sham" "shams" "shammed" "shammed" "shamming";
lin sham_V2 = mkV2 (mkV "sham" "shams" "shammed" "shammed" "shamming");
lin shamble_N = mkN "shamble" "shambles";
lin shamble_V = mkV "shamble" "shambles" "shambled" "shambled" "shambling";
lin shambles_N = mkN "shambles" "IRREG";
lin shame_N = mkN "shame" ;
lin shame_V2 = mkV2 (mkV "shame" "shames" "shamed" "shamed" "shaming");
lin shame_making_A = compoundA (mkA "shame - making");
lin shamefaced_A = compoundA (mkA "shamefaced");
lin shameful_A = compoundA (mkA "shameful");
lin shameless_A = compoundA (mkA "shameless");
lin shamelessness_N = mkN "shamelessness" ;
lin shammy_N = mkN "shammy" "shammies";
lin shampoo_N = mkN "shampoo" "shampoos";
lin shampoo_V2 = mkV2 (mkV "shampoo" "shampoos" "shampooed" "shampooed" "shampooing");
lin shamrock_N = mkN "shamrock" "shamrocks";
lin shandy_N = mkN "shandy" "shandies";
lin shanghai_PN = mkPN "Shanghai";
lin shanghai_V2 = mkV2 (mkV "shanghai" "shanghais" "shanghaied" "shanghaied" "shanghaiing");
lin shank_N = mkN "shank" "shanks";
lin shanklin_PN = mkPN "Shanklin";
lin shantung_N = mkN "shantung" ;
lin shanty_N = mkN "shanty" "shanties";
lin shantytown_N = mkN "shantytown" "shantytowns";
lin shape_N = mkN "shape" "shapes";
lin shape_V = mkV "shape" "shapes" "shaped" "shaped" "shaping";
lin shape_V2 = mkV2 (mkV "shape" "shapes" "shaped" "shaped" "shaping");
lin shape_VV = mkVV (mkV "shape" "shapes" "shaped" "shaped" "shaping");
lin shapeless_A = compoundA (mkA "shapeless");
lin shapelessness_N = mkN "shapelessness" ;
lin shapely_A = mkA "shapely" "shapelier";
lin shard_N = mkN "shard" "shards";
lin share_N = mkN "share" "shares";
lin share_V = mkV "share" "shares" "shared" "shared" "sharing";
lin share_V2 = mkV2 (mkV "share" "shares" "shared" "shared" "sharing");
lin share_out_N = mkN "share - out" "share - outs";
lin sharecropper_N = mkN "sharecropper" "sharecroppers";
lin shareholder_N = mkN "shareholder" "shareholders";
lin shareholding_N = mkN "shareholding" "shareholdings";
lin shark_N = mkN "shark" "sharks";
lin sharkskin_N = mkN "sharkskin" "sharkskins";
lin sharon_PN = mkPN "Sharon";
lin sharp_A = mkA "sharp" "sharper";
lin sharp_Adv = mkAdv "sharp";
lin sharp_N = mkN "sharp" "sharps";
lin sharp_eyed_A = compoundA (mkA "sharp - eyed");
lin sharp_set_A = compoundA (mkA "sharp - set");
lin sharp_sighted_A = compoundA (mkA "sharp - sighted");
lin sharp_witted_A = compoundA (mkA "sharp - witted");
lin sharpen_V = mkV "sharpen" "sharpens" "sharpened" "sharpened" "sharpening";
lin sharpen_V2 = mkV2 (mkV "sharpen" "sharpens" "sharpened" "sharpened" "sharpening");
lin sharpener_N = mkN "sharpener" "sharpeners";
lin sharper_N = mkN "sharper" "sharpers";
lin sharpness_N = mkN "sharpness" ;
lin sharpshooter_N = mkN "sharpshooter" "sharpshooters";
lin shatter_V = mkV "shatter" "shatters" "shattered" "shattered" "shattering";
lin shatter_V2 = mkV2 (mkV "shatter" "shatters" "shattered" "shattered" "shattering");
lin shatterproof_A = compoundA (mkA "shatterproof");
lin shave_N = mkN "shave" "shaves";
lin shave_V = mkV "shave" "shaves" "shaved" "shaved" "shaving";
lin shave_V2 = mkV2 (mkV "shave" "shaves" "shaved" "shaved" "shaving");
lin shaver_N = mkN "shaver" "shavers";
lin shavian_A = compoundA (mkA "shavian");
lin shavian_N = mkN "shavian" "shavians";
lin shaving_brush_N = mkN "shaving - brush" "shaving - brushes";
lin shawl_N = mkN "shawl" "shawls";
lin she_Pron = mkPron "she" "her" "her" "hers" singular P3 feminine ;
lin she_goat_N = mkN "she - goat" "she - goats";
lin sheaf_N = mkN "sheaf" "sheaves";
lin shear_V2 = mkV2 (mkV "shear" "shears" "sheared" "sheared" "shearing");
lin sheath_N = mkN "sheath" "sheaths";
lin sheath_knife_N = mkN "sheath - knife" "sheath - knives";
lin sheathe_V2 = mkV2 (mkV "sheathe" "sheathes" "sheathed" "sheathed" "sheathing");
lin sheathing_N = mkN "sheathing" "sheathings";
lin shebang_N = mkN "shebang" "IRREG";
lin shebeen_N = mkN "shebeen" "shebeens";
lin shed_N = mkN "shed" "sheds";
lin shed_V2 = mkV2 (IrregEng.shed_V);
lin sheen_N = mkN "sheen" ;
lin sheep_N = mkN "sheep" "sheep";
lin sheepdog_N = mkN "sheepdog" "sheepdogs";
lin sheepfold_N = mkN "sheepfold" "sheepfolds";
lin sheepish_A = compoundA (mkA "sheepish");
lin sheepishness_N = mkN "sheepishness" ;
lin sheeprun_N = mkN "sheeprun" "sheepruns";
lin sheepskin_N = mkN "sheepskin" "sheepskins";
lin sheer_A = mkA "sheer" "sheerer";
lin sheer_Adv = mkAdv "sheer";
lin sheer_V = mkV "sheer" "sheers" "sheered" "sheered" "sheering";
lin sheerness_PN = mkPN "Sheerness";
lin sheet_N = mkN "sheet" "sheets";
lin sheet_anchor_N = mkN "sheet - anchor" "sheet - anchors";
lin sheet_lightning_N = mkN "sheet - lightning" ;
lin sheeting_N = mkN "sheeting" ;
lin sheffield_PN = mkPN "Sheffield";
lin sheik_N = mkN "sheik" "sheiks";
lin sheikdom_N = mkN "sheikdom" "sheikdoms";
lin sheikh_N = mkN "sheikh" "sheikhs";
lin sheikhdom_N = mkN "sheikhdom" "sheikhdoms";
lin sheila_PN = mkPN "Sheila";
lin shekel_N = mkN "shekel" "shekels";
lin sheldrake_N = mkN "sheldrake" "sheldrakes";
lin shelf_N = mkN "shelf" "shelves" {- FIXME: guessed plural form -};
lin shelford_PN = mkPN "Shelford";
lin shell_N = mkN "shell" "shells";
lin shell_V = mkV "shell" "shells" "shelled" "shelled" "shelling";
lin shell_V2 = mkV2 (mkV "shell" "shells" "shelled" "shelled" "shelling");
lin shell_shock_N = mkN "shell - shock" ;
lin shellac_N = mkN "shellac" ;
lin shellac_V2 = mkV2 (mkV "shellac" "IRREG" "IRREG" "IRREG" "IRREG");
lin shellfire_N = mkN "shellfire" ;
lin shellfish_N = mkN "shellfish" "shellfish";
lin shellproof_A = compoundA (mkA "shellproof");
lin shelter_N = mkN "shelter" "shelters";
lin shelter_V = mkV "shelter" "shelters" "sheltered" "sheltered" "sheltering";
lin shelter_V2 = mkV2 (mkV "shelter" "shelters" "sheltered" "sheltered" "sheltering");
lin shelve_V = mkV "shelve" "shelves" "shelved" "shelved" "shelving";
lin shelve_V2 = mkV2 (mkV "shelve" "shelves" "shelved" "shelved" "shelving");
lin shepherd_N = mkN "shepherd" "shepherds";
lin shepherd_V2 = mkV2 (mkV "shepherd" "shepherds" "shepherded" "shepherded" "shepherding");
lin shepherdess_N = mkN "shepherdess" "shepherdesses";
lin shepshed_PN = mkPN "Shepshed";
lin shepton_mallet_PN = mkPN "Shepton mallet";
lin sheraton_N = mkN "sheraton" ;
lin sherbet_N = mkN "sherbet" "sherbets";
lin sherbourne_PN = mkPN "Sherbourne";
lin sheriff_N = mkN "sheriff" "sheriffs";
lin sheringham_PN = mkPN "Sheringham";
lin sherry_N = mkN "sherry" "sherries";
lin shetland_PN = mkPN "Shetland";
lin shevington_PN = mkPN "Shevington";
lin shew_V = mkV "shew" "shews" "shewed" "shewed" "shewing";
lin shew_V2 = mkV2 (mkV "shew" "shews" "shewed" "shewed" "shewing");
lin shibboleth_N = mkN "shibboleth" "shibboleths";
lin shield_N = mkN "shield" "shields";
lin shield_V2 = mkV2 (mkV "shield" "shields" "shielded" "shielded" "shielding");
lin shift_N = mkN "shift" "shifts";
lin shift_V = mkV "shift" "shifts" "shifted" "shifted" "shifting";
lin shift_V2 = mkV2 (mkV "shift" "shifts" "shifted" "shifted" "shifting");
lin shiftily_Adv = mkAdv "shiftily";
lin shiftiness_N = mkN "shiftiness" ;
lin shiftless_A = compoundA (mkA "shiftless");
lin shifty_A = mkA "shifty" "shiftier";
lin shihkiachwang_PN = mkPN "Shihkiachwang";
lin shildon_PN = mkPN "Shildon";
lin shillelagh_N = mkN "shillelagh" "shillelaghs";
lin shilling_N = mkN "shilling" "shillings";
lin shillyshally_N = mkN "shillyshally" ;
lin shillyshally_V = mkV "shillyshally" "shillyshallies" "shillyshallied" "shillyshallied" "shillyshallying";
lin shimmer_N = mkN "shimmer" ;
lin shimmer_V = mkV "shimmer" "shimmers" "shimmered" "shimmered" "shimmering";
lin shin_N = mkN "shin" "shins";
lin shin_V = mkV "shin" "shins" "shinned" "shinned" "shinning";
lin shinbone_N = mkN "shinbone" "shinbones";
lin shindig_N = mkN "shindig" "shindigs";
lin shindy_N = mkN "shindy" "shindies";
lin shine_N = mkN "shine" ;
lin shine_V = IrregEng.shine_V;
lin shine_V2 = mkV2 (IrregEng.shine_V);
lin shingle_N = mkN "shingle" "shingles";
lin shingle_V2 = mkV2 (mkV "shingle" "shingles" "shingled" "shingled" "shingling");
lin shingles_N = mkN "shingles" "shingles";
lin shingly_A = mkA "shingly" "shinglier";
lin shinguard_N = mkN "shinguard" "shinguards";
lin shiny_A = mkA "shiny" "shinier";
lin ship's_chandler_N = mkN "ship's - chandler" "ship's - chandlers";
lin ship_N = mkN "ship" "ships";
lin ship_V = mkV "ship" "ships" "shipped" "shipped" "shipping";
lin ship_V2 = mkV2 (mkV "ship" "ships" "shipped" "shipped" "shipping");
lin ship_breaker_N = mkN "ship - breaker" "ship - breakers";
lin ship_canal_N = mkN "ship - canal" "ship - canals";
lin shipboard_A = compoundA (mkA "shipboard");
lin shipbroker_N = mkN "shipbroker" "shipbrokers";
lin shipbuilder_N = mkN "shipbuilder" "shipbuilders";
lin shipbuilding_N = mkN "shipbuilding" ;
lin shipload_N = mkN "shipload" "shiploads";
lin shipmate_N = mkN "shipmate" "shipmates";
lin shipment_N = mkN "shipment" "shipments";
lin shipowner_N = mkN "shipowner" "shipowners";
lin shipper_N = mkN "shipper" "shippers";
lin shipping_N = mkN "shipping" ;
lin shipping_agent_N = mkN "shipping - agent" "shipping - agents";
lin shipping_office_N = mkN "shipping - office" "shipping - offices";
lin shipshape_A = compoundA (mkA "shipshape");
lin shipshape_Adv = mkAdv "shipshape";
lin shipway_N = mkN "shipway" "shipways";
lin shipwreck_N = mkN "shipwreck" "shipwrecks";
lin shipwreck_V = mkV "shipwreck" "shipwrecks" "shipwrecked" "shipwrecked" "shipwrecking";
lin shipwright_N = mkN "shipwright" "shipwrights";
lin shipyard_N = mkN "shipyard" "shipyards";
lin shire_N = mkN "shire" "shires";
lin shirebrook_PN = mkPN "Shirebrook";
lin shiremoor_PN = mkPN "Shiremoor";
lin shirk_V = mkV "shirk" "shirks" "shirked" "shirked" "shirking";
lin shirk_V2 = mkV2 (mkV "shirk" "shirks" "shirked" "shirked" "shirking");
lin shirker_N = mkN "shirker" "shirkers";
lin shirley_PN = mkPN "Shirley";
lin shirt_N = mkN "shirt" "shirts";
lin shirt_front_N = mkN "shirt - front" "shirt - fronts";
lin shirting_N = mkN "shirting" ;
lin shirtwaist_N = mkN "shirtwaist" "shirtwaists";
lin shirtwaister_N = mkN "shirtwaister" "shirtwaisters";
lin shirty_A = mkA "shirty" "shirtier";
lin shish_kebab_N = mkN "shish kebab" "shish kebabs";
lin shit_N = mkN "shit" ;
lin shit_V = mkV "shit" "shits" "shitted" "shitted" "shitting";
lin shiver_N = mkN "shiver" "shivers";
lin shiver_V = mkV "shiver" "shivers" "shivered" "shivered" "shivering";
lin shiver_V2 = mkV2 (mkV "shiver" "shivers" "shivered" "shivered" "shivering");
lin shivery_A = compoundA (mkA "shivery");
lin shoal_N = mkN "shoal" "shoals";
lin shoal_V = mkV "shoal" "shoals" "shoaled" "shoaled" "shoaling";
lin shock_Adv = mkAdv "shock";
lin shock_N = mkN "shock" "shocks";
lin shock_V2 = mkV2 (mkV "shock" "shocks" "shocked" "shocked" "shocking");
lin shock_brigade_N = mkN "shock - brigade" "shock - brigades";
lin shock_headed_A = compoundA (mkA "shock - headed");
lin shock_worker_N = mkN "shock - worker" "shock - workers";
lin shockable_A = compoundA (mkA "shockable");
lin shocker_N = mkN "shocker" "shockers";
lin shocking_A = compoundA (mkA "shocking");
lin shoddiness_N = mkN "shoddiness" ;
lin shoddy_A = mkA "shoddy" "shoddier";
lin shoddy_N = mkN "shoddy" ;
lin shoe_N = mkN "shoe" "shoes";
lin shoe_V2 = mkV2 (IrregEng.shoe_V);
lin shoe_leather_N = mkN "shoe - leather" "shoe - leathers";
lin shoeblack_N = mkN "shoeblack" ;
lin shoehorn_N = mkN "shoehorn" "shoehorns";
lin shoehorn_V2 = mkV2 (mkV "shoehorn");
lin shoelace_N = mkN "shoelace" "shoelaces";
lin shoemaker_N = mkN "shoemaker" "shoemakers";
lin shoemaking_N = mkN "shoemaking" ;
lin shoestring_N = mkN "shoestring" "shoestrings";
lin shoetree_N = mkN "shoetree" "shoetrees";
lin shogun_N = mkN "shogun" "shoguns";
lin shoo_V = mkV "shoo" "shoos" "shooed" "shooed" "shooing";
lin shoo_V2 = mkV2 (mkV "shoo" "shoos" "shooed" "shooed" "shooing");
lin shoot_N = mkN "shoot" "shoots";
lin shoot_V = IrregEng.shoot_V;
lin shoot_V2 = mkV2 (IrregEng.shoot_V);
lin shooter_N = mkN "shooter" "shooters";
lin shooting_N = mkN "shooting" ;
lin shooting_box_N = mkN "shooting - box" "shooting - boxes";
lin shooting_brake_N = mkN "shooting - brake" "shooting - brakes";
lin shooting_gallery_N = mkN "shooting - gallery" "shooting - galleries";
lin shooting_range_N = mkN "shooting - range" "shooting - ranges";
lin shooting_stick_N = mkN "shooting - stick" "shooting - sticks";
lin shop_N = mkN "shop" "shops";
lin shop_V = mkV "shop" "shops" "shopped" "shopped" "shopping";
lin shop_assistant_N = mkN "shop - assistant" "shop - assistants";
lin shop_bell_N = mkN "shop - bell" "shop - bells";
lin shop_boy_N = mkN "shop - boy" "shop - boys";
lin shop_front_N = mkN "shop - front" "shop - fronts";
lin shop_girl_N = mkN "shop - girl" "shop - girls";
lin shop_steward_N = mkN "shop - steward" "shop - stewards";
lin shopkeeper_N = mkN "shopkeeper" "shopkeepers";
lin shoplift_V = mkV "shoplift" "shoplifts" "shoplifted" "shoplifted" "shoplifting";
lin shoplift_V2 = mkV2 (mkV "shoplift" "shoplifts" "shoplifted" "shoplifted" "shoplifting");
lin shoplifter_N = mkN "shoplifter" "shoplifters";
lin shoplifting_N = mkN "shoplifting" ;
lin shopper_N = mkN "shopper" "shoppers";
lin shopping_N = mkN "shopping" ;
lin shopsoiled_A = compoundA (mkA "shopsoiled");
lin shopwalker_N = mkN "shopwalker" "shopwalkers";
lin shopwindow_N = mkN "shopwindow" "shopwindows";
lin shopworn_A = compoundA (mkA "shopworn");
lin shore_N = mkN "shore" "shores";
lin shore_V2 = mkV2 (mkV "shore" "shores" "shored" "shored" "shoring");
lin shorn_V2 = mkV2 (mkV "shorn");
lin short_A = mkA "short" "shorter";
lin short_Adv = mkAdv "short";
lin short_N = mkN "short" "shorts";
lin short_V = mkV "short" "shorts" "shorted" "shorted" "shorting";
lin short_V2 = mkV2 (mkV "short" "shorts" "shorted" "shorted" "shorting");
lin short_change_V2 = mkV2 (mkV "short - change" "short - changes" "short - changed" "short - changed" "short - changing");
lin short_circuit_N = mkN "short - circuit" "short - circuits";
lin short_circuit_V = mkV "short - circuit" "short - circuits" "short - circuited" "short - circuited" "short - circuiting";
lin short_circuit_V2 = mkV2 (mkV "short - circuit" "short - circuits" "short - circuited" "short - circuited" "short - circuiting");
lin short_dated_A = compoundA (mkA "short - dated");
lin short_handed_A = compoundA (mkA "short - handed");
lin short_lived_A = compoundA (mkA "short - lived");
lin short_range_A = compoundA (mkA "short - range");
lin short_sighted_A = compoundA (mkA "short - sighted");
lin short_tempered_A = compoundA (mkA "short - tempered");
lin short_term_A = compoundA (mkA "short - term");
lin short_winded_A = compoundA (mkA "short - winded");
lin shortage_N = mkN "shortage" "shortages";
lin shortbread_N = mkN "shortbread" ;
lin shortcake_N = mkN "shortcake" ;
lin shortcoming_N = mkN "shortcoming" "shortcomings";
lin shorten_V = mkV "shorten" "shortens" "shortened" "shortened" "shortening";
lin shorten_V2 = mkV2 (mkV "shorten" "shortens" "shortened" "shortened" "shortening");
lin shortening_N = mkN "shortening" ;
lin shortfall_N = mkN "shortfall" "shortfalls";
lin shorthand_N = mkN "shorthand" ;
lin shorthorn_N = mkN "shorthorn" "shorthorns";
lin shortish_A = compoundA (mkA "shortish");
lin shortlist_N = mkN "shortlist" "shortlists";
lin shortlist_V2 = mkV2 (mkV "shortlist" "shortlists" "shortlisted" "shortlisted" "shortlisting");
lin shortness_N = mkN "shortness" ;
lin shot_N = mkN "shot" "shots";
lin shot_put_N = mkN "shot - put" "shot - puts";
lin shot_tower_N = mkN "shot - tower" "shot - towers";
lin shotgun_N = mkN "shotgun" "shotguns";
lin shotton_PN = mkPN "Shotton";
lin shotts_PN = mkPN "Shotts";
lin should_VV = {
    s = table { 
      VVF VInf => ["be obliged to"] ;
      VVF VPres => "should" ;
      VVF VPPart => ["been obliged to"] ;
      VVF VPresPart => ["being obliged to"] ;
      VVF VPast => "shall" ;
      VVPastNeg => "shall not" ;
      VVPresNeg => "shouldn't"
      } ;
    typ = VVAux
    } ;
lin shoulder_N = mkN "shoulder" "shoulders";
lin shoulder_V2 = mkV2 (mkV "shoulder" "shoulders" "shouldered" "shouldered" "shouldering");
lin shoulder_blade_N = mkN "shoulder - blade" "shoulder - blades";
lin shoulder_flash_N = mkN "shoulder - flash" "shoulder - flashes";
lin shoulder_strap_N = mkN "shoulder - strap" "shoulder - straps";
lin shout_N = mkN "shout" "shouts";
lin shout_V = mkV "shout" "shouts" "shouted" "shouted" "shouting";
lin shout_V2 = mkV2 (mkV "shout" "shouts" "shouted" "shouted" "shouting");
lin shouting_N = mkN "shouting" ;
lin shove_N = mkN "shove" "shoves";
lin shove_V = mkV "shove" "shoves" "shoved" "shoved" "shoving";
lin shove_V2 = mkV2 (mkV "shove" "shoves" "shoved" "shoved" "shoving");
lin shove_ha'penny_N = mkN "shove - ha'penny" ;
lin shovel_N = mkN "shovel" "shovels";
lin shovel_V2 = mkV2 (mkV "shovel" "shovels" "shovelled" "shovelled" "shovelling");
lin shovel_board_N = mkN "shovel - board" ;
lin shovelful_N = mkN "shovelful" "shovelfuls";
lin show_N = mkN "show" "shows";
lin show_V = IrregEng.show_V;
lin show_V2 = mkV2 IrregEng.show_V;
lin show_V2V = mkV2V IrregEng.show_V noPrep to_Prep ;
lin show_VS = mkVS IrregEng.show_V;
lin show_business_N = mkN "show - business" ;
lin show_off_N = mkN "show - off" "show - offs";
lin show_window_N = mkN "show - window" "show - windows";
lin showbiz_N = mkN "showbiz" ;
lin showboat_N = mkN "showboat" "showboats";
lin showcase_N = mkN "showcase" "showcases";
lin showdown_N = mkN "showdown" "showdowns";
lin shower_N = mkN "shower" "showers";
lin shower_V = mkV "shower" "showers" "showered" "showered" "showering";
lin shower_V2 = mkV2 (mkV "shower" "showers" "showered" "showered" "showering");
lin shower_bath_N = mkN "shower - bath" "shower - baths";
lin showery_A = mkA "showery" "showerier";
lin showgirl_N = mkN "showgirl" "showgirls";
lin showily_Adv = mkAdv "showily";
lin showiness_N = mkN "showiness" ;
lin showing_N = mkN "showing" "showings";
lin showjumping_N = mkN "showjumping" ;
lin showman_N = mkN "showman" "showmen" {- FIXME: guessed plural form -};
lin showmanship_N = mkN "showmanship" ;
lin showplace_N = mkN "showplace" "showplaces";
lin showroom_N = mkN "showroom" "showrooms";
lin showy_A = mkA "showy" "showier";
lin shrapnel_N = mkN "shrapnel" ;
lin shred_N = mkN "shred" "shreds";
lin shred_V2 = mkV2 (mkV "shred" "shreds" "shredded" "shredded" "shredding");
lin shrew_N = mkN "shrew" "shrews";
lin shrew_mouse_N = mkN "shrew - mouse" "shrew - mice";
lin shrewd_A = mkA "shrewd" "shrewder";
lin shrewdness_N = mkN "shrewdness" ;
lin shrewish_A = compoundA (mkA "shrewish");
lin shrewishness_N = mkN "shrewishness" ;
lin shrewsbury_PN = mkPN "Shrewsbury";
lin shriek_N = mkN "shriek" "shrieks";
lin shriek_V = mkV "shriek" "shrieks" "shrieked" "shrieked" "shrieking";
lin shriek_V2 = mkV2 (mkV "shriek" "shrieks" "shrieked" "shrieked" "shrieking");
lin shrift_N = mkN "shrift" ;
lin shrike_N = mkN "shrike" "shrikes";
lin shrill_A = mkA "shrill" "shriller";
lin shrill_V = mkV "shrill" "shrills" "shrilled" "shrilled" "shrilling";
lin shrill_V2 = mkV2 (mkV "shrill" "shrills" "shrilled" "shrilled" "shrilling");
lin shrillness_N = mkN "shrillness" ;
lin shrilly_Adv = mkAdv "shrilly";
lin shrimp_N = mkN "shrimp" "shrimps";
lin shrimp_V = mkV "shrimp" "shrimps" "shrimped" "shrimped" "shrimping";
lin shrine_N = mkN "shrine" "shrines";
lin shrine_V2 = mkV2 (mkV "shrine" "shrines" "shrined" "shrined" "shrining");
lin shrink_N = mkN "shrink" "shrinks";
lin shrink_V = IrregEng.shrink_V;
lin shrink_V2 = mkV2 (IrregEng.shrink_V);
lin shrinkable_A = compoundA (mkA "shrinkable");
lin shrinkage_N = mkN "shrinkage" ;
lin shrive_V2 = mkV2 (mkV "shrive" "shrives" "shrived" "shrived" "shriving");
lin shrivel_V = mkV "shrivel" "shrivels" "shrivelled" "shrivelled" "shrivelling";
lin shrivel_V2 = mkV2 (mkV "shrivel" "shrivels" "shrivelled" "shrivelled" "shrivelling");
lin shropshire_PN = mkPN "Shropshire";
lin shroud_N = mkN "shroud" "shrouds";
lin shroud_V2 = mkV2 (mkV "shroud" "shrouds" "shrouded" "shrouded" "shrouding");
lin shrove_tuesday_N = mkN "shrove tuesday" "shrove tuesdays";
lin shrove_tuesday_PN = mkPN "Shrove tuesday";
lin shrub_N = mkN "shrub" "shrubs";
lin shrubbery_N = mkN "shrubbery" "shrubberies";
lin shrug_N = mkN "shrug" "shrugs";
lin shrug_V2 = mkV2 (mkV "shrug" "shrugs" "shrugged" "shrugged" "shrugging");
lin shrug_VS = mkVS (mkV "shrug");
lin shuck_N = mkN "shuck" "shucks";
lin shuck_V2 = mkV2 (mkV "shuck" "shucks" "shucked" "shucked" "shucking");
lin shudder_N = mkN "shudder" "shudders";
lin shudder_V = mkV "shudder" "shudders" "shuddered" "shuddered" "shuddering";
lin shudderingly_Adv = mkAdv "shudderingly";
lin shuffle_N = mkN "shuffle" "shuffles";
lin shuffle_V = mkV "shuffle" "shuffles" "shuffled" "shuffled" "shuffling";
lin shuffle_V2 = mkV2 (mkV "shuffle" "shuffles" "shuffled" "shuffled" "shuffling");
lin shuffler_N = mkN "shuffler" "shufflers";
lin shun_V2 = mkV2 (mkV "shun" "shuns" "shunned" "shunned" "shunning");
lin shunt_V = mkV "shunt" "shunts" "shunted" "shunted" "shunting";
lin shunt_V2 = mkV2 (mkV "shunt" "shunts" "shunted" "shunted" "shunting");
lin shunter_N = mkN "shunter" "shunters";
lin shush_V = mkV "shush" "shushes" "shushed" "shushed" "shushing";
lin shush_V2 = mkV2 (mkV "shush" "shushes" "shushed" "shushed" "shushing");
lin shut_V = IrregEng.shut_V;
lin shut_V2 = mkV2 (IrregEng.shut_V);
lin shutdown_N = mkN "shutdown" "shutdowns";
lin shuteye_N = mkN "shuteye" ;
lin shutter_N = mkN "shutter" "shutters";
lin shutter_V2 = mkV2 (mkV "shutter" "shutters" "shuttered" "shuttered" "shuttering");
lin shuttle_N = mkN "shuttle" "shuttles";
lin shuttle_V = mkV "shuttle" "shuttles" "shuttled" "shuttled" "shuttling";
lin shuttle_V2 = mkV2 (mkV "shuttle" "shuttles" "shuttled" "shuttled" "shuttling");
lin shuttlecock_N = mkN "shuttlecock" "shuttlecocks";
lin shy_A = mkA "shy" "shyer";
lin shy_N = mkN "shy" "shies";
lin shy_V = mkV "shy" "shies" "shied" "shied" "shying";
lin shy_V2 = mkV2 (mkV "shy" "shies" "shied" "shied" "shying");
lin shyness_N = mkN "shyness" ;
lin shyster_N = mkN "shyster" "shysters";
lin siam_PN = mkPN "Siam";
lin siamese_A = compoundA (mkA "siamese");
lin siamese_N = mkN "siamese" "siamese";
lin sian_PN = mkPN "Sian";
lin siberian_A = compoundA (mkA "siberian");
lin sibilant_A = compoundA (mkA "sibilant");
lin sibilant_N = mkN "sibilant" "sibilants";
lin sibling_N = mkN "sibling" "siblings";
lin sibyl_N = mkN "sibyl" "sibyls";
lin sibylline_A = compoundA (mkA "sibylline");
lin sic_Adv = mkAdv "sic";
lin sicilian_A = compoundA (mkA "sicilian");
lin sicilian_N = mkN "sicilian" "sicilians";
lin sick_A = compoundA (mkA "sick");
lin sick_V2 = mkV2 (mkV "sick" "sicks" "sicked" "sicked" "sicking");
lin sick_benefit_N = mkN "sick - benefit" "sick - benefits";
lin sick_berth_N = mkN "sick - berth" "sick - berths";
lin sick_headache_N = mkN "sick - headache" "sick - headaches";
lin sick_leave_N = mkN "sick - leave" ;
lin sick_list_N = mkN "sick - list" "sick - lists";
lin sick_parade_N = mkN "sick - parade" "sick - parades";
lin sick_pay_N = mkN "sick - pay" ;
lin sick_room_N = mkN "sick - room" "sick - rooms";
lin sickbay_N = mkN "sickbay" "sickbays";
lin sickbed_N = mkN "sickbed" "sickbeds";
lin sicken_V = mkV "sicken" "sickens" "sickened" "sickened" "sickening";
lin sicken_V2 = mkV2 (mkV "sicken" "sickens" "sickened" "sickened" "sickening");
lin sickening_A = compoundA (mkA "sickening");
lin sickish_A = compoundA (mkA "sickish");
lin sickle_N = mkN "sickle" "sickles";
lin sickly_A = mkA "sickly" "sicklier";
lin sickness_N = mkN "sickness" "sicknesses";
lin sid_PN = mkPN "Sid";
lin side_N = mkN "side" "sides";
lin side_V = mkV "side" "sides" "sided" "sided" "siding";
lin side_chapel_N = mkN "side - chapel" "side - chapels";
lin side_dish_N = mkN "side - dish" "side - dishes";
lin side_drum_N = mkN "side - drum" "side - drums";
lin side_face_Adv = mkAdv "side - face";
lin side_glance_N = mkN "side - glance" "side - glances";
lin side_road_N = mkN "side - road" "side - roads";
lin side_saddle_Adv = mkAdv "side - saddle";
lin side_saddle_N = mkN "side - saddle" "side - saddles";
lin side_slip_N = mkN "side - slip" "side - slips";
lin side_slip_V = mkV "side - slip" "side - slips" "side - slipped" "side - slipped" "side - slipping";
lin side_splitting_A = compoundA (mkA "side - splitting");
lin side_stroke_N = mkN "side - stroke" ;
lin side_view_N = mkN "side - view" "side - views";
lin sideboard_N = mkN "sideboard" "sideboards";
lin sidecar_N = mkN "sidecar" "sidecars";
lin sided_A = compoundA (mkA "sided");
lin sidelight_N = mkN "sidelight" "sidelights";
lin sideline_N = mkN "sideline" "sidelines";
lin sideline_V = mkV "sideline";
lin sideline_V2 = mkV2 (mkV "sideline");
lin sidelong_A = compoundA (mkA "sidelong");
lin sidelong_Adv = mkAdv "sidelong";
lin sidereal_A = compoundA (mkA "sidereal");
lin sideshow_N = mkN "sideshow" "sideshows";
lin sidesman_N = mkN "sidesman" "sidesmen" {- FIXME: guessed plural form -};
lin sidestep_N = mkN "sidestep" "sidesteps";
lin sidestep_V = mkV "sidestep" "sidesteps" "sidestepped" "sidestepped" "sidestepping";
lin sidestep_V2 = mkV2 (mkV "sidestep" "sidesteps" "sidestepped" "sidestepped" "sidestepping");
lin sidetrack_N = mkN "sidetrack" "sidetracks";
lin sidetrack_V2 = mkV2 (mkV "sidetrack" "sidetracks" "sidetracked" "sidetracked" "sidetracking");
lin sidewalk_N = mkN "sidewalk" "sidewalks";
lin sidewards_Adv = mkAdv "sidewards";
lin sideways_Adv = mkAdv "sideways";
lin siding_N = mkN "siding" "sidings";
lin sidle_V = mkV "sidle" "sidles" "sidled" "sidled" "sidling";
lin sidmouth_PN = mkPN "Sidmouth";
lin sidney_PN = mkPN "Sidney";
lin siege_N = mkN "siege" "sieges";
lin sienna_N = mkN "sienna" ;
lin sierra_N = mkN "sierra" "sierras";
lin sierra_leone_PN = mkPN "Sierra leone";
lin sierra_leonian_A = compoundA (mkA "sierra leonian");
lin sierra_leonian_N = mkN "sierra leonian" "sierra leonians";
lin siesta_N = mkN "siesta" "siestas";
lin sieve_N = mkN "sieve" "sieves";
lin sieve_V2 = mkV2 (mkV "sieve" "sieves" "sieved" "sieved" "sieving");
lin sift_V = mkV "sift" "sifts" "sifted" "sifted" "sifting";
lin sift_V2 = mkV2 (mkV "sift" "sifts" "sifted" "sifted" "sifting");
lin sifter_N = mkN "sifter" "sifters";
lin sigh_N = mkN "sigh" "sighs";
lin sigh_V = mkV "sigh" "sighs" "sighed" "sighed" "sighing";
lin sigh_V2 = mkV2 (mkV "sigh" "sighs" "sighed" "sighed" "sighing");
lin sigh_VS = mkVS (mkV "sigh" "sighs" "sighed" "sighed" "sighing");
lin sight_N = mkN "sight" "sights";
lin sight_V2 = mkV2 (mkV "sight" "sights" "sighted" "sighted" "sighting");
lin sighted_A = compoundA (mkA "sighted");
lin sighting_N = mkN "sighting" "sightings";
lin sightless_A = compoundA (mkA "sightless");
lin sightseeing_N = mkN "sightseeing" ;
lin sightseer_N = mkN "sightseer" "sightseers";
lin sign_N = mkN "sign" "signs";
lin sign_V = mkV "sign" "signs" "signed" "signed" "signing";
lin sign_V2 = mkV2 (mkV "sign" "signs" "signed" "signed" "signing");
lin sign_V2V = mkV2V (mkV "sign" "signs" "signed" "signed" "signing") noPrep to_Prep ;
lin sign_painter_N = mkN "sign - painter" "sign - painters";
lin sign_up_V = mkV "sign up" "signs up" "signed up" "signed up" "signing up";
lin signal_A = compoundA (mkA "signal");
lin signal_N = mkN "signal" "signals";
lin signal_V = mkV "signal" "signals" "signalled" "signalled" "signalling";
lin signal_V2 = mkV2 (mkV "signal" "signals" "signalled" "signalled" "signalling");
lin signal_VS = mkVS (mkV "signal" "signals" "signalled" "signalled" "signalling");
lin signal_box_N = mkN "signal - box" "signal - boxes";
lin signale_V2 = mkV2 (mkV "signale");
lin signale_VS = mkVS (mkV "signale");
lin signalize_V2 = mkV2 (mkV "signalize" "signalizes" "signalized" "signalized" "signalizing");
lin signaller_N = mkN "signaller" "signallers";
lin signalman_N = mkN "signalman" "signalmen" {- FIXME: guessed plural form -};
lin signatory_N = mkN "signatory" "signatories";
lin signature_N = mkN "signature" "signatures";
lin signet_N = mkN "signet" "signets";
lin signet_ring_N = mkN "signet - ring" "signet - rings";
lin significance_N = mkN "significance" ;
lin significant_A = compoundA (mkA "significant");
lin signification_N = mkN "signification" "significations";
lin significative_A = compoundA (mkA "significative");
lin signify_V = mkV "signify" "signifies" "signified" "signified" "signifying";
lin signify_V2 = mkV2 (mkV "signify" "signifies" "signified" "signified" "signifying");
lin signor_N = mkN "signor" "signors";
lin signora_N = mkN "signora" "signoras";
lin signorina_N = mkN "signorina" "signorinas";
lin signpost_N = mkN "signpost" "signposts";
lin signpost_V2 = mkV2 (mkV "signpost" "signposts" "signposted" "signposted" "signposting");
lin sikh_N = mkN "sikh" "sikhs";
lin silage_N = mkN "silage" ;
lin sileby_PN = mkPN "Sileby";
lin silence_N = mkN "silence" "silences";
lin silence_V2 = mkV2 (mkV "silence" "silences" "silenced" "silenced" "silencing");
lin silencer_N = mkN "silencer" "silencers";
lin silent_A = compoundA (mkA "silent");
lin silhouette_N = mkN "silhouette" "silhouettes";
lin silhouette_V2 = mkV2 (mkV "silhouette" "silhouettes" "silhouetted" "silhouetted" "silhouetting");
lin silica_N = mkN "silica" ;
lin silicate_N = mkN "silicate" ;
lin silicon_N = mkN "silicon" ;
lin silicone_N = mkN "silicone" ;
lin silicosis_N = mkN "silicosis" ;
lin silk_N = mkN "silk" "silks";
lin silken_A = compoundA (mkA "silken");
lin silkily_Adv = mkAdv "silkily";
lin silkiness_N = mkN "silkiness" ;
lin silkworm_N = mkN "silkworm" "silkworms";
lin silky_A = mkA "silky" "silkier";
lin sill_N = mkN "sill" "sills";
lin sillabub_N = mkN "sillabub" "sillabubs";
lin silliness_N = mkN "silliness" ;
lin silly_A = mkA "silly" "sillier";
lin silly_N = mkN "silly" "sillies";
lin silo_N = mkN "silo" "silos";
lin silsden_PN = mkPN "Silsden";
lin silt_N = mkN "silt" ;
lin silt_V = mkV "silt" "silts" "silted" "silted" "silting";
lin silt_V2 = mkV2 (mkV "silt" "silts" "silted" "silted" "silting");
lin silvan_A = compoundA (mkA "silvan");
lin silver_N = mkN "silver" ;
lin silver_V = mkV "silver" "silvers" "silvered" "silvered" "silvering";
lin silver_V2 = mkV2 (mkV "silver" "silvers" "silvered" "silvered" "silvering");
lin silver_fish_N = mkN "silver - fish" "silver - fish";
lin silvern_A = compoundA (mkA "silvern");
lin silverside_N = mkN "silverside" ;
lin silversmith_N = mkN "silversmith" "silversmiths";
lin silvery_A = mkA "silvery" "silverier";
lin silvia_PN = mkPN "Silvia";
lin simian_A = compoundA (mkA "simian");
lin simian_N = mkN "simian" "simians";
lin similar_A = compoundA (mkA "similar");
lin similarity_N = mkN "similarity" "similarities";
lin simile_N = mkN "simile" "similes";
lin similitude_N = mkN "similitude" "similitudes";
lin simmer_N = mkN "simmer" "IRREG";
lin simmer_V = mkV "simmer" "simmers" "simmered" "simmered" "simmering";
lin simmer_V2 = mkV2 (mkV "simmer" "simmers" "simmered" "simmered" "simmering");
lin simon_PN = mkPN "Simon";
lin simony_N = mkN "simony" ;
lin simoom_N = mkN "simoom" "simooms";
lin simoon_N = mkN "simoon" "simoons";
lin simper_V = mkV "simper" "simpers" "simpered" "simpered" "simpering";
lin simperingly_Adv = mkAdv "simperingly";
lin simple_A = irregAdv (mkA "simple" "simpler") "simply";
lin simple_N = mkN "simple" "simples";
lin simple_hearted_A = compoundA (mkA "simple - hearted");
lin simple_minded_A = compoundA (mkA "simple - minded");
lin simpleton_N = mkN "simpleton" "simpletons";
lin simplicity_N = mkN "simplicity" ;
lin simplification_N = mkN "simplification" "simplifications";
lin simplify_V = mkV "simplify";
lin simplify_V2 = mkV2 (mkV "simplify" "simplifies" "simplified" "simplified" "simplifying");
lin simulacrum_N = mkN "simulacrum" "simulacra" {- FIXME: guessed plural form -};
lin simulate_V2 = mkV2 (mkV "simulate" "simulates" "simulated" "simulated" "simulating");
lin simulation_N = mkN "simulation" ;
lin simulator_N = mkN "simulator" "simulators";
lin simultaneity_N = mkN "simultaneity" ;
lin simultaneous_A = compoundA (mkA "simultaneous");
lin simultaneousness_N = mkN "simultaneousness" ;
lin sin_N = mkN "sin" "sins";
lin sin_V = mkV "sin" "sins" "sinned" "sinned" "sinning";
lin since_Adv = mkAdv "since";
lin since_Subj = mkSubj "since";
lin since_Prep = mkPrep "since";
lin sincere_A = compoundA (mkA "sincere");
lin sincerity_N = mkN "sincerity" ;
lin sine_N = mkN "sine" "sines";
lin sine_die_Adv = mkAdv "sine die";
lin sine_qua_non_N = mkN "sine qua non" "sine qua na" {- FIXME: guessed plural form -};
lin sinecure_N = mkN "sinecure" "sinecures";
lin sinew_N = mkN "sinew" "sinews";
lin sinewy_A = compoundA (mkA "sinewy");
lin sinful_A = compoundA (mkA "sinful");
lin sinfulness_N = mkN "sinfulness" ;
lin sing_V = IrregEng.sing_V;
lin sing_V2 = mkV2 (IrregEng.sing_V);
lin singable_A = compoundA (mkA "singable");
lin singapore_PN = mkPN "Singapore";
lin singaporean_A = compoundA (mkA "singaporean");
lin singaporean_N = mkN "singaporean" "singaporeans";
lin singe_N = mkN "singe" "singes";
lin singe_V = mkV "singe" "IRREG" "IRREG" "IRREG" "IRREG";
lin singe_V2 = mkV2 (mkV "singe" "IRREG" "IRREG" "IRREG" "IRREG");
lin singer_N = mkN "singer" "singers";
lin singhalese_A = compoundA (mkA "singhalese");
lin singing_N = mkN "singing" ;
lin single_A = compoundA (mkA "single");
lin single_N = mkN "single" "singles";
lin single_V2 = mkV2 (mkV "single" "singles" "singled" "singled" "singling");
lin single_breasted_A = compoundA (mkA "single - breasted");
lin single_handed_A = compoundA (mkA "single - handed");
lin single_handed_Adv = mkAdv "single - handed";
lin single_minded_A = compoundA (mkA "single - minded");
lin single_spacing_N = mkN "single - spacing" ;
lin singleness_N = mkN "singleness" ;
lin singlestick_N = mkN "singlestick" "singlesticks";
lin singlet_N = mkN "singlet" "singlets";
lin singleton_N = mkN "singleton" "singletons";
lin singly_Adv = mkAdv "singly";
lin singsong_N = mkN "singsong" "singsongs";
lin singular_A = compoundA (mkA "singular");
lin singular_N = mkN "singular" "singulars";
lin singularity_N = mkN "singularity" "singularities";
lin singularize_V2 = mkV2 (mkV "singularize" "singularizes" "singularized" "singularized" "singularizing");
lin sinhala_N = mkN "sinhala" ;
lin sinhalese_A = compoundA (mkA "sinhalese");
lin sinhalese_N = mkN "sinhalese" "sinhalese";
lin sining_PN = mkPN "Sining";
lin sinister_A = compoundA (mkA "sinister");
lin sink_N = mkN "sink" "sinks";
lin sink_V = IrregEng.sink_V;
lin sink_V2 = mkV2 (IrregEng.sink_V);
lin sinkable_A = compoundA (mkA "sinkable");
lin sinker_N = mkN "sinker" "sinkers";
lin sinking_N = mkN "sinking" "sinkings";
lin sinking_fund_N = mkN "sinking - fund" "sinking - funds";
lin sinless_A = compoundA (mkA "sinless");
lin sinlessness_N = mkN "sinlessness" ;
lin sinn_fein_PN = mkPN "Sinn fein";
lin sinner_N = mkN "sinner" "sinners";
lin sinologist_N = mkN "sinologist" "sinologists";
lin sinology_N = mkN "sinology" ;
lin sinuosity_N = mkN "sinuosity" "sinuosities";
lin sinuous_A = compoundA (mkA "sinuous");
lin sinus_N = mkN "sinus" "sinuses";
lin sinusitis_N = mkN "sinusitis" ;
lin sioux_N = mkN "sioux" "sioux";
lin sip_N = mkN "sip" "sips";
lin sip_V = mkV "sip" "sips" "sipped" "sipped" "sipping";
lin sip_V2 = mkV2 (mkV "sip" "sips" "sipped" "sipped" "sipping");
lin siphon_N = mkN "siphon" "siphons";
lin siphon_V = mkV "siphon" "siphons" "siphoned" "siphoned" "siphoning";
lin siphon_V2 = mkV2 (mkV "siphon" "siphons" "siphoned" "siphoned" "siphoning");
lin sir_N = mkN "sir" "sirs";
lin sir_roger_de_coverley_N = mkN "sir roger de coverley" "IRREG";
lin siracusa_PN = mkPN "Siracusa";
lin sirdar_N = mkN "sirdar" "sirdars";
lin sire_N = mkN "sire" "sires";
lin sire_V2 = mkV2 (mkV "sire" "sires" "sired" "sired" "siring");
lin siren_N = mkN "siren" "sirens";
lin sirloin_N = mkN "sirloin" "sirloins";
lin sirocco_N = mkN "sirocco" "siroccos";
lin sirrah_N = mkN "sirrah" "sirrahs";
lin sirup_N = mkN "sirup" "sirups";
lin sisal_N = mkN "sisal" ;
lin sissified_A = compoundA (mkA "sissified");
lin sissy_N = mkN "sissy" "sissies";
lin sister_N = mkN "sister" "sisters";
lin sister_in_law_N = mkN "sister - in - law" "sisters - in - law";
lin sisterhood_N = mkN "sisterhood" ;
lin sisterly_A = compoundA (mkA "sisterly");
lin siswati_N = mkN "siswati" ;
lin sit_V = IrregEng.sit_V;
lin sit_V2 = mkV2 (IrregEng.sit_V);
lin sit_VA = mkVA (IrregEng.sit_V);
lin sit_in_N = mkN "sit - in" "sit - ins";
lin sitar_N = mkN "sitar" "sitars";
lin site_N = mkN "site" "sites";
lin site_V = mkV "site" "sites" "sited" "sited" "siting";
lin sitter_N = mkN "sitter" "sitters";
lin sitting_N = mkN "sitting" "sittings";
lin sitting_room_N = mkN "sitting - room" "sitting - rooms";
lin sittingbourne_PN = mkPN "Sittingbourne";
lin situate_V2 = mkV2 (mkV "situate");
lin situated_A = compoundA (mkA "situated");
lin situation_N = mkN "situation" "situations";
lin six_footer_N = mkN "six - footer" "six - footers";
lin six_shooter_N = mkN "six - shooter" "six - shooters";
lin sixfold_A = compoundA (mkA "sixfold");
lin sixfold_Adv = mkAdv "sixfold";
lin sixpence_N = mkN "sixpence" "sixpences";
lin sixpenny_A = compoundA (mkA "sixpenny");
lin sixth_former_N = mkN "sixth - former" "sixth - formers";
lin sizable_A = compoundA (mkA "sizable");
lin size_N = mkN "size" "sizes";
lin size_V2 = mkV2 (mkV "size" "sizes" "sized" "sized" "sizing");
lin sizeable_A = compoundA (mkA "sizeable");
lin sized_A = compoundA (mkA "sized");
lin sizzle_V = mkV "sizzle" "sizzles" "sizzled" "sizzled" "sizzling";
lin skate_N = mkN "skate" "skates";
lin skate_V = mkV "skate" "skates" "skated" "skated" "skating";
lin skateboard_N = mkN "skateboard" "skateboards";
lin skateboarder_N = mkN "skateboarder" "skateboarders";
lin skateboarding_N = mkN "skateboarding" ;
lin skater_N = mkN "skater" "skaters";
lin skating_N = mkN "skating" ;
lin skating_rink_N = mkN "skating - rink" "skating - rinks";
lin skedaddle_V = mkV "skedaddle" "skedaddles" "skedaddled" "skedaddled" "skedaddling";
lin skeet_N = mkN "skeet" "skeets";
lin skegness_PN = mkPN "Skegness";
lin skein_N = mkN "skein" "skeins";
lin skeleton_N = mkN "skeleton" "skeletons";
lin skelmanthorpe_PN = mkPN "Skelmanthorpe";
lin skelmersdale_PN = mkPN "Skelmersdale";
lin skep_N = mkN "skep" "skeps";
lin skeptical_A = compoundA (mkA "skeptical");
lin skepticism_N = mkN "skepticism" ;
lin sketch_N = mkN "sketch" "sketches";
lin sketch_V = mkV "sketch" "sketches" "sketched" "sketched" "sketching";
lin sketch_V2 = mkV2 (mkV "sketch" "sketches" "sketched" "sketched" "sketching");
lin sketch_block_N = mkN "sketch - block" "sketch - blocks";
lin sketch_book_N = mkN "sketch - book" "sketch - books";
lin sketch_map_N = mkN "sketch - map" "sketch - maps";
lin sketcher_N = mkN "sketcher" "sketchers";
lin sketchily_Adv = mkAdv "sketchily";
lin sketchiness_N = mkN "sketchiness" ;
lin sketchy_A = mkA "sketchy" "sketchier";
lin skew_A = compoundA (mkA "skew");
lin skew_V2 = mkV2 (mkV "skew");
lin skew_eyed_A = compoundA (mkA "skew - eyed");
lin skewen_PN = mkPN "Skewen";
lin skewer_N = mkN "skewer" "skewers";
lin skewer_V2 = mkV2 (mkV "skewer" "skewers" "skewered" "skewered" "skewering");
lin ski_N = mkN "ski" "skis";
lin ski_V = mkV "ski" "IRREG" "IRREG" "IRREG" "IRREG";
lin ski_bob_N = mkN "ski - bob" "ski - bobs";
lin ski_jump_N = mkN "ski - jump" "ski - jumps";
lin ski_lift_N = mkN "ski - lift" "ski - lifts";
lin ski_plane_N = mkN "ski - plane" "ski - planes";
lin skid_N = mkN "skid" "skids";
lin skid_V = mkV "skid" "skids" "skidded" "skidded" "skidding";
lin skid_V2 = mkV2 (mkV "skid" "skids" "skidded" "skidded" "skidding");
lin skidpan_N = mkN "skidpan" "skidpans";
lin skier_N = mkN "skier" "skiers";
lin skiff_N = mkN "skiff" "skiffs";
lin skiffle_N = mkN "skiffle" ;
lin skiffle_group_N = mkN "skiffle - group" "skiffle - groups";
lin skilful_A = compoundA (mkA "skilful");
lin skill_N = mkN "skill" "skills";
lin skilled_A = compoundA (mkA "skilled");
lin skillet_N = mkN "skillet" "skillets";
lin skilly_N = mkN "skilly" ;
lin skim_V = mkV "skim" "skims" "skimmed" "skimmed" "skimming";
lin skim_V2 = mkV2 (mkV "skim" "skims" "skimmed" "skimmed" "skimming");
lin skimmed_milk_N = mkN "skimmed - milk" ;
lin skimmer_N = mkN "skimmer" "skimmers";
lin skimp_V = mkV "skimp" "skimps" "skimped" "skimped" "skimping";
lin skimp_V2 = mkV2 (mkV "skimp" "skimps" "skimped" "skimped" "skimping");
lin skimpily_Adv = mkAdv "skimpily";
lin skimpy_A = mkA "skimpy" "skimpier";
lin skin_N = mkN "skin" "skins";
lin skin_V = mkV "skin" "skins" "skinned" "skinned" "skinning";
lin skin_V2 = mkV2 (mkV "skin" "skins" "skinned" "skinned" "skinning");
lin skin_deep_A = compoundA (mkA "skin - deep");
lin skin_diving_N = mkN "skin - diving" ;
lin skin_graft_N = mkN "skin - graft" "skin - grafts";
lin skin_tight_A = compoundA (mkA "skin - tight");
lin skinflint_N = mkN "skinflint" "skinflints";
lin skinhead_N = mkN "skinhead" "skinheads";
lin skinny_A = mkA "skinny" "skinnier";
lin skint_A = compoundA (mkA "skint");
lin skip_N = mkN "skip" "skips";
lin skip_V = mkV "skip" "skips" "skipped" "skipped" "skipping";
lin skip_V2 = mkV2 (mkV "skip" "skips" "skipped" "skipped" "skipping");
lin skipper_N = mkN "skipper" "skippers";
lin skipper_V2 = mkV2 (mkV "skipper" "skippers" "skippered" "skippered" "skippering");
lin skipping_rope_N = mkN "skipping - rope" "skipping - ropes";
lin skipton_PN = mkPN "Skipton";
lin skirl_N = mkN "skirl" "skirls";
lin skirmish_N = mkN "skirmish" "skirmishes";
lin skirmish_V = mkV "skirmish" "skirmishes" "skirmished" "skirmished" "skirmishing";
lin skirmisher_N = mkN "skirmisher" "skirmishers";
lin skirt_N = mkN "skirt" "skirts";
lin skirt_V = mkV "skirt" "skirts" "skirted" "skirted" "skirting";
lin skirt_V2 = mkV2 (mkV "skirt" "skirts" "skirted" "skirted" "skirting");
lin skirting_board_N = mkN "skirting - board" "skirting - boards";
lin skit_N = mkN "skit" "skits";
lin skitter_V = mkV "skitter" "skitters" "skittered" "skittered" "skittering";
lin skittish_A = compoundA (mkA "skittish");
lin skittishness_N = mkN "skittishness" ;
lin skittle_N = mkN "skittle" "skittles";
lin skittle_V2 = mkV2 (mkV "skittle" "skittles" "skittled" "skittled" "skittling");
lin skittle_pin_N = mkN "skittle - pin" "skittle - pins";
lin skittles_N = mkN "skittles" "skittles";
lin skivvy_N = mkN "skivvy" "skivvies";
lin skopje_PN = mkPN "Skopje";
lin skua_N = mkN "skua" "skuas";
lin skulk_V = mkV "skulk" "skulks" "skulked" "skulked" "skulking";
lin skulker_N = mkN "skulker" "skulkers";
lin skull_N = mkN "skull" "skulls";
lin skullcap_N = mkN "skullcap" "skullcaps";
lin skullduggery_N = mkN "skullduggery" "IRREG";
lin skulled_A = compoundA (mkA "skulled");
lin skunk_N = mkN "skunk" "skunks";
lin sky_N = mkN "sky" "skies";
lin sky_V2 = mkV2 (mkV "sky" "skies" "skied" "skied" "skying");
lin sky_blue_A = compoundA (mkA "sky - blue");
lin sky_blue_N = mkN "sky - blue" ;
lin sky_high_Adv = mkAdv "sky - high";
lin skylark_N = mkN "skylark" "skylarks";
lin skylark_V = mkV "skylark" "skylarks" "skylarked" "skylarked" "skylarking";
lin skylight_N = mkN "skylight" "skylights";
lin skyline_N = mkN "skyline" "skylines";
lin skyrocket_V = mkV "skyrocket" "skyrockets" "skyrocketed" "skyrocketed" "skyrocketing";
lin skyrocket_V2 = mkV2 (mkV "skyrocket" "skyrockets" "skyrocketed" "skyrocketed" "skyrocketing");
lin skyscraper_N = mkN "skyscraper" "skyscrapers";
lin skyward_A = compoundA (mkA "skyward");
lin skyward_Adv = mkAdv "skyward";
lin skywards_A = compoundA (mkA "skywards");
lin skywards_Adv = mkAdv "skywards";
lin skywriting_N = mkN "skywriting" ;
lin slab_N = mkN "slab" "slabs";
lin slack_A = mkA "slack" "slacker";
lin slack_N = mkN "slack" "slacks";
lin slack_V = mkV "slack" "slacks" "slacked" "slacked" "slacking";
lin slacken_V = mkV "slacken" "slackens" "slackened" "slackened" "slackening";
lin slacken_V2 = mkV2 (mkV "slacken" "slackens" "slackened" "slackened" "slackening");
lin slacker_N = mkN "slacker" "slackers";
lin slackness_N = mkN "slackness" ;
lin slag_N = mkN "slag" ;
lin slag_heap_N = mkN "slag - heap" "slag - heaps";
lin slake_V2 = mkV2 (mkV "slake" "slakes" "slaked" "slaked" "slaking");
lin slalom_N = mkN "slalom" "slaloms";
lin slam_N = mkN "slam" "slams";
lin slam_V = mkV "slam" "slams" "slammed" "slammed" "slamming";
lin slam_V2 = mkV2 (mkV "slam" "slams" "slammed" "slammed" "slamming");
lin slam_dunk_V2 = mkV2 (mkV "slam - dunk");
lin slander_N = mkN "slander" "slanders";
lin slander_V2 = mkV2 (mkV "slander" "slanders" "slandered" "slandered" "slandering");
lin slanderer_N = mkN "slanderer" "slanderers";
lin slanderous_A = compoundA (mkA "slanderous");
lin slang_N = mkN "slang" ;
lin slang_V2 = mkV2 (mkV "slang" "slangs" "slanged" "slanged" "slanging");
lin slangily_Adv = mkAdv "slangily";
lin slanginess_N = mkN "slanginess" ;
lin slangy_A = mkA "slangy" "slangier";
lin slant_N = mkN "slant" "slants";
lin slant_V = mkV "slant" "slants" "slanted" "slanted" "slanting";
lin slant_V2 = mkV2 (mkV "slant" "slants" "slanted" "slanted" "slanting");
lin slantingly_Adv = mkAdv "slantingly";
lin slantwise_Adv = mkAdv "slantwise";
lin slap_Adv = mkAdv "slap";
lin slap_N = mkN "slap" "slaps";
lin slap_V2 = mkV2 (mkV "slap" "slaps" "slapped" "slapped" "slapping");
lin slap_bang_Adv = mkAdv "slap - bang";
lin slap_happy_A = compoundA (mkA "slap - happy");
lin slap_up_A = compoundA (mkA "slap - up");
lin slapdash_A = compoundA (mkA "slapdash");
lin slapdash_Adv = mkAdv "slapdash";
lin slapstick_N = mkN "slapstick" ;
lin slash_N = mkN "slash" "slashes";
lin slash_V = mkV "slash" "slashes" "slashed" "slashed" "slashing";
lin slash_V2 = mkV2 (mkV "slash" "slashes" "slashed" "slashed" "slashing");
lin slat_N = mkN "slat" "slats";
lin slate_N = mkN "slate" "slates";
lin slate_V2 = mkV2 (mkV "slate" "slates" "slated" "slated" "slating");
lin slate_V2V = mkV2V (mkV "slate") noPrep to_Prep ;
lin slate_club_N = mkN "slate - club" "slate - clubs";
lin slate_pencil_N = mkN "slate - pencil" "slate - pencils";
lin slating_N = mkN "slating" "slatings";
lin slatted_A = compoundA (mkA "slatted");
lin slattern_N = mkN "slattern" "slatterns";
lin slatternliness_N = mkN "slatternliness" ;
lin slatternly_A = compoundA (mkA "slatternly");
lin slaty_A = mkA "slaty" "slatier";
lin slaughter_N = mkN "slaughter" ;
lin slaughter_V2 = mkV2 (mkV "slaughter" "slaughters" "slaughtered" "slaughtered" "slaughtering");
lin slaughterer_N = mkN "slaughterer" "slaughterers";
lin slaughterhouse_N = mkN "slaughterhouse" "slaughterhouses";
lin slav_A = compoundA (mkA "slav");
lin slav_N = mkN "slav" "slavs";
lin slave_N = mkN "slave" "slaves";
lin slave_V = mkV "slave" "slaves" "slaved" "slaved" "slaving";
lin slave_driver_N = mkN "slave - driver" "slave - drivers";
lin slave_trade_N = mkN "slave - trade" ;
lin slave_traffic_N = mkN "slave - traffic" ;
lin slaver_N = mkN "slaver" ;
lin slaver_V = mkV "slaver" "slavers" "slavered" "slavered" "slavering";
lin slavery_N = mkN "slavery" ;
lin slavey_N = mkN "slavey" "slaveys";
lin slavish_A = compoundA (mkA "slavish");
lin slavonic_A = compoundA (mkA "slavonic");
lin slaw_N = mkN "slaw" ;
lin slay_V2 = mkV2 (IrregEng.slay_V);
lin slayer_N = mkN "slayer" "slayers";
lin sleaford_PN = mkPN "Sleaford";
lin sleazy_A = mkA "sleazy" "sleazier";
lin sled_N = mkN "sled" "sleds";
lin sledge_N = mkN "sledge" "sledges";
lin sledge_V = mkV "sledge" "sledges" "sledged" "sledged" "sledging";
lin sledge_V2 = mkV2 (mkV "sledge" "sledges" "sledged" "sledged" "sledging");
lin sledgehammer_N = mkN "sledgehammer" "sledgehammers";
lin sleek_A = mkA "sleek" "sleeker";
lin sleek_V2 = mkV2 (mkV "sleek" "sleeks" "sleeked" "sleeked" "sleeking");
lin sleekness_N = mkN "sleekness" ;
lin sleep_N = mkN "sleep" ;
lin sleep_V = IrregEng.sleep_V;
lin sleep_V2 = mkV2 (IrregEng.sleep_V);
lin sleeper_N = mkN "sleeper" "sleepers";
lin sleepily_Adv = mkAdv "sleepily";
lin sleepiness_N = mkN "sleepiness" ;
lin sleeping_N = mkN "sleeping" ;
lin sleeping_bag_N = mkN "sleeping - bag" "sleeping - bags";
lin sleeping_car_N = mkN "sleeping - car" "sleeping - cars";
lin sleeping_draught_N = mkN "sleeping - draught" "sleeping - draughts";
lin sleeping_pill_N = mkN "sleeping - pill" "sleeping - pills";
lin sleeping_sickness_N = mkN "sleeping - sickness" ;
lin sleepless_A = compoundA (mkA "sleepless");
lin sleeplessness_N = mkN "sleeplessness" ;
lin sleepwalker_N = mkN "sleepwalker" "sleepwalkers";
lin sleepy_A = mkA "sleepy" "sleepier";
lin sleepy_head_N = mkN "sleepy - head" "sleepy - heads";
lin sleet_N = mkN "sleet" ;
lin sleet_V = mkV "sleet" "sleets" "sleeted" "sleeted" "sleeting";
lin sleety_A = mkA "sleety" "sleetier";
lin sleeve_N = mkN "sleeve" "sleeves";
lin sleeved_A = compoundA (mkA "sleeved");
lin sleeveless_A = compoundA (mkA "sleeveless");
lin sleigh_N = mkN "sleigh" "sleighs";
lin sleigh_V = mkV "sleigh" "sleighs" "sleighed" "sleighed" "sleighing";
lin sleigh_V2 = mkV2 (mkV "sleigh" "sleighs" "sleighed" "sleighed" "sleighing");
lin sleigh_bell_N = mkN "sleigh - bell" "sleigh - bells";
lin sleight_N = mkN "sleight" "sleights";
lin slender_A = compoundA (mkA "slender");
lin slenderize_V = mkV "slenderize" "slenderizes" "slenderized" "slenderized" "slenderizing";
lin slenderize_V2 = mkV2 (mkV "slenderize" "slenderizes" "slenderized" "slenderized" "slenderizing");
lin slenderness_N = mkN "slenderness" ;
lin sleuth_N = mkN "sleuth" "sleuths";
lin sleuth_hound_N = mkN "sleuth - hound" "sleuth - hounds";
lin slew_V = mkV "slew" "slews" "slewed" "slewed" "slewing";
lin slew_V2 = mkV2 (mkV "slew" "slews" "slewed" "slewed" "slewing");
lin slice_N = mkN "slice" "slices";
lin slice_V = mkV "slice" "slices" "sliced" "sliced" "slicing";
lin slice_V2 = mkV2 (mkV "slice" "slices" "sliced" "sliced" "slicing");
lin slick_A = mkA "slick" "slicker";
lin slick_Adv = mkAdv "slick";
lin slick_N = mkN "slick" "slicks";
lin slicker_N = mkN "slicker" "slickers";
lin slide_N = mkN "slide" "slides";
lin slide_V = IrregEng.slide_V;
lin slide_V2 = mkV2 (IrregEng.slide_V);
lin slide_rule_N = mkN "slide - rule" "slide - rules";
lin slight_A = mkA "slight" "slighter";
lin slight_N = mkN "slight" "slights";
lin slight_V2 = mkV2 (mkV "slight" "slights" "slighted" "slighted" "slighting");
lin slightingly_Adv = mkAdv "slightingly";
lin slightness_N = mkN "slightness" ;
lin sligo_PN = mkPN "Sligo";
lin slim_A = mkA "slim" "slimmer*";
lin slim_V = mkV "slim" "slims" "slimmed" "slimmed" "slimming";
lin slim_V2 = mkV2 (mkV "slim" "slims" "slimmed" "slimmed" "slimming");
lin slime_N = mkN "slime" ;
lin sliminess_N = mkN "sliminess" ;
lin slimness_N = mkN "slimness" ;
lin slimy_A = mkA "slimy" "slimier";
lin sling_N = mkN "sling" "slings";
lin sling_V = IrregEng.sling_V;
lin sling_V2 = mkV2 (IrregEng.sling_V);
lin slinger_N = mkN "slinger" "slingers";
lin slink_V = mkV "slink" "IRREG" "IRREG" "IRREG" "IRREG";
lin slip_N = mkN "slip" "slips";
lin slip_V = mkV "slip" "slips" "slipped" "slipped" "slipping";
lin slip_V2 = mkV2 (mkV "slip" "slips" "slipped" "slipped" "slipping");
lin slip_carriage_N = mkN "slip - carriage" "slip - carriages";
lin slip_coach_N = mkN "slip - coach" "slip - coaches";
lin slip_road_N = mkN "slip - road" "slip - roads";
lin slip_up_N = mkN "slip - up" "slip - ups";
lin slipcover_N = mkN "slipcover" "slipcovers";
lin slipknot_N = mkN "slipknot" "slipknots";
lin slipon_N = mkN "slipon" "slipons";
lin slipover_N = mkN "slipover" "slipovers";
lin slipper_N = mkN "slipper" "slippers";
lin slippered_A = compoundA (mkA "slippered");
lin slipperiness_N = mkN "slipperiness" ;
lin slippery_A = mkA "slippery" "slipperier";
lin slippy_A = compoundA (mkA "slippy");
lin slipshod_A = compoundA (mkA "slipshod");
lin slipstream_N = mkN "slipstream" "slipstreams";
lin slipway_N = mkN "slipway" "slipways";
lin slit_N = mkN "slit" "slits";
lin slit_V2 = mkV2 (IrregEng.slit_V);
lin slither_V = mkV "slither" "slithers" "slithered" "slithered" "slithering";
lin slithery_A = compoundA (mkA "slithery");
lin sliver_N = mkN "sliver" "slivers";
lin sliver_V = mkV "sliver" "slivers" "slivered" "slivered" "slivering";
lin sliver_V2 = mkV2 (mkV "sliver" "slivers" "slivered" "slivered" "slivering");
lin slob_N = mkN "slob" "slobs";
lin slobber_N = mkN "slobber" ;
lin slobber_V = mkV "slobber" "slobbers" "slobbered" "slobbered" "slobbering";
lin slobber_V2 = mkV2 (mkV "slobber" "slobbers" "slobbered" "slobbered" "slobbering");
lin sloe_N = mkN "sloe" "sloes";
lin sloe_gin_N = mkN "sloe - gin" ;
lin slog_V = mkV "slog" "slogs" "slogged" "slogged" "slogging";
lin slog_V2 = mkV2 (mkV "slog" "slogs" "slogged" "slogged" "slogging");
lin slogan_N = mkN "slogan" "slogans";
lin slogger_N = mkN "slogger" "sloggers";
lin sloop_N = mkN "sloop" "sloops";
lin slop_N = mkN "slop" "slops";
lin slop_V = mkV "slop" "slops" "slopped" "slopped" "slopping";
lin slop_V2 = mkV2 (mkV "slop" "slops" "slopped" "slopped" "slopping");
lin slop_basin_N = mkN "slop - basin" "slop - basins";
lin slop_pail_N = mkN "slop - pail" "slop - pails";
lin slop_shop_N = mkN "slop - shop" "slop - shops";
lin slope_N = mkN "slope" "slopes";
lin slope_V = mkV "slope" "slopes" "sloped" "sloped" "sloping";
lin slope_V2 = mkV2 (mkV "slope" "slopes" "sloped" "sloped" "sloping");
lin slopingly_Adv = mkAdv "slopingly";
lin sloppily_Adv = mkAdv "sloppily";
lin sloppiness_N = mkN "sloppiness" ;
lin sloppy_A = mkA "sloppy" "sloppier";
lin slosh_V = mkV "slosh" "sloshes" "sloshed" "sloshed" "sloshing";
lin slosh_V2 = mkV2 (mkV "slosh" "sloshes" "sloshed" "sloshed" "sloshing");
lin sloshed_A = compoundA (mkA "sloshed");
lin slot_N = mkN "slot" "slots";
lin slot_V2 = mkV2 (mkV "slot" "slots" "slotted" "slotted" "slotting");
lin slot_machine_N = mkN "slot - machine" "slot - machines";
lin sloth_N = mkN "sloth" "sloths";
lin slothful_A = compoundA (mkA "slothful");
lin slouch_N = mkN "slouch" "slouches";
lin slouch_V = mkV "slouch" "slouches" "slouched" "slouched" "slouching";
lin slouch_hat_N = mkN "slouch - hat" "slouch - hats";
lin slouchingly_Adv = mkAdv "slouchingly";
lin slough_N = mkN "slough" "sloughs";
lin slough_PN = mkPN "Slough";
lin slough_V = mkV "slough" "sloughs" "sloughed" "sloughed" "sloughing";
lin slough_V2 = mkV2 (mkV "slough" "sloughs" "sloughed" "sloughed" "sloughing");
lin slovak_N = mkN "slovak" ;
lin sloven_N = mkN "sloven" "slovens";
lin slovenian_A = compoundA (mkA "slovenian");
lin slovenian_N = mkN "slovenian" "slovenians";
lin slovenliness_N = mkN "slovenliness" ;
lin slovenly_A = mkA "slovenly" "slovenlier";
lin slow_A = mkA "slow" "slower";
lin slow_Adv = mkAdv "slow";
lin slow_V = mkV "slow" "slows" "slowed" "slowed" "slowing";
lin slow_V2 = mkV2 (mkV "slow" "slows" "slowed" "slowed" "slowing");
lin slow_worm_N = mkN "slow - worm" "slow - worms";
lin slowcoach_N = mkN "slowcoach" "slowcoaches";
lin slowdown_N = mkN "slowdown" "slowdowns";
lin slower_Adv = mkAdv "slower";
lin slowest_Adv = mkAdv "slowest";
lin slowness_N = mkN "slowness" ;
lin sludge_N = mkN "sludge" ;
lin slug_N = mkN "slug" "slugs";
lin slug_V = mkV "slug" "slugs" "slugged" "slugged" "slugging";
lin slug_V2 = mkV2 (mkV "slug" "slugs" "slugged" "slugged" "slugging");
lin sluggard_N = mkN "sluggard" "sluggards";
lin sluggish_A = compoundA (mkA "sluggish");
lin sluggishness_N = mkN "sluggishness" ;
lin sluice_N = mkN "sluice" "sluices";
lin sluice_V = mkV "sluice" "sluices" "sluiced" "sluiced" "sluicing";
lin sluice_V2 = mkV2 (mkV "sluice" "sluices" "sluiced" "sluiced" "sluicing");
lin sluice_valve_N = mkN "sluice - valve" "sluice - valves";
lin sluicegate_N = mkN "sluicegate" "sluicegates";
lin slum_N = mkN "slum" "slums";
lin slum_V = mkV "slum" "slums" "slummed" "slummed" "slumming";
lin slumber_N = mkN "slumber" "slumbers";
lin slumber_V = mkV "slumber" "slumbers" "slumbered" "slumbered" "slumbering";
lin slumber_V2 = mkV2 (mkV "slumber" "slumbers" "slumbered" "slumbered" "slumbering");
lin slumberer_N = mkN "slumberer" "slumberers";
lin slumberous_A = compoundA (mkA "slumberous");
lin slummy_A = mkA "slummy" "slummier";
lin slump_N = mkN "slump" "slumps";
lin slump_V = mkV "slump" "slumps" "slumped" "slumped" "slumping";
lin slump_V2 = mkV2 (mkV "slump" "slumps" "slumped" "slumped" "slumping");
lin slur_N = mkN "slur" "slurs";
lin slur_V = mkV "slur" "slurs" "slurred" "slurred" "slurring";
lin slur_V2 = mkV2 (mkV "slur" "slurs" "slurred" "slurred" "slurring");
lin slurry_N = mkN "slurry" ;
lin slush_N = mkN "slush" ;
lin slushy_A = mkA "slushy" "slushier";
lin slut_N = mkN "slut" "sluts";
lin sluttish_A = compoundA (mkA "sluttish");
lin sly_A = mkA "sly" "slyer";
lin slyness_N = mkN "slyness" ;
lin smack_Adv = mkAdv "smack";
lin smack_N = mkN "smack" "smacks";
lin smack_V = mkV "smack" "smacks" "smacked" "smacked" "smacking";
lin smack_V2 = mkV2 (mkV "smack" "smacks" "smacked" "smacked" "smacking");
lin smacker_N = mkN "smacker" "smackers";
lin smacking_N = mkN "smacking" "smackings";
lin small_A = mkA "small" "smaller";
lin small_Adv = mkAdv "small";
lin small_N = mkN "small" "smalls";
lin small_minded_A = compoundA (mkA "small - minded");
lin smallholder_N = mkN "smallholder" "smallholders";
lin smallholding_N = mkN "smallholding" "smallholdings";
lin smallness_N = mkN "smallness" ;
lin smallpox_N = mkN "smallpox" ;
lin smalltime_A = compoundA (mkA "smalltime");
lin smarmy_A = compoundA (mkA "smarmy");
lin smart_A = mkA "smart" "smarter";
lin smart_N = mkN "smart" ;
lin smart_V = mkV "smart" "smarts" "smarted" "smarted" "smarting";
lin smarten_V = mkV "smarten" "smartens" "smartened" "smartened" "smartening";
lin smarten_V2 = mkV2 (mkV "smarten" "smartens" "smartened" "smartened" "smartening");
lin smartness_N = mkN "smartness" ;
lin smash_Adv = mkAdv "smash";
lin smash_N = mkN "smash" "smashes";
lin smash_V = mkV "smash" "smashes" "smashed" "smashed" "smashing";
lin smash_V2 = mkV2 (mkV "smash" "smashes" "smashed" "smashed" "smashing");
lin smash_up_N = mkN "smash - up" "smash - ups";
lin smasher_N = mkN "smasher" "smashers";
lin smashing_A = compoundA (mkA "smashing");
lin smattering_N = mkN "smattering" "smatterings";
lin smear_N = mkN "smear" "smears";
lin smear_V = mkV "smear" "smears" "smeared" "smeared" "smearing";
lin smear_V2 = mkV2 (mkV "smear" "smears" "smeared" "smeared" "smearing");
lin smear_word_N = mkN "smear - word" "smear - words";
lin smell_N = mkN "smell" "smells";
lin smell_V = mkV "smell" "smells" "smelled" "smelled" "smelling";
lin smell_V2 = mkV2 (mkV "smell" "smells" "smelled" "smelled" "smelling");
lin smell_VA = mkVA (mkV "smell" "smells" "smelled" "smelled" "smelling");
lin smelling_bottle_N = mkN "smelling - bottle" "smelling - bottles";
lin smelly_A = mkA "smelly" "smellier";
lin smelt_N = mkN "smelt" "smelts";
lin smelt_V2 = mkV2 (mkV "smelt" "smelts" "smelted" "smelted" "smelting");
lin smilax_N = mkN "smilax" ;
lin smile_N = mkN "smile" "smiles";
lin smile_V = mkV "smile" "smiles" "smiled" "smiled" "smiling";
lin smile_V2 = mkV2 (mkV "smile" "smiles" "smiled" "smiled" "smiling");
lin smilingly_Adv = mkAdv "smilingly";
lin smirch_N = mkN "smirch" "smirches";
lin smirch_V2 = mkV2 (mkV "smirch" "smirches" "smirched" "smirched" "smirching");
lin smirk_N = mkN "smirk" "smirks";
lin smirk_V = mkV "smirk" "smirks" "smirked" "smirked" "smirking";
lin smite_V = IrregEng.smite_V;
lin smite_V2 = mkV2 (IrregEng.smite_V);
lin smith_N = mkN "smith" "smiths";
lin smithy_N = mkN "smithy" "smithies";
lin smock_N = mkN "smock" "smocks";
lin smocking_N = mkN "smocking" ;
lin smog_N = mkN "smog" "smogs";
lin smoke_N = mkN "smoke" "smokes";
lin smoke_V = mkV "smoke" "smokes" "smoked" "smoked" "smoking";
lin smoke_V2 = mkV2 (mkV "smoke" "smokes" "smoked" "smoked" "smoking");
lin smoke_bomb_N = mkN "smoke - bomb" "smoke - bombs";
lin smoke_cured_A = compoundA (mkA "smoke - cured");
lin smoke_dried_A = compoundA (mkA "smoke - dried");
lin smoke_screen_N = mkN "smoke - screen" "smoke - screens";
lin smokeless_A = compoundA (mkA "smokeless");
lin smoker_N = mkN "smoker" "smokers";
lin smokestack_N = mkN "smokestack" "smokestacks";
lin smoking_N = mkN "smoking" ;
lin smoking_car_N = mkN "smoking - car" "smoking - cars";
lin smoking_carriage_N = mkN "smoking - carriage" "smoking - carriages";
lin smoking_compartment_N = mkN "smoking - compartment" "smoking - compartments";
lin smoking_mixture_N = mkN "smoking - mixture" ;
lin smoking_room_N = mkN "smoking - room" "smoking - rooms";
lin smoky_A = mkA "smoky" "smokier";
lin smooth_A = mkA "smooth" "smoother";
lin smooth_N = mkN "smooth" "smeeth" {- FIXME: guessed plural form -};
lin smooth_V = mkV "smooth" "smooths" "smoothed" "smoothed" "smoothing";
lin smooth_V2 = mkV2 (mkV "smooth" "smooths" "smoothed" "smoothed" "smoothing");
lin smooth_bore_A = compoundA (mkA "smooth - bore");
lin smooth_faced_A = compoundA (mkA "smooth - faced");
lin smooth_spoken_A = compoundA (mkA "smooth - spoken");
lin smooth_tongued_A = compoundA (mkA "smooth - tongued");
lin smoothing_iron_N = mkN "smoothing - iron" "smoothing - irons";
lin smoothing_plane_N = mkN "smoothing - plane" "smoothing - planes";
lin smoothness_N = mkN "smoothness" ;
lin smorgasbord_N = mkN "smorgasbord" ;
lin smother_N = mkN "smother" "IRREG";
lin smother_V2 = mkV2 (mkV "smother" "smothers" "smothered" "smothered" "smothering");
lin smoulder_N = mkN "smoulder" ;
lin smoulder_V = mkV "smoulder" "smoulders" "smouldered" "smouldered" "smouldering";
lin smudge_N = mkN "smudge" "smudges";
lin smudge_V = mkV "smudge" "smudges" "smudged" "smudged" "smudging";
lin smudge_V2 = mkV2 (mkV "smudge" "smudges" "smudged" "smudged" "smudging");
lin smudgy_A = compoundA (mkA "smudgy");
lin smug_A = mkA "smug" "smugger*";
lin smuggle_V2 = mkV2 (mkV "smuggle" "smuggles" "smuggled" "smuggled" "smuggling");
lin smuggler_N = mkN "smuggler" "smugglers";
lin smugness_N = mkN "smugness" ;
lin smut_N = mkN "smut" "smuts";
lin smut_V2 = mkV2 (mkV "smut" "smuts" "smutted" "smutted" "smutting");
lin smuttily_Adv = mkAdv "smuttily";
lin smuttiness_N = mkN "smuttiness" ;
lin smutty_A = mkA "smutty" "smuttier";
lin snack_N = mkN "snack" "snacks";
lin snack_bar_N = mkN "snack - bar" "snack - bars";
lin snack_counter_N = mkN "snack - counter" "snack - counters";
lin snaffle_N = mkN "snaffle" "snaffles";
lin snaffle_V2 = mkV2 (mkV "snaffle" "snaffles" "snaffled" "snaffled" "snaffling");
lin snaffle_bit_N = mkN "snaffle - bit" "snaffle - bits";
lin snag_N = mkN "snag" "snags";
lin snag_V = mkV "snag";
lin snag_V2 = mkV2 (mkV "snag" "snags" "snagged" "snagged" "snagging");
lin snail_N = mkN "snail" "snails";
lin snake_N = mkN "snake" "snakes";
lin snake_V = mkV "snake" "snakes" "snaked" "snaked" "snaking";
lin snake_charmer_N = mkN "snake - charmer" "snake - charmers";
lin snaky_A = mkA "snaky" "snakier";
lin snap_N = mkN "snap" "snaps";
lin snap_V = mkV "snap" "snaps" "snapped" "snapped" "snapping";
lin snap_V2 = mkV2 (mkV "snap" "snaps" "snapped" "snapped" "snapping");
lin snap_VS = mkVS (mkV "snap" "snaps" "snapped" "snapped" "snapping");
lin snap_fastener_N = mkN "snap - fastener" "snap - fasteners";
lin snapdragon_N = mkN "snapdragon" "snapdragons";
lin snappish_A = compoundA (mkA "snappish");
lin snappishness_N = mkN "snappishness" ;
lin snappy_A = mkA "snappy" "snappier";
lin snapshot_N = mkN "snapshot" "snapshots";
lin snare_N = mkN "snare" "snares";
lin snare_V2 = mkV2 (mkV "snare" "snares" "snared" "snared" "snaring");
lin snare_drum_N = mkN "snare - drum" "snare - drums";
lin snarl_N = mkN "snarl" "snarls";
lin snarl_V = mkV "snarl" "snarls" "snarled" "snarled" "snarling";
lin snarl_V2 = mkV2 (mkV "snarl" "snarls" "snarled" "snarled" "snarling");
lin snarl_up_N = mkN "snarl - up" "snarl - ups";
lin snatch_N = mkN "snatch" "snatches";
lin snatch_V = mkV "snatch" "snatches" "snatched" "snatched" "snatching";
lin snatch_V2 = mkV2 (mkV "snatch" "snatches" "snatched" "snatched" "snatching");
lin snatcher_N = mkN "snatcher" "snatchers";
lin snazzy_A = compoundA (mkA "snazzy");
lin sneak_N = mkN "sneak" "sneaks";
lin sneak_V = mkV "sneak" "sneaks" "sneaked" "sneaked" "sneaking";
lin sneak_V2 = mkV2 (mkV "sneak" "sneaks" "sneaked" "sneaked" "sneaking");
lin sneak_thief_N = mkN "sneak - thief" "sneak - thieves";
lin sneaking_A = compoundA (mkA "sneaking");
lin sneaky_A = mkA "sneaky" "sneakier";
lin sneer_N = mkN "sneer" "sneers";
lin sneer_V = mkV "sneer" "sneers" "sneered" "sneered" "sneering";
lin sneeringly_Adv = mkAdv "sneeringly";
lin sneeze_N = mkN "sneeze" "sneezes";
lin sneeze_V = mkV "sneeze" "sneezes" "sneezed" "sneezed" "sneezing";
lin snick_N = mkN "snick" "snicks";
lin snick_V = mkV "snick" "snicks" "snicked" "snicked" "snicking";
lin snick_V2 = mkV2 (mkV "snick" "snicks" "snicked" "snicked" "snicking");
lin snicker_N = mkN "snicker" "snickers";
lin snicker_V = mkV "snicker" "snickers" "snickered" "snickered" "snickering";
lin snide_A = compoundA (mkA "snide");
lin sniff_N = mkN "sniff" "sniffs";
lin sniff_V = mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing";
lin sniff_V2 = mkV2 (mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing");
lin sniff_VS = mkVS (mkV "sniff" "sniffs" "sniffed" "sniffed" "sniffing");
lin sniffle_V = mkV "sniffle" "sniffles" "sniffled" "sniffled" "sniffling";
lin sniffy_A = mkA "sniffy" "sniffier";
lin snifter_N = mkN "snifter" "snifters";
lin snigger_N = mkN "snigger" "sniggers";
lin snigger_V = mkV "snigger" "sniggers" "sniggered" "sniggered" "sniggering";
lin snip_N = mkN "snip" "snips";
lin snip_V = mkV "snip" "snips" "snipped" "snipped" "snipping";
lin snip_V2 = mkV2 (mkV "snip" "snips" "snipped" "snipped" "snipping");
lin snipe_N = mkN "snipe" "snipe";
lin snipe_V = mkV "snipe" "snipes" "sniped" "sniped" "sniping";
lin snipe_V2 = mkV2 (mkV "snipe" "snipes" "sniped" "sniped" "sniping");
lin sniper_N = mkN "sniper" "snipers";
lin snippet_N = mkN "snippet" "snippets";
lin snipping_N = mkN "snipping" "snippings";
lin snitch_V = mkV "snitch" "snitches" "snitched" "snitched" "snitching";
lin snitch_V2 = mkV2 (mkV "snitch" "snitches" "snitched" "snitched" "snitching");
lin snivel_V = mkV "snivel" "snivels" "snivelled" "snivelled" "snivelling";
lin sniveller_N = mkN "sniveller" "snivellers";
lin snob_N = mkN "snob" "snobs";
lin snobbery_N = mkN "snobbery" ;
lin snobbish_A = compoundA (mkA "snobbish");
lin snobbishness_N = mkN "snobbishness" ;
lin snog_V = mkV "snog" "snogs" "snogged" "snogged" "snogging";
lin snogging_N = mkN "snogging" ;
lin snood_N = mkN "snood" "snoods";
lin snook_N = mkN "snook" "snooks";
lin snooker_N = mkN "snooker" "snookers";
lin snoop_V = mkV "snoop" "snoops" "snooped" "snooped" "snooping";
lin snooper_N = mkN "snooper" "snoopers";
lin snootily_Adv = mkAdv "snootily";
lin snooty_A = mkA "snooty" "snootier";
lin snooze_N = mkN "snooze" "snoozes";
lin snooze_V = mkV "snooze" "snoozes" "snoozed" "snoozed" "snoozing";
lin snore_N = mkN "snore" "snores";
lin snore_V = mkV "snore" "snores" "snored" "snored" "snoring";
lin snorer_N = mkN "snorer" "snorers";
lin snorkel_N = mkN "snorkel" "snorkels";
lin snort_N = mkN "snort" "snorts";
lin snort_V = mkV "snort" "snorts" "snorted" "snorted" "snorting";
lin snort_V2 = mkV2 (mkV "snort" "snorts" "snorted" "snorted" "snorting");
lin snort_VS = mkVS (mkV "snort" "snorts" "snorted" "snorted" "snorting");
lin snorter_N = mkN "snorter" "snorters";
lin snorty_A = mkA "snorty" "snortier";
lin snot_N = mkN "snot" ;
lin snot_nosed_A = compoundA (mkA "snot - nosed");
lin snotty_A = mkA "snotty" "snottier";
lin snout_N = mkN "snout" "snouts";
lin snow_N = mkN "snow" "snows";
lin snow_V = mkV "snow" "snows" "snowed" "snowed" "snowing";
lin snow_V2 = mkV2 (mkV "snow" "snows" "snowed" "snowed" "snowing");
lin snow_clad_A = compoundA (mkA "snow - clad");
lin snow_covered_A = compoundA (mkA "snow - covered");
lin snow_line_N = mkN "snow - line" "snow - lines";
lin snow_white_A = compoundA (mkA "snow - white");
lin snowball_N = mkN "snowball" "snowballs";
lin snowball_V = mkV "snowball" "snowballs" "snowballed" "snowballed" "snowballing";
lin snowball_V2 = mkV2 (mkV "snowball" "snowballs" "snowballed" "snowballed" "snowballing");
lin snowberry_N = mkN "snowberry" "snowberries";
lin snowblind_A = compoundA (mkA "snowblind");
lin snowblindness_N = mkN "snowblindness" ;
lin snowbound_A = compoundA (mkA "snowbound");
lin snowcapped_A = compoundA (mkA "snowcapped");
lin snowdrift_N = mkN "snowdrift" "snowdrifts";
lin snowdrop_N = mkN "snowdrop" "snowdrops";
lin snowfall_N = mkN "snowfall" "snowfalls";
lin snowfield_N = mkN "snowfield" "snowfields";
lin snowflake_N = mkN "snowflake" "snowflakes";
lin snowman_N = mkN "snowman" "snowmen" {- FIXME: guessed plural form -};
lin snowplough_N = mkN "snowplough" "snowploughs";
lin snowstorm_N = mkN "snowstorm" "snowstorms";
lin snowy_A = mkA "snowy" "snowier";
lin snr_PN = mkPN "Snr";
lin snub_A = compoundA (mkA "snub");
lin snub_N = mkN "snub" "snubs";
lin snub_V2 = mkV2 (mkV "snub" "snubs" "snubbed" "snubbed" "snubbing");
lin snub_nosed_A = compoundA (mkA "snub - nosed");
lin snuff_N = mkN "snuff" "snuffs";
lin snuff_V = mkV "snuff" "snuffs" "snuffed" "snuffed" "snuffing";
lin snuff_V2 = mkV2 (mkV "snuff" "snuffs" "snuffed" "snuffed" "snuffing");
lin snuff_colour_A = compoundA (mkA "snuff - colour");
lin snuff_colour_N = mkN "snuff - colour" ;
lin snuff_coloured_A = compoundA (mkA "snuff - coloured");
lin snuffbox_N = mkN "snuffbox" "snuffboxes";
lin snuffle_N = mkN "snuffle" "snuffles";
lin snuffle_V = mkV "snuffle" "snuffles" "snuffled" "snuffled" "snuffling";
lin snug_A = mkA "snug" "snugger*";
lin snug_N = mkN "snug" "snugs";
lin snuggery_N = mkN "snuggery" "snuggeries";
lin snuggle_V = mkV "snuggle" "snuggles" "snuggled" "snuggled" "snuggling";
lin snuggle_V2 = mkV2 (mkV "snuggle" "snuggles" "snuggled" "snuggled" "snuggling");
lin snugness_N = mkN "snugness" ;
lin so_AdA = mkAdA "so";
lin so_N = mkN "so" "si" {- FIXME: guessed plural form -};
lin so_Subj = mkSubj "so";
lin so_and_so_N = mkN "so - and - so" "so - and - sos";
lin so_called_A = compoundA (mkA "so - called");
lin so_so_A = compoundA (mkA "so - so");
lin so_so_Adv = mkAdv "so - so";
lin soak_N = mkN "soak" "soaks";
lin soak_V = mkV "soak" "soaks" "soaked" "soaked" "soaking";
lin soak_V2 = mkV2 (mkV "soak" "soaks" "soaked" "soaked" "soaking");
lin soaker_N = mkN "soaker" "soakers";
lin soap_N = mkN "soap" "soaps";
lin soap_V2 = mkV2 (mkV "soap" "soaps" "soaped" "soaped" "soaping");
lin soap_bubble_N = mkN "soap - bubble" "soap - bubbles";
lin soap_opera_N = mkN "soap - opera" "soap - operas";
lin soapbox_N = mkN "soapbox" "soapboxes";
lin soapy_A = mkA "soapy" "soapier";
lin soar_V = mkV "soar" "soars" "soared" "soared" "soaring";
lin soar_V2 = mkV2 (mkV "soar" "soars" "soared" "soared" "soaring");
lin sob_N = mkN "sob" "sobs";
lin sob_V = mkV "sob" "sobs" "sobbed" "sobbed" "sobbing";
lin sob_V2 = mkV2 (mkV "sob" "sobs" "sobbed" "sobbed" "sobbing");
lin sob_stuff_N = mkN "sob - stuff" ;
lin sobbingly_Adv = mkAdv "sobbingly";
lin sober_A = compoundA (mkA "sober");
lin sober_V = mkV "sober" "sobers" "sobered" "sobered" "sobering";
lin sober_V2 = mkV2 (mkV "sober" "sobers" "sobered" "sobered" "sobering");
lin sober_sides_N = mkN "sober - sides" "IRREG";
lin sobriety_N = mkN "sobriety" ;
lin sobriquet_N = mkN "sobriquet" "sobriquets";
lin soc_N = mkN "soc" ;
lin soccer_N = mkN "soccer" ;
lin sociability_N = mkN "sociability" ;
lin sociable_A = compoundA (mkA "sociable");
lin social_A = compoundA (mkA "social");
lin social_N = mkN "social" "socials";
lin social_work_N = mkN "social - work" ;
lin socialism_N = mkN "socialism" ;
lin socialist_A = compoundA (mkA "socialist");
lin socialist_N = mkN "socialist" "socialists";
lin socialite_N = mkN "socialite" "socialites";
lin socialization_N = mkN "socialization" "socializations";
lin socialize_V2 = mkV2 (mkV "socialize" "socializes" "socialized" "socialized" "socializing");
lin society_N = mkN "society" "societies";
lin sociological_A = compoundA (mkA "sociological");
lin sociologist_N = mkN "sociologist" "sociologists";
lin sociology_N = mkN "sociology" ;
lin sock_Adv = mkAdv "sock";
lin sock_N = mkN "sock" "socks";
lin sock_V2 = mkV2 (mkV "sock" "socks" "socked" "socked" "socking");
lin socket_N = mkN "socket" "sockets";
lin socratic_A = compoundA (mkA "socratic");
lin sod_N = mkN "sod" "sods";
lin sod_V = mkV "sod" "sods" "sodded" "sodded" "sodding";
lin soda_N = mkN "soda" ;
lin soda_biscuit_N = mkN "soda - biscuit" "soda - biscuits";
lin soda_cracker_N = mkN "soda - cracker" "soda - crackers";
lin soda_fountain_N = mkN "soda - fountain" "soda - fountains";
lin soda_water_N = mkN "soda - water" "soda - waters";
lin sodden_A = compoundA (mkA "sodden");
lin sodding_A = compoundA (mkA "sodding");
lin sodium_N = mkN "sodium" ;
lin sodomite_N = mkN "sodomite" "sodomites";
lin sodomy_N = mkN "sodomy" ;
lin sofa_N = mkN "sofa" "sofas";
lin sofia_PN = mkPN "Sofia";
lin soft_A = mkA "soft" "softer";
lin soft_boiled_A = compoundA (mkA "soft - boiled");
lin soft_footed_A = compoundA (mkA "soft - footed");
lin soft_headed_A = compoundA (mkA "soft - headed");
lin soft_hearted_A = compoundA (mkA "soft - hearted");
lin soft_pedal_V = mkV "soft - pedal" "soft - pedals" "soft - pedalled" "soft - pedalled" "soft - pedalling";
lin soft_pedal_V2 = mkV2 (mkV "soft - pedal" "soft - pedals" "soft - pedalled" "soft - pedalled" "soft - pedalling");
lin soft_soap_V2 = mkV2 (mkV "soft - soap" "soft - soaps" "soft - soaped" "soft - soaped" "soft - soaping");
lin soft_solder_N = mkN "soft - solder" ;
lin soft_solder_V2 = mkV2 (mkV "soft - solder" "soft - solders" "soft - soldered" "soft - soldered" "soft - soldering");
lin soft_spoken_A = compoundA (mkA "soft - spoken");
lin soft_witted_A = compoundA (mkA "soft - witted");
lin soften_V = mkV "soften" "softens" "softened" "softened" "softening";
lin soften_V2 = mkV2 (mkV "soften" "softens" "softened" "softened" "softening");
lin softener_N = mkN "softener" "softeners";
lin softie_N = mkN "softie" "softies";
lin softish_A = compoundA (mkA "softish");
lin softland_V = mkV "softland" "softlands" "softlanded" "softlanded" "softlanding";
lin softness_N = mkN "softness" ;
lin software_N = mkN "software" ;
lin softwood_N = mkN "softwood" "softwoods";
lin softy_N = mkN "softy" "softies";
lin sogginess_N = mkN "sogginess" ;
lin soggy_A = mkA "soggy" "soggier";
lin soh_N = mkN "soh" "IRREG";
lin soho_PN = mkPN "Soho";
lin soigne_A = compoundA (mkA "soigné");
lin soignee_A = compoundA (mkA "soignee");
lin soil_N = mkN "soil" "soils";
lin soil_V = mkV "soil" "soils" "soiled" "soiled" "soiling";
lin soil_V2 = mkV2 (mkV "soil" "soils" "soiled" "soiled" "soiling");
lin soil_pipe_N = mkN "soil - pipe" "soil - pipes";
lin soiree_N = mkN "soirée" "soirées";
lin sojourn_N = mkN "sojourn" "sojourns";
lin sojourn_V = mkV "sojourn" "sojourns" "sojourned" "sojourned" "sojourning";
lin sojourner_N = mkN "sojourner" "sojourners";
lin sol_PN = mkPN "Sol";
lin sol_fa_N = mkN "sol - fa" "sol - fae" {- FIXME: guessed plural form -};
lin solace_N = mkN "solace" "solaces";
lin solace_V2 = mkV2 (mkV "solace" "solaces" "solaced" "solaced" "solacing");
lin solar_A = compoundA (mkA "solar");
lin solar_plexus_N = mkN "solar plexus" "solar plexi" {- FIXME: guessed plural form -};
lin solarium_N = mkN "solarium" "solaria" {- FIXME: guessed plural form -};
lin solder_N = mkN "solder" ;
lin solder_V2 = mkV2 (mkV "solder" "solders" "soldered" "soldered" "soldering");
lin soldering_iron_N = mkN "soldering - iron" "soldering - irons";
lin soldier_N = mkN "soldier" "soldiers";
lin soldier_V = mkV "soldier" "soldiers" "soldiered" "soldiered" "soldiering";
lin soldiery_N = mkN "soldiery" "IRREG";
lin sole_A = compoundA (mkA "sole");
lin sole_N = mkN "sole" "soles";
lin sole_V2 = mkV2 (mkV "sole" "soles" "soled" "soled" "soling");
lin solecism_N = mkN "solecism" "solecisms";
lin soled_A = compoundA (mkA "soled");
lin solemn_A = compoundA (mkA "solemn");
lin solemnity_N = mkN "solemnity" "solemnities";
lin solemnization_N = mkN "solemnization" ;
lin solemnize_V2 = mkV2 (mkV "solemnize" "solemnizes" "solemnized" "solemnized" "solemnizing");
lin solemnness_N = mkN "solemnness" ;
lin solicit_V = mkV "solicit" "solicits" "solicited" "solicited" "soliciting";
lin solicit_V2 = mkV2 (mkV "solicit" "solicits" "solicited" "solicited" "soliciting");
lin solicitation_N = mkN "solicitation" "solicitations";
lin solicitor_N = mkN "solicitor" "solicitors";
lin solicitor_general_N = mkN "solicitor - general" "solicitor - generals";
lin solicitous_A = compoundA (mkA "solicitous");
lin solicitude_N = mkN "solicitude" ;
lin solid_A = compoundA (mkA "solid");
lin solid_N = mkN "solid" "solids";
lin solid_state_A = compoundA (mkA "solid - state");
lin solidarity_N = mkN "solidarity" ;
lin solidification_N = mkN "solidification" "solidifications";
lin solidify_V = mkV "solidify" "solidifies" "solidified" "solidified" "solidifying";
lin solidify_V2 = mkV2 (mkV "solidify" "solidifies" "solidified" "solidified" "solidifying");
lin solidity_N = mkN "solidity" ;
lin solidness_N = mkN "solidness" ;
lin solihull_PN = mkPN "Solihull";
lin soliloquize_V = mkV "soliloquize" "soliloquizes" "soliloquized" "soliloquized" "soliloquizing";
lin soliloquy_N = mkN "soliloquy" "soliloquies";
lin solingen_PN = mkPN "Solingen";
lin solipsism_N = mkN "solipsism" ;
lin solitaire_N = mkN "solitaire" "solitaires";
lin solitary_A = compoundA (mkA "solitary");
lin solitude_N = mkN "solitude" "solitudes";
lin solo_A = compoundA (mkA "solo");
lin solo_N = mkN "solo" "solos";
lin soloist_N = mkN "soloist" "soloists";
lin solon_PN = mkPN "Solon";
lin solstice_N = mkN "solstice" "solstices";
lin solubility_N = mkN "solubility" ;
lin soluble_A = compoundA (mkA "soluble");
lin solution_N = mkN "solution" "solutions";
lin solvable_A = compoundA (mkA "solvable");
lin solve_V2 = mkV2 (mkV "solve" "solves" "solved" "solved" "solving");
lin solvency_N = mkN "solvency" ;
lin solvent_A = compoundA (mkA "solvent");
lin solvent_N = mkN "solvent" "solvents";
lin somali_A = compoundA (mkA "somali");
lin somali_N = mkN "somali" "somalis";
lin somalia_PN = mkPN "Somalia";
lin somalian_A = compoundA (mkA "somalian");
lin somalian_N = mkN "somalian" "somalians";
lin somatic_A = compoundA (mkA "somatic");
lin sombre_A = compoundA (mkA "sombre");
lin sombreness_N = mkN "sombreness" ;
lin sombrero_N = mkN "sombrero" "sombreros";
lin some_Quant = mkQuant "some" "some";
lin somebody_NP = regNP "somebody" singular;
lin someday_Adv = mkAdv "someday";
lin somehow_Adv = mkAdv "somehow";
lin somehow_AdV = mkAdV "somehow";
lin someone_NP = regNP "someone" singular;
lin someplace_Adv = mkAdv "someplace";
lin somercotes_PN = mkPN "Somercotes";
lin somersault_N = mkN "somersault" "somersaults";
lin somersault_V = mkV "somersault" "somersaults" "somersaulted" "somersaulted" "somersaulting";
lin somerset_PN = mkPN "Somerset";
lin something_NP = regNP "something" singular ;
lin sometime_Adv = mkAdv "sometime";
lin sometimes_Adv = mkAdv "sometimes";
lin someway_Adv = mkAdv "someway";
lin somewhat_Adv = mkAdv "somewhat";
lin somnambulism_N = mkN "somnambulism" ;
lin somnambulist_N = mkN "somnambulist" "somnambulists";
lin somnolence_N = mkN "somnolence" ;
lin somnolent_A = compoundA (mkA "somnolent");
lin son_N = mkN "son" "sons";
lin son_in_law_N = mkN "son - in - law" "sons - in - law";
lin sonar_N = mkN "sonar" "sonars";
lin sonata_N = mkN "sonata" "sonatas";
lin song_N = mkN "song" "songs";
lin songbird_N = mkN "songbird" "songbirds";
lin songbook_N = mkN "songbook" "songbooks";
lin songster_N = mkN "songster" "songsters";
lin songstress_N = mkN "songstress" "songstresses";
lin sonia_PN = mkPN "Sonia";
lin sonic_A = compoundA (mkA "sonic");
lin sonnet_N = mkN "sonnet" "sonnets";
lin sonneteer_N = mkN "sonneteer" "sonneteers";
lin sonny_N = mkN "sonny" "sonnies";
lin sonority_N = mkN "sonority" "sonorities";
lin sonorous_A = compoundA (mkA "sonorous");
lin sonsy_A = compoundA (mkA "sonsy");
lin soochow_PN = mkPN "Soochow";
lin soon_Adv = mkAdv "soon";
lin sooner_Adv = mkAdv "sooner";
lin soonest_Adv = mkAdv "soonest";
lin soot_N = mkN "soot" ;
lin soot_V2 = mkV2 (mkV "soot" "soots" "sooted" "sooted" "sooting");
lin sooth_N = mkN "sooth" "sooths";
lin soothe_V2 = mkV2 (mkV "soothe" "soothes" "soothed" "soothed" "soothing");
lin soothingly_Adv = mkAdv "soothingly";
lin soothsayer_N = mkN "soothsayer" "soothsayers";
lin sooty_A = mkA "sooty" "sootier";
lin sop_N = mkN "sop" "sops";
lin sop_V2 = mkV2 (mkV "sop" "sops" "sopped" "sopped" "sopping");
lin sophia_PN = mkPN "Sophia";
lin sophie_PN = mkPN "Sophie";
lin sophism_N = mkN "sophism" "sophisms";
lin sophist_N = mkN "sophist" "sophists";
lin sophisticated_A = compoundA (mkA "sophisticated");
lin sophistication_N = mkN "sophistication" ;
lin sophistry_N = mkN "sophistry" "sophistries";
lin sophomore_N = mkN "sophomore" "sophomores";
lin soporific_A = compoundA (mkA "soporific");
lin soporific_N = mkN "soporific" "soporifics";
lin sopping_A = compoundA (mkA "sopping");
lin sopping_Adv = mkAdv "sopping";
lin soppy_A = mkA "soppy" "soppier";
lin soprano_N = mkN "soprano" "sopranos";
lin sorbet_N = mkN "sorbet" "sorbets";
lin sorcerer_N = mkN "sorcerer" "sorcerers";
lin sorceress_N = mkN "sorceress" "sorceresses";
lin sorcery_N = mkN "sorcery" "sorceries";
lin sordid_A = compoundA (mkA "sordid");
lin sordidness_N = mkN "sordidness" ;
lin sore_A = compoundA (mkA "sore");
lin sore_N = mkN "sore" "sores";
lin soreness_N = mkN "soreness" ;
lin sorghum_N = mkN "sorghum" ;
lin sorority_N = mkN "sorority" "sororities";
lin sorrel_A = compoundA (mkA "sorrel");
lin sorrel_N = mkN "sorrel" "sorrels";
lin sorrow_N = mkN "sorrow" "sorrows";
lin sorrow_V = mkV "sorrow" "sorrows" "sorrowed" "sorrowed" "sorrowing";
lin sorrowful_A = compoundA (mkA "sorrowful");
lin sorry_A = mkA "sorry" "sorrier";
lin sort_N = mkN "sort" "sorts";
lin sort_V = mkV "sort" "sorts" "sorted" "sorted" "sorting";
lin sort_V2 = mkV2 (mkV "sort" "sorts" "sorted" "sorted" "sorting");
lin sorter_N = mkN "sorter" "sorters";
lin sortie_N = mkN "sortie" "sorties";
lin sos_N = mkN "sos" "soss" ;
lin sot_N = mkN "sot" "sots";
lin sotho_A = compoundA (mkA "sotho");
lin sotho_N = mkN "sotho" "sothos";
lin sottish_A = compoundA (mkA "sottish");
lin sottishness_N = mkN "sottishness" ;
lin sotto_voce_Adv = mkAdv "sotto voce";
lin sou'_east_Adv = mkAdv "sou'-east";
lin sou'_east_N = mkN "sou'-east" ;
lin sou'_sou'_east_Adv = mkAdv "sou'-sou'-east";
lin sou'_sou'_east_N = mkN "sou'-sou'-east" ;
lin sou'_sou'_west_Adv = mkAdv "sou'-sou'-west";
lin sou'_sou'_west_N = mkN "sou'-sou'-west" ;
lin sou'_west_Adv = mkAdv "sou'-west";
lin sou'_west_N = mkN "sou'-west" ;
lin sou'_wester_N = mkN "sou'-wester" "sou'-westers";
lin sou_N = mkN "sou" "sous";
lin soubrette_N = mkN "soubrette" "soubrettes";
lin soubriquet_N = mkN "soubriquet" "soubriquets";
lin souffle_N = mkN "soufflé" "soufflés";
lin sough_V = mkV "sough" "soughs" "soughed" "soughed" "soughing";
lin soul_N = mkN "soul" "souls";
lin soul_destroying_A = compoundA (mkA "soul - destroying");
lin soul_stirring_A = compoundA (mkA "soul - stirring");
lin soulful_A = compoundA (mkA "soulful");
lin soulless_A = compoundA (mkA "soulless");
lin sound_A = compoundA (mkA "sound");
lin sound_Adv = mkAdv "sound";
lin sound_N = mkN "sound" "sounds";
lin sound_V = mkV "sound" "sounds" "sounded" "sounded" "sounding";
lin sound_V2 = mkV2 (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_VA = mkVA (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_VS = mkVS (mkV "sound" "sounds" "sounded" "sounded" "sounding");
lin sound_film_N = mkN "sound - film" "sound - films";
lin sound_recording_N = mkN "sound - recording" "sound - recordings";
lin sound_wave_N = mkN "sound - wave" "sound - waves";
lin soundbox_N = mkN "soundbox" "soundboxes";
lin sounding_board_N = mkN "sounding - board" "sounding - boards";
lin soundless_A = compoundA (mkA "soundless");
lin soundness_N = mkN "soundness" ;
lin soundproof_A = compoundA (mkA "soundproof");
lin soundproof_V2 = mkV2 (mkV "soundproof" "soundproofs" "soundproofed" "soundproofed" "soundproofing");
lin soundtrack_N = mkN "soundtrack" "soundtracks";
lin soup_N = mkN "soup" "soups";
lin soup_V2 = mkV2 (mkV "soup" "soups" "souped" "souped" "souping");
lin soup_kitchen_N = mkN "soup - kitchen" "soup - kitchens";
lin soupcon_N = mkN "soupçon" "soupçons";
lin sour_A = compoundA (mkA "sour");
lin sour_V = mkV "sour" "sours" "soured" "soured" "souring";
lin sour_V2 = mkV2 (mkV "sour" "sours" "soured" "soured" "souring");
lin source_N = mkN "source" "sources";
lin sourness_N = mkN "sourness" ;
lin souse_V2 = mkV2 (mkV "souse" "souses" "soused" "soused" "sousing");
lin soused_A = compoundA (mkA "soused");
lin soutane_N = mkN "soutane" "soutanes";
lin south_A = mkA "south";
lin south_Adv = mkAdv "south";
lin south_N = mkN "south" ;
lin south_kirkby_PN = mkPN "South kirkby";
lin south_normantown_PN = mkPN "South normantown";
lin south_ockendon_PN = mkPN "South ockendon";
lin south_shields_PN = mkPN "South shields";
lin south_southeast_Adv = mkAdv "south - southeast";
lin south_southeast_N = mkN "south - southeast" ;
lin south_southwest_Adv = mkAdv "south - southwest";
lin south_southwest_N = mkN "south - southwest" ;
lin southampton_PN = mkPN "Southampton";
lin southeast_Adv = mkAdv "southeast";
lin southeast_N = mkN "southeast" ;
lin southeaster_N = mkN "southeaster" "southeasters";
lin southeasterly_A = compoundA (mkA "southeasterly");
lin southeastern_A = compoundA (mkA "southeastern");
lin southend_on_sea_PN = mkPN "Southend - on - sea";
lin southerly_A = compoundA (mkA "southerly");
lin southerly_Adv = mkAdv "southerly";
lin southern_A = compoundA (mkA "southern");
lin southerner_N = mkN "southerner" "southerners";
lin southernmost_A = compoundA (mkA "southernmost");
lin southpaw_N = mkN "southpaw" "southpaws";
lin southport_PN = mkPN "Southport";
lin southward_Adv = mkAdv "southward";
lin southwards_Adv = mkAdv "southwards";
lin southwark_PN = mkPN "Southwark";
lin southwest_Adv = mkAdv "southwest";
lin southwest_N = mkN "southwest" ;
lin southwester_N = mkN "southwester" "southwesters";
lin southwesterly_A = compoundA (mkA "southwesterly");
lin southwestern_A = compoundA (mkA "southwestern");
lin souvenir_N = mkN "souvenir" "souvenirs";
lin sovereign_A = compoundA (mkA "sovereign");
lin sovereign_N = mkN "sovereign" "sovereigns";
lin sovereignty_N = mkN "sovereignty" ;
lin soviet_A = compoundA (mkA "soviet");
lin soviet_N = mkN "soviet" "soviets";
lin sovietize_V2 = mkV2 (mkV "sovietize" "sovietizes" "sovietized" "sovietized" "sovietizing");
lin sow_N = mkN "sow" "sows";
lin sow_V = mkV "sow" "sows" "sowed" "sowed" "sowing";
lin sow_V2 = mkV2 (mkV "sow" "sows" "sowed" "sowed" "sowing");
lin sower_N = mkN "sower" "sowers";
lin soy_N = mkN "soy" ;
lin soya_N = mkN "soya" ;
lin sozzled_A = compoundA (mkA "sozzled");
lin spa_N = mkN "spa" "spas";
lin space_N = mkN "space" "spaces";
lin space_V2 = mkV2 (mkV "space" "spaces" "spaced" "spaced" "spacing");
lin space_bar_N = mkN "space - bar" "space - bars";
lin space_capsule_N = mkN "space - capsule" "space - capsules";
lin space_heater_N = mkN "space - heater" "space - heaters";
lin space_helmet_N = mkN "space - helmet" "space - helmets";
lin space_rocket_N = mkN "space - rocket" "space - rockets";
lin space_time_N = mkN "space - time" ;
lin space_vehicle_N = mkN "space - vehicle" "space - vehicles";
lin spacecraft_N = mkN "spacecraft" "spacecraft";
lin spaceship_N = mkN "spaceship" "spaceships";
lin spacesuit_N = mkN "spacesuit" "spacesuits";
lin spacing_N = mkN "spacing" "spacings";
lin spacious_A = compoundA (mkA "spacious");
lin spaciousness_N = mkN "spaciousness" ;
lin spade_N = mkN "spade" "spades";
lin spade_V2 = mkV2 (mkV "spade" "spades" "spaded" "spaded" "spading");
lin spadeful_N = mkN "spadeful" "spadefuls";
lin spadework_N = mkN "spadework" ;
lin spaghetti_N = mkN "spaghetti" ;
lin spain_PN = mkPN "Spain";
lin spalding_PN = mkPN "Spalding";
lin spam_N = mkN "spam" ;
lin span_N = mkN "span" "spans";
lin span_V2 = mkV2 (mkV "span" "spans" "spanned" "spanned" "spanning");
lin spangle_N = mkN "spangle" "spangles";
lin spangle_V2 = mkV2 (mkV "spangle" "spangles" "spangled" "spangled" "spangling");
lin spaniard_N = mkN "spaniard" "spaniards";
lin spaniel_N = mkN "spaniel" "spaniels";
lin spanish_A = compoundA (mkA "Spanish");
lin spanish_N = mkN "Spanish" ;
lin spank_V = mkV "spank" "spanks" "spanked" "spanked" "spanking";
lin spank_V2 = mkV2 (mkV "spank" "spanks" "spanked" "spanked" "spanking");
lin spanking_A = compoundA (mkA "spanking");
lin spanking_N = mkN "spanking" "spankings";
lin spanner_N = mkN "spanner" "spanners";
lin spar_N = mkN "spar" "spars";
lin spar_V = mkV "spar" "spars" "sparred" "sparred" "sparring";
lin spare_A = compoundA (mkA "spare");
lin spare_N = mkN "spare" "spares";
lin spare_V = mkV "spare" "spares" "spared" "spared" "sparing";
lin spare_V2 = mkV2 (mkV "spare" "spares" "spared" "spared" "sparing");
lin spare_rib_N = mkN "spare - rib" "spare - ribs";
lin spareness_N = mkN "spareness" ;
lin sparing_A = compoundA (mkA "sparing");
lin spark_N = mkN "spark" "sparks";
lin spark_V = mkV "spark" "sparks" "sparked" "sparked" "sparking";
lin spark_V2 = mkV2 (mkV "spark" "sparks" "sparked" "sparked" "sparking");
lin spark_plug_N = mkN "spark - plug" "spark - plugs";
lin sparking_plug_N = mkN "sparking - plug" "sparking - plugs";
lin sparkle_N = mkN "sparkle" "sparkles";
lin sparkle_V = mkV "sparkle" "sparkles" "sparkled" "sparkled" "sparkling";
lin sparkler_N = mkN "sparkler" "sparklers";
lin sparkling_A = compoundA (mkA "sparkling");
lin sparring_match_N = mkN "sparring - match" "sparring - matches";
lin sparring_partner_N = mkN "sparring - partner" "sparring - partners";
lin sparrow_N = mkN "sparrow" "sparrows";
lin sparse_A = mkA "sparse" "sparser";
lin sparseness_N = mkN "sparseness" ;
lin sparsity_N = mkN "sparsity" ;
lin spartan_A = compoundA (mkA "spartan");
lin spartan_N = mkN "spartan" "spartans";
lin spasm_N = mkN "spasm" "spasms";
lin spasmodic_A = compoundA (mkA "spasmodic");
lin spasmodically_Adv = mkAdv "spasmodically";
lin spastic_A = compoundA (mkA "spastic");
lin spastic_N = mkN "spastic" "spastics";
lin spat_N = mkN "spat" "spats";
lin spat_V = mkV "spat" "spats" "spatted" "spatted" "spatting";
lin spat_V2 = mkV2 (mkV "spat" "spats" "spatted" "spatted" "spatting");
lin spatchcock_N = mkN "spatchcock" "spatchcocks";
lin spatchcock_V2 = mkV2 (mkV "spatchcock" "spatchcocks" "spatchcocked" "spatchcocked" "spatchcocking");
lin spate_N = mkN "spate" "spates";
lin spatial_A = compoundA (mkA "spatial");
lin spatter_N = mkN "spatter" "spatters";
lin spatter_V = mkV "spatter" "spatters" "spattered" "spattered" "spattering";
lin spatter_V2 = mkV2 (mkV "spatter" "spatters" "spattered" "spattered" "spattering");
lin spatula_N = mkN "spatula" "spatulas";
lin spavin_N = mkN "spavin" ;
lin spavined_A = compoundA (mkA "spavined");
lin spawn_N = mkN "spawn" ;
lin spawn_V = mkV "spawn" "spawns" "spawned" "spawned" "spawning";
lin spawn_V2 = mkV2 (mkV "spawn" "spawns" "spawned" "spawned" "spawning");
lin spay_V2 = mkV2 (mkV "spay" "spays" "spayed" "spayed" "spaying");
lin speak_V = IrregEng.speak_V;
lin speak_V2 = mkV2 (IrregEng.speak_V);
lin speaker_N = mkN "speaker" "speakers";
lin speakership_N = mkN "speakership" "speakerships";
lin speaking_trumpet_N = mkN "speaking - trumpet" "speaking - trumpets";
lin speaking_tube_N = mkN "speaking - tube" "speaking - tubes";
lin spear_N = mkN "spear" "spears";
lin spear_V2 = mkV2 (mkV "spear" "spears" "speared" "speared" "spearing");
lin spearhead_N = mkN "spearhead" "spearheads";
lin spearhead_V2 = mkV2 (mkV "spearhead");
lin spearmint_N = mkN "spearmint" ;
lin spec_N = mkN "spec" "specs";
lin special_A = compoundA (mkA "special");
lin special_N = mkN "special" "specials";
lin specialism_N = mkN "specialism" "specialisms";
lin specialist_N = mkN "specialist" "specialists";
lin speciality_N = mkN "speciality" "specialities";
lin specialization_N = mkN "specialization" "specializations";
lin specialize_V = mkV "specialize" "specializes" "specialized" "specialized" "specializing";
lin specialize_V2 = mkV2 (mkV "specialize" "specializes" "specialized" "specialized" "specializing");
lin specialty_N = mkN "specialty" "specialties";
lin specie_N = mkN "specie" ;
lin species_N = mkN "species" "species";
lin specifiable_A = compoundA (mkA "specifiable");
lin specific_A = compoundA (mkA "specific");
lin specific_N = mkN "specific" "specifics";
lin specifically_Adv = mkAdv "specifically";
lin specification_N = mkN "specification" "specifications";
lin specificity_N = mkN "specificity" ;
lin specify_V = mkV "specify";
lin specify_V2 = mkV2 (mkV "specify" "specifies" "specified" "specified" "specifying");
lin specify_VS = mkVS (mkV "specify");
lin specimen_N = mkN "specimen" "specimens";
lin specious_A = compoundA (mkA "specious");
lin speciousness_N = mkN "speciousness" ;
lin speck_N = mkN "speck" "specks";
lin specked_A = compoundA (mkA "specked");
lin speckle_N = mkN "speckle" "speckles";
lin speckled_A = compoundA (mkA "speckled");
lin speckless_A = compoundA (mkA "speckless");
lin spectacle_N = mkN "spectacle" "spectacles";
lin spectacled_A = compoundA (mkA "spectacled");
lin spectacular_A = compoundA (mkA "spectacular");
lin spectacular_N = mkN "spectacular" "spectaculars";
lin spectator_N = mkN "spectator" "spectators";
lin spectral_A = compoundA (mkA "spectral");
lin spectre_N = mkN "spectre" "spectres";
lin spectroscope_N = mkN "spectroscope" "spectroscopes";
lin spectroscopic_A = compoundA (mkA "spectroscopic");
lin spectrum_N = mkN "spectrum" "spectra" {- FIXME: guessed plural form -};
lin speculate_V = mkV "speculate" "speculates" "speculated" "speculated" "speculating";
lin speculate_VS = mkVS (mkV "speculate" "speculates" "speculated" "speculated" "speculating");
lin speculation_N = mkN "speculation" "speculations";
lin speculative_A = compoundA (mkA "speculative");
lin speculator_N = mkN "speculator" "speculators";
lin speech_N = mkN "speech" "speeches";
lin speech_day_N = mkN "speech - day" "speech - days";
lin speechify_V = mkV "speechify" "speechifies" "speechified" "speechified" "speechifying";
lin speechless_A = compoundA (mkA "speechless");
lin speed_N = mkN "speed" "speeds";
lin speed_V = mkV "speed" "speeds" "speeded" "speeded" "speeding";
lin speed_V2 = mkV2 (mkV "speed" "speeds" "speeded" "speeded" "speeding");
lin speed_cop_N = mkN "speed - cop" "speed - cops";
lin speed_indicator_N = mkN "speed - indicator" "speed - indicators";
lin speed_limit_N = mkN "speed - limit" "speed - limits";
lin speed_up_N = mkN "speed - up" "speed - ups";
lin speedboat_N = mkN "speedboat" "speedboats";
lin speedily_Adv = mkAdv "speedily";
lin speeding_N = mkN "speeding" ;
lin speedometer_N = mkN "speedometer" "speedometers";
lin speedway_N = mkN "speedway" "speedways";
lin speedwell_N = mkN "speedwell" "speedwells";
lin speedy_A = mkA "speedy" "speedier";
lin spelaeologist_N = mkN "spelaeologist" "spelaeologists";
lin spelaeology_N = mkN "spelaeology" ;
lin speleologist_N = mkN "speleologist" "speleologists";
lin speleology_N = mkN "speleology" ;
lin spell_N = mkN "spell" "spells";
lin spell_V = mkV "spell" "spells" "spelled" "spelled" "spelling";
lin spell_V2 = mkV2 (mkV "spell" "spells" "spelled" "spelled" "spelling");
lin spellbinder_N = mkN "spellbinder" "spellbinders";
lin spellbound_A = compoundA (mkA "spellbound");
lin speller_N = mkN "speller" "spellers";
lin spelling_N = mkN "spelling" "spellings";
lin spelt_N = mkN "spelt" ;
lin spenborough_PN = mkPN "Spenborough";
lin spend_V = IrregEng.spend_V;
lin spend_V2 = mkV2 (IrregEng.spend_V);
lin spend_V2V = mkV2V (IrregEng.spend_V) noPrep to_Prep ;
lin spend_VS = mkVS (IrregEng.spend_V);
lin spender_N = mkN "spender" "spenders";
lin spendthrift_N = mkN "spendthrift" "spendthrifts";
lin spennymoor_PN = mkPN "Spennymoor";
lin spent_A = compoundA (mkA "spent");
lin sperm_N = mkN "sperm" "sperms";
lin sperm_whale_N = mkN "sperm - whale" "sperm - whales";
lin spermaceti_N = mkN "spermaceti" ;
lin spermatozoon_N = mkN "spermatozoon" "spermatozoa" {- FIXME: guessed plural form -};
lin spermicide_N = mkN "spermicide" "spermicides";
lin spew_V = mkV "spew" "spews" "spewed" "spewed" "spewing";
lin spew_V2 = mkV2 (mkV "spew" "spews" "spewed" "spewed" "spewing");
lin sphagnum_N = mkN "sphagnum" "sphagnums";
lin sphere_N = mkN "sphere" "spheres";
lin spherical_A = compoundA (mkA "spherical");
lin spheroid_N = mkN "spheroid" "spheroids";
lin sphinx_N = mkN "sphinx" "sphinxes";
lin spice_N = mkN "spice" "spices";
lin spice_V2 = mkV2 (mkV "spice" "spices" "spiced" "spiced" "spicing");
lin spicily_Adv = mkAdv "spicily";
lin spiciness_N = mkN "spiciness" ;
lin spick_A = compoundA (mkA "spick");
lin spicy_A = mkA "spicy" "spicier";
lin spider_N = mkN "spider" "spiders";
lin spidery_A = compoundA (mkA "spidery");
lin spiel_N = mkN "spiel" "spiels";
lin spiel_V = mkV "spiel" "spiels" "spieled" "spieled" "spieling";
lin spiel_V2 = mkV2 (mkV "spiel" "spiels" "spieled" "spieled" "spieling");
lin spigot_N = mkN "spigot" "spigots";
lin spike_N = mkN "spike" "spikes";
lin spike_V2 = mkV2 (mkV "spike" "spikes" "spiked" "spiked" "spiking");
lin spikenard_N = mkN "spikenard" ;
lin spiky_A = mkA "spiky" "spikier";
lin spill_N = mkN "spill" "spills";
lin spill_V = mkV "spill" "spills" "spilled" "spilled" "spilling";
lin spill_V2 = mkV2 (mkV "spill" "spills" "spilled" "spilled" "spilling");
lin spillage_N = mkN "spillage" "spillages";
lin spillover_N = mkN "spillover" "spillovers";
lin spillway_N = mkN "spillway" "spillways";
lin spin_N = mkN "spin" "spins";
lin spin_V = IrregEng.spin_V;
lin spin_V2 = mkV2 (IrregEng.spin_V);
lin spin_drier_N = mkN "spin - drier" "spin - driers";
lin spin_dry_V2 = mkV2 (mkV "spin - dry" "spin - dries" "spin - dried" "spin - dried" "spin - drying");
lin spin_off_N = mkN "spin - off" "spin - offs";
lin spinach_N = mkN "spinach" ;
lin spinal_A = compoundA (mkA "spinal");
lin spindle_N = mkN "spindle" "spindles";
lin spindle_berry_N = mkN "spindle - berry" "spindle - berries";
lin spindle_legged_A = compoundA (mkA "spindle - legged");
lin spindle_shanked_A = compoundA (mkA "spindle - shanked");
lin spindle_shanks_N = mkN "spindle - shanks" "IRREG";
lin spindle_tree_N = mkN "spindle - tree" "spindle - trees";
lin spindly_A = mkA "spindly" "spindlier";
lin spindrift_N = mkN "spindrift" ;
lin spine_N = mkN "spine" "spines";
lin spineless_A = compoundA (mkA "spineless");
lin spinet_N = mkN "spinet" "spinets";
lin spinnaker_N = mkN "spinnaker" "spinnakers";
lin spinney_N = mkN "spinney" "spinneys";
lin spinning_wheel_N = mkN "spinning - wheel" "spinning - wheels";
lin spinster_N = mkN "spinster" "spinsters";
lin spinsterhood_N = mkN "spinsterhood" ;
lin spiny_A = mkA "spiny" "spinier";
lin spiral_A = compoundA (mkA "spiral");
lin spiral_N = mkN "spiral" "spirals";
lin spiral_V = mkV "spiral" "spirals" "spiralled" "spiralled" "spiralling";
lin spire_N = mkN "spire" "spires";
lin spirit_N = mkN "spirit" "spirits";
lin spirit_V2 = mkV2 (mkV "spirit" "spirits" "spirited" "spirited" "spiriting");
lin spirit_lamp_N = mkN "spirit - lamp" "spirit - lamps";
lin spirit_level_N = mkN "spirit - level" "spirit - levels";
lin spirit_rapper_N = mkN "spirit - rapper" "spirit - rappers";
lin spirit_stove_N = mkN "spirit - stove" "spirit - stoves";
lin spirited_A = compoundA (mkA "spirited");
lin spiritless_A = compoundA (mkA "spiritless");
lin spiritual_A = compoundA (mkA "spiritual");
lin spiritual_N = mkN "spiritual" "spirituals";
lin spiritualism_N = mkN "spiritualism" ;
lin spiritualist_N = mkN "spiritualist" "spiritualists";
lin spiritualistic_A = compoundA (mkA "spiritualistic");
lin spirituality_N = mkN "spirituality" ;
lin spiritualization_N = mkN "spiritualization" ;
lin spiritualize_V2 = mkV2 (mkV "spiritualize" "spiritualizes" "spiritualized" "spiritualized" "spiritualizing");
lin spirituous_A = compoundA (mkA "spirituous");
lin spirt_N = mkN "spirt" "spirts";
lin spirt_V = mkV "spirt" "spirts" "spirted" "spirted" "spirting";
lin spit_N = mkN "spit" "spits";
lin spit_V = IrregEng.spit_V;
lin spit_V2 = mkV2 (IrregEng.spit_V);
lin spite_N = mkN "spite" ;
lin spite_V2 = mkV2 (mkV "spite" "spites" "spited" "spited" "spiting");
lin spiteful_A = compoundA (mkA "spiteful");
lin spitefulness_N = mkN "spitefulness" ;
lin spitfire_N = mkN "spitfire" "spitfires";
lin spitting_N = mkN "spitting" ;
lin spittle_N = mkN "spittle" ;
lin spittoon_N = mkN "spittoon" "spittoons";
lin spiv_N = mkN "spiv" "spivs";
lin splash_N = mkN "splash" "splashes";
lin splash_V = mkV "splash" "splashes" "splashed" "splashed" "splashing";
lin splash_V2 = mkV2 (mkV "splash" "splashes" "splashed" "splashed" "splashing");
lin splashdown_N = mkN "splashdown" "splashdowns";
lin splay_A = compoundA (mkA "splay");
lin splay_N = mkN "splay" "splays";
lin splay_V = mkV "splay" "splays" "splayed" "splayed" "splaying";
lin splay_V2 = mkV2 (mkV "splay" "splays" "splayed" "splayed" "splaying");
lin splayfoot_N = mkN "splayfoot" "splayfeet" {- FIXME: guessed plural form -};
lin splayfooted_A = compoundA (mkA "splayfooted");
lin spleen_N = mkN "spleen" "spleens";
lin splendid_A = compoundA (mkA "splendid");
lin splendiferous_A = compoundA (mkA "splendiferous");
lin splendour_N = mkN "splendour" "splendours";
lin splenetic_A = compoundA (mkA "splenetic");
lin splice_N = mkN "splice" "splices";
lin splice_V2 = mkV2 (mkV "splice" "splices" "spliced" "spliced" "splicing");
lin splicer_N = mkN "splicer" "splicers";
lin splint_N = mkN "splint" "splints";
lin splinter_N = mkN "splinter" "splinters";
lin splinter_V = mkV "splinter" "splinters" "splintered" "splintered" "splintering";
lin splinter_V2 = mkV2 (mkV "splinter" "splinters" "splintered" "splintered" "splintering");
lin splinter_proof_A = compoundA (mkA "splinter - proof");
lin splintery_A = compoundA (mkA "splintery");
lin split_N = mkN "split" "splits";
lin split_PN = mkPN "Split";
lin split_V = IrregEng.split_V;
lin split_V2 = mkV2 (IrregEng.split_V);
lin splodge_N = mkN "splodge" "splodges";
lin splosh_V2 = mkV2 (mkV "splosh" "sploshes" "sploshed" "sploshed" "sploshing");
lin splotch_N = mkN "splotch" "splotches";
lin splurge_N = mkN "splurge" "splurges";
lin splurge_V = mkV "splurge" "splurges" "splurged" "splurged" "splurging";
lin splutter_N = mkN "splutter" ;
lin splutter_V = mkV "splutter" "splutters" "spluttered" "spluttered" "spluttering";
lin splutter_V2 = mkV2 (mkV "splutter" "splutters" "spluttered" "spluttered" "spluttering");
lin spode_N = mkN "spode" ;
lin spoil_N = mkN "spoil" "spoils";
lin spoil_V = mkV "spoil" "spoils" "spoiled" "spoiled" "spoiling";
lin spoil_V2 = mkV2 (mkV "spoil" "spoils" "spoiled" "spoiled" "spoiling");
lin spoilsport_N = mkN "spoilsport" "spoilsports";
lin spoke_N = mkN "spoke" "spokes";
lin spokesman_N = mkN "spokesman" "spokesmen" {- FIXME: guessed plural form -};
lin spoliation_N = mkN "spoliation" ;
lin spondaic_A = compoundA (mkA "spondaic");
lin spondee_N = mkN "spondee" "spondees";
lin sponge_N = mkN "sponge" "sponges";
lin sponge_V = mkV "sponge" "sponges" "sponged" "sponged" "sponging";
lin sponge_V2 = mkV2 (mkV "sponge" "sponges" "sponged" "sponged" "sponging");
lin sponge_cake_N = mkN "sponge - cake" "sponge - cakes";
lin sponger_N = mkN "sponger" "spongers";
lin sponginess_N = mkN "sponginess" ;
lin spongy_A = mkA "spongy" "spongier";
lin sponsor_N = mkN "sponsor" "sponsors";
lin sponsor_V2 = mkV2 (mkV "sponsor" "sponsors" "sponsored" "sponsored" "sponsoring");
lin sponsorship_N = mkN "sponsorship" "sponsorships";
lin spontaneity_N = mkN "spontaneity" ;
lin spontaneous_A = compoundA (mkA "spontaneous");
lin spontaneousness_N = mkN "spontaneousness" ;
lin spoof_N = mkN "spoof" "spoofs";
lin spoof_V2 = mkV2 (mkV "spoof" "spoofs" "spoofed" "spoofed" "spoofing");
lin spook_N = mkN "spook" "spooks";
lin spook_V2 = mkV2 (mkV "spook");
lin spooky_A = mkA "spooky" "spookier";
lin spool_N = mkN "spool" "spools";
lin spoon_N = mkN "spoon" "spoons";
lin spoon_V = mkV "spoon" "spoons" "spooned" "spooned" "spooning";
lin spoon_V2 = mkV2 (mkV "spoon" "spoons" "spooned" "spooned" "spooning");
lin spoonerism_N = mkN "spoonerism" "spoonerisms";
lin spoonfeed_V2 = mkV2 (mkV "spoon" IrregEng.feed_V);
lin spoonfeeding_N = mkN "spoonfeeding" ;
lin spoonful_N = mkN "spoonful" "spoonfuls";
lin spoor_N = mkN "spoor" "spoors";
lin sporadic_A = compoundA (mkA "sporadic");
lin sporadically_Adv = mkAdv "sporadically";
lin spore_N = mkN "spore" "spores";
lin sporran_N = mkN "sporran" "sporrans";
lin sport_N = mkN "sport" "sports";
lin sport_V = mkV "sport" "sports" "sported" "sported" "sporting";
lin sport_V2 = mkV2 (mkV "sport" "sports" "sported" "sported" "sporting");
lin sporting_A = compoundA (mkA "sporting");
lin sportive_A = compoundA (mkA "sportive");
lin sportiveness_N = mkN "sportiveness" ;
lin sports_car_N = mkN "sports - car" "sports - cars";
lin sports_coat_N = mkN "sports - coat" "sports - coats";
lin sports_editor_N = mkN "sports - editor" "sports - editors";
lin sports_jacket_N = mkN "sports - jacket" "sports - jackets";
lin sportsman_N = mkN "sportsman" "sportsmen" {- FIXME: guessed plural form -};
lin sportsmanlike_A = compoundA (mkA "sportsmanlike");
lin sportsmanship_N = mkN "sportsmanship" ;
lin spot_N = mkN "spot" "spots";
lin spot_V = mkV "spot" "spots" "spotted" "spotted" "spotting";
lin spot_V2 = mkV2 (mkV "spot" "spots" "spotted" "spotted" "spotting");
lin spot_VS = mkVS (mkV "spot" "spots" "spotted" "spotted" "spotting");
lin spotless_A = compoundA (mkA "spotless");
lin spotlight_N = mkN "spotlight" "spotlights";
lin spotlight_V2 = mkV2 (mkV "spotlight" "spotlights" "spotlighted" "spotlighted" "spotlighting");
lin spotted_A = compoundA (mkA "spotted");
lin spotter_N = mkN "spotter" "spotters";
lin spotty_A = mkA "spotty" "spottier";
lin spouse_N = mkN "spouse" "spouses";
lin spout_N = mkN "spout" "spouts";
lin spout_V = mkV "spout" "spouts" "spouted" "spouted" "spouting";
lin spout_V2 = mkV2 (mkV "spout" "spouts" "spouted" "spouted" "spouting");
lin sprain_N = mkN "sprain" "sprains";
lin sprain_V2 = mkV2 (mkV "sprain" "sprains" "sprained" "sprained" "spraining");
lin sprat_N = mkN "sprat" "sprats";
lin sprawl_N = mkN "sprawl" "sprawls";
lin sprawl_V = mkV "sprawl" "sprawls" "sprawled" "sprawled" "sprawling";
lin sprawl_V2 = mkV2 (mkV "sprawl" "sprawls" "sprawled" "sprawled" "sprawling");
lin spray_N = mkN "spray" "sprays";
lin spray_V2 = mkV2 (mkV "spray" "sprays" "sprayed" "sprayed" "spraying");
lin spray_gun_N = mkN "spray - gun" "spray - guns";
lin sprayer_N = mkN "sprayer" "sprayers";
lin spread_N = mkN "spread" "spreads";
lin spread_V = IrregEng.spread_V;
lin spread_V2 = mkV2 (IrregEng.spread_V);
lin spread_V2V = mkV2V (IrregEng.spread_V) noPrep to_Prep ;
lin spread_VS = mkVS (IrregEng.spread_V);
lin spread_over_N = mkN "spread - over" ;
lin spreadeagle_N = mkN "spreadeagle" "spreadeagles";
lin spreadeagle_V2 = mkV2 (mkV "spreadeagle" "spreadeagles" "spreadeagled" "spreadeagled" "spreadeagling");
lin spreader_N = mkN "spreader" "spreaders";
lin spree_N = mkN "spree" "sprees";
lin sprig_N = mkN "sprig" "sprigs";
lin sprigged_A = compoundA (mkA "sprigged");
lin sprightliness_N = mkN "sprightliness" ;
lin sprightly_A = mkA "sprightly" "sprightlier";
lin spring_N = mkN "spring" "springs";
lin spring_V = IrregEng.spring_V;
lin spring_V2 = mkV2 (IrregEng.spring_V);
lin spring_balance_N = mkN "spring - balance" "spring - balances";
lin spring_clean_N = mkN "spring - clean" "spring - cleans";
lin spring_clean_V2 = mkV2 (mkV "spring - clean" "spring - cleans" "spring - cleaned" "spring - cleaned" "spring - cleaning");
lin spring_cleaning_N = mkN "spring - cleaning" ;
lin spring_gun_N = mkN "spring - gun" "spring - guns";
lin spring_mattress_N = mkN "spring - mattress" "spring - mattresses";
lin springboard_N = mkN "springboard" "springboards";
lin springbok_N = mkN "springbok" "springboks";
lin springfield_PN = mkPN "Springfield";
lin springless_A = compoundA (mkA "springless");
lin springlike_A = compoundA (mkA "springlike");
lin springtide_N = mkN "springtide" "springtides";
lin springtime_N = mkN "springtime" "springtimes";
lin springy_A = mkA "springy" "springier";
lin sprinkle_V2 = mkV2 (mkV "sprinkle" "sprinkles" "sprinkled" "sprinkled" "sprinkling");
lin sprinkler_N = mkN "sprinkler" "sprinklers";
lin sprinkling_N = mkN "sprinkling" "sprinklings";
lin sprint_N = mkN "sprint" "sprints";
lin sprint_V = mkV "sprint" "sprints" "sprinted" "sprinted" "sprinting";
lin sprinter_N = mkN "sprinter" "sprinters";
lin sprit_N = mkN "sprit" "sprits";
lin sprite_N = mkN "sprite" "sprites";
lin spritsail_N = mkN "spritsail" "spritsails";
lin sprocket_N = mkN "sprocket" "sprockets";
lin sprocket_wheel_N = mkN "sprocket - wheel" "sprocket - wheels";
lin sprout_N = mkN "sprout" "sprouts";
lin sprout_V = mkV "sprout" "sprouts" "sprouted" "sprouted" "sprouting";
lin sprout_V2 = mkV2 (mkV "sprout" "sprouts" "sprouted" "sprouted" "sprouting");
lin spruce_A = compoundA (mkA "spruce");
lin spruce_N = mkN "spruce" "spruces";
lin spruce_V = mkV "spruce" "spruces" "spruced" "spruced" "sprucing";
lin spruce_V2 = mkV2 (mkV "spruce" "spruces" "spruced" "spruced" "sprucing");
lin spruceness_N = mkN "spruceness" ;
lin spry_A = mkA "spry" "spryer";
lin spud_N = mkN "spud" "spuds";
lin spue_V = mkV "spue" "spues" "spued" "spued" "spuing";
lin spue_V2 = mkV2 (mkV "spue" "spues" "spued" "spued" "spuing");
lin spume_N = mkN "spume" ;
lin spunk_N = mkN "spunk" ;
lin spunky_A = mkA "spunky" "spunkier";
lin spur_N = mkN "spur" "spurs";
lin spur_V = mkV "spur" "spurs" "spurred" "spurred" "spurring";
lin spur_V2 = mkV2 (mkV "spur" "spurs" "spurred" "spurred" "spurring");
lin spurious_A = compoundA (mkA "spurious");
lin spuriousness_N = mkN "spuriousness" ;
lin spurn_V2 = mkV2 (mkV "spurn" "spurns" "spurned" "spurned" "spurning");
lin spurre_V2V = mkV2V (mkV "spurre") noPrep to_Prep ;
lin spurt_N = mkN "spurt" "spurts";
lin spurt_V = mkV "spurt" "spurts" "spurted" "spurted" "spurting";
lin sputnik_N = mkN "sputnik" "sputniks";
lin sputter_V = mkV "sputter" "sputters" "sputtered" "sputtered" "sputtering";
lin sputter_V2 = mkV2 (mkV "sputter" "sputters" "sputtered" "sputtered" "sputtering");
lin sputum_N = mkN "sputum" ;
lin spy_N = mkN "spy" "spies";
lin spy_V = mkV "spy" "spies" "spied" "spied" "spying";
lin spy_V2 = mkV2 (mkV "spy" "spies" "spied" "spied" "spying");
lin spy_hole_N = mkN "spy - hole" "spy - holes";
lin spyglass_N = mkN "spyglass" "spyglasses";
lin sq_PN = mkPN "Sq";
lin squab_N = mkN "squab" "squabs";
lin squabble_N = mkN "squabble" "squabbles";
lin squabble_V = mkV "squabble" "squabbles" "squabbled" "squabbled" "squabbling";
lin squad_N = mkN "squad" "squads";
lin squadron_N = mkN "squadron" "squadrons";
lin squalid_A = compoundA (mkA "squalid");
lin squall_N = mkN "squall" "squalls";
lin squall_V = mkV "squall" "squalls" "squalled" "squalled" "squalling";
lin squally_A = compoundA (mkA "squally");
lin squalor_N = mkN "squalor" ;
lin squander_V2 = mkV2 (mkV "squander" "squanders" "squandered" "squandered" "squandering");
lin squandermania_N = mkN "squandermania" ;
lin square_A = compoundA (mkA "square");
lin square_Adv = mkAdv "square";
lin square_N = mkN "square" "squares";
lin square_V = mkV "square" "squares" "squared" "squared" "squaring";
lin square_V2 = mkV2 (mkV "square" "squares" "squared" "squared" "squaring");
lin square_bashing_N = mkN "square - bashing" ;
lin square_built_A = compoundA (mkA "square - built");
lin square_rigged_A = compoundA (mkA "square - rigged");
lin square_shouldered_A = compoundA (mkA "square - shouldered");
lin square_toed_A = compoundA (mkA "square - toed");
lin square_toes_N = mkN "square - toes" "IRREG";
lin squareness_N = mkN "squareness" ;
lin squash_N = mkN "squash" "squash";
lin squash_V = mkV "squash" "squashes" "squashed" "squashed" "squashing";
lin squash_V2 = mkV2 (mkV "squash" "squashes" "squashed" "squashed" "squashing");
lin squashy_A = mkA "squashy" "squashier";
lin squat_A = compoundA (mkA "squat");
lin squat_V = mkV "squat" "squats" "squatted" "squatted" "squatting";
lin squatter_N = mkN "squatter" "squatters";
lin squaw_N = mkN "squaw" "squaws";
lin squawk_N = mkN "squawk" "squawks";
lin squawk_V = mkV "squawk" "squawks" "squawked" "squawked" "squawking";
lin squawker_N = mkN "squawker" "squawkers";
lin squeak_N = mkN "squeak" "squeaks";
lin squeak_V = mkV "squeak" "squeaks" "squeaked" "squeaked" "squeaking";
lin squeak_V2 = mkV2 (mkV "squeak" "squeaks" "squeaked" "squeaked" "squeaking");
lin squeaker_N = mkN "squeaker" "squeakers";
lin squeaky_A = mkA "squeaky" "squeakier";
lin squeal_N = mkN "squeal" "squeals";
lin squeal_V = mkV "squeal" "squeals" "squealed" "squealed" "squealing";
lin squeal_V2 = mkV2 (mkV "squeal" "squeals" "squealed" "squealed" "squealing");
lin squealer_N = mkN "squealer" "squealers";
lin squeamish_A = compoundA (mkA "squeamish");
lin squeamishness_N = mkN "squeamishness" ;
lin squeegee_N = mkN "squeegee" "squeegees";
lin squeegee_V2 = mkV2 (mkV "squeegee" "IRREG" "IRREG" "IRREG" "IRREG");
lin squeeze_N = mkN "squeeze" "squeezes";
lin squeeze_V = mkV "squeeze" "squeezes" "squeezed" "squeezed" "squeezing";
lin squeeze_V2 = mkV2 (mkV "squeeze" "squeezes" "squeezed" "squeezed" "squeezing");
lin squeezer_N = mkN "squeezer" "squeezers";
lin squelch_N = mkN "squelch" "squelches";
lin squelch_V = mkV "squelch" "squelches" "squelched" "squelched" "squelching";
lin squelch_V2 = mkV2 (mkV "squelch" "squelches" "squelched" "squelched" "squelching");
lin squib_N = mkN "squib" "squibs";
lin squid_N = mkN "squid" "squids";
lin squiffy_A = compoundA (mkA "squiffy");
lin squiggle_N = mkN "squiggle" "squiggles";
lin squiggly_A = mkA "squiggly" "squigglier";
lin squint_N = mkN "squint" "squints";
lin squint_V = mkV "squint" "squints" "squinted" "squinted" "squinting";
lin squint_eyed_A = compoundA (mkA "squint - eyed");
lin squire_N = mkN "squire" "squires";
lin squire_V2 = mkV2 (mkV "squire" "squires" "squired" "squired" "squiring");
lin squirearchy_N = mkN "squirearchy" "squirearchies";
lin squirm_N = mkN "squirm" "squirms";
lin squirm_V = mkV "squirm" "squirms" "squirmed" "squirmed" "squirming";
lin squirrel_N = mkN "squirrel" "squirrels";
lin squirt_N = mkN "squirt" "squirts";
lin squirt_V = mkV "squirt" "squirts" "squirted" "squirted" "squirting";
lin squirt_V2 = mkV2 (mkV "squirt" "squirts" "squirted" "squirted" "squirting");
lin sr_PN = mkPN "Sr";
lin sri_lanka_PN = mkPN "Sri lanka";
lin sri_lankan_A = compoundA (mkA "sri lankan");
lin sri_lankan_N = mkN "sri lankan" "sri lankans";
lin srn_N = mkN "srn" ;
lin ss_N = mkN "ss" ;
lin st_PN = mkPN "St";
lin st_albans_PN = mkPN "St albans";
lin st_andrews_PN = mkPN "St andrews";
lin st_andrews_major_PN = mkPN "St andrews major";
lin st_austell_PN = mkPN "St austell";
lin st_blazey_PN = mkPN "St blazey";
lin st_helens_PN = mkPN "St helens";
lin st_ives_PN = mkPN "St ives";
lin st_louis_PN = mkPN "St louis";
lin st_neots_PN = mkPN "St neots";
lin st_paul_PN = mkPN "St paul";
lin st_petersburg_PN = mkPN "St petersburg";
lin st_stephen_PN = mkPN "St stephen";
lin sta_PN = mkPN "Sta";
lin stab_N = mkN "stab" "stabs";
lin stab_V = mkV "stab" "stabs" "stabbed" "stabbed" "stabbing";
lin stab_V2 = mkV2 (mkV "stab" "stabs" "stabbed" "stabbed" "stabbing");
lin stabber_N = mkN "stabber" "stabbers";
lin stability_N = mkN "stability" ;
lin stabilization_N = mkN "stabilization" "stabilizations";
lin stabilize_V = mkV "stabilize";
lin stabilize_V2 = mkV2 (mkV "stabilize" "stabilizes" "stabilized" "stabilized" "stabilizing");
lin stabilizer_N = mkN "stabilizer" "stabilizers";
lin stable_A = compoundA (mkA "stable");
lin stable_N = mkN "stable" "stables";
lin stable_V2 = mkV2 (mkV "stable" "stables" "stabled" "stabled" "stabling");
lin stable_companion_N = mkN "stable - companion" "stable - companions";
lin stableboy_N = mkN "stableboy" "stableboys";
lin stableman_N = mkN "stableman" "stablemen" {- FIXME: guessed plural form -};
lin stablemate_N = mkN "stablemate" "stablemates";
lin stabling_N = mkN "stabling" ;
lin staccato_A = compoundA (mkA "staccato");
lin staccato_Adv = mkAdv "staccato";
lin stack_N = mkN "stack" "stacks";
lin stack_V2 = mkV2 (mkV "stack" "stacks" "stacked" "stacked" "stacking");
lin stadium_N = mkN "stadium" "stadiums";
lin staff_N = mkN "staff" "staffs";
lin staff_V2 = mkV2 (mkV "staff" "staffs" "staffed" "staffed" "staffing");
lin staff_office_N = mkN "staff - office" "staff - offices";
lin stafford_PN = mkPN "Stafford";
lin staffordshire_PN = mkPN "Staffordshire";
lin stag_N = mkN "stag" "stags";
lin stag_party_N = mkN "stag - party" "stag - parties";
lin stage_N = mkN "stage" "stages";
lin stage_V = mkV "stage" "stages" "staged" "staged" "staging";
lin stage_V2 = mkV2 (mkV "stage" "stages" "staged" "staged" "staging");
lin stage_struck_A = compoundA (mkA "stage - struck");
lin stage_whisper_N = mkN "stage - whisper" "stage - whispers";
lin stagecoach_N = mkN "stagecoach" "stagecoaches";
lin stagecraft_N = mkN "stagecraft" "stagecrafts";
lin stager_N = mkN "stager" "stagers";
lin stagflation_N = mkN "stagflation" ;
lin stagger_N = mkN "stagger" "staggers";
lin stagger_V = mkV "stagger" "staggers" "staggered" "staggered" "staggering";
lin stagger_V2 = mkV2 (mkV "stagger" "staggers" "staggered" "staggered" "staggering");
lin staggerer_N = mkN "staggerer" "staggerers";
lin staggeringly_Adv = mkAdv "staggeringly";
lin staginess_N = mkN "staginess" ;
lin staging_N = mkN "staging" "stagings";
lin stagnancy_N = mkN "stagnancy" ;
lin stagnant_A = compoundA (mkA "stagnant");
lin stagnate_V = mkV "stagnate" "stagnates" "stagnated" "stagnated" "stagnating";
lin stagnation_N = mkN "stagnation" ;
lin stagy_A = compoundA (mkA "stagy");
lin staid_A = compoundA (mkA "staid");
lin staidness_N = mkN "staidness" ;
lin stain_N = mkN "stain" "stains";
lin stain_V = mkV "stain" "stains" "stained" "stained" "staining";
lin stain_V2 = mkV2 (mkV "stain" "stains" "stained" "stained" "staining");
lin stainless_A = compoundA (mkA "stainless");
lin stair_N = mkN "stair" "stairs";
lin stair_carpet_N = mkN "stair - carpet" "stair - carpets";
lin stair_rod_N = mkN "stair - rod" "stair - rods";
lin staircase_N = mkN "staircase" "staircases";
lin stairway_N = mkN "stairway" "stairways";
lin stake_N = mkN "stake" "stakes";
lin stake_V2 = mkV2 (mkV "stake" "stakes" "staked" "staked" "staking");
lin stake_holder_N = mkN "stake - holder" "stake - holders";
lin stakeford_PN = mkPN "Stakeford";
lin stalactite_N = mkN "stalactite" "stalactites";
lin stalagmite_N = mkN "stalagmite" "stalagmites";
lin stale_A = mkA "stale" "staler";
lin stale_V = mkV "stale" "stales" "staled" "staled" "staling";
lin stalemate_N = mkN "stalemate" "stalemates";
lin stalemate_V2 = mkV2 (mkV "stalemate" "stalemates" "stalemated" "stalemated" "stalemating");
lin staleness_N = mkN "staleness" ;
lin stalk_N = mkN "stalk" "stalks";
lin stalk_V = mkV "stalk" "stalks" "stalked" "stalked" "stalking";
lin stalk_V2 = mkV2 (mkV "stalk" "stalks" "stalked" "stalked" "stalking");
lin stalker_N = mkN "stalker" "stalkers";
lin stalking_horse_N = mkN "stalking - horse" "stalking - horses";
lin stall_N = mkN "stall" "stalls";
lin stall_V = mkV "stall" "stalls" "stalled" "stalled" "stalling";
lin stall_V2 = mkV2 (mkV "stall" "stalls" "stalled" "stalled" "stalling");
lin stall_fed_A = compoundA (mkA "stall - fed");
lin stallion_N = mkN "stallion" "stallions";
lin stalwart_A = compoundA (mkA "stalwart");
lin stalwart_N = mkN "stalwart" "stalwarts";
lin stalybridge_PN = mkPN "Stalybridge";
lin stamen_N = mkN "stamen" "stamens";
lin stamford_PN = mkPN "Stamford";
lin stamina_N = mkN "stamina" ;
lin stammer_N = mkN "stammer" "stammers";
lin stammer_V = mkV "stammer" "stammers" "stammered" "stammered" "stammering";
lin stammer_V2 = mkV2 (mkV "stammer" "stammers" "stammered" "stammered" "stammering");
lin stammerer_N = mkN "stammerer" "stammerers";
lin stammeringly_Adv = mkAdv "stammeringly";
lin stamp_N = mkN "stamp" "stamps";
lin stamp_V = mkV "stamp" "stamps" "stamped" "stamped" "stamping";
lin stamp_V2 = mkV2 (mkV "stamp" "stamps" "stamped" "stamped" "stamping");
lin stamp_album_N = mkN "stamp - album" "stamp - albums";
lin stamp_collector_N = mkN "stamp - collector" "stamp - collectors";
lin stamp_dealer_N = mkN "stamp - dealer" "stamp - dealers";
lin stamp_duty_N = mkN "stamp - duty" "stamp - duties";
lin stampede_N = mkN "stampede" "stampedes";
lin stampede_V = mkV "stampede" "stampedes" "stampeded" "stampeded" "stampeding";
lin stampede_V2 = mkV2 (mkV "stampede" "stampedes" "stampeded" "stampeded" "stampeding");
lin stamping_ground_N = mkN "stamping - ground" "stamping - grounds";
lin stan_PN = mkPN "Stan";
lin stance_N = mkN "stance" "stances";
lin stanch_V2 = mkV2 (mkV "stanch");
lin stanchion_N = mkN "stanchion" "stanchions";
lin stand_N = mkN "stand" "stands";
lin stand_V = IrregEng.stand_V;
lin stand_V2 = mkV2 (IrregEng.stand_V);
lin stand_VV = mkVV (IrregEng.stand_V);
lin stand_VS = mkVS (IrregEng.stand_V);
lin stand_in_N = mkN "stand - in" "stand - ins";
lin stand_to_N = mkN "stand - to" "stand - ti" {- FIXME: guessed plural form -};
lin stand_up_A = compoundA (mkA "stand - up");
lin standard_A = compoundA (mkA "standard");
lin standard_N = mkN "standard" "standards";
lin standard_bearer_N = mkN "standard - bearer" "standard - bearers";
lin standardization_N = mkN "standardization" "standardizations";
lin standardize_V2 = mkV2 (mkV "standardize" "standardizes" "standardized" "standardized" "standardizing");
lin standby_N = mkN "standby" "standbys";
lin standing_A = compoundA (mkA "standing");
lin standing_N = mkN "standing" ;
lin standoffish_A = compoundA (mkA "standoffish");
lin standoffishness_N = mkN "standoffishness" ;
lin standpipe_N = mkN "standpipe" "standpipes";
lin standpoint_N = mkN "standpoint" "standpoints";
lin standstill_N = mkN "standstill" "IRREG";
lin stanford_PN = mkPN "Stanford";
lin stanley_PN = mkPN "Stanley";
lin stanza_N = mkN "stanza" "stanzas";
lin staple_N = mkN "staple" "staples";
lin staple_V2 = mkV2 (mkV "staple" "staples" "stapled" "stapled" "stapling");
lin stapler_N = mkN "stapler" "staplers";
lin stapling_machine_N = mkN "stapling - machine" "stapling - machines";
lin star_N = mkN "star" "stars";
lin star_V = mkV "star" "stars" "starred" "starred" "starring";
lin star_V2 = mkV2 (mkV "star" "stars" "starred" "starred" "starring");
lin starboard_N = mkN "starboard" "starboards";
lin starboard_V2 = mkV2 (mkV "starboard" "starboards" "starboarded" "starboarded" "starboarding");
lin starch_N = mkN "starch" ;
lin starch_V2 = mkV2 (mkV "starch" "starches" "starched" "starched" "starching");
lin starchy_A = mkA "starchy" "starchier";
lin stardom_N = mkN "stardom" ;
lin stardust_N = mkN "stardust" ;
lin stare_N = mkN "stare" "stares";
lin stare_V = mkV "stare" "stares" "stared" "stared" "staring";
lin stare_V2 = mkV2 (mkV "stare" "stares" "stared" "stared" "staring");
lin starfish_N = mkN "starfish" "starfish";
lin stargazer_N = mkN "stargazer" "stargazers";
lin staring_A = compoundA (mkA "staring");
lin staring_Adv = mkAdv "staring";
lin stark_A = compoundA (mkA "stark");
lin stark_Adv = mkAdv "stark";
lin starkers_A = compoundA (mkA "starkers");
lin starless_A = compoundA (mkA "starless");
lin starlet_N = mkN "starlet" "starlets";
lin starlight_N = mkN "starlight" ;
lin starling_N = mkN "starling" "starlings";
lin starlit_A = compoundA (mkA "starlit");
lin starry_A = mkA "starry" "starrier";
lin starry_eyed_A = compoundA (mkA "starry - eyed");
lin start_N = mkN "start" "starts";
lin start_V = mkV "start" "starts" "started" "started" "starting";
lin start_V2 = mkV2 (mkV "start" "starts" "started" "started" "starting");
lin start_VV = mkVV (mkV "start" "starts" "started" "started" "starting");
lin start_VS = mkVS (mkV "start" "starts" "started" "started" "starting");
lin starter_N = mkN "starter" "starters";
lin starting_gate_N = mkN "starting - gate" "starting - gates";
lin starting_point_N = mkN "starting - point" "starting - points";
lin starting_post_N = mkN "starting - post" "starting - posts";
lin startle_V2 = mkV2 (mkV "startle" "startles" "startled" "startled" "startling");
lin startlingly_Adv = mkAdv "startlingly";
lin starvation_N = mkN "starvation" ;
lin starve_V = mkV "starve" "starves" "starved" "starved" "starving";
lin starve_V2 = mkV2 (mkV "starve" "starves" "starved" "starved" "starving");
lin starveling_N = mkN "starveling" "starvelings";
lin stash_V2 = mkV2 (mkV "stash" "stashes" "stashed" "stashed" "stashing");
lin state_N = mkN "state" "states";
lin state_V2 = mkV2 (mkV "state" "states" "stated" "stated" "stating");
lin state_VS = mkVS (mkV "state");
lin statecraft_N = mkN "statecraft" ;
lin stated_A = compoundA (mkA "stated");
lin statehouse_N = mkN "statehouse" "statehouses";
lin stateless_A = compoundA (mkA "stateless");
lin stateliness_N = mkN "stateliness" ;
lin stately_A = mkA "stately" "statelier";
lin statement_N = mkN "statement" "statements";
lin statesman_N = mkN "statesman" "statesmen" {- FIXME: guessed plural form -};
lin statesmanlike_A = compoundA (mkA "statesmanlike");
lin statesmanship_N = mkN "statesmanship" ;
lin static_A = compoundA (mkA "static");
lin statically_Adv = mkAdv "statically";
lin statics_N = mkN "statics" "statics";
lin station_N = mkN "station" "stations";
lin station_V2 = mkV2 (mkV "station" "stations" "stationed" "stationed" "stationing");
lin station_waggon_N = mkN "station - waggon" "station - waggons";
lin stationary_A = compoundA (mkA "stationary");
lin stationer_N = mkN "stationer" "stationers";
lin stationery_N = mkN "stationery" ;
lin stationmaster_N = mkN "stationmaster" "stationmasters";
lin statistic_N = mkN "statistic" "statistics";
lin statistical_A = compoundA (mkA "statistical");
lin statistician_N = mkN "statistician" "statisticians";
lin statistics_N = mkN "statistics" "statistics";
lin statuary_A = compoundA (mkA "statuary");
lin statuary_N = mkN "statuary" ;
lin statue_N = mkN "statue" "statues";
lin statuesque_A = compoundA (mkA "statuesque");
lin statuette_N = mkN "statuette" "statuettes";
lin stature_N = mkN "stature" ;
lin status_N = mkN "status" ;
lin status_quo_N = mkN "status quo" "status qui" {- FIXME: guessed plural form -};
lin statute_N = mkN "statute" "statutes";
lin statute_book_N = mkN "statute - book" "statute - books";
lin statutory_A = compoundA (mkA "statutory");
lin staunch_A = compoundA (mkA "staunch");
lin staunch_V2 = mkV2 (mkV "staunch" "staunches" "staunched" "staunched" "staunching");
lin staunchness_N = mkN "staunchness" ;
lin stave_N = mkN "stave" "staves";
lin stave_V = mkV "stave" "staves" "staved" "staved" "staving";
lin stave_V2 = mkV2 (mkV "stave" "staves" "staved" "staved" "staving");
lin stay_N = mkN "stay" "stays";
lin stay_V = mkV "stay" "stays" "stayed" "stayed" "staying";
lin stay_V2 = mkV2 (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_VA = mkVA (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_VS = mkVS (mkV "stay" "stays" "stayed" "stayed" "staying");
lin stay_at_home_N = mkN "stay - at - home" "stay - at - homes";
lin stayer_N = mkN "stayer" "stayers";
lin std_PN = mkPN "Std";
lin stead_N = mkN "stead" ;
lin steadfast_A = compoundA (mkA "steadfast");
lin steadfastness_N = mkN "steadfastness" ;
lin steadily_Adv = mkAdv "steadily";
lin steadiness_N = mkN "steadiness" ;
lin steady_A = mkA "steady" "steadier";
lin steady_Adv = mkAdv "steady";
lin steady_N = mkN "steady" "steadies";
lin steady_V = mkV "steady" "steadies" "steadied" "steadied" "steadying";
lin steady_V2 = mkV2 (mkV "steady" "steadies" "steadied" "steadied" "steadying");
lin steak_N = mkN "steak" "steaks";
lin steal_V = IrregEng.steal_V;
lin steal_V2 = mkV2 (IrregEng.steal_V);
lin stealth_N = mkN "stealth" ;
lin stealthily_Adv = mkAdv "stealthily";
lin stealthy_A = mkA "stealthy" "stealthier";
lin steam_N = mkN "steam" ;
lin steam_V = mkV "steam" "steams" "steamed" "steamed" "steaming";
lin steam_V2 = mkV2 (mkV "steam" "steams" "steamed" "steamed" "steaming");
lin steam_boiler_N = mkN "steam - boiler" "steam - boilers";
lin steam_coal_N = mkN "steam - coal" ;
lin steam_engine_N = mkN "steam - engine" "steam - engines";
lin steam_heat_N = mkN "steam - heat" ;
lin steam_heat_V2 = mkV2 (mkV "steam - heat" "steam - heats" "steam - heated" "steam - heated" "steam - heating");
lin steamboat_N = mkN "steamboat" "steamboats";
lin steamer_N = mkN "steamer" "steamers";
lin steamroller_N = mkN "steamroller" "steamrollers";
lin steamroller_V2 = mkV2 (mkV "steamroller" "steamrollers" "steamrollered" "steamrollered" "steamrollering");
lin steamship_N = mkN "steamship" "steamships";
lin steamy_A = mkA "steamy" "steamier";
lin steed_N = mkN "steed" "steeds";
lin steel_N = mkN "steel" ;
lin steel_V2 = mkV2 (mkV "steel" "steels" "steeled" "steeled" "steeling");
lin steel_clad_A = compoundA (mkA "steel - clad");
lin steel_plated_A = compoundA (mkA "steel - plated");
lin steelworks_N = mkN "steelworks" "steelworks";
lin steely_A = mkA "steely" "steelier";
lin steelyard_N = mkN "steelyard" "steelyards";
lin steenbok_N = mkN "steenbok" "steenboks";
lin steep_A = mkA "steep" "steeper";
lin steep_V = mkV "steep" "steeps" "steeped" "steeped" "steeping";
lin steep_V2 = mkV2 (mkV "steep" "steeps" "steeped" "steeped" "steeping");
lin steepen_V = mkV "steepen" "steepens" "steepened" "steepened" "steepening";
lin steepen_V2 = mkV2 (mkV "steepen" "steepens" "steepened" "steepened" "steepening");
lin steepish_A = compoundA (mkA "steepish");
lin steeple_N = mkN "steeple" "steeples";
lin steeplechase_N = mkN "steeplechase" "steeplechases";
lin steeplechaser_N = mkN "steeplechaser" "steeplechasers";
lin steeplejack_N = mkN "steeplejack" "steeplejacks";
lin steepness_N = mkN "steepness" ;
lin steer_N = mkN "steer" "steers";
lin steer_V = mkV "steer" "steers" "steered" "steered" "steering";
lin steer_V2 = mkV2 (mkV "steer" "steers" "steered" "steered" "steering");
lin steerage_N = mkN "steerage" "steerages";
lin steerageway_N = mkN "steerageway" ;
lin steering_gear_N = mkN "steering - gear" ;
lin steering_wheel_N = mkN "steering - wheel" "steering - wheels";
lin steersman_N = mkN "steersman" "steersmen" {- FIXME: guessed plural form -};
lin stele_N = mkN "stele" "IRREG";
lin stella_PN = mkPN "Stella";
lin stellar_A = compoundA (mkA "stellar");
lin stem_N = mkN "stem" "stems";
lin stem_V = mkV "stem" "stems" "stemmed" "stemmed" "stemming";
lin stem_V2 = mkV2 (mkV "stem" "stems" "stemmed" "stemmed" "stemming");
lin stemmed_A = compoundA (mkA "stemmed");
lin sten_PN = mkPN "Sten";
lin stench_N = mkN "stench" "stenches";
lin stencil_N = mkN "stencil" "stencils";
lin stencil_V2 = mkV2 (mkV "stencil" "stencils" "stencilled" "stencilled" "stencilling");
lin stenographer_N = mkN "stenographer" "stenographers";
lin stenography_N = mkN "stenography" ;
lin stentorian_A = compoundA (mkA "stentorian");
lin step_N = mkN "step" "steps";
lin step_V = mkV "step" "steps" "stepped" "stepped" "stepping";
lin step_V2 = mkV2 (mkV "step" "steps" "stepped" "stepped" "stepping");
lin stepbrother_N = mkN "stepbrother" "stepbrothers";
lin stepchild_N = mkN "stepchild" "stepchildren" {- FIXME: guessed plural form -};
lin stepdaughter_N = mkN "stepdaughter" "stepdaughters";
lin stepfather_N = mkN "stepfather" "stepfathers";
lin stephanie_PN = mkPN "Stephanie";
lin stephen_PN = mkPN "Stephen";
lin stepladder_N = mkN "stepladder" "stepladders";
lin stepmother_N = mkN "stepmother" "stepmothers";
lin stepparent_N = mkN "stepparent" "stepparents";
lin steppe_N = mkN "steppe" "steppes";
lin stepping_stone_N = mkN "stepping - stone" "stepping - stones";
lin stepsister_N = mkN "stepsister" "stepsisters";
lin stepson_N = mkN "stepson" "stepsons";
lin stereo_N = mkN "stereo" "stereos";
lin stereophonic_A = compoundA (mkA "stereophonic");
lin stereoscope_N = mkN "stereoscope" "stereoscopes";
lin stereoscopic_A = compoundA (mkA "stereoscopic");
lin stereotype_N = mkN "stereotype" "stereotypes";
lin stereotype_V2 = mkV2 (mkV "stereotype" "stereotypes" "stereotyped" "stereotyped" "stereotyping");
lin sterile_A = compoundA (mkA "sterile");
lin sterility_N = mkN "sterility" ;
lin sterilization_N = mkN "sterilization" ;
lin sterilize_V = mkV "sterilize";
lin sterilize_V2 = mkV2 (mkV "sterilize" "sterilizes" "sterilized" "sterilized" "sterilizing");
lin sterling_A = compoundA (mkA "sterling");
lin sterling_N = mkN "sterling" ;
lin stern_A = mkA "stern" "sterner";
lin stern_N = mkN "stern" "sterns";
lin sternness_N = mkN "sternness" ;
lin sternum_N = mkN "sternum" "sternums";
lin sternwheeler_N = mkN "sternwheeler" "sternwheelers";
lin stertorous_A = compoundA (mkA "stertorous");
lin stethoscope_N = mkN "stethoscope" "stethoscopes";
lin stetson_N = mkN "stetson" "stetsons";
lin steve_PN = mkPN "Steve";
lin stevedore_N = mkN "stevedore" "stevedores";
lin steven_PN = mkPN "Steven";
lin stevenage_PN = mkPN "Stevenage";
lin stevenston_PN = mkPN "Stevenston";
lin stew_N = mkN "stew" "stews";
lin stew_V = mkV "stew" "stews" "stewed" "stewed" "stewing";
lin stew_V2 = mkV2 (mkV "stew" "stews" "stewed" "stewed" "stewing");
lin steward_N = mkN "steward" "stewards";
lin stewardess_N = mkN "stewardess" "stewardesses";
lin stewardship_N = mkN "stewardship" ;
lin stewart_PN = mkPN "Stewart";
lin stewed_A = compoundA (mkA "stewed");
lin steyning_PN = mkPN "Steyning";
lin stick_N = mkN "stick" "sticks";
lin stick_V = IrregEng.stick_V;
lin stick_V2 = mkV2 (mkV "stick" "sticks" "sticked" "sticked" "sticking");
lin stick_in_the_mud_A = compoundA (mkA "stick - in - the - mud");
lin stick_in_the_mud_N = mkN "stick - in - the - mud" "IRREG";
lin stick_on_A = compoundA (mkA "stick - on");
lin stick_up_N = mkN "stick - up" "stick - ups";
lin sticker_N = mkN "sticker" "stickers";
lin stickily_Adv = mkAdv "stickily";
lin stickiness_N = mkN "stickiness" ;
lin sticking_plaster_N = mkN "sticking - plaster" "sticking - plasters";
lin stickler_N = mkN "stickler" "sticklers";
lin sticky_A = mkA "sticky" "stickier";
lin stiff_A = mkA "stiff" "stiffer";
lin stiff_Adv = mkAdv "stiff";
lin stiff_N = mkN "stiff" "stiffs";
lin stiff_necked_A = compoundA (mkA "stiff - necked");
lin stiffen_V = mkV "stiffen" "stiffens" "stiffened" "stiffened" "stiffening";
lin stiffen_V2 = mkV2 (mkV "stiffen" "stiffens" "stiffened" "stiffened" "stiffening");
lin stiffener_N = mkN "stiffener" "stiffeners";
lin stiffening_N = mkN "stiffening" "stiffenings";
lin stiffness_N = mkN "stiffness" ;
lin stifle_V = mkV "stifle" "stifles" "stifled" "stifled" "stifling";
lin stifle_V2 = mkV2 (mkV "stifle" "stifles" "stifled" "stifled" "stifling");
lin stigma_N = mkN "stigma" "stigmas";
lin stigmatize_V2 = mkV2 (mkV "stigmatize" "stigmatizes" "stigmatized" "stigmatized" "stigmatizing");
lin stile_N = mkN "stile" "stiles";
lin stiletto_N = mkN "stiletto" "stilettos";
lin still_A = mkA "still" "stiller";
lin still_Adv = mkAdv "still";
lin still_N = mkN "still" "stills";
lin still_V2 = mkV2 (mkV "still" "stills" "stilled" "stilled" "stilling");
lin still_life_N = mkN "still - life" "still - lifes";
lin still_room_N = mkN "still - room" "still - rooms";
lin stillbirth_N = mkN "stillbirth" "stillbirths";
lin stillborn_A = compoundA (mkA "stillborn");
lin stillness_N = mkN "stillness" ;
lin stilly_A = compoundA (mkA "stilly");
lin stilt_N = mkN "stilt" "stilts";
lin stilted_A = compoundA (mkA "stilted");
lin stilton_N = mkN "stilton" "stiltons";
lin stimulant_N = mkN "stimulant" "stimulants";
lin stimulate_V2 = mkV2 (mkV "stimulate" "stimulates" "stimulated" "stimulated" "stimulating");
lin stimulating_A = compoundA (mkA "stimulating");
lin stimulation_N = mkN "stimulation" "stimulations";
lin stimulus_N = mkN "stimulus" "stimuli" {- FIXME: guessed plural form -};
lin sting_N = mkN "sting" "stings";
lin sting_V = IrregEng.sting_V;
lin sting_V2 = mkV2 (IrregEng.sting_V);
lin stinger_N = mkN "stinger" "stingers";
lin stingily_Adv = mkAdv "stingily";
lin stinginess_N = mkN "stinginess" ;
lin stingless_A = compoundA (mkA "stingless");
lin stingray_N = mkN "stingray" "stingrays";
lin stingy_A = mkA "stingy" "stingier";
lin stink_N = mkN "stink" "stinks";
lin stink_V = IrregEng.stink_V;
lin stink_V2 = mkV2 (IrregEng.stink_V);
lin stinker_N = mkN "stinker" "stinkers";
lin stint_N = mkN "stint" "stints";
lin stint_V = mkV "stint" "stints" "stinted" "stinted" "stinting";
lin stint_V2 = mkV2 (mkV "stint" "stints" "stinted" "stinted" "stinting");
lin stipend_N = mkN "stipend" "stipends";
lin stipendiary_A = compoundA (mkA "stipendiary");
lin stipendiary_N = mkN "stipendiary" "stipendiaries";
lin stipple_V2 = mkV2 (mkV "stipple" "stipples" "stippled" "stippled" "stippling");
lin stipulate_V = mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating";
lin stipulate_V2 = mkV2 (mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating");
lin stipulate_VS = mkVS (mkV "stipulate" "stipulates" "stipulated" "stipulated" "stipulating");
lin stipulation_N = mkN "stipulation" "stipulations";
lin stir_N = mkN "stir" "stirs";
lin stir_V = mkV "stir" "stirs" "stirred" "stirred" "stirring";
lin stir_V2 = mkV2 (mkV "stir" "stirs" "stirred" "stirred" "stirring");
lin stirling_PN = mkPN "Stirling";
lin stirring_A = compoundA (mkA "stirring");
lin stirrup_N = mkN "stirrup" "stirrups";
lin stirrup_cup_N = mkN "stirrup - cup" "stirrup - cups";
lin stitch_N = mkN "stitch" "stitches";
lin stitch_V = mkV "stitch" "stitches" "stitched" "stitched" "stitching";
lin stitch_V2 = mkV2 (mkV "stitch" "stitches" "stitched" "stitched" "stitching");
lin stoat_N = mkN "stoat" "stoats";
lin stochastic_A = compoundA (mkA "stochastic");
lin stochastically_Adv = mkAdv "stochastically";
lin stock_N = mkN "stock" "stocks";
lin stock_V2 = mkV2 (mkV "stock" "stocks" "stocked" "stocked" "stocking");
lin stock_cube_N = mkN "stock - cube" "stock - cubes";
lin stock_farmer_N = mkN "stock - farmer" "stock - farmers";
lin stock_in_trade_N = mkN "stock - in - trade" "stock - in - trades";
lin stock_list_N = mkN "stock - list" "stock - lists";
lin stock_still_Adv = mkAdv "stock - still";
lin stockade_N = mkN "stockade" "stockades";
lin stockade_V2 = mkV2 (mkV "stockade" "stockades" "stockaded" "stockaded" "stockading");
lin stockbreeder_N = mkN "stockbreeder" "stockbreeders";
lin stockbroker_N = mkN "stockbroker" "stockbrokers";
lin stockcar_N = mkN "stockcar" "stockcars";
lin stockfish_N = mkN "stockfish" "stockfish";
lin stockholder_N = mkN "stockholder" "stockholders";
lin stockholding_N = mkN "stockholding" "stockholdings";
lin stockholm_PN = mkPN "Stockholm";
lin stockily_Adv = mkAdv "stockily";
lin stockinette_N = mkN "stockinette" ;
lin stocking_N = mkN "stocking" "stockings";
lin stockinged_A = compoundA (mkA "stockinged");
lin stockist_N = mkN "stockist" "stockists";
lin stockjobber_N = mkN "stockjobber" "stockjobbers";
lin stockpile_N = mkN "stockpile" "stockpiles";
lin stockpile_V2 = mkV2 (mkV "stockpile");
lin stockpiling_N = mkN "stockpiling" ;
lin stockport_PN = mkPN "Stockport";
lin stockpot_N = mkN "stockpot" "stockpots";
lin stockroom_N = mkN "stockroom" "stockrooms";
lin stocksbridge_PN = mkPN "Stocksbridge";
lin stocktaking_N = mkN "stocktaking" "stocktakings";
lin stocky_A = mkA "stocky" "stockier";
lin stockyard_N = mkN "stockyard" "stockyards";
lin stodge_N = mkN "stodge" ;
lin stodginess_N = mkN "stodginess" ;
lin stodgy_A = mkA "stodgy" "stodgier";
lin stoep_N = mkN "stoep" "stoeps";
lin stoic_N = mkN "stoic" "stoics";
lin stoical_A = compoundA (mkA "stoical");
lin stoicism_N = mkN "stoicism" ;
lin stoke_V = mkV "stoke" "stokes" "stoked" "stoked" "stoking";
lin stoke_V2 = mkV2 (mkV "stoke" "stokes" "stoked" "stoked" "stoking");
lin stoke_on_trent_PN = mkPN "Stoke - on - trent";
lin stokehold_N = mkN "stokehold" "stokeholds";
lin stokehole_N = mkN "stokehole" "stokeholes";
lin stoker_N = mkN "stoker" "stokers";
lin stole_N = mkN "stole" "stoles";
lin stolen_A = compoundA (mkA "stolen");
lin stolid_A = compoundA (mkA "stolid");
lin stolidity_N = mkN "stolidity" ;
lin stolidness_N = mkN "stolidness" ;
lin stomach_N = mkN "stomach" "stomachs";
lin stomach_V2 = mkV2 (mkV "stomach" "stomachs" "stomached" "stomached" "stomaching");
lin stomach_ache_N = mkN "stomach - ache" "stomach - aches";
lin stomach_pump_N = mkN "stomach - pump" "stomach - pumps";
lin stomp_N = mkN "stomp" "stomps";
lin stomp_V = mkV "stomp" "stomps" "stomped" "stomped" "stomping";
lin stomp_V2 = mkV2 (mkV "stomp" "stomps" "stomped" "stomped" "stomping");
lin stone_N = mkN "stone" "stones";
lin stone_PN = mkPN "Stone";
lin stone_V2 = mkV2 (mkV "stone" "stones" "stoned" "stoned" "stoning");
lin stone_blind_A = compoundA (mkA "stone - blind");
lin stone_cold_A = compoundA (mkA "stone - cold");
lin stone_dead_A = compoundA (mkA "stone - dead");
lin stone_deaf_A = compoundA (mkA "stone - deaf");
lin stone_fruit_N = mkN "stone - fruit" "stone - fruits";
lin stone_pit_N = mkN "stone - pit" "stone - pits";
lin stone_sober_A = compoundA (mkA "stone - sober");
lin stonebreaker_N = mkN "stonebreaker" "stonebreakers";
lin stoned_A = compoundA (mkA "stoned");
lin stonehouse_PN = mkPN "Stonehouse";
lin stoneless_A = compoundA (mkA "stoneless");
lin stonemason_N = mkN "stonemason" "stonemasons";
lin stonewall_V2 = mkV2 (mkV "stonewall" "stonewalls" "stonewalled" "stonewalled" "stonewalling");
lin stonewaller_N = mkN "stonewaller" "stonewallers";
lin stonewalling_N = mkN "stonewalling" ;
lin stoneware_N = mkN "stoneware" ;
lin stonework_N = mkN "stonework" ;
lin stonily_Adv = mkAdv "stonily";
lin stony_A = mkA "stony" "stonier";
lin stony_broke_A = compoundA (mkA "stony - broke");
lin stood_V2V = mkV2V (mkV "stood") noPrep to_Prep ;
lin stooge_N = mkN "stooge" "stooges";
lin stooge_V = mkV "stooge" "stooges" "stooged" "stooged" "stooging";
lin stool_N = mkN "stool" "stools";
lin stoop_N = mkN "stoop" "stoops";
lin stoop_V = mkV "stoop" "stoops" "stooped" "stooped" "stooping";
lin stoop_V2 = mkV2 (mkV "stoop" "stoops" "stooped" "stooped" "stooping");
lin stop_N = mkN "stop" "stops";
lin stop_V = mkV "stop" "stops" "stopped" "stopped" "stopping";
lin stop_V2 = mkV2 (mkV "stop" "stops" "stopped" "stopped" "stopping");
lin stop_VV = ingVV (mkV "stop" "stops" "stopped" "stopped" "stopping");
lin stopcock_N = mkN "stopcock" "stopcocks";
lin stopgap_N = mkN "stopgap" "stopgaps";
lin stopover_N = mkN "stopover" "stopovers";
lin stoppage_N = mkN "stoppage" "stoppages";
lin stopper_N = mkN "stopper" "stoppers";
lin stopping_N = mkN "stopping" "stoppings";
lin stopwatch_N = mkN "stopwatch" "stopwatches";
lin storage_N = mkN "storage" ;
lin store_N = mkN "store" "stores";
lin store_V2 = mkV2 (mkV "store" "stores" "stored" "stored" "storing");
lin storehouse_N = mkN "storehouse" "storehouses";
lin storeroom_N = mkN "storeroom" "storerooms";
lin storey_N = mkN "storey" "storeys";
lin storeyed_A = compoundA (mkA "storeyed");
lin storied_A = compoundA (mkA "storied");
lin stork_N = mkN "stork" "storks";
lin storm_N = mkN "storm" "storms";
lin storm_V = mkV "storm" "storms" "stormed" "stormed" "storming";
lin storm_V2 = mkV2 (mkV "storm" "storms" "stormed" "stormed" "storming");
lin storm_beaten_A = compoundA (mkA "storm - beaten");
lin storm_bound_A = compoundA (mkA "storm - bound");
lin storm_centre_N = mkN "storm - centre" "storm - centres";
lin storm_cloud_N = mkN "storm - cloud" "storm - clouds";
lin storm_cone_N = mkN "storm - cone" "storm - cones";
lin storm_lantern_N = mkN "storm - lantern" "storm - lanterns";
lin storm_signal_N = mkN "storm - signal" "storm - signals";
lin storm_tossed_A = compoundA (mkA "storm - tossed");
lin storm_trooper_N = mkN "storm - trooper" "storm - troopers";
lin stormily_Adv = mkAdv "stormily";
lin stormproof_A = compoundA (mkA "stormproof");
lin stormy_A = mkA "stormy" "stormier";
lin stornoway_PN = mkPN "Stornoway";
lin story_N = mkN "story" "stories";
lin storyteller_N = mkN "storyteller" "storytellers";
lin stotfold_PN = mkPN "Stotfold";
lin stoup_N = mkN "stoup" "stoups";
lin stourbridge_PN = mkPN "Stourbridge";
lin stourport_on_severn_PN = mkPN "Stourport - on - severn";
lin stout_A = mkA "stout" "stouter";
lin stout_N = mkN "stout" ;
lin stouthearted_A = compoundA (mkA "stouthearted");
lin stoutness_N = mkN "stoutness" ;
lin stove_N = mkN "stove" "stoves";
lin stovepipe_N = mkN "stovepipe" "stovepipes";
lin stow_V2 = mkV2 (mkV "stow" "stows" "stowed" "stowed" "stowing");
lin stowaway_N = mkN "stowaway" "stowaways";
lin stowmarket_PN = mkPN "Stowmarket";
lin straddle_V = mkV "straddle" "straddles" "straddled" "straddled" "straddling";
lin straddle_V2 = mkV2 (mkV "straddle" "straddles" "straddled" "straddled" "straddling");
lin strafe_V2 = mkV2 (mkV "strafe" "strafes" "strafed" "strafed" "strafing");
lin straggle_V = mkV "straggle" "straggles" "straggled" "straggled" "straggling";
lin straggler_N = mkN "straggler" "stragglers";
lin straggly_A = mkA "straggly" "stragglier";
lin straight_A = compoundA (mkA "straight");
lin straight_Adv = mkAdv "straight";
lin straight_N = mkN "straight" "straights";
lin straighten_V = mkV "straighten" "straightens" "straightened" "straightened" "straightening";
lin straighten_V2 = mkV2 (mkV "straighten" "straightens" "straightened" "straightened" "straightening");
lin straightforward_A = compoundA (mkA "straightforward");
lin straightness_N = mkN "straightness" ;
lin straightway_Adv = mkAdv "straightway";
lin strain_N = mkN "strain" "strains";
lin strain_V = mkV "strain" "strains" "strained" "strained" "straining";
lin strain_V2 = mkV2 (mkV "strain" "strains" "strained" "strained" "straining");
lin strained_A = compoundA (mkA "strained");
lin strainer_N = mkN "strainer" "strainers";
lin strait_A = compoundA (mkA "strait");
lin strait_N = mkN "strait" "straits";
lin strait_laced_A = compoundA (mkA "strait - laced");
lin straiten_V2 = mkV2 (mkV "straiten" "straitens" "straitened" "straitened" "straitening");
lin straitjacket_N = mkN "straitjacket" "straitjackets";
lin strand_N = mkN "strand" "strands";
lin strand_V = mkV "strand" "strands" "stranded" "stranded" "stranding";
lin strand_V2 = mkV2 (mkV "strand" "strands" "stranded" "stranded" "stranding");
lin strange_A = mkA "strange" "stranger";
lin strangeness_N = mkN "strangeness" ;
lin stranger_N = mkN "stranger" "strangers";
lin strangle_V2 = mkV2 (mkV "strangle" "strangles" "strangled" "strangled" "strangling");
lin stranglehold_N = mkN "stranglehold" "strangleholds";
lin strangulation_N = mkN "strangulation" ;
lin stranraer_PN = mkPN "Stranraer";
lin strap_N = mkN "strap" "straps";
lin strap_V2 = mkV2 (mkV "strap" "straps" "strapped" "strapped" "strapping");
lin straphanger_N = mkN "straphanger" "straphangers";
lin strapping_A = compoundA (mkA "strapping");
lin strapping_N = mkN "strapping" "IRREG";
lin strasbourg_PN = mkPN "Strasbourg";
lin stratagem_N = mkN "stratagem" "stratagems";
lin strategic_A = compoundA (mkA "strategic");
lin strategical_A = compoundA (mkA "strategical");
lin strategics_N = mkN "strategics" "strategics";
lin strategist_N = mkN "strategist" "strategists";
lin strategy_N = mkN "strategy" "strategies";
lin stratford_on_avon_PN = mkPN "Stratford - on - avon";
lin strathaven_PN = mkPN "Strathaven";
lin strathclyde_PN = mkPN "Strathclyde";
lin stratification_N = mkN "stratification" "stratifications";
lin stratify_V = mkV "stratify" "stratifies" "stratified" "stratified" "stratifying";
lin stratify_V2 = mkV2 (mkV "stratify" "stratifies" "stratified" "stratified" "stratifying");
lin stratosphere_N = mkN "stratosphere" "stratospheres";
lin stratum_N = mkN "stratum" "strata" {- FIXME: guessed plural form -};
lin straw_N = mkN "straw" "straws";
lin straw_V2 = mkV2 (mkV "straw" "straws" "strawed" "strawed" "strawing");
lin straw_coloured_A = compoundA (mkA "straw - coloured");
lin strawberry_N = mkN "strawberry" "strawberries";
lin strawboard_N = mkN "strawboard" ;
lin stray_N = mkN "stray" "strays";
lin stray_V = mkV "stray" "strays" "strayed" "strayed" "straying";
lin streak_N = mkN "streak" "streaks";
lin streak_V = mkV "streak" "streaks" "streaked" "streaked" "streaking";
lin streak_V2 = mkV2 (mkV "streak" "streaks" "streaked" "streaked" "streaking");
lin streaky_A = mkA "streaky" "streakier";
lin stream_N = mkN "stream" "streams";
lin stream_V = mkV "stream" "streams" "streamed" "streamed" "streaming";
lin streamer_N = mkN "streamer" "streamers";
lin streamlet_N = mkN "streamlet" "streamlets";
lin streamline_V = mkV "streamline";
lin streamline_V2 = mkV2 (mkV "streamline" "streamlines" "streamlined" "streamlined" "streamlining");
lin streamlined_A = compoundA (mkA "streamlined");
lin street_N = mkN "street" "streets";
lin street_PN = mkPN "Street";
lin street_girl_N = mkN "street - girl" "street - girls";
lin street_urchin_N = mkN "street - urchin" "street - urchins";
lin streetcar_N = mkN "streetcar" "streetcars";
lin streetwalker_N = mkN "streetwalker" "streetwalkers";
lin strength_N = mkN "strength" "strengths";
lin strengthen_V = mkV "strengthen" "strengthens" "strengthened" "strengthened" "strengthening";
lin strengthen_V2 = mkV2 (mkV "strengthen" "strengthens" "strengthened" "strengthened" "strengthening");
lin strenuous_A = compoundA (mkA "strenuous");
lin strenuousness_N = mkN "strenuousness" ;
lin streptococcus_N = mkN "streptococcus" "streptococci" {- FIXME: guessed plural form -};
lin streptomycin_N = mkN "streptomycin" ;
lin stress_N = mkN "stress" "stresses";
lin stress_V2 = mkV2 (mkV "stress" "stresses" "stressed" "stressed" "stressing");
lin stress_VS = mkVS (mkV "stress");
lin stress_mark_N = mkN "stress - mark" "stress - marks";
lin stretch_N = mkN "stretch" "stretches";
lin stretch_V = mkV "stretch" "stretches" "stretched" "stretched" "stretching";
lin stretch_V2 = mkV2 (mkV "stretch" "stretches" "stretched" "stretched" "stretching");
lin stretcher_N = mkN "stretcher" "stretchers";
lin stretcher_bearer_N = mkN "stretcher - bearer" "stretcher - bearers";
lin stretcher_party_N = mkN "stretcher - party" "stretcher - parties";
lin stretford_PN = mkPN "Stretford";
lin strew_V2 = mkV2 (mkV "strew" "strews" "strewed" "strewed" "strewing");
lin striated_A = compoundA (mkA "striated");
lin stricken_A = compoundA (mkA "stricken");
lin strict_A = mkA "strict" "stricter";
lin strictness_N = mkN "strictness" ;
lin stricture_N = mkN "stricture" "strictures";
lin stride_N = mkN "stride" "strides";
lin stride_V = IrregEng.stride_V;
lin stride_V2 = mkV2 (IrregEng.stride_V);
lin strident_A = compoundA (mkA "strident");
lin stridulate_V = mkV "stridulate" "stridulates" "stridulated" "stridulated" "stridulating";
lin stridulation_N = mkN "stridulation" "stridulations";
lin strife_N = mkN "strife" ;
lin strike_N = mkN "strike" "strikes";
lin strike_V = IrregEng.strike_V;
lin strike_V2 = mkV2 (IrregEng.strike_V);
lin strike_leader_N = mkN "strike - leader" "strike - leaders";
lin strike_pay_N = mkN "strike - pay" ;
lin strikebound_A = compoundA (mkA "strikebound");
lin strikebreaker_N = mkN "strikebreaker" "strikebreakers";
lin striker_N = mkN "striker" "strikers";
lin striking_A = compoundA (mkA "striking");
lin string_N = mkN "string" "strings";
lin string_V = IrregEng.string_V;
lin string_V2 = mkV2 (IrregEng.string_V);
lin stringency_N = mkN "stringency" "stringencies";
lin stringent_A = compoundA (mkA "stringent");
lin stringy_A = mkA "stringy" "stringier";
lin strip_N = mkN "strip" "strips";
lin strip_V = mkV "strip" "strips" "stripped" "stripped" "stripping";
lin strip_V2 = mkV2 (mkV "strip" "strips" "stripped" "stripped" "stripping");
lin strip_lighting_N = mkN "strip - lighting" ;
lin strip_poker_N = mkN "strip - poker" ;
lin strip_show_N = mkN "strip - show" "strip - shows";
lin stripe_N = mkN "stripe" "stripes";
lin striped_A = compoundA (mkA "striped");
lin stripling_N = mkN "stripling" "striplings";
lin stripper_N = mkN "stripper" "strippers";
lin striptease_N = mkN "striptease" ;
lin stripy_A = mkA "stripy" "stripier";
lin strive_V = IrregEng.strive_V;
lin strive_VV = mkVV (IrregEng.strive_V);
lin striver_N = mkN "striver" "strivers";
lin stroboscope_N = mkN "stroboscope" "stroboscopes";
lin stroke_N = mkN "stroke" "strokes";
lin stroke_V2 = mkV2 (mkV "stroke" "strokes" "stroked" "stroked" "stroking");
lin stroll_N = mkN "stroll" "strolls";
lin stroll_V = mkV "stroll" "strolls" "strolled" "strolled" "strolling";
lin stroller_N = mkN "stroller" "strollers";
lin strong_A = mkA "strong" "stronger";
lin strong_arm_A = compoundA (mkA "strong - arm");
lin strong_boned_A = compoundA (mkA "strong - boned");
lin strong_minded_A = compoundA (mkA "strong - minded");
lin strongbox_N = mkN "strongbox" "strongboxes";
lin stronghold_N = mkN "stronghold" "strongholds";
lin strongroom_N = mkN "strongroom" "strongrooms";
lin strontium_N = mkN "strontium" ;
lin strop_N = mkN "strop" "strops";
lin strop_V2 = mkV2 (mkV "strop" "strops" "stropped" "stropped" "stropping");
lin strophe_N = mkN "strophe" "strophes";
lin stroppy_A = compoundA (mkA "stroppy");
lin stroud_PN = mkPN "Stroud";
lin struck_A = compoundA (mkA "struck");
lin structural_A = compoundA (mkA "structural");
lin structure_N = mkN "structure" "structures";
lin structure_V2 = mkV2 (mkV "structure");
lin structured_A = compoundA (mkA "structured");
lin strudel_N = mkN "strudel" "strudels";
lin struggle_N = mkN "struggle" "struggles";
lin struggle_V = mkV "struggle" "struggles" "struggled" "struggled" "struggling";
lin struggle_VV = mkVV (mkV "struggle" "struggles" "struggled" "struggled" "struggling");
lin struggle_VS = mkVS (mkV "struggle" "struggles" "struggled" "struggled" "struggling");
lin strum_N = mkN "strum" "strums";
lin strum_V = mkV "strum" "strums" "strummed" "strummed" "strumming";
lin strum_V2 = mkV2 (mkV "strum" "strums" "strummed" "strummed" "strumming");
lin strumpet_N = mkN "strumpet" "strumpets";
lin strut_N = mkN "strut" "struts";
lin strut_V = mkV "strut" "struts" "strutted" "strutted" "strutting";
lin strychnine_N = mkN "strychnine" ;
lin stuart_PN = mkPN "Stuart";
lin stub_N = mkN "stub" "stubs";
lin stub_V2 = mkV2 (mkV "stub" "stubs" "stubbed" "stubbed" "stubbing");
lin stubble_N = mkN "stubble" ;
lin stubbly_A = mkA "stubbly" "stubblier";
lin stubborn_A = compoundA (mkA "stubborn");
lin stubbornness_N = mkN "stubbornness" ;
lin stubby_A = mkA "stubby" "stubbier";
lin stucco_N = mkN "stucco" "stuccos";
lin stucco_V2 = mkV2 (mkV "stucco" "stuccos" "stuccoed" "stuccoed" "stuccoing");
lin stuck_V2 = mkV2 (IrregEng.stick_V);
lin stuck_up_A = compoundA (mkA "stuck - up");
lin stud_N = mkN "stud" "studs";
lin stud_V2 = mkV2 (mkV "stud" "studs" "studded" "studded" "studding");
lin stud_farm_N = mkN "stud - farm" "stud - farms";
lin stud_mare_N = mkN "stud - mare" "stud - mares";
lin studbook_N = mkN "studbook" "studbooks";
lin student_N = mkN "student" "students";
lin studied_A = compoundA (mkA "studied");
lin studio_N = mkN "studio" "studios";
lin studious_A = compoundA (mkA "studious");
lin studiousness_N = mkN "studiousness" ;
lin studley_PN = mkPN "Studley";
lin study_N = mkN "study" "studies";
lin study_V = mkV "study" "studies" "studied" "studied" "studying";
lin study_V2 = mkV2 (mkV "study" "studies" "studied" "studied" "studying");
lin stuff_N = mkN "stuff" "stuffs";
lin stuff_V2 = mkV2 (mkV "stuff" "stuffs" "stuffed" "stuffed" "stuffing");
lin stuffily_Adv = mkAdv "stuffily";
lin stuffiness_N = mkN "stuffiness" ;
lin stuffing_N = mkN "stuffing" ;
lin stuffy_A = mkA "stuffy" "stuffier";
lin stultification_N = mkN "stultification" "stultifications";
lin stultify_V2 = mkV2 (mkV "stultify" "stultifies" "stultified" "stultified" "stultifying");
lin stumble_N = mkN "stumble" "stumbles";
lin stumble_V = mkV "stumble" "stumbles" "stumbled" "stumbled" "stumbling";
lin stumbling_block_N = mkN "stumbling - block" "stumbling - blocks";
lin stump_N = mkN "stump" "stumps";
lin stump_V = mkV "stump" "stumps" "stumped" "stumped" "stumping";
lin stump_V2 = mkV2 (mkV "stump" "stumps" "stumped" "stumped" "stumping");
lin stumper_N = mkN "stumper" "stumpers";
lin stumpy_A = mkA "stumpy" "stumpier";
lin stun_V2 = mkV2 (mkV "stun" "stuns" "stunned" "stunned" "stunning");
lin stunne_V2V = mkV2V (mkV "stunne") noPrep to_Prep ;
lin stunner_N = mkN "stunner" "stunners";
lin stunning_A = compoundA (mkA "stunning");
lin stunt_N = mkN "stunt" "stunts";
lin stunt_V2 = mkV2 (mkV "stunt" "stunts" "stunted" "stunted" "stunting");
lin stupefaction_N = mkN "stupefaction" ;
lin stupefy_V2 = mkV2 (mkV "stupefy" "stupefies" "stupefied" "stupefied" "stupefying");
lin stupendous_A = compoundA (mkA "stupendous");
lin stupid_A = compoundA (mkA "stupid");
lin stupid_N = mkN "stupid" "IRREG";
lin stupidity_N = mkN "stupidity" "stupidities";
lin stupify_V2 = mkV2 (mkV "stupify" "stupifies" "stupified" "stupified" "stupifying");
lin stupifying_A = compoundA (mkA "stupifying");
lin stupor_N = mkN "stupor" "stupors";
lin sturdily_Adv = mkAdv "sturdily";
lin sturdiness_N = mkN "sturdiness" ;
lin sturdy_A = mkA "sturdy" "sturdier";
lin sturgeon_N = mkN "sturgeon" "sturgeons";
lin stutter_N = mkN "stutter" "stutters";
lin stutter_V = mkV "stutter" "stutters" "stuttered" "stuttered" "stuttering";
lin stutter_V2 = mkV2 (mkV "stutter" "stutters" "stuttered" "stuttered" "stuttering");
lin stutterer_N = mkN "stutterer" "stutterers";
lin stutteringly_Adv = mkAdv "stutteringly";
lin stuttgart_PN = mkPN "Stuttgart";
lin sty_N = mkN "sty" "sties";
lin stye_N = mkN "stye" "styes";
lin stygian_A = compoundA (mkA "stygian");
lin style_N = mkN "style" "styles";
lin style_V2 = mkV2 (mkV "style" "styles" "styled" "styled" "styling");
lin stylish_A = compoundA (mkA "stylish");
lin stylishness_N = mkN "stylishness" ;
lin stylist_N = mkN "stylist" "stylists";
lin stylistic_A = compoundA (mkA "stylistic");
lin stylistically_Adv = mkAdv "stylistically";
lin stylization_N = mkN "stylization" "stylizations";
lin stylize_V2 = mkV2 (mkV "stylize" "stylizes" "stylized" "stylized" "stylizing");
lin stylus_N = mkN "stylus" "styluses";
lin stymie_N = mkN "stymie" "stymies";
lin stymie_V2 = mkV2 (mkV "stymie" "IRREG" "IRREG" "IRREG" "IRREG");
lin stymy_V2 = mkV2 (mkV "stymy");
lin styptic_A = compoundA (mkA "styptic");
lin styptic_N = mkN "styptic" "styptics";
lin styx_PN = mkPN "Styx";
lin suasion_N = mkN "suasion" ;
lin suave_A = compoundA (mkA "suave");
lin suavity_N = mkN "suavity" ;
lin sub_N = mkN "sub" "subs";
lin sub_V = mkV "sub" "subs" "subbed" "subbed" "subbing";
lin sub_V2 = mkV2 (mkV "sub" "subs" "subbed" "subbed" "subbing");
lin sub_judice_A = compoundA (mkA "sub judice");
lin sub_rosa_Adv = mkAdv "sub rosa";
lin sub_underwrite_V2 = mkV2 (mkV "sub - underwrite");
lin subaltern_N = mkN "subaltern" "subalterns";
lin subatomic_A = compoundA (mkA "subatomic");
lin subcommittee_N = mkN "subcommittee" "subcommittees";
lin subconscious_A = compoundA (mkA "subconscious");
lin subconscious_N = mkN "subconscious" "subconscioi" {- FIXME: guessed plural form -};
lin subconsciousness_N = mkN "subconsciousness" ;
lin subcontinent_N = mkN "subcontinent" "subcontinents";
lin subcontract_N = mkN "subcontract" "subcontracts";
lin subcontract_V = mkV "subcontract" "subcontracts" "subcontracted" "subcontracted" "subcontracting";
lin subcontract_V2 = mkV2 (mkV "subcontract" "subcontracts" "subcontracted" "subcontracted" "subcontracting");
lin subcontractor_N = mkN "subcontractor" "subcontractors";
lin subcutaneous_A = compoundA (mkA "subcutaneous");
lin subdivide_V = mkV "subdivide" "subdivides" "subdivided" "subdivided" "subdividing";
lin subdivide_V2 = mkV2 (mkV "subdivide" "subdivides" "subdivided" "subdivided" "subdividing");
lin subdivision_N = mkN "subdivision" "subdivisions";
lin subdue_V2 = mkV2 (mkV "subdue" "subdues" "subdued" "subdued" "subduing");
lin subedit_V2 = mkV2 (mkV "subedit" "subedits" "subedited" "subedited" "subediting");
lin subeditor_N = mkN "subeditor" "subeditors";
lin subfusc_A = compoundA (mkA "subfusc");
lin subgroup_N = mkN "subgroup" "subgroups";
lin subheading_N = mkN "subheading" "subheadings";
lin subhuman_A = compoundA (mkA "subhuman");
lin subject_A2 = mkA2 (compoundA (mkA "subject")) to_Prep;
lin subject_N = mkN "subject" "subjects";
lin subject_V2 = mkV2 (mkV "subject" "subjects" "subjected" "subjected" "subjecting");
lin subject_to_Prep = mkPrep "subject to";
lin subjection_N = mkN "subjection" ;
lin subjective_A = compoundA (mkA "subjective");
lin subjectivity_N = mkN "subjectivity" ;
lin subjoin_V2 = mkV2 (mkV "subjoin" "subjoins" "subjoined" "subjoined" "subjoining");
lin subjugate_V2 = mkV2 (mkV "subjugate" "subjugates" "subjugated" "subjugated" "subjugating");
lin subjugation_N = mkN "subjugation" "subjugations";
lin subjunctive_A = compoundA (mkA "subjunctive");
lin subjunctive_N = mkN "subjunctive" "subjunctives";
lin sublease_N = mkN "sublease" "subleases";
lin sublease_V = mkV "sublease" "subleases" "subleased" "subleased" "subleasing";
lin sublease_V2 = mkV2 (mkV "sublease" "subleases" "subleased" "subleased" "subleasing");
lin sublet_V = mkV "sub" IrregEng.let_V;
lin sublet_V2 = mkV2 (mkV "sub" IrregEng.let_V);
lin sublieutenant_N = mkN "sublieutenant" "sublieutenants";
lin sublimate_A = compoundA (mkA "sublimate");
lin sublimate_N = mkN "sublimate" "sublimates";
lin sublimate_V2 = mkV2 (mkV "sublimate" "sublimates" "sublimated" "sublimated" "sublimating");
lin sublimation_N = mkN "sublimation" "sublimations";
lin sublime_A = compoundA (mkA "sublime");
lin sublime_N = mkN "sublime" "IRREG";
lin subliminal_A = compoundA (mkA "subliminal");
lin sublimity_N = mkN "sublimity" ;
lin submarine_A = compoundA (mkA "submarine");
lin submarine_N = mkN "submarine" "submarines";
lin submariner_N = mkN "submariner" "submariners";
lin submerge_V = mkV "submerge" "submerges" "submerged" "submerged" "submerging";
lin submerge_V2 = mkV2 (mkV "submerge" "submerges" "submerged" "submerged" "submerging");
lin submerged_A = compoundA (mkA "submerged");
lin submergence_N = mkN "submergence" ;
lin submersible_A = compoundA (mkA "submersible");
lin submersion_N = mkN "submersion" ;
lin submission_N = mkN "submission" "submissions";
lin submissive_A = compoundA (mkA "submissive");
lin submissiveness_N = mkN "submissiveness" ;
lin submit_V = mkV "submit" "submits" "submitted" "submitted" "submitting";
lin submit_V2 = mkV2 (mkV "submit" "submits" "submitted" "submitted" "submitting");
lin subnormal_A = compoundA (mkA "subnormal");
lin subnormal_N = mkN "subnormal" "subnormals";
lin suborbital_A = compoundA (mkA "suborbital");
lin subordinate_A = compoundA (mkA "subordinate");
lin subordinate_N = mkN "subordinate" "subordinates";
lin subordinate_V2 = mkV2 (mkV "subordinate" "subordinates" "subordinated" "subordinated" "subordinating");
lin subordination_N = mkN "subordination" "subordinations";
lin subordinative_A = compoundA (mkA "subordinative");
lin suborn_V2 = mkV2 (mkV "suborn" "suborns" "suborned" "suborned" "suborning");
lin subornation_N = mkN "subornation" ;
lin subpoena_N = mkN "subpoena" "subpoenas";
lin subpoena_V2 = mkV2 (mkV "subpoena" "subpoenas" "subpoenaed" "subpoenaed" "subpoenaing");
lin subscribe_V = mkV "subscribe" "subscribes" "subscribed" "subscribed" "subscribing";
lin subscribe_V2 = mkV2 (mkV "subscribe" "subscribes" "subscribed" "subscribed" "subscribing");
lin subscriber_N = mkN "subscriber" "subscribers";
lin subscript_N = mkN "subscript" "subscripts";
lin subscription_N = mkN "subscription" "subscriptions";
lin subsection_N = mkN "subsection" "subsections";
lin subsequent_A = compoundA (mkA "subsequent");
lin subserve_V2 = mkV2 (mkV "subserve" "subserves" "subserved" "subserved" "subserving");
lin subservience_N = mkN "subservience" ;
lin subservient_A = compoundA (mkA "subservient");
lin subside_V = mkV "subside" "subsides" "subsided" "subsided" "subsiding";
lin subsidence_N = mkN "subsidence" "subsidences";
lin subsidiary_A = compoundA (mkA "subsidiary");
lin subsidiary_N = mkN "subsidiary" "subsidiaries";
lin subsidization_N = mkN "subsidization" ;
lin subsidize_V2 = mkV2 (mkV "subsidize" "subsidizes" "subsidized" "subsidized" "subsidizing");
lin subsidy_N = mkN "subsidy" "subsidies";
lin subsist_V = mkV "subsist" "subsists" "subsisted" "subsisted" "subsisting";
lin subsistence_N = mkN "subsistence" ;
lin subsoil_N = mkN "subsoil" ;
lin subsonic_A = compoundA (mkA "subsonic");
lin substance_N = mkN "substance" "substances";
lin substandard_A = compoundA (mkA "substandard");
lin substantial_A = compoundA (mkA "substantial");
lin substantiate_V2 = mkV2 (mkV "substantiate" "substantiates" "substantiated" "substantiated" "substantiating");
lin substantiation_N = mkN "substantiation" "substantiations";
lin substantival_A = compoundA (mkA "substantival");
lin substantive_A = compoundA (mkA "substantive");
lin substantive_N = mkN "substantive" "substantives";
lin substation_N = mkN "substation" "substations";
lin substitute_N = mkN "substitute" "substitutes";
lin substitute_V = mkV "substitute" "substitutes" "substituted" "substituted" "substituting";
lin substitute_V2 = mkV2 (mkV "substitute" "substitutes" "substituted" "substituted" "substituting");
lin substitution_N = mkN "substitution" "substitutions";
lin substrate_N = mkN "substrate" "substrates";
lin substratum_N = mkN "substratum" "substrata" {- FIXME: guessed plural form -};
lin substructure_N = mkN "substructure" "substructures";
lin subsume_V2 = mkV2 (mkV "subsume" "subsumes" "subsumed" "subsumed" "subsuming");
lin subtend_V2 = mkV2 (mkV "subtend" "subtends" "subtended" "subtended" "subtending");
lin subterfuge_N = mkN "subterfuge" "subterfuges";
lin subterranean_A = compoundA (mkA "subterranean");
lin subtitle_N = mkN "subtitle" "subtitles";
lin subtitle_VS = mkVS (mkV "subtitle");
lin subtle_A = mkA "subtle" "subtler";
lin subtlety_N = mkN "subtlety" "subtleties";
lin subtly_Adv = mkAdv "subtly";
lin subtopia_N = mkN "subtopia" ;
lin subtract_V2 = mkV2 (mkV "subtract" "subtracts" "subtracted" "subtracted" "subtracting");
lin subtraction_N = mkN "subtraction" "subtractions";
lin subtropical_A = compoundA (mkA "subtropical");
lin suburb_N = mkN "suburb" "suburbs";
lin suburban_A = compoundA (mkA "suburban");
lin suburbia_N = mkN "suburbia" ;
lin subvention_N = mkN "subvention" "subventions";
lin subversion_N = mkN "subversion" ;
lin subversive_A = compoundA (mkA "subversive");
lin subversive_N = mkN "subversive" "subversives";
lin subvert_V2 = mkV2 (mkV "subvert" "subverts" "subverted" "subverted" "subverting");
lin subway_N = mkN "subway" "subways";
lin succeed_V = mkV "succeed" "succeeds" "succeeded" "succeeded" "succeeding";
lin succeed_V2 = mkV2 (mkV "succeed" "succeeds" "succeeded" "succeeded" "succeeding");
lin success_N = mkN "success" "successes";
lin successful_A = compoundA (mkA "successful");
lin succession_N = mkN "succession" "successions";
lin successive_A = compoundA (mkA "successive");
lin successor_N = mkN "successor" "successors";
lin succinct_A = compoundA (mkA "succinct");
lin succinctness_N = mkN "succinctness" ;
lin succour_N = mkN "succour" ;
lin succour_V2 = mkV2 (mkV "succour" "succours" "succoured" "succoured" "succouring");
lin succubus_N = mkN "succubus" "succubuses";
lin succulence_N = mkN "succulence" ;
lin succulent_A = compoundA (mkA "succulent");
lin succulent_N = mkN "succulent" "succulents";
lin succumb_V = mkV "succumb" "succumbs" "succumbed" "succumbed" "succumbing";
lin such_Predet = ss "such";
lin such_as_Prep = mkPrep "such as";
lin suchlike_A = compoundA (mkA "suchlike");
lin suchow_PN = mkPN "Suchow";
lin suck_N = mkN "suck" "sucks";
lin suck_V = mkV "suck" "sucks" "sucked" "sucked" "sucking";
lin suck_V2 = mkV2 (mkV "suck" "sucks" "sucked" "sucked" "sucking");
lin sucker_N = mkN "sucker" "suckers";
lin sucking_pig_N = mkN "sucking - pig" "sucking - pigs";
lin suckle_V2 = mkV2 (mkV "suckle" "suckles" "suckled" "suckled" "suckling");
lin suckling_N = mkN "suckling" "sucklings";
lin suction_N = mkN "suction" ;
lin sudan_PN = mkPN "Sudan";
lin sudanese_A = compoundA (mkA "sudanese");
lin sudanese_N = mkN "sudanese" "sudanese";
lin sudbury_PN = mkPN "Sudbury";
lin sudden_A = compoundA (mkA "sudden");
lin sudden_N = mkN "sudden" "IRREG";
lin suddenness_N = mkN "suddenness" ;
lin sue_PN = mkPN "Sue";
lin sue_V = mkV "sue" "sues" "sued" "sued" "suing";
lin sue_V2 = mkV2 (mkV "sue" "sues" "sued" "sued" "suing");
lin sue_V2V = mkV2V (mkV "sue" "sues" "sued" "sued" "suing") noPrep to_Prep ;
lin suede_N = mkN "suede" ;
lin suet_N = mkN "suet" ;
lin suety_A = compoundA (mkA "suety");
lin suffer_V = mkV "suffer" "suffers" "suffered" "suffered" "suffering";
lin suffer_V2 = mkV2 (mkV "suffer" "suffers" "suffered" "suffered" "suffering");
lin sufferable_A = compoundA (mkA "sufferable");
lin sufferance_N = mkN "sufferance" ;
lin sufferer_N = mkN "sufferer" "sufferers";
lin suffering_N = mkN "suffering" "sufferings";
lin suffice_V = mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing";
lin suffice_V2 = mkV2 (mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing");
lin suffice_V2V = mkV2V (mkV "suffice" "suffices" "sufficed" "sufficed" "sufficing") noPrep to_Prep ;
lin sufficiency_N = mkN "sufficiency" ;
lin sufficient_A = compoundA (mkA "sufficient");
lin suffix_N = mkN "suffix" "suffixes";
lin suffocate_V = mkV "suffocate" "suffocates" "suffocated" "suffocated" "suffocating";
lin suffocate_V2 = mkV2 (mkV "suffocate" "suffocates" "suffocated" "suffocated" "suffocating");
lin suffocation_N = mkN "suffocation" ;
lin suffolk_PN = mkPN "Suffolk";
lin suffragan_N = mkN "suffragan" "suffragans";
lin suffrage_N = mkN "suffrage" "suffrages";
lin suffragette_N = mkN "suffragette" "suffragettes";
lin suffuse_V2 = mkV2 (mkV "suffuse" "suffuses" "suffused" "suffused" "suffusing");
lin suffusion_N = mkN "suffusion" ;
lin sugar_N = mkN "sugar" "sugars";
lin sugar_V2 = mkV2 (mkV "sugar" "sugars" "sugared" "sugared" "sugaring");
lin sugar_beet_N = mkN "sugar - beet" "sugar - beet";
lin sugar_candy_N = mkN "sugar - candy" "sugar - candies";
lin sugar_cane_N = mkN "sugar - cane" ;
lin sugar_coated_A = compoundA (mkA "sugar - coated");
lin sugar_daddy_N = mkN "sugar - daddy" "sugar - daddies";
lin sugar_loaf_N = mkN "sugar - loaf" ;
lin sugar_refinery_N = mkN "sugar - refinery" "sugar - refineries";
lin sugarlump_N = mkN "sugarlump" "sugarlumps";
lin sugary_A = mkA "sugary" "sugarier";
lin suggest_V = mkV "suggest";
lin suggest_V2 = mkV2 (mkV "suggest" "suggests" "suggested" "suggested" "suggesting");
lin suggest_VS = mkVS (mkV "suggest");
lin suggestibility_N = mkN "suggestibility" ;
lin suggestible_A = compoundA (mkA "suggestible");
lin suggestion_N = mkN "suggestion" "suggestions";
lin suggestive_A = compoundA (mkA "suggestive");
lin suicidal_A = compoundA (mkA "suicidal");
lin suicide_N = mkN "suicide" "suicides";
lin suit_N = mkN "suit" "suits";
lin suit_V = mkV "suit" "suits" "suited" "suited" "suiting";
lin suit_V2 = mkV2 (mkV "suit" "suits" "suited" "suited" "suiting");
lin suitability_N = mkN "suitability" ;
lin suitable_A = compoundA (mkA "suitable");
lin suitableness_N = mkN "suitableness" ;
lin suitcase_N = mkN "suitcase" "suitcases";
lin suite_N = mkN "suite" "suites";
lin suiting_N = mkN "suiting" ;
lin suitor_N = mkN "suitor" "suitors";
lin sulk_N = mkN "sulk" "sulks";
lin sulk_V = mkV "sulk" "sulks" "sulked" "sulked" "sulking";
lin sulkily_Adv = mkAdv "sulkily";
lin sulkiness_N = mkN "sulkiness" ;
lin sulky_A = mkA "sulky" "sulkier";
lin sulky_N = mkN "sulky" "sulkies";
lin sullen_A = compoundA (mkA "sullen");
lin sullenness_N = mkN "sullenness" ;
lin sully_V2 = mkV2 (mkV "sully" "sullies" "sullied" "sullied" "sullying");
lin sulpha_N = mkN "sulpha" ;
lin sulphate_N = mkN "sulphate" "sulphates";
lin sulphide_N = mkN "sulphide" "sulphides";
lin sulphur_N = mkN "sulphur" ;
lin sulphuretted_A = compoundA (mkA "sulphuretted");
lin sulphuric_A = compoundA (mkA "sulphuric");
lin sulphurous_A = compoundA (mkA "sulphurous");
lin sultan_N = mkN "sultan" "sultans";
lin sultana_N = mkN "sultana" "sultanas";
lin sultanate_N = mkN "sultanate" "sultanates";
lin sultrily_Adv = mkAdv "sultrily";
lin sultriness_N = mkN "sultriness" ;
lin sultry_A = mkA "sultry" "sultrier";
lin sum_N = mkN "sum" "sums";
lin sum_V = mkV "sum" "sums" "summed" "summed" "summing";
lin sum_V2 = mkV2 (mkV "sum" "sums" "summed" "summed" "summing");
lin sumac_N = mkN "sumac" ;
lin sumach_N = mkN "sumach" ;
lin sumatra_PN = mkPN "Sumatra";
lin sumatran_A = compoundA (mkA "sumatran");
lin sumatran_N = mkN "sumatran" "sumatrans";
lin summarize_V2 = mkV2 (mkV "summarize" "summarizes" "summarized" "summarized" "summarizing");
lin summary_A = compoundA (mkA "summary");
lin summary_N = mkN "summary" "summaries";
lin summation_N = mkN "summation" "summations";
lin summer_N = mkN "summer" "summers";
lin summer_V = mkV "summer" "summers" "summered" "summered" "summering";
lin summerhouse_N = mkN "summerhouse" "summerhouses";
lin summertime_N = mkN "summertime" "summertimes";
lin summery_A = mkA "summery" "summerier";
lin summing_up_N = mkN "summing - up" "summing - ups";
lin summit_N = mkN "summit" "summits";
lin summon_V2 = mkV2 (mkV "summon" "summons" "summoned" "summoned" "summoning");
lin summons_N = mkN "summons" "summonses";
lin summons_V2 = mkV2 (mkV "summons" "summonses" "summonsed" "summonsed" "summonsing");
lin sump_N = mkN "sump" "sumps";
lin sumpter_N = mkN "sumpter" "sumpters";
lin sumptuary_A = compoundA (mkA "sumptuary");
lin sumptuous_A = compoundA (mkA "sumptuous");
lin sumptuousness_N = mkN "sumptuousness" ;
lin sun_N = mkN "sun" "suns";
lin sun_PN = mkPN "Sun";
lin sun_V2 = mkV2 (mkV "sun" "suns" "sunned" "sunned" "sunning");
lin sun_drenched_A = compoundA (mkA "sun - drenched");
lin sun_dried_A = compoundA (mkA "sun - dried");
lin sun_god_N = mkN "sun - god" "sun - gods";
lin sun_helmet_N = mkN "sun - helmet" "sun - helmets";
lin sun_lounge_N = mkN "sun - lounge" "sun - lounges";
lin sun_parlour_N = mkN "sun - parlour" "sun - parlours";
lin sun_porch_N = mkN "sun - porch" "sun - porches";
lin sun_up_N = mkN "sun - up" ;
lin sun_visor_N = mkN "sun - visor" "sun - visors";
lin sun_worship_N = mkN "sun - worship" ;
lin sunbaked_A = compoundA (mkA "sunbaked");
lin sunbathe_N = mkN "sunbathe" "IRREG";
lin sunbathe_V = mkV "sunbathe" "sunbathes" "sunbathed" "sunbathed" "sunbathing";
lin sunbeam_N = mkN "sunbeam" "sunbeams";
lin sunblind_N = mkN "sunblind" "sunblinds";
lin sunbonnet_N = mkN "sunbonnet" "sunbonnets";
lin sunburn_N = mkN "sunburn" "sunburns";
lin sunburned_A = compoundA (mkA "sunburned");
lin sunburnt_A = compoundA (mkA "sunburnt");
lin sunburst_N = mkN "sunburst" "sunbursts";
lin sundae_N = mkN "sundae" "sundaes";
lin sunday_N = mkN "Sunday" "Sundays";
lin sunday_PN = mkPN "Sunday";
lin sunder_N = mkN "sunder" ;
lin sunder_V2 = mkV2 (mkV "sunder" "sunders" "sundered" "sundered" "sundering");
lin sunderland_PN = mkPN "Sunderland";
lin sundial_N = mkN "sundial" "sundials";
lin sundown_N = mkN "sundown" ;
lin sundowner_N = mkN "sundowner" "sundowners";
lin sundry_A = compoundA (mkA "sundry");
lin sunfish_N = mkN "sunfish" "sunfish";
lin sunflower_N = mkN "sunflower" "sunflowers";
lin sunhat_N = mkN "sunhat" "sunhats";
lin sunlamp_N = mkN "sunlamp" "sunlamps";
lin sunless_A = compoundA (mkA "sunless");
lin sunlight_N = mkN "sunlight" ;
lin sunlit_A = compoundA (mkA "sunlit");
lin sunnily_Adv = mkAdv "sunnily";
lin sunny_A = mkA "sunny" "sunnier";
lin sunray_A = compoundA (mkA "sunray");
lin sunrise_N = mkN "sunrise" "sunrises";
lin sunroof_N = mkN "sunroof" "sunroofs";
lin sunset_N = mkN "sunset" "sunsets";
lin sunshade_N = mkN "sunshade" "sunshades";
lin sunshine_N = mkN "sunshine" ;
lin sunshine_roof_N = mkN "sunshine - roof" "sunshine - roofs";
lin sunspot_N = mkN "sunspot" "sunspots";
lin sunstroke_N = mkN "sunstroke" ;
lin suntan_N = mkN "suntan" "suntans";
lin suntrap_N = mkN "suntrap" "suntraps";
lin sup_N = mkN "sup" "sups";
lin sup_V = mkV "sup" "sups" "supped" "supped" "supping";
lin sup_V2 = mkV2 (mkV "sup" "sups" "supped" "supped" "supping");
lin super_A = compoundA (mkA "super");
lin super_N = mkN "super" "supers";
lin superabundance_N = mkN "superabundance" "IRREG";
lin superabundant_A = compoundA (mkA "superabundant");
lin superannuate_V2 = mkV2 (mkV "superannuate" "superannuates" "superannuated" "superannuated" "superannuating");
lin superannuated_A = compoundA (mkA "superannuated");
lin superannuation_N = mkN "superannuation" "superannuations";
lin superb_A = compoundA (mkA "superb");
lin supercargo_N = mkN "supercargo" "supercargoes";
lin supercede_V2 = mkV2 (mkV "supercede");
lin supercharged_A = compoundA (mkA "supercharged");
lin supercharger_N = mkN "supercharger" "superchargers";
lin supercilious_A = compoundA (mkA "supercilious");
lin superciliousness_N = mkN "superciliousness" ;
lin superego_N = mkN "superego" ;
lin supererogation_N = mkN "supererogation" ;
lin superfatted_A = compoundA (mkA "superfatted");
lin superficial_A = compoundA (mkA "superficial");
lin superficiality_N = mkN "superficiality" "superficialities";
lin superficies_N = mkN "superficies" "superficies";
lin superfine_A = compoundA (mkA "superfine");
lin superfluity_N = mkN "superfluity" "superfluities";
lin superfluous_A = compoundA (mkA "superfluous");
lin superhuman_A = compoundA (mkA "superhuman");
lin superimpose_V2 = mkV2 (mkV "superimpose" "superimposes" "superimposed" "superimposed" "superimposing");
lin superintend_V = mkV "superintend" "superintends" "superintended" "superintended" "superintending";
lin superintend_V2 = mkV2 (mkV "superintend" "superintends" "superintended" "superintended" "superintending");
lin superintendence_N = mkN "superintendence" ;
lin superintendent_N = mkN "superintendent" "superintendents";
lin superior_A = compoundA (mkA "superior");
lin superior_N = mkN "superior" "superiors";
lin superiority_N = mkN "superiority" ;
lin superlative_A = compoundA (mkA "superlative");
lin superlative_N = mkN "superlative" "superlatives";
lin superman_N = mkN "superman" "supermen" {- FIXME: guessed plural form -};
lin supermarket_N = mkN "supermarket" "supermarkets";
lin supernal_A = compoundA (mkA "supernal");
lin supernatural_A = compoundA (mkA "supernatural");
lin supernormal_A = compoundA (mkA "supernormal");
lin supernumerary_N = mkN "supernumerary" "supernumeraries";
lin superscription_N = mkN "superscription" "superscriptions";
lin supersede_V2 = mkV2 (mkV "supersede" "supersedes" "superseded" "superseded" "superseding");
lin supersession_N = mkN "supersession" ;
lin supersonic_A = compoundA (mkA "supersonic");
lin superstition_N = mkN "superstition" "superstitions";
lin superstitious_A = compoundA (mkA "superstitious");
lin superstructure_N = mkN "superstructure" "superstructures";
lin supertax_N = mkN "supertax" "supertaxes";
lin supervene_V = mkV "supervene" "supervenes" "supervened" "supervened" "supervening";
lin supervise_V = mkV "supervise" "supervises" "supervised" "supervised" "supervising";
lin supervise_V2 = mkV2 (mkV "supervise" "supervises" "supervised" "supervised" "supervising");
lin supervision_N = mkN "supervision" "supervisions";
lin supervisor_N = mkN "supervisor" "supervisors";
lin supervisory_A = compoundA (mkA "supervisory");
lin supine_A = compoundA (mkA "supine");
lin supper_N = mkN "supper" "suppers";
lin supperless_A = compoundA (mkA "supperless");
lin supplant_V2 = mkV2 (mkV "supplant" "supplants" "supplanted" "supplanted" "supplanting");
lin supplanter_N = mkN "supplanter" "supplanters";
lin supple_A = mkA "supple" "suppler";
lin supplement_N = mkN "supplement" "supplements";
lin supplement_V2 = mkV2 (mkV "supplement" "supplements" "supplemented" "supplemented" "supplementing");
lin supplementary_A = compoundA (mkA "supplementary");
lin suppleness_N = mkN "suppleness" ;
lin suppliant_A = compoundA (mkA "suppliant");
lin suppliant_N = mkN "suppliant" "suppliants";
lin supplicant_N = mkN "supplicant" "supplicants";
lin supplicate_V = mkV "supplicate" "supplicates" "supplicated" "supplicated" "supplicating";
lin supplicate_V2 = mkV2 (mkV "supplicate" "supplicates" "supplicated" "supplicated" "supplicating");
lin supplication_N = mkN "supplication" "supplications";
lin supplier_N = mkN "supplier" "suppliers";
lin supply_N = mkN "supply" "supplies";
lin supply_V2 = mkV2 (mkV "supply" "supplies" "supplied" "supplied" "supplying");
lin support_N = mkN "support" "supports";
lin support_V2 = mkV2 (mkV "support" "supports" "supported" "supported" "supporting");
lin supportable_A = compoundA (mkA "supportable");
lin supporter_N = mkN "supporter" "supporters";
lin suppose_V2 = mkV2 (mkV "suppose" "supposes" "supposed" "supposed" "supposing");
lin suppose_VV = mkVV (mkV "suppose" "supposes" "supposed" "supposed" "supposing");
lin suppose_VS = mkVS (mkV "suppose" "supposes" "supposed" "supposed" "supposing");
lin supposed_A = compoundA (mkA "supposed");
lin supposition_N = mkN "supposition" "suppositions";
lin suppository_N = mkN "suppository" "suppositories";
lin suppress_V2 = mkV2 (mkV "suppress" "suppresses" "suppressed" "suppressed" "suppressing");
lin suppression_N = mkN "suppression" "suppressions";
lin suppressive_A = compoundA (mkA "suppressive");
lin suppressor_N = mkN "suppressor" "suppressors";
lin suppurate_V = mkV "suppurate" "suppurates" "suppurated" "suppurated" "suppurating";
lin suppuration_N = mkN "suppuration" "suppurations";
lin supra_Adv = mkAdv "supra";
lin supranational_A = compoundA (mkA "supranational");
lin supremacy_N = mkN "supremacy" ;
lin supreme_A = compoundA (mkA "supreme");
lin supt_PN = mkPN "Supt";
lin surabaja_PN = mkPN "Surabaja";
lin surcharge_N = mkN "surcharge" "surcharges";
lin surcharge_V2 = mkV2 (mkV "surcharge" "surcharges" "surcharged" "surcharged" "surcharging");
lin surd_N = mkN "surd" "surds";
lin sure_A = mkA "sure" "surer";
lin sure_Adv = mkAdv "sure";
lin sure_footed_A = compoundA (mkA "sure - footed");
lin sureness_N = mkN "sureness" ;
lin surety_N = mkN "surety" "sureties";
lin surf_N = mkN "surf" ;
lin surface_N = mkN "surface" "surfaces";
lin surface_V = mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing";
lin surface_V2 = mkV2 (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing");
lin surface_V2V = mkV2V (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing") noPrep to_Prep ;
lin surface_VS = mkVS (mkV "surface" "surfaces" "surfaced" "surfaced" "surfacing");
lin surface_to_air_A = compoundA (mkA "surface - to - air");
lin surfboard_N = mkN "surfboard" "surfboards";
lin surfboat_N = mkN "surfboat" "surfboats";
lin surfeit_N = mkN "surfeit" "surfeits";
lin surfeit_V2 = mkV2 (mkV "surfeit" "surfeits" "surfeited" "surfeited" "surfeiting");
lin surfing_N = mkN "surfing" ;
lin surfriding_N = mkN "surfriding" ;
lin surge_N = mkN "surge" "surges";
lin surge_V = mkV "surge" "surges" "surged" "surged" "surging";
lin surge_V2 = mkV2 (mkV "surge" "surges" "surged" "surged" "surging");
lin surgeon_N = mkN "surgeon" "surgeons";
lin surgery_N = mkN "surgery" "surgeries";
lin surgical_A = compoundA (mkA "surgical");
lin surlily_Adv = mkAdv "surlily";
lin surliness_N = mkN "surliness" ;
lin surly_A = mkA "surly" "surlier";
lin surmise_N = mkN "surmise" "surmises";
lin surmise_V = mkV "surmise" "surmises" "surmised" "surmised" "surmising";
lin surmise_V2 = mkV2 (mkV "surmise" "surmises" "surmised" "surmised" "surmising");
lin surmount_V2 = mkV2 (mkV "surmount" "surmounts" "surmounted" "surmounted" "surmounting");
lin surmountable_A = compoundA (mkA "surmountable");
lin surname_N = mkN "surname" "surnames";
lin surpass_V2 = mkV2 (mkV "surpass" "surpasses" "surpassed" "surpassed" "surpassing");
lin surpassing_A = compoundA (mkA "surpassing");
lin surplice_N = mkN "surplice" "surplices";
lin surpliced_A = compoundA (mkA "surpliced");
lin surplus_N = mkN "surplus" "surpluses";
lin surprise_N = mkN "surprise" "surprises";
lin surprise_V2 = mkV2 (mkV "surprise" "surprises" "surprised" "surprised" "surprising");
lin surprise_V2V = mkV2V (mkV "surprise") noPrep to_Prep ;
lin surprised_A = compoundA (mkA "surprised");
lin surprising_A = compoundA (mkA "surprising");
lin surrealism_N = mkN "surrealism" ;
lin surrealist_N = mkN "surrealist" "surrealists";
lin surrealistic_A = compoundA (mkA "surrealistic");
lin surrender_N = mkN "surrender" "surrenders";
lin surrender_V = mkV "surrender" "surrenders" "surrendered" "surrendered" "surrendering";
lin surrender_V2 = mkV2 (mkV "surrender" "surrenders" "surrendered" "surrendered" "surrendering");
lin surreptitious_A = compoundA (mkA "surreptitious");
lin surrey_PN = mkPN "Surrey";
lin surrogate_A = compoundA (mkA "surrogate");
lin surrogate_N = mkN "surrogate" "surrogates";
lin surround_N = mkN "surround" "surrounds";
lin surround_V2 = mkV2 (mkV "surround" "surrounds" "surrounded" "surrounded" "surrounding");
lin surrounding_A = compoundA (mkA "surrounding");
lin surtax_N = mkN "surtax" "surtaxes";
lin surtax_V2 = mkV2 (mkV "surtax" "surtaxes" "surtaxed" "surtaxed" "surtaxing");
lin surveillance_N = mkN "surveillance" ;
lin survey_N = mkN "survey" "surveys";
lin survey_V2 = mkV2 (mkV "survey" "surveys" "surveyed" "surveyed" "surveying");
lin surveying_N = mkN "surveying" ;
lin surveyor_N = mkN "surveyor" "surveyors";
lin survival_N = mkN "survival" "survivals";
lin survive_V = mkV "survive" "survives" "survived" "survived" "surviving";
lin survive_V2 = mkV2 (mkV "survive" "survives" "survived" "survived" "surviving");
lin survive_VS = mkVS (mkV "survive" "survives" "survived" "survived" "surviving");
lin survivor_N = mkN "survivor" "survivors";
lin susan_PN = mkPN "Susan";
lin susanna_PN = mkPN "Susanna";
lin susceptibility_N = mkN "susceptibility" "susceptibilities";
lin susceptible_A = compoundA (mkA "susceptible");
lin susie_PN = mkPN "Susie";
lin suspect_A = compoundA (mkA "suspect");
lin suspect_N = mkN "suspect" "suspects";
lin suspect_V2 = mkV2 (mkV "suspect" "suspects" "suspected" "suspected" "suspecting");
lin suspect_VS = mkVS (mkV "suspect");
lin suspend_V = mkV "suspend";
lin suspend_V2 = mkV2 (mkV "suspend" "suspends" "suspended" "suspended" "suspending");
lin suspender_N = mkN "suspender" "suspenders";
lin suspense_N = mkN "suspense" ;
lin suspension_N = mkN "suspension" ;
lin suspicion_N = mkN "suspicion" "suspicions";
lin suspicious_A = compoundA (mkA "suspicious");
lin suss_V2 = mkV2 (mkV "suss" "susses" "sussed" "sussed" "sussing");
lin sussex_PN = mkPN "Sussex";
lin sustain_V2 = mkV2 (mkV "sustain" "sustains" "sustained" "sustained" "sustaining");
lin sustenance_N = mkN "sustenance" ;
lin suttee_N = mkN "suttee" "suttees";
lin sutton_PN = mkPN "Sutton";
lin sutton_at_hone_PN = mkPN "Sutton - at - hone";
lin sutton_coldfield_PN = mkPN "Sutton coldfield";
lin sutton_in_ashfield_PN = mkPN "Sutton in ashfield";
lin suture_N = mkN "suture" "sutures";
lin suzanne_PN = mkPN "Suzanne";
lin suzerain_N = mkN "suzerain" "suzerains";
lin suzerainty_N = mkN "suzerainty" "suzerainties";
lin svelte_A = compoundA (mkA "svelte");
lin sverdlovsk_PN = mkPN "Sverdlovsk";
lin swab_N = mkN "swab" "swabs";
lin swab_V2 = mkV2 (mkV "swab" "swabs" "swabbed" "swabbed" "swabbing");
lin swaddle_V2 = mkV2 (mkV "swaddle" "swaddles" "swaddled" "swaddled" "swaddling");
lin swadlincote_PN = mkPN "Swadlincote";
lin swag_N = mkN "swag" ;
lin swagger_A = compoundA (mkA "swagger");
lin swagger_N = mkN "swagger" "swaggers";
lin swagger_V = mkV "swagger" "swaggers" "swaggered" "swaggered" "swaggering";
lin swaggerer_N = mkN "swaggerer" "swaggerers";
lin swahili_N = mkN "swahili" ;
lin swain_N = mkN "swain" "swains";
lin swallow_N = mkN "swallow" "swallows";
lin swallow_V = mkV "swallow" "swallows" "swallowed" "swallowed" "swallowing";
lin swallow_V2 = mkV2 (mkV "swallow" "swallows" "swallowed" "swallowed" "swallowing");
lin swallow_tailed_A = compoundA (mkA "swallow - tailed");
lin swami_N = mkN "swami" "swamis";
lin swamp_N = mkN "swamp" "swamps";
lin swamp_V2 = mkV2 (mkV "swamp" "swamps" "swamped" "swamped" "swamping");
lin swampy_A = mkA "swampy" "swampier";
lin swan's_down_N = mkN "swan's - down" ;
lin swan_N = mkN "swan" "swans";
lin swan_V = mkV "swan" "swans" "swanned" "swanned" "swanning";
lin swan_song_N = mkN "swan - song" "swan - songs";
lin swanage_PN = mkPN "Swanage";
lin swank_N = mkN "swank" "swanks";
lin swank_V = mkV "swank" "swanks" "swanked" "swanked" "swanking";
lin swanky_A = mkA "swanky" "swankier";
lin swanley_PN = mkPN "Swanley";
lin swansea_PN = mkPN "Swansea";
lin swap_N = mkN "swap" "swaps";
lin swap_V = mkV "swap" "swaps" "swapped" "swapped" "swapping";
lin swap_V2 = mkV2 (mkV "swap" "swaps" "swapped" "swapped" "swapping");
lin sward_N = mkN "sward" ;
lin swarm_N = mkN "swarm" "swarms";
lin swarm_V = mkV "swarm" "swarms" "swarmed" "swarmed" "swarming";
lin swarm_V2 = mkV2 (mkV "swarm" "swarms" "swarmed" "swarmed" "swarming");
lin swarthy_A = compoundA (mkA "swarthy");
lin swashbuckler_N = mkN "swashbuckler" "swashbucklers";
lin swashbuckling_A = compoundA (mkA "swashbuckling");
lin swashbuckling_N = mkN "swashbuckling" ;
lin swastika_N = mkN "swastika" "swastikas";
lin swat_N = mkN "swat" "swats";
lin swat_V2 = mkV2 (mkV "swat" "swats" "swatted" "swatted" "swatting");
lin swath_N = mkN "swath" "swaths";
lin swathe_N = mkN "swathe" "swathes";
lin swathe_V2 = mkV2 (mkV "swathe" "swathes" "swathed" "swathed" "swathing");
lin sway_N = mkN "sway" ;
lin sway_V = mkV "sway" "sways" "swayed" "swayed" "swaying";
lin sway_V2 = mkV2 (mkV "sway" "sways" "swayed" "swayed" "swaying");
lin swazi_A = compoundA (mkA "swazi");
lin swazi_N = mkN "swazi" "swazis";
lin swaziland_PN = mkPN "Swaziland";
lin swear_V = IrregEng.swear_V;
lin swear_V2 = mkV2 (IrregEng.swear_V);
lin swear_V2V = mkV2V (IrregEng.swear_V) noPrep to_Prep ;
lin swear_VV = mkVV (IrregEng.swear_V) ;
lin swearer_N = mkN "swearer" "swearers";
lin swearing_N = mkN "swearing" ;
lin swearword_N = mkN "swearword" "swearwords";
lin sweat_N = mkN "sweat" "sweats";
lin sweat_V = mkV "sweat" "sweats" "sweated" "sweated" "sweating";
lin sweat_V2 = mkV2 (mkV "sweat" "sweats" "sweated" "sweated" "sweating");
lin sweatband_N = mkN "sweatband" "sweatbands";
lin sweater_N = mkN "sweater" "sweaters";
lin sweatshop_N = mkN "sweatshop" "sweatshops";
lin sweaty_A = mkA "sweaty" "sweatier";
lin swede_A = compoundA (mkA "Swede");
lin swede_N = mkN "Swede" "Swedes";
lin sweden_PN = mkPN "Sweden";
lin swedish_A = compoundA (mkA "Swedish");
lin swedish_N = mkN "Swedish" "Swedes";
lin sweep_N = mkN "sweep" "sweeps";
lin sweep_V = IrregEng.sweep_V;
lin sweep_V2 = mkV2 (IrregEng.sweep_V);
lin sweeper_N = mkN "sweeper" "sweepers";
lin sweeping_A = compoundA (mkA "sweeping");
lin sweeping_N = mkN "sweeping" "sweepings";
lin sweet_A = mkA "sweet" "sweeter";
lin sweet_N = mkN "sweet" "sweets";
lin sweet_scented_A = compoundA (mkA "sweet - scented");
lin sweetbread_N = mkN "sweetbread" "sweetbreads";
lin sweetbriar_N = mkN "sweetbriar" ;
lin sweetbrier_N = mkN "sweetbrier" ;
lin sweeten_V = mkV "sweeten" "sweetens" "sweetened" "sweetened" "sweetening";
lin sweeten_V2 = mkV2 (mkV "sweeten" "sweetens" "sweetened" "sweetened" "sweetening");
lin sweetening_N = mkN "sweetening" "sweetenings";
lin sweetheart_N = mkN "sweetheart" "sweethearts";
lin sweetie_N = mkN "sweetie" "sweeties";
lin sweetish_A = compoundA (mkA "sweetish");
lin sweetmeat_N = mkN "sweetmeat" "sweetmeats";
lin sweetness_N = mkN "sweetness" ;
lin swell_A = compoundA (mkA "swell");
lin swell_N = mkN "swell" "swells";
lin swell_V = mkV "swell" "swells" "swelled" "swelled" "swelling";
lin swell_V2 = mkV2 (mkV "swell" "swells" "swelled" "swelled" "swelling");
lin swelling_N = mkN "swelling" "swellings";
lin swelter_V = mkV "swelter" "swelters" "sweltered" "sweltered" "sweltering";
lin sweptback_A = compoundA (mkA "sweptback");
lin swerve_N = mkN "swerve" "swerves";
lin swerve_V = mkV "swerve" "swerves" "swerved" "swerved" "swerving";
lin swerve_V2 = mkV2 (mkV "swerve" "swerves" "swerved" "swerved" "swerving");
lin swift_A = mkA "swift" "swifter";
lin swift_N = mkN "swift" "swifts";
lin swiftness_N = mkN "swiftness" ;
lin swig_N = mkN "swig" "swigs";
lin swig_V = mkV "swig" "swigs" "swigged" "swigged" "swigging";
lin swig_V2 = mkV2 (mkV "swig" "swigs" "swigged" "swigged" "swigging");
lin swill_N = mkN "swill" "swills";
lin swill_V = mkV "swill" "swills" "swilled" "swilled" "swilling";
lin swill_V2 = mkV2 (mkV "swill" "swills" "swilled" "swilled" "swilling");
lin swim_N = mkN "swim" "swims";
lin swim_V = IrregEng.swim_V;
lin swim_V2 = mkV2 (IrregEng.swim_V);
lin swimmer_N = mkN "swimmer" "swimmers";
lin swimming_N = mkN "swimming" ;
lin swimming_bath_N = mkN "swimming - bath" "swimming - baths";
lin swimming_costume_N = mkN "swimming - costume" "swimming - costumes";
lin swimming_pool_N = mkN "swimming - pool" "swimming - pools";
lin swimmingly_Adv = mkAdv "swimmingly";
lin swimsuit_N = mkN "swimsuit" "swimsuits";
lin swindle_N = mkN "swindle" "swindles";
lin swindle_V = mkV "swindle" "swindles" "swindled" "swindled" "swindling";
lin swindle_V2 = mkV2 (mkV "swindle" "swindles" "swindled" "swindled" "swindling");
lin swindler_N = mkN "swindler" "swindlers";
lin swindon_PN = mkPN "Swindon";
lin swine_N = mkN "swine" "swine";
lin swineherd_N = mkN "swineherd" "swineherds";
lin swing_N = mkN "swing" "swings";
lin swing_V = IrregEng.swing_V;
lin swing_V2 = mkV2 (IrregEng.swing_V);
lin swinge_V2 = mkV2 (mkV "swinge" "swinges" "swinged" "swinged" "swinging");
lin swingeing_A = compoundA (mkA "swingeing");
lin swinging_A = compoundA (mkA "swinging");
lin swinish_A = compoundA (mkA "swinish");
lin swinton_PN = mkPN "Swinton";
lin swipe_N = mkN "swipe" "swipes";
lin swipe_V2 = mkV2 (mkV "swipe" "swipes" "swiped" "swiped" "swiping");
lin swirl_N = mkN "swirl" "swirls";
lin swirl_V = mkV "swirl" "swirls" "swirled" "swirled" "swirling";
lin swirl_V2 = mkV2 (mkV "swirl" "swirls" "swirled" "swirled" "swirling");
lin swish_A = compoundA (mkA "swish");
lin swish_N = mkN "swish" "swishes";
lin swish_V = mkV "swish" "swishes" "swished" "swished" "swishing";
lin swish_V2 = mkV2 (mkV "swish" "swishes" "swished" "swished" "swishing");
lin swiss_A = compoundA (mkA "swiss");
lin swiss_N = mkN "swiss" "swiss";
lin switch_N = mkN "switch" "switches";
lin switch_V = mkV "switch" "switches" "switched" "switched" "switching";
lin switch_V2 = mkV2 (mkV "switch" "switches" "switched" "switched" "switching");
lin switchboard_N = mkN "switchboard" "switchboards";
lin switchman_N = mkN "switchman" "switchmen" {- FIXME: guessed plural form -};
lin switzerland_PN = mkPN "Switzerland";
lin swivel_N = mkN "swivel" "swivels";
lin swivel_V = mkV "swivel" "swivels" "swivelled" "swivelled" "swivelling";
lin swivel_V2 = mkV2 (mkV "swivel" "swivels" "swivelled" "swivelled" "swivelling");
lin swiz_N = mkN "swiz" "IRREG";
lin swizzle_N = mkN "swizzle" "swizzles";
lin swizzle_stick_N = mkN "swizzle - stick" "swizzle - sticks";
lin swob_N = mkN "swob" "swobs";
lin swob_V2 = mkV2 (mkV "swob" "swobs" "swobbed" "swobbed" "swobbing");
lin swollen_headed_A = compoundA (mkA "swollen - headed");
lin swoon_N = mkN "swoon" "swoons";
lin swoon_V = mkV "swoon" "swoons" "swooned" "swooned" "swooning";
lin swoop_N = mkN "swoop" "swoops";
lin swoop_V = mkV "swoop" "swoops" "swooped" "swooped" "swooping";
lin swoop_V2 = mkV2 (mkV "swoop" "swoops" "swooped" "swooped" "swooping");
lin swop_N = mkN "swop" "swops";
lin swop_V = mkV "swop" "swops" "swopped" "swopped" "swopping";
lin swop_V2 = mkV2 (mkV "swop" "swops" "swopped" "swopped" "swopping");
lin sword_N = mkN "sword" "swords";
lin sword_cane_N = mkN "sword - cane" "sword - canes";
lin sword_cut_N = mkN "sword - cut" "sword - cuts";
lin sword_dance_N = mkN "sword - dance" "sword - dances";
lin swordfish_N = mkN "swordfish" "swordfish";
lin swordplay_N = mkN "swordplay" ;
lin swordsman_N = mkN "swordsman" "swordsmen" {- FIXME: guessed plural form -};
lin swordsmanship_N = mkN "swordsmanship" ;
lin swordstick_N = mkN "swordstick" "swordsticks";
lin swot_N = mkN "swot" "swots";
lin swot_V = mkV "swot" "swots" "swotted" "swotted" "swotting";
lin swot_V2 = mkV2 (mkV "swot" "swots" "swotted" "swotted" "swotting");
lin sybarite_N = mkN "sybarite" "sybarites";
lin sybaritic_A = compoundA (mkA "sybaritic");
lin sycamore_N = mkN "sycamore" "sycamores";
lin sycophancy_N = mkN "sycophancy" ;
lin sycophant_N = mkN "sycophant" "sycophants";
lin sycophantic_A = compoundA (mkA "sycophantic");
lin sydney_PN = mkPN "Sydney";
lin syllabary_N = mkN "syllabary" "syllabaries";
lin syllabic_A = compoundA (mkA "syllabic");
lin syllabicate_V2 = mkV2 (mkV "syllabicate" "syllabicates" "syllabicated" "syllabicated" "syllabicating");
lin syllabication_N = mkN "syllabication" ;
lin syllabification_N = mkN "syllabification" ;
lin syllabify_V2 = mkV2 (mkV "syllabify" "syllabifies" "syllabified" "syllabified" "syllabifying");
lin syllabize_V2 = mkV2 (mkV "syllabize" "syllabizes" "syllabized" "syllabized" "syllabizing");
lin syllable_N = mkN "syllable" "syllables";
lin syllabled_A = compoundA (mkA "syllabled");
lin syllabus_N = mkN "syllabus" "syllabuses";
lin syllogism_N = mkN "syllogism" "syllogisms";
lin syllogistic_A = compoundA (mkA "syllogistic");
lin sylph_N = mkN "sylph" "sylphs";
lin sylph_like_A = compoundA (mkA "sylph - like");
lin sylvan_A = compoundA (mkA "sylvan");
lin sylvia_PN = mkPN "Sylvia";
lin symbiosis_N = mkN "symbiosis" ;
lin symbol_N = mkN "symbol" "symbols";
lin symbolic_A = compoundA (mkA "symbolic");
lin symbolical_A = compoundA (mkA "symbolical");
lin symbolism_N = mkN "symbolism" "symbolisms";
lin symbolization_N = mkN "symbolization" "symbolizations";
lin symbolize_V2 = mkV2 (mkV "symbolize" "symbolizes" "symbolized" "symbolized" "symbolizing");
lin symmetric_A = compoundA (mkA "symmetric");
lin symmetrical_A = compoundA (mkA "symmetrical");
lin symmetry_N = mkN "symmetry" ;
lin sympathetic_A = compoundA (mkA "sympathetic");
lin sympathetically_Adv = mkAdv "sympathetically";
lin sympathize_V = mkV "sympathize" "sympathizes" "sympathized" "sympathized" "sympathizing";
lin sympathizer_N = mkN "sympathizer" "sympathizers";
lin sympathy_N = mkN "sympathy" "sympathies";
lin symphonic_A = compoundA (mkA "symphonic");
lin symphony_N = mkN "symphony" "symphonies";
lin symposium_N = mkN "symposium" "symposiums";
lin symptom_N = mkN "symptom" "symptoms";
lin symptomatic_A = compoundA (mkA "symptomatic");
lin symptomatically_Adv = mkAdv "symptomatically";
lin symptomless_A = compoundA (mkA "symptomless");
lin synagogue_N = mkN "synagogue" "synagogues";
lin synchroflash_N = mkN "synchroflash" "IRREG";
lin synchromesh_N = mkN "synchromesh" ;
lin synchronization_N = mkN "synchronization" "synchronizations";
lin synchronize_V = mkV "synchronize" "synchronizes" "synchronized" "synchronized" "synchronizing";
lin synchronize_V2 = mkV2 (mkV "synchronize" "synchronizes" "synchronized" "synchronized" "synchronizing");
lin synchronous_A = compoundA (mkA "synchronous");
lin synchrony_N = mkN "synchrony" ;
lin synchrotron_N = mkN "synchrotron" "synchrotrons";
lin syncopate_V2 = mkV2 (mkV "syncopate" "syncopates" "syncopated" "syncopated" "syncopating");
lin syncopation_N = mkN "syncopation" "syncopations";
lin syncope_N = mkN "syncope" ;
lin syndciate_V2 = mkV2 (mkV "syndciate");
lin syndic_N = mkN "syndic" "syndics";
lin syndicalism_N = mkN "syndicalism" ;
lin syndicalist_N = mkN "syndicalist" "syndicalists";
lin syndicate_N = mkN "syndicate" "syndicates";
lin syndicate_V2 = mkV2 (mkV "syndicate" "syndicates" "syndicated" "syndicated" "syndicating");
lin syndication_N = mkN "syndication" "syndications";
lin syndrome_N = mkN "syndrome" "syndromes";
lin synod_N = mkN "synod" "synods";
lin synonym_N = mkN "synonym" "synonyms";
lin synonymous_A = compoundA (mkA "synonymous");
lin synopsis_N = mkN "synopsis" "synopses" {- FIXME: guessed plural form -};
lin synoptic_A = compoundA (mkA "synoptic");
lin synoptically_Adv = mkAdv "synoptically";
lin syntactic_A = compoundA (mkA "syntactic");
lin syntactically_Adv = mkAdv "syntactically";
lin syntax_N = mkN "syntax" ;
lin synthesis_N = mkN "synthesis" "syntheses" {- FIXME: guessed plural form -};
lin synthesize_V2 = mkV2 (mkV "synthesize" "synthesizes" "synthesized" "synthesized" "synthesizing");
lin synthetic_A = compoundA (mkA "synthetic");
lin synthetic_N = mkN "synthetic" "synthetics";
lin synthetically_Adv = mkAdv "synthetically";
lin syphilis_N = mkN "syphilis" ;
lin syphilitic_A = compoundA (mkA "syphilitic");
lin syphilitic_N = mkN "syphilitic" "syphilitics";
lin syphon_N = mkN "syphon" "syphons";
lin syphon_V = mkV "syphon" "syphons" "syphoned" "syphoned" "syphoning";
lin syphon_V2 = mkV2 (mkV "syphon" "syphons" "syphoned" "syphoned" "syphoning");
lin syracuse_PN = mkPN "Syracuse";
lin syria_PN = mkPN "Syria";
lin syrian_A = compoundA (mkA "syrian");
lin syrian_N = mkN "syrian" "syrians";
lin syringa_N = mkN "syringa" "syringas";
lin syringe_N = mkN "syringe" "syringes";
lin syringe_V2 = mkV2 (mkV "syringe" "syringes" "syringed" "syringed" "syringing");
lin syrup_N = mkN "syrup" "syrups";
lin syrupy_A = compoundA (mkA "syrupy");
lin system_N = mkN "system" "systems";
lin systematic_A = compoundA (mkA "systematic");
lin systematically_Adv = mkAdv "systematically";
lin systematization_N = mkN "systematization" ;
lin systematize_V2 = mkV2 (mkV "systematize" "systematizes" "systematized" "systematized" "systematizing");
lin syston_PN = mkPN "Syston";
lin t_junction_N = mkN "t - junction" "t - junctions";
lin t_shirt_N = mkN "t - shirt" "t - shirts";
lin t_square_N = mkN "t - square" "t - squares";
lin tab_N = mkN "tab" "tabs";
lin tabard_N = mkN "tabard" "tabards";
lin tabby_A = compoundA (mkA "tabby");
lin tabby_N = mkN "tabby" "tabbies";
lin tabby_cat_N = mkN "tabby - cat" "tabby - cats";
lin tabernacle_N = mkN "tabernacle" "tabernacles";
lin table_N = mkN "table" "tables";
lin table_V2 = mkV2 (mkV "table" "tables" "tabled" "tabled" "tabling");
lin table_d'hote_A = compoundA (mkA "table d'hôte");
lin table_d'hote_Adv = mkAdv "table d'hôte";
lin table_knife_N = mkN "table - knife" "table - knives";
lin table_lifting_N = mkN "table - lifting" ;
lin table_linen_N = mkN "table - linen" ;
lin table_rapping_N = mkN "table - rapping" ;
lin table_talk_N = mkN "table - talk" ;
lin table_turning_N = mkN "table - turning" ;
lin tableau_N = mkN "tableau" "tableaux";
lin tableau_vivant_N = mkN "tableau vivant" "tableaux vivants";
lin tablecloth_N = mkN "tablecloth" "tablecloths";
lin tablemat_N = mkN "tablemat" "tablemats";
lin tablespoon_N = mkN "tablespoon" "tablespoons";
lin tablespoonful_N = mkN "tablespoonful" "tablespoonfuls";
lin tablet_N = mkN "tablet" "tablets";
lin tableware_N = mkN "tableware" ;
lin tabloid_N = mkN "tabloid" "tabloids";
lin taboo_A = compoundA (mkA "taboo");
lin taboo_N = mkN "taboo" "taboos";
lin taboo_V2 = mkV2 (mkV "taboo" "taboos" "tabooed" "tabooed" "tabooing");
lin tabor_N = mkN "tabor" "tabors";
lin tabular_A = compoundA (mkA "tabular");
lin tabulate_V2 = mkV2 (mkV "tabulate" "tabulates" "tabulated" "tabulated" "tabulating");
lin tabulation_N = mkN "tabulation" "tabulations";
lin tabulator_N = mkN "tabulator" "tabulators";
lin tachograph_N = mkN "tachograph" "tachographs";
lin tacit_A = compoundA (mkA "tacit");
lin taciturn_A = compoundA (mkA "taciturn");
lin taciturnity_N = mkN "taciturnity" ;
lin tack_N = mkN "tack" "tacks";
lin tack_V = mkV "tack" "tacks" "tacked" "tacked" "tacking";
lin tack_V2 = mkV2 (mkV "tack" "tacks" "tacked" "tacked" "tacking");
lin tackle_N = mkN "tackle" "tackles";
lin tackle_V = mkV "tackle" "tackles" "tackled" "tackled" "tackling";
lin tackle_V2 = mkV2 (mkV "tackle" "tackles" "tackled" "tackled" "tackling");
lin tacky_A = mkA "tacky" "tackier";
lin tact_N = mkN "tact" ;
lin tactful_A = compoundA (mkA "tactful");
lin tactic_N = mkN "tactic" "tactics";
lin tactical_A = compoundA (mkA "tactical");
lin tactician_N = mkN "tactician" "tacticians";
lin tactile_A = compoundA (mkA "tactile");
lin tactless_A = compoundA (mkA "tactless");
lin tactlessness_N = mkN "tactlessness" ;
lin tactual_A = compoundA (mkA "tactual");
lin tadley_PN = mkPN "Tadley";
lin tadpole_N = mkN "tadpole" "tadpoles";
lin taegu_PN = mkPN "Taegu";
lin taffeta_N = mkN "taffeta" ;
lin taffrail_N = mkN "taffrail" "taffrails";
lin taffy_N = mkN "taffy" "taffies";
lin tag_N = mkN "tag" "tags";
lin tag_V = mkV "tag" "tags" "tagged" "tagged" "tagging";
lin tag_V2 = mkV2 (mkV "tag" "tags" "tagged" "tagged" "tagging");
lin tag_VS = mkVS (mkV "tag" "tags" "tagged" "tagged" "tagging");
lin tahiti_PN = mkPN "Tahiti";
lin tahitian_A = compoundA (mkA "tahitian");
lin tahitian_N = mkN "tahitian" "tahitians";
lin tail_N = mkN "tail" "tails";
lin tail_V = mkV "tail" "tails" "tailed" "tailed" "tailing";
lin tail_V2 = mkV2 (mkV "tail" "tails" "tailed" "tailed" "tailing");
lin tail_coat_N = mkN "tail - coat" "tail - coats";
lin tail_end_N = mkN "tail - end" "tail - ends";
lin tail_light_N = mkN "tail - light" "tail - lights";
lin tailboard_N = mkN "tailboard" "tailboards";
lin tailed_A = compoundA (mkA "tailed");
lin tailgate_N = mkN "tailgate" "tailgates";
lin tailless_A = compoundA (mkA "tailless");
lin tailor_N = mkN "tailor" "tailors";
lin tailor_V2 = mkV2 (mkV "tailor" "tailors" "tailored" "tailored" "tailoring");
lin tailor_made_A = compoundA (mkA "tailor - made");
lin tailpiece_N = mkN "tailpiece" "tailpieces";
lin tailplane_N = mkN "tailplane" "tailplanes";
lin tailspin_N = mkN "tailspin" "tailspins";
lin taint_N = mkN "taint" "taints";
lin taint_V = mkV "taint" "taints" "tainted" "tainted" "tainting";
lin taint_V2 = mkV2 (mkV "taint" "taints" "tainted" "tainted" "tainting");
lin taintless_A = compoundA (mkA "taintless");
lin taipei_PN = mkPN "Taipei";
lin taiwan_PN = mkPN "Taiwan";
lin taiwanese_A = compoundA (mkA "taiwanese");
lin taiwanese_N = mkN "taiwanese" "taiwanese";
lin taiyuan_PN = mkPN "Taiyuan";
lin take_N = mkN "take" "takes";
lin take_V = IrregEng.take_V;
lin take_V2 = mkV2 (IrregEng.take_V);
lin take_VA = mkVA (IrregEng.take_V);
lin take_VS = mkVS (IrregEng.take_V);
lin take_home_A = compoundA (mkA "take - home");
lin take_off_N = mkN "take - off" "take - offs";
lin take_up_N = mkN "take - up" ;
lin takeaway_A = compoundA (mkA "takeaway");
lin takeover_N = mkN "takeover" "takeovers";
lin taker_N = mkN "taker" "takers";
lin taking_A = compoundA (mkA "taking");
lin talc_N = mkN "talc" ;
lin talcum_N = mkN "talcum" ;
lin tale_N = mkN "tale" "tales";
lin tale_bearer_N = mkN "tale - bearer" "tale - bearers";
lin tale_teller_N = mkN "tale - teller" "tale - tellers";
lin talent_N = mkN "talent" "talents";
lin talented_A = compoundA (mkA "talented");
lin talisman_N = mkN "talisman" "talismans";
lin talk_N = mkN "talk" "talks";
lin talk_V = mkV "talk" "talks" "talked" "talked" "talking";
lin talk_V2 = mkV2 (mkV "talk" "talks" "talked" "talked" "talking");
lin talk_VA = mkVA (mkV "talk" "talks" "talked" "talked" "talking");
lin talkative_A = compoundA (mkA "talkative");
lin talker_N = mkN "talker" "talkers";
lin talkie_N = mkN "talkie" "talkies";
lin talking_point_N = mkN "talking - point" "talking - points";
lin talking_to_N = mkN "talking - to" "talking - tos";
lin tall_A = mkA "tall" "taller";
lin tallboy_N = mkN "tallboy" "tallboys";
lin tallish_A = compoundA (mkA "tallish");
lin tallow_N = mkN "tallow" ;
lin tally_N = mkN "tally" "tallies";
lin tally_V = mkV "tally" "tallies" "tallied" "tallied" "tallying";
lin tally_V2 = mkV2 (mkV "tally" "tallies" "tallied" "tallied" "tallying");
lin tally_clerk_N = mkN "tally - clerk" "tally - clerks";
lin tallyman_N = mkN "tallyman" "tallymen" {- FIXME: guessed plural form -};
lin talmud_N = mkN "talmud" "talmuds";
lin talon_N = mkN "talon" "talons";
lin talus_N = mkN "talus" "taluses";
lin tam_o'_shanter_N = mkN "tam - o'-shanter" "tam - o'-shanters";
lin tamable_A = compoundA (mkA "tamable");
lin tamale_N = mkN "tamale" "tamales";
lin tamarind_N = mkN "tamarind" "tamarinds";
lin tamarisk_N = mkN "tamarisk" "tamarisks";
lin tambour_N = mkN "tambour" "tambours";
lin tambourine_N = mkN "tambourine" "tambourines";
lin tame_A = mkA "tame" "tamer";
lin tame_V2 = mkV2 (mkV "tame" "tames" "tamed" "tamed" "taming");
lin tameness_N = mkN "tameness" ;
lin tamer_N = mkN "tamer" "tamers";
lin tamil_A = compoundA (mkA "tamil");
lin tamil_N = mkN "tamil" "tamils";
lin tammany_N = mkN "tammany" "IRREG";
lin tammy_N = mkN "tammy" "tammies";
lin tamp_V2 = mkV2 (mkV "tamp" "tamps" "tamped" "tamped" "tamping");
lin tamper_V = mkV "tamper" "tampers" "tampered" "tampered" "tampering";
lin tampere_PN = mkPN "Tampere";
lin tamworth_PN = mkPN "Tamworth";
lin tan_A = compoundA (mkA "tan");
lin tan_N = mkN "tan" "tans";
lin tan_V = mkV "tan" "tans" "tanned" "tanned" "tanning";
lin tan_V2 = mkV2 (mkV "tan" "tans" "tanned" "tanned" "tanning");
lin tandem_Adv = mkAdv "tandem";
lin tandem_N = mkN "tandem" "tandems";
lin tang_N = mkN "tang" "tangs";
lin tangent_N = mkN "tangent" "tangents";
lin tangerine_A = compoundA (mkA "tangerine");
lin tangerine_N = mkN "tangerine" "tangerines";
lin tangibility_N = mkN "tangibility" ;
lin tangible_A = compoundA (mkA "tangible");
lin tangle_N = mkN "tangle" "tangles";
lin tangle_V = mkV "tangle" "tangles" "tangled" "tangled" "tangling";
lin tangle_V2 = mkV2 (mkV "tangle" "tangles" "tangled" "tangled" "tangling");
lin tango_N = mkN "tango" "tangos";
lin tango_V = mkV "tango";
lin tangshan_PN = mkPN "Tangshan";
lin tangy_A = mkA "tangy" "tangier";
lin tank_N = mkN "tank" "tanks";
lin tank_V = mkV "tank" "tanks" "tanked" "tanked" "tanking";
lin tank_car_N = mkN "tank - car" "tank - cars";
lin tankard_N = mkN "tankard" "tankards";
lin tanker_N = mkN "tanker" "tankers";
lin tanner_N = mkN "tanner" "tanners";
lin tannery_N = mkN "tannery" "tanneries";
lin tannic_A = compoundA (mkA "tannic");
lin tannin_N = mkN "tannin" ;
lin tannoy_N = mkN "tannoy" "tannoys";
lin tansy_N = mkN "tansy" "tansies";
lin tantalize_V2 = mkV2 (mkV "tantalize" "tantalizes" "tantalized" "tantalized" "tantalizing");
lin tantamount_A = compoundA (mkA "tantamount");
lin tantrum_N = mkN "tantrum" "tantrums";
lin tanzania_PN = mkPN "Tanzania";
lin tanzanian_A = compoundA (mkA "tanzanian");
lin tanzanian_N = mkN "tanzanian" "tanzanians";
lin tap_N = mkN "tap" "taps";
lin tap_V = mkV "tap" "taps" "tapped" "tapped" "tapping";
lin tap_V2 = mkV2 (mkV "tap" "taps" "tapped" "tapped" "tapping");
lin tap_dancing_N = mkN "tap - dancing" ;
lin tape_N = mkN "tape" "tapes";
lin tape_V = mkV "tape";
lin tape_V2 = mkV2 (mkV "tape" "tapes" "taped" "taped" "taping");
lin tape_measure_N = mkN "tape - measure" "tape - measures";
lin tape_recorder_N = mkN "tape - recorder" "tape - recorders";
lin taper_N = mkN "taper" "tapers";
lin taper_V = mkV "taper" "tapers" "tapered" "tapered" "tapering";
lin taper_V2 = mkV2 (mkV "taper" "tapers" "tapered" "tapered" "tapering");
lin tapestried_A = compoundA (mkA "tapestried");
lin tapestry_N = mkN "tapestry" "tapestries";
lin tapeworm_N = mkN "tapeworm" "tapeworms";
lin tapioca_N = mkN "tapioca" ;
lin tapir_N = mkN "tapir" "tapirs";
lin taproom_N = mkN "taproom" "taprooms";
lin taproot_N = mkN "taproot" "taproots";
lin tapster_N = mkN "tapster" "tapsters";
lin tar_N = mkN "tar" "tars";
lin tar_V2 = mkV2 (mkV "tar" "tars" "tarred" "tarred" "tarring");
lin tar_macadam_N = mkN "tar - macadam" ;
lin taradiddle_N = mkN "taradiddle" "taradiddles";
lin taranaki_PN = mkPN "Taranaki";
lin tarantella_N = mkN "tarantella" "tarantellas";
lin tarantelle_N = mkN "tarantelle" "tarantelles";
lin taranto_PN = mkPN "Taranto";
lin tarantula_N = mkN "tarantula" "tarantulas";
lin tarboosh_N = mkN "tarboosh" "tarbooshes";
lin tardily_Adv = mkAdv "tardily";
lin tardiness_N = mkN "tardiness" ;
lin tardy_A = mkA "tardy" "tardier";
lin tare_N = mkN "tare" "tares";
lin target_N = mkN "target" "targets";
lin target_V2 = mkV2 (variants {mkV "target" "targets" "targeted"  "targeted"  "targeting" ;
                                mkV "target" "targets" "targetted" "targetted" "targetting"});
lin target_V2V = mkV2V (mkV "target") noPrep to_Prep ;
lin target_VS = mkVS (mkV "target");
lin tariff_N = mkN "tariff" "tariffs";
lin tarmac_N = mkN "tarmac" ;
lin tarmac_V2 = mkV2 (mkV "tarmac" "IRREG" "IRREG" "IRREG" "IRREG");
lin tarn_N = mkN "tarn" "tarns";
lin tarnish_N = mkN "tarnish" ;
lin tarnish_V = mkV "tarnish" "tarnishes" "tarnished" "tarnished" "tarnishing";
lin tarnish_V2 = mkV2 (mkV "tarnish" "tarnishes" "tarnished" "tarnished" "tarnishing");
lin taro_N = mkN "taro" "taros";
lin tarpaulin_N = mkN "tarpaulin" "tarpaulins";
lin tarpon_N = mkN "tarpon" "tarpons";
lin tarradiddle_N = mkN "tarradiddle" "tarradiddles";
lin tarragon_N = mkN "tarragon" ;
lin tarrasa_PN = mkPN "Tarrasa";
lin tarry_A = compoundA (mkA "tarry");
lin tarry_V = mkV "tarry" "tarries" "tarried" "tarried" "tarrying";
lin tarsal_A = compoundA (mkA "tarsal");
lin tarsal_N = mkN "tarsal" "tarsals";
lin tarsus_N = mkN "tarsus" "tarsi" {- FIXME: guessed plural form -};
lin tart_A = compoundA (mkA "tart");
lin tart_N = mkN "tart" "tarts";
lin tart_V2 = mkV2 (mkV "tart" "tarts" "tarted" "tarted" "tarting");
lin tartan_N = mkN "tartan" "tartans";
lin tartar_N = mkN "tartar" "tartars";
lin tartaric_A = compoundA (mkA "tartaric");
lin tartness_N = mkN "tartness" ;
lin tashkent_PN = mkPN "Tashkent";
lin task_N = mkN "task" "tasks";
lin task_V2 = mkV2 (mkV "task" "tasks" "tasked" "tasked" "tasking");
lin task_force_N = mkN "task - force" "task - forces";
lin taskmaster_N = mkN "taskmaster" "taskmasters";
lin tasmania_PN = mkPN "Tasmania";
lin tassel_N = mkN "tassel" "tassels";
lin tasseled_A = compoundA (mkA "tasseled");
lin tasselled_A = compoundA (mkA "tasselled");
lin taste_N = mkN "taste" "tastes";
lin taste_V = mkV "taste" "tastes" "tasted" "tasted" "tasting";
lin taste_V2 = mkV2 (mkV "taste" "tastes" "tasted" "tasted" "tasting");
lin tasteful_A = compoundA (mkA "tasteful");
lin tasteless_A = compoundA (mkA "tasteless");
lin taster_N = mkN "taster" "tasters";
lin tastily_Adv = mkAdv "tastily";
lin tasty_A = mkA "tasty" "tastier";
lin tat_N = mkN "tat" ;
lin tat_V = mkV "tat" "tats" "tatted" "tatted" "tatting";
lin tat_V2 = mkV2 (mkV "tat" "tats" "tatted" "tatted" "tatting");
lin tatter_N = mkN "tatter" "tatters";
lin tatterdemalion_N = mkN "tatterdemalion" "tatterdemalions";
lin tattered_A = compoundA (mkA "tattered");
lin tattily_Adv = mkAdv "tattily";
lin tatting_N = mkN "tatting" ;
lin tattle_N = mkN "tattle" ;
lin tattle_V = mkV "tattle" "tattles" "tattled" "tattled" "tattling";
lin tattle_V2 = mkV2 (mkV "tattle" "tattles" "tattled" "tattled" "tattling");
lin tattler_N = mkN "tattler" "tattlers";
lin tattoo_N = mkN "tattoo" "tattoos";
lin tattoo_V2 = mkV2 (mkV "tattoo" "tattoos" "tattooed" "tattooed" "tattooing");
lin tatty_A = mkA "tatty" "tattier";
lin taunt_N = mkN "taunt" "taunts";
lin taunt_V2 = mkV2 (mkV "taunt" "taunts" "taunted" "taunted" "taunting");
lin tauntingly_Adv = mkAdv "tauntingly";
lin taunton_PN = mkPN "Taunton";
lin taurus_PN = mkPN "Taurus";
lin taut_A = mkA "taut" "tauter";
lin tautness_N = mkN "tautness" ;
lin tautological_A = compoundA (mkA "tautological");
lin tautology_N = mkN "tautology" "tautologies";
lin taverham_PN = mkPN "Taverham";
lin tavern_N = mkN "tavern" "taverns";
lin tavistock_PN = mkPN "Tavistock";
lin tawdrily_Adv = mkAdv "tawdrily";
lin tawdriness_N = mkN "tawdriness" ;
lin tawdry_A = mkA "tawdry" "tawdrier";
lin tawny_A = compoundA (mkA "tawny");
lin tawse_N = mkN "tawse" "tawses";
lin tax_N = mkN "tax" "taxes";
lin tax_V2 = mkV2 (mkV "tax" "taxes" "taxed" "taxed" "taxing");
lin tax_collector_N = mkN "tax - collector" "tax - collectors";
lin tax_free_A = compoundA (mkA "tax - free");
lin taxability_N = mkN "taxability" ;
lin taxable_A = compoundA (mkA "taxable");
lin taxation_N = mkN "taxation" ;
lin taxi_N = mkN "taxi" "taxis";
lin taxi_V = mkV "taxi" "taxis" "taxied" "taxied" "taxiing";
lin taxi_V2 = mkV2 (mkV "taxi" "taxis" "taxied" "taxied" "taxiing");
lin taxicab_N = mkN "taxicab" "taxicabs";
lin taxidermist_N = mkN "taxidermist" "taxidermists";
lin taxidermy_N = mkN "taxidermy" ;
lin taximeter_N = mkN "taximeter" "taximeters";
lin taxonomy_N = mkN "taxonomy" "taxonomies";
lin taxpayer_N = mkN "taxpayer" "taxpayers";
lin tayside_PN = mkPN "Tayside";
lin tb_N = mkN "tb" ;
lin tbilisi_PN = mkPN "Tbilisi";
lin te_deum_N = mkN "te deum" "te deums";
lin tea_N = mkN "tea" "teas";
lin tea_bag_N = mkN "tea - bag" "tea - bags";
lin tea_break_N = mkN "tea - break" "tea - breaks";
lin tea_caddy_N = mkN "tea - caddy" "tea - caddies";
lin tea_chest_N = mkN "tea - chest" "tea - chests";
lin tea_cloth_N = mkN "tea - cloth" "tea - cloths";
lin tea_cosy_N = mkN "tea - cosy" "tea - cosies";
lin tea_garden_N = mkN "tea - garden" "tea - gardens";
lin tea_kettle_N = mkN "tea - kettle" "tea - kettles";
lin tea_leaf_N = mkN "tea - leaf" "tea - leaves";
lin tea_party_N = mkN "tea - party" "tea - parties";
lin tea_service_N = mkN "tea - service" "tea - services";
lin tea_set_N = mkN "tea - set" "tea - sets";
lin tea_strainer_N = mkN "tea - strainer" "tea - strainers";
lin tea_table_N = mkN "tea - table" "tea - tables";
lin tea_time_N = mkN "tea - time" ;
lin tea_towel_N = mkN "tea - towel" "tea - towels";
lin tea_tray_N = mkN "tea - tray" "tea - trays";
lin tea_trolley_N = mkN "tea - trolley" "tea - trolleys";
lin tea_urn_N = mkN "tea - urn" "tea - urns";
lin tea_wagon_N = mkN "tea - wagon" "tea - wagons";
lin teacake_N = mkN "teacake" "teacakes";
lin teach_V = IrregEng.teach_V;
lin teach_V2 = mkV2 (IrregEng.teach_V);
lin teach_V2V = mkV2V (IrregEng.teach_V) noPrep to_Prep ;
lin teach_VS = mkVS (IrregEng.teach_V);
lin teach_in_N = mkN "teach - in" "teach - ins";
lin teachable_A = compoundA (mkA "teachable");
lin teacher_N = mkN "teacher" "teachers";
lin teaching_N = mkN "teaching" "teachings";
lin teacup_N = mkN "teacup" "teacups";
lin teahouse_N = mkN "teahouse" "teahouses";
lin teak_N = mkN "teak" ;
lin teal_N = mkN "teal" "teal";
lin team_N = mkN "team" "teams";
lin team_V = mkV "team" "teams" "teamed" "teamed" "teaming";
lin teamster_N = mkN "teamster" "teamsters";
lin teamwork_N = mkN "teamwork" ;
lin teapot_N = mkN "teapot" "teapots";
lin tear_N = mkN "tear" "tears";
lin tear_V = IrregEng.tear_V;
lin tear_V2 = mkV2 (IrregEng.tear_V);
lin tear_drop_N = mkN "tear - drop" "tear - drops";
lin tear_gas_N = mkN "tear - gas" ;
lin tearaway_A = compoundA (mkA "tearaway");
lin tearaway_N = mkN "tearaway" "tearaways";
lin tearful_A = compoundA (mkA "tearful");
lin tearing_A = compoundA (mkA "tearing");
lin tearing_N = mkN "tearing" ;
lin tearless_A = compoundA (mkA "tearless");
lin tearoom_N = mkN "tearoom" "tearooms";
lin tease_N = mkN "tease" "teases";
lin tease_V2 = mkV2 (mkV "tease" "teases" "teased" "teased" "teasing");
lin teasel_N = mkN "teasel" "teasels";
lin teaser_N = mkN "teaser" "teasers";
lin teashop_N = mkN "teashop" "teashops";
lin teasingly_Adv = mkAdv "teasingly";
lin teaspoon_N = mkN "teaspoon" "teaspoons";
lin teaspoonful_N = mkN "teaspoonful" "teaspoonfuls";
lin teat_N = mkN "teat" "teats";
lin teazel_N = mkN "teazel" "teazels";
lin teazle_N = mkN "teazle" "teazles";
lin tec_N = mkN "tec" "tecs";
lin tech_N = mkN "tech" ;
lin technical_A = compoundA (mkA "technical");
lin technicality_N = mkN "technicality" "technicalities";
lin technician_N = mkN "technician" "technicians";
lin technicolor_N = mkN "technicolor" ;
lin technique_N = mkN "technique" "techniques";
lin technocracy_N = mkN "technocracy" "technocracies";
lin technocrat_N = mkN "technocrat" "technocrats";
lin technological_A = compoundA (mkA "technological");
lin technologist_N = mkN "technologist" "technologists";
lin technology_N = mkN "technology" "technologies";
lin techy_A = compoundA (mkA "techy");
lin ted_N = mkN "ted" "teds";
lin ted_PN = mkPN "Ted";
lin teddy_N = mkN "teddy" "teddies";
lin teddy_PN = mkPN "Teddy";
lin teddy_boy_N = mkN "teddy boy" "teddy boys";
lin tedious_A = compoundA (mkA "tedious");
lin tediousness_N = mkN "tediousness" ;
lin tedium_N = mkN "tedium" ;
lin tee_N = mkN "tee" "tees";
lin tee_V = mkV "tee" "IRREG" "IRREG" "IRREG" "IRREG";
lin tee_V2 = mkV2 (mkV "tee" "IRREG" "IRREG" "IRREG" "IRREG");
lin tee_shirt_N = mkN "tee - shirt" "tee - shirts";
lin teem_V = mkV "teem" "teems" "teemed" "teemed" "teeming";
lin teenage_A = compoundA (mkA "teenage");
lin teenager_N = mkN "teenager" "teenagers";
lin teeny_A = mkA "teeny" "teenier";
lin teesside_PN = mkPN "Teesside";
lin teeter_V = mkV "teeter" "teeters" "teetered" "teetered" "teetering";
lin teethe_V = mkV "teethe" "teethes" "teethed" "teethed" "teething";
lin teetotal_A = compoundA (mkA "teetotal");
lin teetotaller_N = mkN "teetotaller" "teetotallers";
lin teetotum_N = mkN "teetotum" "teetotums";
lin teg_N = mkN "teg" "tegs";
lin tegument_N = mkN "tegument" "teguments";
lin teheran_PN = mkPN "Teheran";
lin teignmouth_PN = mkPN "Teignmouth";
lin tel_PN = mkPN "Tel";
lin tel_aviv_PN = mkPN "Tel - aviv";
lin telecast_N = mkN "telecast" "telecasts";
lin telecast_V2 = mkV2 (mkV "tele" IrregEng.cast_V);
lin telecommunication_N = mkN "telecommunication" "telecommunications";
lin telegram_N = mkN "telegram" "telegrams";
lin telegraph_N = mkN "telegraph" "telegraphs";
lin telegraph_V = mkV "telegraph" "telegraphs" "telegraphed" "telegraphed" "telegraphing";
lin telegraph_V2 = mkV2 (mkV "telegraph" "telegraphs" "telegraphed" "telegraphed" "telegraphing");
lin telegraph_line_N = mkN "telegraph - line" "telegraph - lines";
lin telegraph_pole_N = mkN "telegraph - pole" "telegraph - poles";
lin telegraph_post_N = mkN "telegraph - post" "telegraph - posts";
lin telegraph_wire_N = mkN "telegraph - wire" "telegraph - wires";
lin telegrapher_N = mkN "telegrapher" "telegraphers";
lin telegraphese_N = mkN "telegraphese" ;
lin telegraphic_A = compoundA (mkA "telegraphic");
lin telegraphically_Adv = mkAdv "telegraphically";
lin telegraphist_N = mkN "telegraphist" "telegraphists";
lin telegraphy_N = mkN "telegraphy" ;
lin telemetry_N = mkN "telemetry" ;
lin teleological_A = compoundA (mkA "teleological");
lin teleologist_N = mkN "teleologist" "teleologists";
lin teleology_N = mkN "teleology" "teleologies";
lin telepathic_A = compoundA (mkA "telepathic");
lin telepathist_N = mkN "telepathist" "telepathists";
lin telepathy_N = mkN "telepathy" ;
lin telephone_N = mkN "telephone" "telephones";
lin telephone_V = mkV "telephone" "telephones" "telephoned" "telephoned" "telephoning";
lin telephone_V2 = mkV2 (mkV "telephone" "telephones" "telephoned" "telephoned" "telephoning");
lin telephonic_A = compoundA (mkA "telephonic");
lin telephonist_N = mkN "telephonist" "telephonists";
lin telephony_N = mkN "telephony" ;
lin telephoto_N = mkN "telephoto" ;
lin telephotograph_N = mkN "telephotograph" "telephotographs";
lin telephotography_N = mkN "telephotography" ;
lin teleprinter_N = mkN "teleprinter" "teleprinters";
lin teleprompter_N = mkN "teleprompter" "teleprompters";
lin telescope_N = mkN "telescope" "telescopes";
lin telescope_V = mkV "telescope" "telescopes" "telescoped" "telescoped" "telescoping";
lin telescope_V2 = mkV2 (mkV "telescope" "telescopes" "telescoped" "telescoped" "telescoping");
lin telescopic_A = compoundA (mkA "telescopic");
lin telescopically_Adv = mkAdv "telescopically";
lin teletypewriter_N = mkN "teletypewriter" "teletypewriters";
lin televise_V2 = mkV2 (mkV "televise" "televises" "televised" "televised" "televising");
lin television_N = mkN "television" "televisions";
lin telex_N = mkN "telex" "telexes";
lin telfer_N = mkN "telfer" "telfers";
lin telford_PN = mkPN "Telford";
lin tell_V = IrregEng.tell_V;
lin tell_V2 = mkV2 (IrregEng.tell_V);
lin tell_V2V = mkV2V (IrregEng.tell_V) noPrep to_Prep;
lin tell_VV = mkVV (IrregEng.tell_V);
lin tell_VS = mkVS (IrregEng.tell_V);
lin teller_N = mkN "teller" "tellers";
lin telling_A = compoundA (mkA "telling");
lin telltale_N = mkN "telltale" "telltales";
lin telly_N = mkN "telly" "tellies";
lin telpher_N = mkN "telpher" "telphers";
lin telstar_PN = mkPN "Telstar";
lin temerity_N = mkN "temerity" ;
lin temp_N = mkN "temp" "temps";
lin temper_N = mkN "temper" "tempers";
lin temper_V = mkV "temper" "tempers" "tempered" "tempered" "tempering";
lin temper_V2 = mkV2 (mkV "temper" "tempers" "tempered" "tempered" "tempering");
lin tempera_N = mkN "tempera" ;
lin temperament_N = mkN "temperament" "temperaments";
lin temperamental_A = compoundA (mkA "temperamental");
lin temperance_N = mkN "temperance" ;
lin temperate_A = compoundA (mkA "temperate");
lin temperateness_N = mkN "temperateness" ;
lin temperature_N = mkN "temperature" "temperatures";
lin tempered_A = compoundA (mkA "tempered");
lin tempest_N = mkN "tempest" "tempests";
lin tempest_swept_A = compoundA (mkA "tempest - swept");
lin tempest_tossed_A = compoundA (mkA "tempest - tossed");
lin tempestuous_A = compoundA (mkA "tempestuous");
lin template_N = mkN "template" "templates";
lin temple_N = mkN "temple" "temples";
lin templet_N = mkN "templet" "templets";
lin tempo_N = mkN "tempo" "tempos";
lin temporal_A = compoundA (mkA "temporal");
lin temporality_N = mkN "temporality" ;
lin temporalty_N = mkN "temporalty" ;
lin temporariness_N = mkN "temporariness" ;
lin temporary_A = compoundA (mkA "temporary");
lin temporize_V = mkV "temporize" "temporizes" "temporized" "temporized" "temporizing";
lin tempt_V2 = mkV2 (mkV "tempt" "tempts" "tempted" "tempted" "tempting");
lin tempt_V2V = mkV2V (mkV "tempt") noPrep to_Prep ;
lin temptation_N = mkN "temptation" "temptations";
lin tempter_N = mkN "tempter" "tempters";
lin temptingly_Adv = mkAdv "temptingly";
lin temptress_N = mkN "temptress" "temptresses";
lin tenability_N = mkN "tenability" ;
lin tenable_A = compoundA (mkA "tenable");
lin tenacious_A = compoundA (mkA "tenacious");
lin tenaciousness_N = mkN "tenaciousness" ;
lin tenacity_N = mkN "tenacity" ;
lin tenancy_N = mkN "tenancy" "tenancies";
lin tenant_N = mkN "tenant" "tenants";
lin tenant_V2 = mkV2 (mkV "tenant" "tenants" "tenanted" "tenanted" "tenanting");
lin tenantry_N = mkN "tenantry" "tenantries";
lin tenby_PN = mkPN "Tenby";
lin tench_N = mkN "tench" "tench";
lin tend_V = mkV "tend" "tends" "tended" "tended" "tending";
lin tend_V2 = mkV2 (mkV "tend" "tends" "tended" "tended" "tending");
lin tend_VV = mkVV (mkV "tend" "tends" "tended" "tended" "tending");
lin tendency_N = mkN "tendency" "tendencies";
lin tendentious_A = compoundA (mkA "tendentious");
lin tendentiousness_N = mkN "tendentiousness" ;
lin tender_A = mkA "tender" "tenderer";
lin tender_N = mkN "tender" "tenders";
lin tender_V = mkV "tender" "tenders" "tendered" "tendered" "tendering";
lin tender_V2 = mkV2 (mkV "tender" "tenders" "tendered" "tendered" "tendering");
lin tender_V2V = mkV2V (mkV "tender" "tenders" "tendered" "tendered" "tendering") noPrep to_Prep ;
lin tenderfoot_N = mkN "tenderfoot" "tenderfoots";
lin tenderhearted_A = compoundA (mkA "tenderhearted");
lin tenderloin_N = mkN "tenderloin" ;
lin tenderness_N = mkN "tenderness" ;
lin tendon_N = mkN "tendon" "tendons";
lin tendril_N = mkN "tendril" "tendrils";
lin tenement_N = mkN "tenement" "tenements";
lin tenement_house_N = mkN "tenement - house" "tenement - houses";
lin tenet_N = mkN "tenet" "tenets";
lin tenfold_Adv = mkAdv "tenfold";
lin tenner_N = mkN "tenner" "tenners";
lin tennessee_PN = mkPN "Tennessee";
lin tennis_N = mkN "tennis" ;
lin tennis_court_N = mkN "tennis - court" "tennis - courts";
lin tennis_elbow_N = mkN "tennis - elbow" ;
lin tenon_N = mkN "tenon" "tenons";
lin tenor_N = mkN "tenor" "tenors";
lin tenpence_N = mkN "tenpence" "tenpences";
lin tenpin_N = mkN "tenpin" "tenpins";
lin tense_A = mkA "tense" "tenser";
lin tense_N = mkN "tense" "tenses";
lin tense_V = mkV "tense" "tenses" "tensed" "tensed" "tensing";
lin tense_V2 = mkV2 (mkV "tense" "tenses" "tensed" "tensed" "tensing");
lin tenseness_N = mkN "tenseness" ;
lin tensile_A = compoundA (mkA "tensile");
lin tension_N = mkN "tension" "tensions";
lin tensity_N = mkN "tensity" ;
lin tent_N = mkN "tent" "tents";
lin tent_peg_N = mkN "tent - peg" "tent - pegs";
lin tentacle_N = mkN "tentacle" "tentacles";
lin tentative_A = compoundA (mkA "tentative");
lin tenterden_PN = mkPN "Tenterden";
lin tenth_A = compoundA (mkA "tenth");
lin tenth_N = mkN "tenth" "tenths";
lin tenuity_N = mkN "tenuity" ;
lin tenuous_A = compoundA (mkA "tenuous");
lin tenure_N = mkN "tenure" "tenures";
lin tepee_N = mkN "tepee" "tepees";
lin tepid_A = compoundA (mkA "tepid");
lin tepidity_N = mkN "tepidity" ;
lin tepidness_N = mkN "tepidness" ;
lin tercentenary_N = mkN "tercentenary" "tercentenaries";
lin tercentennial_N = mkN "tercentennial" "tercentennials";
lin terence_PN = mkPN "Terence";
lin teresa_PN = mkPN "Teresa";
lin tergiversate_V = mkV "tergiversate" "tergiversates" "tergiversated" "tergiversated" "tergiversating";
lin tergiversation_N = mkN "tergiversation" ;
lin term_N = mkN "term" "terms";
lin term_V2 = mkV2 (mkV "term" "terms" "termed" "termed" "terming");
lin term_VS = mkVS (mkV "term");
lin termagant_N = mkN "termagant" "termagants";
lin termi_PN = mkPN "Termi";
lin terminable_A = compoundA (mkA "terminable");
lin terminal_A = compoundA (mkA "terminal");
lin terminal_N = mkN "terminal" "terminals";
lin terminate_V = mkV "terminate" "terminates" "terminated" "terminated" "terminating";
lin terminate_V2 = mkV2 (mkV "terminate" "terminates" "terminated" "terminated" "terminating");
lin termination_N = mkN "termination" "terminations";
lin terminological_A = compoundA (mkA "terminological");
lin terminology_N = mkN "terminology" "terminologies";
lin terminus_N = mkN "terminus" "terminuses";
lin termite_N = mkN "termite" "termites";
lin tern_N = mkN "tern" "terns";
lin terpsichorean_A = compoundA (mkA "terpsichorean");
lin terr_PN = mkPN "Terr";
lin terra_cotta_N = mkN "terra - cotta" ;
lin terra_firma_N = mkN "terra firma" ;
lin terra_incognita_N = mkN "terra incognita" ;
lin terrace_N = mkN "terrace" "terraces";
lin terrace_V2 = mkV2 (mkV "terrace" "terraces" "terraced" "terraced" "terracing");
lin terrain_N = mkN "terrain" ;
lin terrapin_N = mkN "terrapin" "terrapins";
lin terrestrial_A = compoundA (mkA "terrestrial");
lin terrible_A = compoundA (mkA "terrible");
lin terrier_N = mkN "terrier" "terriers";
lin terrific_A = compoundA (mkA "terrific");
lin terrifically_Adv = mkAdv "terrifically";
lin terrify_V2 = mkV2 (mkV "terrify" "terrifies" "terrified" "terrified" "terrifying");
lin territorial_A = compoundA (mkA "territorial");
lin territorial_N = mkN "territorial" "territorials";
lin territory_N = mkN "territory" "territories";
lin terror_N = mkN "terror" "terrors";
lin terror_stricken_A = compoundA (mkA "terror - stricken");
lin terror_struck_A = compoundA (mkA "terror - struck");
lin terrorism_N = mkN "terrorism" ;
lin terrorist_N = mkN "terrorist" "terrorists";
lin terrorize_V2 = mkV2 (mkV "terrorize" "terrorizes" "terrorized" "terrorized" "terrorizing");
lin terry_PN = mkPN "Terry";
lin terse_A = mkA "terse" "terser";
lin terseness_N = mkN "terseness" ;
lin tertian_A = compoundA (mkA "tertian");
lin tertiary_A = compoundA (mkA "tertiary");
lin terylene_N = mkN "terylene" ;
lin tess_PN = mkPN "Tess";
lin tessa_PN = mkPN "Tessa";
lin tessellated_A = compoundA (mkA "tessellated");
lin test_N = mkN "test" "tests";
lin test_V2 = mkV2 (mkV "test" "tests" "tested" "tested" "testing");
lin test_drive_N = mkN "test - drive" "test - drives";
lin test_drive_V2 = mkV2 (mkV "test-" IrregEng.drive_V);
lin test_tube_N = mkN "test - tube" "test - tubes";
lin testament_N = mkN "testament" "testaments";
lin testamentary_A = compoundA (mkA "testamentary");
lin testate_A = compoundA (mkA "testate");
lin testate_N = mkN "testate" "testates";
lin testator_N = mkN "testator" "testators";
lin testatrix_N = mkN "testatrix" "testatrixes";
lin testbed_N = mkN "testbed" "testbeds";
lin testicle_N = mkN "testicle" "testicles";
lin testify_V = mkV "testify" "testifies" "testified" "testified" "testifying";
lin testify_V2 = mkV2 (mkV "testify" "testifies" "testified" "testified" "testifying");
lin testify_VS = mkVS (mkV "testify" "testifies" "testified" "testified" "testifying");
lin testily_Adv = mkAdv "testily";
lin testimonial_N = mkN "testimonial" "testimonials";
lin testimony_N = mkN "testimony" "testimonies";
lin testiness_N = mkN "testiness" ;
lin testis_N = mkN "testis" "testes" {- FIXME: guessed plural form -};
lin testy_A = mkA "testy" "testier";
lin tetanus_N = mkN "tetanus" ;
lin tetchily_Adv = mkAdv "tetchily";
lin tetchiness_N = mkN "tetchiness" ;
lin tetchy_A = mkA "tetchy" "tetchier";
lin tete_a_tete_Adv = mkAdv "tête - à - tête";
lin tete_a_tete_N = mkN "tête - à - tête" "tête - à - têtes";
lin tether_N = mkN "tether" "tethers";
lin tether_V2 = mkV2 (mkV "tether" "tethers" "tethered" "tethered" "tethering");
lin teuton_N = mkN "teuton" "teutons";
lin teutonic_A = compoundA (mkA "teutonic");
lin tewkesbury_PN = mkPN "Tewkesbury";
lin texan_A = compoundA (mkA "texan");
lin texan_N = mkN "texan" "texans";
lin texas_PN = mkPN "Texas";
lin text_N = mkN "text" "texts";
lin textbook_N = mkN "textbook" "textbooks";
lin textile_A = compoundA (mkA "textile");
lin textile_N = mkN "textile" "textiles";
lin textual_A = compoundA (mkA "textual");
lin texture_N = mkN "texture" "textures";
lin textured_A = compoundA (mkA "textured");
lin thai_A = compoundA (mkA "thai");
lin thai_N = mkN "thai" "thais";
lin thailand_PN = mkPN "Thailand";
lin thalidomide_N = mkN "thalidomide" ;
lin thame_PN = mkPN "Thame";
lin than_Prep = mkPrep "than";
lin thane_N = mkN "thane" "thanes";
lin thank_V2 = mkV2 (mkV "thank" "thanks" "thanked" "thanked" "thanking");
lin thank_offering_N = mkN "thank - offering" "thank - offerings";
lin thankful_A = compoundA (mkA "thankful");
lin thankfulness_N = mkN "thankfulness" ;
lin thankless_A = compoundA (mkA "thankless");
lin thanksgiving_N = mkN "thanksgiving" "thanksgivings";
lin that_Prep = mkPrep "that";
lin that_Quant = mkQuant "that" "those" ;
lin thatch_N = mkN "thatch" ;
lin thatch_V2 = mkV2 (mkV "thatch" "thatches" "thatched" "thatched" "thatching");
lin thatcham_PN = mkPN "Thatcham";
lin thatcher_N = mkN "thatcher" "thatchers";
lin thaw_N = mkN "thaw" "thaws";
lin thaw_V = mkV "thaw" "thaws" "thawed" "thawed" "thawing";
lin thaw_V2 = mkV2 (mkV "thaw" "thaws" "thawed" "thawed" "thawing");
lin theatre_N = mkN "theatre" "theatres";
lin theatregoer_N = mkN "theatregoer" "theatregoers";
lin theatrical_A = compoundA (mkA "theatrical");
lin theatrical_N = mkN "theatrical" "theatricals";
lin theft_N = mkN "theft" "thefts";
lin theism_N = mkN "theism" ;
lin theist_N = mkN "theist" "theists";
lin theistic_A = compoundA (mkA "theistic");
lin theistical_A = compoundA (mkA "theistical");
lin thematic_A = compoundA (mkA "thematic");
lin theme_N = mkN "theme" "themes";
lin then_Adv = mkAdv "then";
lin then_Prep = mkPrep "then";
lin thence_Adv = mkAdv "thence";
lin thenceforth_Adv = mkAdv "thenceforth";
lin thenceforward_Adv = mkAdv "thenceforward";
lin theo_PN = mkPN "Theo";
lin theocracy_N = mkN "theocracy" "theocracies";
lin theocratic_A = compoundA (mkA "theocratic");
lin theodolite_N = mkN "theodolite" "theodolites";
lin theodore_PN = mkPN "Theodore";
lin theologian_N = mkN "theologian" "theologians";
lin theological_A = compoundA (mkA "theological");
lin theology_N = mkN "theology" "theologies";
lin theorem_N = mkN "theorem" "theorems";
lin theoretic_A = compoundA (mkA "theoretic");
lin theoretical_A = compoundA (mkA "theoretical");
lin theoretician_N = mkN "theoretician" "theoreticians";
lin theorist_N = mkN "theorist" "theorists";
lin theorize_V = mkV "theorize" "theorizes" "theorized" "theorized" "theorizing";
lin theorize_VS = mkVS (mkV "theorize" "theorizes" "theorized" "theorized" "theorizing");
lin theory_N = mkN "theory" "theories";
lin theosophical_A = compoundA (mkA "theosophical");
lin theosophist_N = mkN "theosophist" "theosophists";
lin theosophy_N = mkN "theosophy" ;
lin therapeutic_A = compoundA (mkA "therapeutic");
lin therapeutical_A = compoundA (mkA "therapeutical");
lin therapeutics_N = mkN "therapeutics" "therapeutics";
lin therapist_N = mkN "therapist" "therapists";
lin therapy_N = mkN "therapy" "therapies";
lin there_Adv = mkAdv "there";
lin thereabout_Adv = mkAdv "thereabout";
lin thereabouts_Adv = mkAdv "thereabouts";
lin thereafter_Adv = mkAdv "thereafter";
lin thereby_Adv = mkAdv "thereby";
lin therefore_Adv = mkAdv "therefore";
lin therefrom_Adv = mkAdv "therefrom";
lin therein_Adv = mkAdv "therein";
lin thereinafter_Adv = mkAdv "thereinafter";
lin thereof_Adv = mkAdv "thereof";
lin thereon_Adv = mkAdv "thereon";
lin theresa_PN = mkPN "Theresa";
lin thereto_Adv = mkAdv "thereto";
lin thereunder_Adv = mkAdv "thereunder";
lin thereupon_Adv = mkAdv "thereupon";
lin therewith_Adv = mkAdv "therewith";
lin therewithal_Adv = mkAdv "therewithal";
lin therm_N = mkN "therm" "therms";
lin thermal_A = compoundA (mkA "thermal");
lin thermal_N = mkN "thermal" "thermals";
lin thermionic_A = compoundA (mkA "thermionic");
lin thermodynamics_N = mkN "thermodynamics" "thermodynamics";
lin thermometer_N = mkN "thermometer" "thermometers";
lin thermonuclear_A = compoundA (mkA "thermonuclear");
lin thermoplastic_A = compoundA (mkA "thermoplastic");
lin thermoplastic_N = mkN "thermoplastic" "thermoplastics";
lin thermos_N = mkN "thermos" "thermoses";
lin thermosetting_A = compoundA (mkA "thermosetting");
lin thermostat_N = mkN "thermostat" "thermostats";
lin thermostatic_A = compoundA (mkA "thermostatic");
lin thermostatically_Adv = mkAdv "thermostatically";
lin thesaurus_N = mkN "thesaurus" "thesauruses";
lin thesis_N = mkN "thesis" "theses" {- FIXME: guessed plural form -};
lin thespian_A = compoundA (mkA "thespian");
lin thespian_N = mkN "thespian" "thespians";
lin thessaloniki_PN = mkPN "Thessaloniki";
lin thetford_PN = mkPN "Thetford";
lin they_Pron = mkPron "they" "them" "their" "theirs" plural P3 human ;
lin thick_A = mkA "thick" "thicker";
lin thick_Adv = mkAdv "thick";
lin thick_N = mkN "thick" ;
lin thick_headed_A = compoundA (mkA "thick - headed");
lin thick_set_A = compoundA (mkA "thick - set");
lin thick_skinned_A = compoundA (mkA "thick - skinned");
lin thicken_V = mkV "thicken" "thickens" "thickened" "thickened" "thickening";
lin thicken_V2 = mkV2 (mkV "thicken" "thickens" "thickened" "thickened" "thickening");
lin thickening_N = mkN "thickening" ;
lin thicket_N = mkN "thicket" "thickets";
lin thickness_N = mkN "thickness" "thicknesses";
lin thief_N = mkN "thief" "thieves" {- FIXME: guessed plural form -};
lin thieve_V = mkV "thieve" "thieves" "thieved" "thieved" "thieving";
lin thieve_V2 = mkV2 (mkV "thieve" "thieves" "thieved" "thieved" "thieving");
lin thievery_N = mkN "thievery" ;
lin thievish_A = compoundA (mkA "thievish");
lin thigh_N = mkN "thigh" "thighs";
lin thighbone_N = mkN "thighbone" "thighbones";
lin thimble_N = mkN "thimble" "thimbles";
lin thimbleful_N = mkN "thimbleful" "thimblefuls";
lin thin_A = mkA "thin" "thinner*";
lin thin_Adv = mkAdv "thin";
lin thin_V = mkV "thin" "thins" "thinned" "thinned" "thinning";
lin thin_V2 = mkV2 (mkV "thin" "thins" "thinned" "thinned" "thinning");
lin thin_skinned_A = compoundA (mkA "thin - skinned");
lin thine_A = compoundA (mkA "thine");
lin thing_N = mkN "thing" "things";
lin thingmabob_N = mkN "thingmabob" "thingmabobs";
lin thingmajig_N = mkN "thingmajig" "thingmajigs";
lin thingumabob_N = mkN "thingumabob" "thingumabobs";
lin thingumajig_N = mkN "thingumajig" "thingumajigs";
lin thingummy_N = mkN "thingummy" "thingummies";
lin think_N = mkN "think" "thinks";
lin think_V = IrregEng.think_V;
lin think_V2 = mkV2 (IrregEng.think_V);
lin think_VA = mkVA (IrregEng.think_V);
lin think_VS = mkVS (IrregEng.think_V);
lin think_tank_N = mkN "think - tank" "think - tanks";
lin thinkable_A = compoundA (mkA "thinkable");
lin thinker_N = mkN "thinker" "thinkers";
lin thinking_A = compoundA (mkA "thinking");
lin thinking_N = mkN "thinking" ;
lin thinness_N = mkN "thinness" ;
lin thionville_PN = mkPN "Thionville";
lin third_rate_A = compoundA (mkA "third - rate");
lin third_rater_N = mkN "third - rater" "third - raters";
lin thirsk_PN = mkPN "Thirsk";
lin thirst_N = mkN "thirst" ;
lin thirst_V2 = mkV2 (mkV "thirst" "thirsts" "thirsted" "thirsted" "thirsting");
lin thirstily_Adv = mkAdv "thirstily";
lin thirsty_A = mkA "thirsty" "thirstier";
lin this_Quant = mkQuant "this" "these" ;
lin thistle_N = mkN "thistle" "thistles";
lin thistledown_N = mkN "thistledown" ;
lin thither_Adv = mkAdv "thither";
lin tho'_Adv = mkAdv "tho'";
lin thole_N = mkN "thole" "tholes";
lin tholepin_N = mkN "tholepin" "tholepins";
lin thomas_PN = mkPN "Thomas";
lin thong_N = mkN "thong" "thongs";
lin thorax_N = mkN "thorax" "thoraxes";
lin thorn_N = mkN "thorn" "thorns";
lin thornbury_PN = mkPN "Thornbury";
lin thorne_PN = mkPN "Thorne";
lin thorny_A = mkA "thorny" "thornier";
lin thorough_A = compoundA (mkA "thorough");
lin thoroughbred_A = compoundA (mkA "thoroughbred");
lin thoroughbred_N = mkN "thoroughbred" "thoroughbreds";
lin thoroughfare_N = mkN "thoroughfare" "thoroughfares";
lin thoroughgoing_A = compoundA (mkA "thoroughgoing");
lin thoroughness_N = mkN "thoroughness" ;
lin though_Adv = mkAdv "though";
lin though_Prep = mkPrep "though";
lin thought_N = mkN "thought" "thoughts";
lin thought_reader_N = mkN "thought - reader" "thought - readers";
lin thoughtful_A = compoundA (mkA "thoughtful");
lin thoughtfulness_N = mkN "thoughtfulness" ;
lin thoughtless_A = compoundA (mkA "thoughtless");
lin thoughtlessness_N = mkN "thoughtlessness" ;
lin thousandfold_A = compoundA (mkA "thousandfold");
lin thousandfold_Adv = mkAdv "thousandfold";
lin thousandth_A = compoundA (mkA "thousandth");
lin thousandth_N = mkN "thousandth" "thousandths";
lin thraldom_N = mkN "thraldom" ;
lin thrall_N = mkN "thrall" "thralls";
lin thrash_V = mkV "thrash" "thrashes" "thrashed" "thrashed" "thrashing";
lin thrash_V2 = mkV2 (mkV "thrash" "thrashes" "thrashed" "thrashed" "thrashing");
lin thrashing_N = mkN "thrashing" "thrashings";
lin thread_N = mkN "thread" "threads";
lin thread_V2 = mkV2 (mkV "thread" "threads" "threaded" "threaded" "threading");
lin threadbare_A = compoundA (mkA "threadbare");
lin threadlike_A = compoundA (mkA "threadlike");
lin threat_N = mkN "threat" "threats";
lin threaten_V = mkV "threaten" "threatens" "threatened" "threatened" "threatening";
lin threaten_V2 = mkV2 (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threaten_VV = mkVV (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threaten_VS = mkVS (mkV "threaten" "threatens" "threatened" "threatened" "threatening");
lin threateningly_Adv = mkAdv "threateningly";
lin three_cornered_A = compoundA (mkA "three - cornered");
lin three_d_A = compoundA (mkA "three - d");
lin three_d_N = mkN "three - d" ;
lin three_decker_N = mkN "three - decker" "three - deckers";
lin three_dimensional_A = compoundA (mkA "three - dimensional");
lin three_figure_A = compoundA (mkA "three - figure");
lin three_funnelled_A = compoundA (mkA "three - funnelled");
lin three_lane_A = compoundA (mkA "three - lane");
lin three_legged_A = compoundA (mkA "three - legged");
lin three_piece_A = compoundA (mkA "three - piece");
lin three_ply_A = compoundA (mkA "three - ply");
lin three_quarter_A = compoundA (mkA "three - quarter");
lin three_quarter_N = mkN "three - quarter" "three - quarters";
lin three_score_A = compoundA (mkA "three - score");
lin three_score_N = mkN "three - score" ;
lin three_storey_A = compoundA (mkA "three - storey");
lin three_storeyed_A = compoundA (mkA "three - storeyed");
lin three_wheeled_A = compoundA (mkA "three - wheeled");
lin threefold_A = compoundA (mkA "threefold");
lin threefold_Adv = mkAdv "threefold";
lin threepence_N = mkN "threepence" "threepences";
lin threepenny_A = compoundA (mkA "threepenny");
lin threesome_N = mkN "threesome" "threesomes";
lin threnody_N = mkN "threnody" "threnodies";
lin thresh_V = mkV "thresh" "threshes" "threshed" "threshed" "threshing";
lin thresh_V2 = mkV2 (mkV "thresh" "threshes" "threshed" "threshed" "threshing");
lin thresher_N = mkN "thresher" "threshers";
lin threshing_floor_N = mkN "threshing - floor" "threshing - floors";
lin threshing_machine_N = mkN "threshing - machine" "threshing - machines";
lin threshold_N = mkN "threshold" "thresholds";
lin thrice_Adv = mkAdv "thrice";
lin thrift_N = mkN "thrift" ;
lin thriftily_Adv = mkAdv "thriftily";
lin thriftless_A = compoundA (mkA "thriftless");
lin thriftlessness_N = mkN "thriftlessness" ;
lin thrifty_A = mkA "thrifty" "thriftier";
lin thrill_N = mkN "thrill" "thrills";
lin thrill_V = mkV "thrill" "thrills" "thrilled" "thrilled" "thrilling";
lin thrill_V2 = mkV2 (mkV "thrill" "thrills" "thrilled" "thrilled" "thrilling");
lin thriller_N = mkN "thriller" "thrillers";
lin thrive_V = mkV "thrive" "thrives" "thrived" "thrived" "thriving";
lin throat_N = mkN "throat" "throats";
lin throated_A = compoundA (mkA "throated");
lin throaty_A = mkA "throaty" "throatier";
lin throb_N = mkN "throb" "throbs";
lin throb_V = mkV "throb" "throbs" "throbbed" "throbbed" "throbbing";
lin throbbing_A = compoundA (mkA "throbbing");
lin throe_N = mkN "throe" "throes";
lin thrombosis_N = mkN "thrombosis" ;
lin throne_N = mkN "throne" "thrones";
lin throng_N = mkN "throng" "throngs";
lin throng_V = mkV "throng" "throngs" "thronged" "thronged" "thronging";
lin throng_V2 = mkV2 (mkV "throng" "throngs" "thronged" "thronged" "thronging");
lin throstle_N = mkN "throstle" "throstles";
lin throttle_N = mkN "throttle" "throttles";
lin throttle_V = mkV "throttle" "throttles" "throttled" "throttled" "throttling";
lin throttle_V2 = mkV2 (mkV "throttle" "throttles" "throttled" "throttled" "throttling");
lin throttle_valve_N = mkN "throttle - valve" "throttle - valves";
lin through_Adv = mkAdv "through";
lin through_Prep = mkPrep "through";
lin throughout_Adv = mkAdv "throughout";
lin throughout_Prep = mkPrep "throughout";
lin throughput_N = mkN "throughput" "throughputs";
lin throughway_N = mkN "throughway" "throughways";
lin throw_N = mkN "throw" "throws";
lin throw_V = IrregEng.throw_V;
lin throw_V2 = mkV2 (IrregEng.throw_V);
lin throw_VS = mkVS (IrregEng.throw_V);
lin throw_in_N = mkN "throw - in" "throw - ins";
lin throwaway_N = mkN "throwaway" "throwaways";
lin throwback_N = mkN "throwback" "throwbacks";
lin thrum_V = mkV "thrum" "thrums" "thrummed" "thrummed" "thrumming";
lin thrum_V2 = mkV2 (mkV "thrum" "thrums" "thrummed" "thrummed" "thrumming");
lin thrush_N = mkN "thrush" "thrushes";
lin thrust_N = mkN "thrust" "thrusts";
lin thrust_V = IrregEng.thrust_V;
lin thrust_V2 = mkV2 (IrregEng.thrust_V);
lin thruster_N = mkN "thruster" "thrusters";
lin thud_N = mkN "thud" "thuds";
lin thud_V = mkV "thud" "thuds" "thudded" "thudded" "thudding";
lin thug_N = mkN "thug" "thugs";
lin thuggery_N = mkN "thuggery" ;
lin thumb_N = mkN "thumb" "thumbs";
lin thumb_V2 = mkV2 (mkV "thumb" "thumbs" "thumbed" "thumbed" "thumbing");
lin thumbnut_N = mkN "thumbnut" "thumbnuts";
lin thumbscrew_N = mkN "thumbscrew" "thumbscrews";
lin thumbstall_N = mkN "thumbstall" "thumbstalls";
lin thumbtack_N = mkN "thumbtack" "thumbtacks";
lin thump_N = mkN "thump" "thumps";
lin thump_V = mkV "thump" "thumps" "thumped" "thumped" "thumping";
lin thump_V2 = mkV2 (mkV "thump" "thumps" "thumped" "thumped" "thumping");
lin thumping_A = compoundA (mkA "thumping");
lin thunder_N = mkN "thunder" "thunders";
lin thunder_V = mkV "thunder" "thunders" "thundered" "thundered" "thundering";
lin thunder_V2 = mkV2 (mkV "thunder" "thunders" "thundered" "thundered" "thundering");
lin thunderbolt_N = mkN "thunderbolt" "thunderbolts";
lin thunderclap_N = mkN "thunderclap" "thunderclaps";
lin thunderous_A = compoundA (mkA "thunderous");
lin thunderstorm_N = mkN "thunderstorm" "thunderstorms";
lin thunderstruck_A = compoundA (mkA "thunderstruck");
lin thundery_A = compoundA (mkA "thundery");
lin thurcroft_PN = mkPN "Thurcroft";
lin thurible_N = mkN "thurible" "thuribles";
lin thurmaston_PN = mkPN "Thurmaston";
lin thurrock_PN = mkPN "Thurrock";
lin thurs_PN = mkPN "Thurs";
lin thursday_N = mkN "Thursday" "Thursdays";
lin thursday_PN = mkPN "Thursday";
lin thurso_PN = mkPN "Thurso";
lin thus_Adv = mkAdv "thus";
lin thwack_N = mkN "thwack" "thwacks";
lin thwack_V2 = mkV2 (mkV "thwack" "thwacks" "thwacked" "thwacked" "thwacking");
lin thwart_N = mkN "thwart" "thwarts";
lin thwart_V2 = mkV2 (mkV "thwart" "thwarts" "thwarted" "thwarted" "thwarting");
lin thy_A = compoundA (mkA "thy");
lin thyme_N = mkN "thyme" ;
lin thyroid_N = mkN "thyroid" "thyroids";
lin ti_N = mkN "ti" "IRREG";
lin tiara_N = mkN "tiara" "tiaras";
lin tibet_PN = mkPN "Tibet";
lin tibetan_A = compoundA (mkA "tibetan");
lin tibetan_N = mkN "tibetan" "tibetans";
lin tibia_N = mkN "tibia" "tibiae" {- FIXME: guessed plural form -};
lin tic_N = mkN "tic" "tics";
lin tick_N = mkN "tick" "ticks";
lin tick_V = mkV "tick" "ticks" "ticked" "ticked" "ticking";
lin tick_V2 = mkV2 (mkV "tick" "ticks" "ticked" "ticked" "ticking");
lin tick_tock_N = mkN "tick - tock" "tick - tocks";
lin ticker_N = mkN "ticker" "tickers";
lin ticker_tape_N = mkN "ticker - tape" ;
lin ticket_N = mkN "ticket" "tickets";
lin ticket_V2 = mkV2 (mkV "ticket" "tickets" "ticketed" "ticketed" "ticketing");
lin ticket_collector_N = mkN "ticket - collector" "ticket - collectors";
lin ticking_N = mkN "ticking" ;
lin tickle_V = mkV "tickle" "tickles" "tickled" "tickled" "tickling";
lin tickle_V2 = mkV2 (mkV "tickle" "tickles" "tickled" "tickled" "tickling");
lin tickler_N = mkN "tickler" "ticklers";
lin ticklish_A = compoundA (mkA "ticklish");
lin tidal_A = compoundA (mkA "tidal");
lin tidbit_N = mkN "tidbit" "tidbits";
lin tiddler_N = mkN "tiddler" "tiddlers";
lin tiddley_A = compoundA (mkA "tiddley");
lin tiddlywinks_N = mkN "tiddlywinks" "tiddlywinks";
lin tide_N = mkN "tide" "tides";
lin tide_V2 = mkV2 (mkV "tide" "tides" "tided" "tided" "tiding");
lin tidemark_N = mkN "tidemark" "tidemarks";
lin tideway_N = mkN "tideway" "tideways";
lin tidily_Adv = mkAdv "tidily";
lin tidiness_N = mkN "tidiness" ;
lin tidworth_PN = mkPN "Tidworth";
lin tidy_A = mkA "tidy" "tidier";
lin tidy_N = mkN "tidy" "tidies";
lin tidy_V = mkV "tidy" "tidies" "tidied" "tidied" "tidying";
lin tidy_V2 = mkV2 (mkV "tidy" "tidies" "tidied" "tidied" "tidying");
lin tie_N = mkN "tie" "ties";
lin tie_V = mkV "tie" "ties" "tied" "tied" (variants {"tying"; "tieing"});
lin tie_V2 = mkV2 (mkV "tie" "ties" "tied" "tied" (variants {"tying"; "tieing"}));
lin tie_on_A = compoundA (mkA "tie - on");
lin tie_up_N = mkN "tie - up" "tie - ups";
lin tientsin_PN = mkPN "Tientsin";
lin tier_N = mkN "tier" "tiers";
lin tiff_N = mkN "tiff" "tiffs";
lin tiger_N = mkN "tiger" "tigers";
lin tiger_lily_N = mkN "tiger - lily" "tiger - lilies";
lin tigerish_A = compoundA (mkA "tigerish");
lin tight_A = mkA "tight" "tighter";
lin tight_Adv = mkAdv "tight";
lin tight_laced_A = compoundA (mkA "tight - laced");
lin tight_lipped_A = compoundA (mkA "tight - lipped");
lin tight_wad_N = mkN "tight - wad" "tight - wads";
lin tighten_V = mkV "tighten" "tightens" "tightened" "tightened" "tightening";
lin tighten_V2 = mkV2 (mkV "tighten" "tightens" "tightened" "tightened" "tightening");
lin tightness_N = mkN "tightness" ;
lin tightrope_N = mkN "tightrope" "tightropes";
lin tigress_N = mkN "tigress" "tigresses";
lin tike_N = mkN "tike" "tikes";
lin til_Prep = mkPrep "'til";
lin tilburg_PN = mkPN "Tilburg";
lin tilbury_PN = mkPN "Tilbury";
lin tilde_N = mkN "tilde" "tildes";
lin tile_N = mkN "tile" "tiles";
lin tile_V2 = mkV2 (mkV "tile" "tiles" "tiled" "tiled" "tiling");
lin till_N = mkN "till" "tills";
lin till_Prep = mkPrep "till";
lin till_V2 = mkV2 (mkV "till" "tills" "tilled" "tilled" "tilling");
lin tillage_N = mkN "tillage" ;
lin tiller_N = mkN "tiller" "tillers";
lin tilt_N = mkN "tilt" "tilts";
lin tilt_V = mkV "tilt" "tilts" "tilted" "tilted" "tilting";
lin tilt_V2 = mkV2 (mkV "tilt" "tilts" "tilted" "tilted" "tilting");
lin tilth_N = mkN "tilth" "tilths";
lin tiltyard_N = mkN "tiltyard" "tiltyards";
lin tim_PN = mkPN "Tim";
lin timber_N = mkN "timber" "timbers";
lin timbered_A = compoundA (mkA "timbered");
lin timbre_N = mkN "timbre" "timbres";
lin timbrel_N = mkN "timbrel" "timbrels";
lin time_N = mkN "time" "times";
lin time_V2 = mkV2 (mkV "time" "times" "timed" "timed" "timing");
lin time_ball_N = mkN "time - ball" "time - balls";
lin time_bomb_N = mkN "time - bomb" "time - bombs";
lin time_expired_A = compoundA (mkA "time - expired");
lin time_exposure_N = mkN "time - exposure" "time - exposures";
lin time_fuse_N = mkN "time - fuse" "time - fuses";
lin time_honoured_A = compoundA (mkA "time - honoured");
lin time_lag_N = mkN "time - lag" "time - lags";
lin time_limit_N = mkN "time - limit" "time - limits";
lin time_sheet_N = mkN "time - sheet" "time - sheets";
lin time_signal_N = mkN "time - signal" "time - signals";
lin time_switch_N = mkN "time - switch" "time - switches";
lin timecard_N = mkN "timecard" "timecards";
lin timekeeper_N = mkN "timekeeper" "timekeepers";
lin timekeeping_N = mkN "timekeeping" ;
lin timeless_A = compoundA (mkA "timeless");
lin timeliness_N = mkN "timeliness" ;
lin timely_A = mkA "timely";
lin timepiece_N = mkN "timepiece" "timepieces";
lin timesaving_A = compoundA (mkA "timesaving");
lin timeserver_N = mkN "timeserver" "timeservers";
lin timeserving_A = compoundA (mkA "timeserving");
lin timetable_N = mkN "timetable" "timetables";
lin timework_N = mkN "timework" ;
lin timid_A = compoundA (mkA "timid");
lin timidity_N = mkN "timidity" ;
lin timidness_N = mkN "timidness" ;
lin timing_N = mkN "timing" "timings";
lin timmy_PN = mkPN "Timmy";
lin timorous_A = compoundA (mkA "timorous");
lin timothy_N = mkN "timothy" ;
lin timothy_PN = mkPN "Timothy";
lin timpanist_N = mkN "timpanist" "timpanists";
lin tin_N = mkN "tin" "tins";
lin tin_V2 = mkV2 (mkV "tin" "tins" "tinned" "tinned" "tinning");
lin tin_opener_N = mkN "tin - opener" "tin - openers";
lin tin_pan_alley_N = mkN "tin pan alley" "tin pan alleys";
lin tin_plate_N = mkN "tin - plate" ;
lin tina_PN = mkPN "Tina";
lin tincture_N = mkN "tincture" "tinctures";
lin tincture_V2 = mkV2 (mkV "tincture" "tinctures" "tinctured" "tinctured" "tincturing");
lin tinder_N = mkN "tinder" ;
lin tinderbox_N = mkN "tinderbox" "tinderboxes";
lin tine_N = mkN "tine" "tines";
lin tined_A = compoundA (mkA "tined");
lin tinfoil_N = mkN "tinfoil" ;
lin ting_N = mkN "ting" "tings";
lin ting_V = mkV "ting" "tings" "tinged" "tinged" "tinging";
lin ting_V2 = mkV2 (mkV "ting" "tings" "tinged" "tinged" "tinging");
lin tinge_N = mkN "tinge" "tinges";
lin tinge_V2 = mkV2 (mkV "tinge" "tinges" "tinged" "tinged" "tinging");
lin tingle_N = mkN "tingle" "tingles";
lin tingle_V = mkV "tingle" "tingles" "tingled" "tingled" "tingling";
lin tinker_N = mkN "tinker" "tinkers";
lin tinker_V = mkV "tinker" "tinkers" "tinkered" "tinkered" "tinkering";
lin tinkle_N = mkN "tinkle" "IRREG";
lin tinkle_V = mkV "tinkle" "tinkles" "tinkled" "tinkled" "tinkling";
lin tinkle_V2 = mkV2 (mkV "tinkle" "tinkles" "tinkled" "tinkled" "tinkling");
lin tinny_A = mkA "tinny" "tinnier";
lin tinsel_N = mkN "tinsel" ;
lin tinsel_V2 = mkV2 (mkV "tinsel" "tinsels" "tinselled" "tinselled" "tinselling");
lin tinselly_A = compoundA (mkA "tinselly");
lin tinsmith_N = mkN "tinsmith" "tinsmiths";
lin tint_N = mkN "tint" "tints";
lin tint_V2 = mkV2 (mkV "tint" "tints" "tinted" "tinted" "tinting");
lin tintack_N = mkN "tintack" "tintacks";
lin tintinnabulation_N = mkN "tintinnabulation" ;
lin tiny_A = mkA "tiny" "tinier";
lin tip_N = mkN "tip" "tips";
lin tip_V = mkV "tip" "tips" "tipped" "tipped" "tipping";
lin tip_V2 = mkV2 (mkV "tip" "tips" "tipped" "tipped" "tipping");
lin tip_and_run_A = compoundA (mkA "tip - and - run");
lin tip_off_N = mkN "tip - off" "tip - offs";
lin tip_top_A = compoundA (mkA "tip - top");
lin tip_top_Adv = mkAdv "tip - top";
lin tip_up_A = compoundA (mkA "tip - up");
lin tipperary_PN = mkPN "Tipperary";
lin tippet_N = mkN "tippet" "tippets";
lin tipple_N = mkN "tipple" ;
lin tipple_V = mkV "tipple" "tipples" "tippled" "tippled" "tippling";
lin tipple_V2 = mkV2 (mkV "tipple" "tipples" "tippled" "tippled" "tippling");
lin tippler_N = mkN "tippler" "tipplers";
lin tipstaff_N = mkN "tipstaff" "tipstaffs";
lin tipster_N = mkN "tipster" "tipsters";
lin tipsy_A = compoundA (mkA "tipsy");
lin tiptoe_Adv = mkAdv "tiptoe";
lin tiptoe_V = mkV "tiptoe" "IRREG" "IRREG" "IRREG" "IRREG";
lin tirade_N = mkN "tirade" "tirades";
lin tire_N = mkN "tire" "tires";
lin tire_V = mkV "tire" "tires" "tired" "tired" "tiring";
lin tire_V2 = mkV2 (mkV "tire" "tires" "tired" "tired" "tiring");
lin tired_A = compoundA (mkA "tired");
lin tiredness_N = mkN "tiredness" ;
lin tireless_A = compoundA (mkA "tireless");
lin tiresome_A = compoundA (mkA "tiresome");
lin tiring_Adv = mkAdv "tiring";
lin tiro_N = mkN "tiro" "tiros";
lin tissue_N = mkN "tissue" "tissues";
lin tit_N = mkN "tit" "tits";
lin titan_N = mkN "titan" "titans";
lin titanic_A = compoundA (mkA "titanic");
lin titbit_N = mkN "titbit" "titbits";
lin tithe_N = mkN "tithe" "tithes";
lin tithe_barn_N = mkN "tithe - barn" "tithe - barns";
lin titillate_V2 = mkV2 (mkV "titillate" "titillates" "titillated" "titillated" "titillating");
lin titillation_N = mkN "titillation" "titillations";
lin titivate_V = mkV "titivate" "titivates" "titivated" "titivated" "titivating";
lin titivate_V2 = mkV2 (mkV "titivate" "titivates" "titivated" "titivated" "titivating");
lin titlark_N = mkN "titlark" "titlarks";
lin title_N = mkN "title" "titles";
lin title_VS = mkVS (mkV "title");
lin title_deed_N = mkN "title - deed" "title - deeds";
lin title_page_N = mkN "title - page" "title - pages";
lin title_role_N = mkN "title - role" "title - roles";
lin titled_A = compoundA (mkA "titled");
lin titmouse_N = mkN "titmouse" "titmice" {- FIXME: guessed plural form -};
lin titter_V = mkV "titter" "titters" "tittered" "tittered" "tittering";
lin tittivate_V = mkV "tittivate" "tittivates" "tittivated" "tittivated" "tittivating";
lin tittivate_V2 = mkV2 (mkV "tittivate" "tittivates" "tittivated" "tittivated" "tittivating");
lin tittle_N = mkN "tittle" "IRREG";
lin tittle_tattle_N = mkN "tittle - tattle" ;
lin tittle_tattle_V = mkV "tittle - tattle" "tittle - tattles" "tittle - tattled" "tittle - tattled" "tittle - tattling";
lin titular_A = compoundA (mkA "titular");
lin tiverton_PN = mkPN "Tiverton";
lin tizzy_N = mkN "tizzy" "tizzies";
lin tnt_N = mkN "tnt" ;
lin to_Adv = mkAdv "to";
lin to_Prep = mkPrep "to";
lin to_do_N = mkN "to - do" "to - dos";
lin toad_N = mkN "toad" "toads";
lin toad_in_the_hole_N = mkN "toad - in - the - hole" "IRREG";
lin toadstool_N = mkN "toadstool" "toadstools";
lin toady_N = mkN "toady" "toadies";
lin toady_V = mkV "toady" "toadies" "toadied" "toadied" "toadying";
lin toast_N = mkN "toast" "toasts";
lin toast_V = mkV "toast" "toasts" "toasted" "toasted" "toasting";
lin toast_V2 = mkV2 (mkV "toast" "toasts" "toasted" "toasted" "toasting");
lin toaster_N = mkN "toaster" "toasters";
lin toasting_fork_N = mkN "toasting - fork" "toasting - forks";
lin toastmaster_N = mkN "toastmaster" "toastmasters";
lin toastrack_N = mkN "toastrack" "toastracks";
lin tobacco_N = mkN "tobacco" "tobaccos";
lin tobacconist_N = mkN "tobacconist" "tobacconists";
lin tobago_PN = mkPN "Tobago";
lin tobagonian_A = compoundA (mkA "tobagonian");
lin tobagonian_N = mkN "tobagonian" "tobagonians";
lin toboggan_N = mkN "toboggan" "toboggans";
lin toboggan_V = mkV "toboggan" "toboggans" "tobogganed" "tobogganed" "tobogganing";
lin toby_PN = mkPN "Toby";
lin toby_jug_N = mkN "toby - jug" "toby - jugs";
lin toccata_N = mkN "toccata" "toccatas";
lin tocsin_N = mkN "tocsin" "tocsins";
lin today_Adv = mkAdv "today";
lin today_N = mkN "today" ;
lin toddle_V = mkV "toddle" "toddles" "toddled" "toddled" "toddling";
lin toddler_N = mkN "toddler" "toddlers";
lin toddy_N = mkN "toddy" "toddies";
lin todmorden_PN = mkPN "Todmorden";
lin toe_N = mkN "toe" "toes";
lin toe_V2 = mkV2 (mkV "toe" "IRREG" "IRREG" "IRREG" "IRREG");
lin toecap_N = mkN "toecap" "toecaps";
lin toehold_N = mkN "toehold" "toeholds";
lin toenail_N = mkN "toenail" "toenails";
lin toff_N = mkN "toff" "toffs";
lin toffee_N = mkN "toffee" "toffees";
lin tog_V2 = mkV2 (mkV "tog" "togs" "togged" "togged" "togging");
lin toga_N = mkN "toga" "togas";
lin together_Adv = mkAdv "together";
lin togetherness_N = mkN "togetherness" ;
lin toggle_N = mkN "toggle" "toggles";
lin togo_PN = mkPN "Togo";
lin togolese_A = compoundA (mkA "togolese");
lin togolese_N = mkN "togolese" "togolese";
lin toil_N = mkN "toil" "toils";
lin toil_V = mkV "toil" "toils" "toiled" "toiled" "toiling";
lin toil_V2V = mkV2V (mkV "toil" "toils" "toiled" "toiled" "toiling") noPrep to_Prep ;
lin toil_VV = mkVV (mkV "toil" "toils" "toiled" "toiled" "toiling") ;
lin toiler_N = mkN "toiler" "toilers";
lin toilet_N = mkN "toilet" "toilets";
lin toilet_paper_N = mkN "toilet - paper" "toilet - papers";
lin toilet_powder_N = mkN "toilet - powder" ;
lin toilet_roll_N = mkN "toilet - roll" "toilet - rolls";
lin toilet_table_N = mkN "toilet - table" "toilet - tables";
lin toilsome_A = compoundA (mkA "toilsome");
lin tokay_N = mkN "tokay" ;
lin token_N = mkN "token" "tokens";
lin tokyo_PN = mkPN "Tokyo";
lin tolerable_A = compoundA (mkA "tolerable");
lin tolerance_N = mkN "tolerance" "tolerances";
lin tolerant_A = compoundA (mkA "tolerant");
lin tolerate_V2 = mkV2 (mkV "tolerate" "tolerates" "tolerated" "tolerated" "tolerating");
lin toleration_N = mkN "toleration" ;
lin toll_N = mkN "toll" "tolls";
lin toll_V = mkV "toll" "tolls" "tolled" "tolled" "tolling";
lin toll_V2 = mkV2 (mkV "toll" "tolls" "tolled" "tolled" "tolling");
lin tollbar_N = mkN "tollbar" "tollbars";
lin tollbooth_N = mkN "tollbooth" "tollbooths";
lin tollgate_N = mkN "tollgate" "tollgates";
lin tollhouse_N = mkN "tollhouse" "tollhouses";
lin tom_PN = mkPN "Tom";
lin tomahawk_N = mkN "tomahawk" "tomahawks";
lin tomahawk_V2 = mkV2 (mkV "tomahawk" "tomahawks" "tomahawked" "tomahawked" "tomahawking");
lin tomato_N = mkN "tomato" "tomatoes";
lin tomb_N = mkN "tomb" "tombs";
lin tombola_N = mkN "tombola" "tombolas";
lin tomboy_N = mkN "tomboy" "tomboys";
lin tombstone_N = mkN "tombstone" "tombstones";
lin tomcat_N = mkN "tomcat" "tomcats";
lin tome_N = mkN "tome" "tomes";
lin tomfool_N = mkN "tomfool" "tomfools";
lin tomfoolery_N = mkN "tomfoolery" "tomfooleries";
lin tommy_PN = mkPN "Tommy";
lin tommy_gun_N = mkN "tommy - gun" "tommy - guns";
lin tommy_rot_N = mkN "tommy - rot" ;
lin tomorrow_Adv = mkAdv "tomorrow";
lin tomorrow_N = mkN "tomorrow" "tomorrows";
lin tomtit_N = mkN "tomtit" "tomtits";
lin tomtom_N = mkN "tomtom" "tomtoms";
lin ton_N = mkN "ton" "tons";
lin ton_V = mkV "ton" "tons" "tonned" "tonned" "tonning";
lin tonal_A = compoundA (mkA "tonal");
lin tonality_N = mkN "tonality" "tonalities";
lin tonbridge_PN = mkPN "Tonbridge";
lin tone_N = mkN "tone" "tones";
lin tone_V = mkV "tone" "tones" "toned" "toned" "toning";
lin tone_V2 = mkV2 (mkV "tone" "tones" "toned" "toned" "toning");
lin tone_deaf_A = compoundA (mkA "tone - deaf");
lin tone_poem_N = mkN "tone - poem" "tone - poems";
lin toned_A = compoundA (mkA "toned");
lin toneless_A = compoundA (mkA "toneless");
lin tonga_PN = mkPN "Tonga";
lin tongan_A = compoundA (mkA "tongan");
lin tongan_N = mkN "tongan" "tongans";
lin tongue_N = mkN "tongue" "tongues";
lin tongue_in_cheek_A = compoundA (mkA "tongue - in - cheek");
lin tongue_in_cheek_Adv = mkAdv "tongue - in - cheek";
lin tongue_tied_A = compoundA (mkA "tongue - tied");
lin tongue_twister_N = mkN "tongue - twister" "tongue - twisters";
lin tongued_A = compoundA (mkA "tongued");
lin tonic_A = compoundA (mkA "tonic");
lin tonic_N = mkN "tonic" "tonics";
lin tonic_sol_fa_N = mkN "tonic sol - fa" ;
lin tonight_Adv = mkAdv "tonight";
lin tonight_N = mkN "tonight" ;
lin tonnage_N = mkN "tonnage" "tonnages";
lin tonne_N = mkN "tonne" "tonnes";
lin tonsil_N = mkN "tonsil" "tonsils";
lin tonsillitis_N = mkN "tonsillitis" ;
lin tonsorial_A = compoundA (mkA "tonsorial");
lin tonsure_N = mkN "tonsure" "tonsures";
lin tonsure_V2 = mkV2 (mkV "tonsure" "tonsures" "tonsured" "tonsured" "tonsuring");
lin tontine_N = mkN "tontine" "tontines";
lin tony_PN = mkPN "Tony";
lin tonyrefail_PN = mkPN "Tonyrefail";
lin too_Adv = mkAdv "too";
lin tool_N = mkN "tool" "tools";
lin tool_V2 = mkV2 (mkV "tool" "tools" "tooled" "tooled" "tooling");
lin toot_N = mkN "toot" "toots";
lin toot_V = mkV "toot" "toots" "tooted" "tooted" "tooting";
lin toot_V2 = mkV2 (mkV "toot" "toots" "tooted" "tooted" "tooting");
lin tooth_N = mkN "tooth" "teeth";
lin toothache_N = mkN "toothache" ;
lin toothbrush_N = mkN "toothbrush" "toothbrushes";
lin toothed_A = compoundA (mkA "toothed");
lin toothless_A = compoundA (mkA "toothless");
lin toothpaste_N = mkN "toothpaste" "toothpastes";
lin toothpick_N = mkN "toothpick" "toothpicks";
lin toothpowder_N = mkN "toothpowder" ;
lin toothsome_A = compoundA (mkA "toothsome");
lin tootle_N = mkN "tootle" "tootles";
lin tootle_V = mkV "tootle" "tootles" "tootled" "tootled" "tootling";
lin top_N = mkN "top" "tops";
lin top_V2 = mkV2 (mkV "top" "tops" "topped" "topped" "topping");
lin top_boot_N = mkN "top - boot" "top - boots";
lin top_dress_V2 = mkV2 (mkV "top - dress" "top - dresses" "top - dressed" "top - dressed" "top - dressing");
lin top_dressing_N = mkN "top - dressing" "top - dressings";
lin top_flight_A = compoundA (mkA "top - flight");
lin top_heavy_A = compoundA (mkA "top - heavy");
lin top_hole_A = compoundA (mkA "top - hole");
lin top_ranking_A = compoundA (mkA "top - ranking");
lin topaz_N = mkN "topaz" "topazes";
lin topcoat_N = mkN "topcoat" "topcoats";
lin tope_V = mkV "tope" "topes" "toped" "toped" "toping";
lin tope_V2 = mkV2 (mkV "tope" "topes" "toped" "toped" "toping");
lin toper_N = mkN "toper" "topers";
lin topgallant_A = compoundA (mkA "topgallant");
lin topgallant_N = mkN "topgallant" "topgallants";
lin topi_N = mkN "topi" "topis";
lin topiary_N = mkN "topiary" ;
lin topic_N = mkN "topic" "topics";
lin topical_A = compoundA (mkA "topical");
lin topknot_N = mkN "topknot" "topknots";
lin topless_A = compoundA (mkA "topless");
lin topmast_N = mkN "topmast" "topmasts";
lin topmost_A = compoundA (mkA "topmost");
lin topnotch_A = compoundA (mkA "topnotch");
lin topographical_A = compoundA (mkA "topographical");
lin topography_N = mkN "topography" ;
lin topper_N = mkN "topper" "toppers";
lin topping_A = compoundA (mkA "topping");
lin topple_V = mkV "topple" "topples" "toppled" "toppled" "toppling";
lin topple_V2 = mkV2 (mkV "topple" "topples" "toppled" "toppled" "toppling");
lin topsail_N = mkN "topsail" "topsails";
lin topsy_turvy_A = compoundA (mkA "topsy - turvy");
lin topsy_turvy_Adv = mkAdv "topsy - turvy";
lin topsy_turvydom_N = mkN "topsy - turvydom" "topsy - turvydoms";
lin toque_N = mkN "toque" "toques";
lin tor_N = mkN "tor" "tors";
lin torbay_PN = mkPN "Torbay";
lin torch_N = mkN "torch" "torches";
lin torch_V2 = mkV2 (mkV "torch");
lin torch_race_N = mkN "torch - race" "torch - races";
lin torch_singer_N = mkN "torch - singer" "torch - singers";
lin torchlight_N = mkN "torchlight" ;
lin toreador_N = mkN "toreador" "toreadors";
lin torino_PN = mkPN "Torino";
lin torment_N = mkN "torment" "torments";
lin torment_V2 = mkV2 (mkV "torment" "torments" "tormented" "tormented" "tormenting");
lin tormentor_N = mkN "tormentor" "tormentors";
lin tornado_N = mkN "tornado" "tornadoes";
lin toronto_PN = mkPN "Toronto";
lin torpedo_N = mkN "torpedo" "torpedoes";
lin torpedo_V2 = mkV2 (mkV "torpedo" "torpedos" "torpedoed" "torpedoed" "torpedoing");
lin torpedo_boat_N = mkN "torpedo - boat" "torpedo - boats";
lin torpedo_tube_N = mkN "torpedo - tube" "torpedo - tubes";
lin torpid_A = compoundA (mkA "torpid");
lin torpidity_N = mkN "torpidity" ;
lin torpidness_N = mkN "torpidness" ;
lin torpor_N = mkN "torpor" "torpors";
lin torque_N = mkN "torque" "torques";
lin torrent_N = mkN "torrent" "torrents";
lin torrential_A = compoundA (mkA "torrential");
lin torrid_A = compoundA (mkA "torrid");
lin torridity_N = mkN "torridity" ;
lin torsion_N = mkN "torsion" ;
lin torso_N = mkN "torso" "torsos";
lin tort_N = mkN "tort" "torts";
lin tortilla_N = mkN "tortilla" "tortillas";
lin tortoise_N = mkN "tortoise" "tortoises";
lin tortoiseshell_N = mkN "tortoiseshell" ;
lin tortuous_A = compoundA (mkA "tortuous");
lin torture_N = mkN "torture" "tortures";
lin torture_V2 = mkV2 (mkV "torture" "tortures" "tortured" "tortured" "torturing");
lin torturer_N = mkN "torturer" "torturers";
lin tory_N = mkN "tory" "tories";
lin tosh_N = mkN "tosh" "toshes";
lin toss_N = mkN "toss" "tosses";
lin toss_V = mkV "toss" "tosses" "tossed" "tossed" "tossing";
lin toss_V2 = mkV2 (mkV "toss" "tosses" "tossed" "tossed" "tossing");
lin toss_up_N = mkN "toss - up" "toss - ups";
lin tot_N = mkN "tot" "tots";
lin tot_V = mkV "tot" "tots" "totted" "totted" "totting";
lin tot_V2 = mkV2 (mkV "tot" "tots" "totted" "totted" "totting");
lin total_A = compoundA (mkA "total");
lin total_N = mkN "total" "totals";
lin total_V = variants {mkV "total" "totals" "totaled"  "totaled"  "totaling";  -- US
                        mkV "total" "totals" "totalled" "totalled" "totalling"
                       };
lin total_V2 = mkV2 (variants {mkV "total" "totals" "totaled"  "totaled"  "totaling";  -- US
                               mkV "total" "totals" "totalled" "totalled" "totalling"
                              });
lin totalitarian_A = compoundA (mkA "totalitarian");
lin totalitarianism_N = mkN "totalitarianism" ;
lin totality_N = mkN "totality" ;
lin totalizator_N = mkN "totalizator" "totalizators";
lin tote_N = mkN "tote" "totes";
lin tote_V2 = mkV2 (mkV "tote" "totes" "toted" "toted" "toting");
lin totem_N = mkN "totem" "totems";
lin totem_pole_N = mkN "totem - pole" "totem - poles";
lin totnes_PN = mkPN "Totnes";
lin totter_V = mkV "totter" "totters" "tottered" "tottered" "tottering";
lin tottery_A = compoundA (mkA "tottery");
lin toucan_N = mkN "toucan" "toucans";
lin touch_N = mkN "touch" "touches";
lin touch_V = mkV "touch" "touches" "touched" "touched" "touching";
lin touch_V2 = mkV2 (mkV "touch" "touches" "touched" "touched" "touching");
lin touch_and_go_A = compoundA (mkA "touch - and - go");
lin touch_type_V = mkV "touch - type" "touch - types" "touch - typed" "touch - typed" "touch - typing";
lin touchable_A = compoundA (mkA "touchable");
lin touchdown_N = mkN "touchdown" "touchdowns";
lin touched_A = compoundA (mkA "touched");
lin touchily_Adv = mkAdv "touchily";
lin touchiness_N = mkN "touchiness" ;
lin touching_A = compoundA (mkA "touching");
lin touchline_N = mkN "touchline" "touchlines";
lin touchstone_N = mkN "touchstone" "touchstones";
lin touchy_A = mkA "touchy" "touchier";
lin tough_A = mkA "tough" "tougher";
lin tough_N = mkN "tough" "toughs";
lin toughen_V = mkV "toughen" "toughens" "toughened" "toughened" "toughening";
lin toughen_V2 = mkV2 (mkV "toughen" "toughens" "toughened" "toughened" "toughening");
lin toughie_N = mkN "toughie" "toughies";
lin toughness_N = mkN "toughness" ;
lin toulon_PN = mkPN "Toulon";
lin toulouse_PN = mkPN "Toulouse";
lin toupee_N = mkN "toupee" "toupees";
lin tour_N = mkN "tour" "tours";
lin tour_V = mkV "tour" "tours" "toured" "toured" "touring";
lin tour_V2 = mkV2 (mkV "tour" "tours" "toured" "toured" "touring");
lin tour_de_force_N = mkN "tour de force" "IRREG";
lin touring_A = compoundA (mkA "touring");
lin touring_N = mkN "touring" ;
lin tourism_N = mkN "tourism" ;
lin tourist_N = mkN "tourist" "tourists";
lin tournament_N = mkN "tournament" "tournaments";
lin tourney_N = mkN "tourney" "tourneys";
lin tourniquet_N = mkN "tourniquet" "tourniquets";
lin tours_PN = mkPN "Tours";
lin tousle_V2 = mkV2 (mkV "tousle" "tousles" "tousled" "tousled" "tousling");
lin tout_N = mkN "tout" "touts";
lin tout_V = mkV "tout" "touts" "touted" "touted" "touting";
lin tout_V2 = mkV2 (mkV "tout" "touts" "touted" "touted" "touting");
lin tout_ensemble_Adv = mkAdv "tout ensemble";
lin tout_ensemble_N = mkN "tout ensemble" "IRREG";
lin tow_N = mkN "tow" "tows";
lin tow_V2 = mkV2 (mkV "tow" "tows" "towed" "towed" "towing");
lin toward_Prep = mkPrep "toward";
lin towards_Prep = mkPrep "towards";
lin towel_N = mkN "towel" "towels";
lin towel_V2 = mkV2 (mkV "towel" "towels" "towelled" "towelled" "towelling");
lin towel_horse_N = mkN "towel - horse" "towel - horses";
lin towel_rack_N = mkN "towel - rack" "towel - racks";
lin towel_rail_N = mkN "towel - rail" "towel - rails";
lin towelling_N = mkN "towelling" ;
lin tower_N = mkN "tower" "towers";
lin tower_V = mkV "tower" "towers" "towered" "towered" "towering";
lin tower_block_N = mkN "tower - block" "tower - blocks";
lin tower_hamlets_PN = mkPN "Tower hamlets";
lin towering_A = compoundA (mkA "towering");
lin towing_line_N = mkN "towing - line" "towing - lines";
lin towing_path_N = mkN "towing - path" "towing - paths";
lin towing_rope_N = mkN "towing - rope" "towing - ropes";
lin towline_N = mkN "towline" "towlines";
lin town_N = mkN "town" "towns";
lin town_crier_N = mkN "town - crier" "town - criers";
lin town_gas_N = mkN "town - gas" ;
lin townee_N = mkN "townee" "townees";
lin township_N = mkN "township" "townships";
lin townsman_N = mkN "townsman" "townsmen" {- FIXME: guessed plural form -};
lin towpath_N = mkN "towpath" "towpaths";
lin towrope_N = mkN "towrope" "towropes";
lin toxaemia_N = mkN "toxaemia" ;
lin toxic_A = compoundA (mkA "toxic");
lin toxicity_N = mkN "toxicity" ;
lin toxicologist_N = mkN "toxicologist" "toxicologists";
lin toxicology_N = mkN "toxicology" ;
lin toxin_N = mkN "toxin" "toxins";
lin toy_N = mkN "toy" "toys";
lin toy_V = mkV "toy" "toys" "toyed" "toyed" "toying";
lin toyshop_N = mkN "toyshop" "toyshops";
lin trace_N = mkN "trace" "traces";
lin trace_V = mkV "trace" "traces" "traced" "traced" "tracing";
lin trace_V2 = mkV2 (mkV "trace" "traces" "traced" "traced" "tracing");
lin traceable_A = compoundA (mkA "traceable");
lin tracer_N = mkN "tracer" "tracers";
lin tracery_N = mkN "tracery" "traceries";
lin trachea_N = mkN "trachea" "tracheae" {- FIXME: guessed plural form -};
lin trachoma_N = mkN "trachoma" ;
lin tracing_N = mkN "tracing" "tracings";
lin tracing_paper_N = mkN "tracing - paper" ;
lin track_N = mkN "track" "tracks";
lin track_V = mkV "track";
lin track_V2 = mkV2 (mkV "track" "tracks" "tracked" "tracked" "tracking");
lin tracked_A = compoundA (mkA "tracked");
lin tracker_N = mkN "tracker" "trackers";
lin trackless_A = compoundA (mkA "trackless");
lin tract_N = mkN "tract" "tracts";
lin tractability_N = mkN "tractability" "tractabilities";
lin tractable_A = compoundA (mkA "tractable");
lin traction_N = mkN "traction" ;
lin traction_engine_N = mkN "traction - engine" "traction - engines";
lin tractor_N = mkN "tractor" "tractors";
lin tracy_PN = mkPN "Tracy";
lin trad_N = mkN "trad" ;
lin trade_N = mkN "trade" "trades";
lin trade_V = mkV "trade" "trades" "traded" "traded" "trading";
lin trade_V2 = mkV2 (mkV "trade" "trades" "traded" "traded" "trading");
lin trade_in_N = mkN "trade - in" "trade - ins";
lin trade_union_N = mkN "trade - union" "trade - unions";
lin trade_unionism_N = mkN "trade - unionism" ;
lin trade_unionist_N = mkN "trade - unionist" "trade - unionists";
lin trade_wind_N = mkN "trade - wind" "trade - winds";
lin trademark_N = mkN "trademark" "trademarks";
lin trader_N = mkN "trader" "traders";
lin trades_union_N = mkN "trades - union" "trades - unions";
lin tradesman_N = mkN "tradesman" "tradesmen" {- FIXME: guessed plural form -};
lin tradition_N = mkN "tradition" "traditions";
lin traditional_A = compoundA (mkA "traditional");
lin traditionalism_N = mkN "traditionalism" ;
lin traditionalist_N = mkN "traditionalist" "traditionalists";
lin traduce_V2 = mkV2 (mkV "traduce" "traduces" "traduced" "traduced" "traducing");
lin traducer_N = mkN "traducer" "traducers";
lin traffic_N = mkN "traffic" ;
lin traffic_V = mkV "traffic" "IRREG" "IRREG" "IRREG" "IRREG";
lin trafficator_N = mkN "trafficator" "trafficators";
lin trafficker_N = mkN "trafficker" "traffickers";
lin tragedian_N = mkN "tragedian" "tragedians";
lin tragedienne_N = mkN "tragedienne" "tragediennes";
lin tragedy_N = mkN "tragedy" "tragedies";
lin tragic_A = compoundA (mkA "tragic");
lin tragically_Adv = mkAdv "tragically";
lin tragicomedy_N = mkN "tragicomedy" "tragicomedies";
lin tragicomic_A = compoundA (mkA "tragicomic");
lin trail_N = mkN "trail" "trails";
lin trail_V = mkV "trail" "trails" "trailed" "trailed" "trailing";
lin trail_V2 = mkV2 (mkV "trail" "trails" "trailed" "trailed" "trailing");
lin trailer_N = mkN "trailer" "trailers";
lin train_N = mkN "train" "trains";
lin train_V = mkV "train" "trains" "trained" "trained" "training";
lin train_V2 = mkV2 (mkV "train" "trains" "trained" "trained" "training");
lin train_V2V = mkV2V (mkV "train" "trains" "trained" "trained" "training") noPrep to_Prep ;
lin trainbearer_N = mkN "trainbearer" "trainbearers";
lin trainee_N = mkN "trainee" "trainees";
lin trainer_N = mkN "trainer" "trainers";
lin training_N = mkN "training" ;
lin training_college_N = mkN "training - college" "training - colleges";
lin training_ship_N = mkN "training - ship" "training - ships";
lin trainload_N = mkN "trainload" "trainloads";
lin trainman_N = mkN "trainman" "trainmen" {- FIXME: guessed plural form -};
lin traipse_V = mkV "traipse" "traipses" "traipsed" "traipsed" "traipsing";
lin trait_N = mkN "trait" "traits";
lin traitor_N = mkN "traitor" "traitors";
lin traitorous_A = compoundA (mkA "traitorous");
lin traitress_N = mkN "traitress" "traitresses";
lin trajectory_N = mkN "trajectory" "trajectories";
lin tralee_PN = mkPN "Tralee";
lin tram_N = mkN "tram" "trams";
lin tram_car_N = mkN "tram - car" "tram - cars";
lin tramline_N = mkN "tramline" "tramlines";
lin trammel_V2 = mkV2 (mkV "trammel" "trammels" "trammelled" "trammelled" "trammelling");
lin tramp_N = mkN "tramp" "tramps";
lin tramp_V = mkV "tramp" "tramps" "tramped" "tramped" "tramping";
lin tramp_V2 = mkV2 (mkV "tramp" "tramps" "tramped" "tramped" "tramping");
lin tramp_steamer_N = mkN "tramp - steamer" "tramp - steamers";
lin trample_N = mkN "trample" "tramples";
lin trample_V = mkV "trample" "tramples" "trampled" "trampled" "trampling";
lin trample_V2 = mkV2 (mkV "trample" "tramples" "trampled" "trampled" "trampling");
lin trampoline_N = mkN "trampoline" "trampolines";
lin tramway_N = mkN "tramway" "tramways";
lin trance_N = mkN "trance" "trances";
lin tranent_PN = mkPN "Tranent";
lin tranquil_A = compoundA (mkA "tranquil");
lin tranquility_N = mkN "tranquility" ;
lin tranquilize_V2 = mkV2 (mkV "tranquilize" "tranquilizes" "tranquilized" "tranquilized" "tranquilizing");
lin tranquillity_N = mkN "tranquillity" ;
lin tranquillize_V2 = mkV2 (mkV "tranquillize" "tranquillizes" "tranquillized" "tranquillized" "tranquillizing");
lin tranquillizer_N = mkN "tranquillizer" "tranquillizers";
lin trans_PN = mkPN "Trans";
lin transact_V2 = mkV2 (mkV "transact" "transacts" "transacted" "transacted" "transacting");
lin transaction_N = mkN "transaction" "transactions";
lin transalpine_A = compoundA (mkA "transalpine");
lin transalpine_N = mkN "transalpine" "transalpines";
lin transatlantic_A = compoundA (mkA "transatlantic");
lin transcend_V2 = mkV2 (mkV "transcend" "transcends" "transcended" "transcended" "transcending");
lin transcendence_N = mkN "transcendence" ;
lin transcendency_N = mkN "transcendency" ;
lin transcendent_A = compoundA (mkA "transcendent");
lin transcendental_A = compoundA (mkA "transcendental");
lin transcendentalism_N = mkN "transcendentalism" ;
lin transcendentalist_N = mkN "transcendentalist" "transcendentalists";
lin transcontinental_A = compoundA (mkA "transcontinental");
lin transcribe_V2 = mkV2 (mkV "transcribe" "transcribes" "transcribed" "transcribed" "transcribing");
lin transcript_N = mkN "transcript" "transcripts";
lin transcription_N = mkN "transcription" "transcriptions";
lin transept_N = mkN "transept" "transepts";
lin transfer_N = mkN "transfer" "transfers";
lin transfer_V = mkV "transfer" "transfers" "transferred" "transferred" "transferring";
lin transfer_V2 = mkV2 (mkV "transfer" "transfers" "transferred" "transferred" "transferring");
lin transferability_N = mkN "transferability" ;
lin transferable_A = compoundA (mkA "transferable");
lin transference_N = mkN "transference" "transferences";
lin transfiguration_N = mkN "transfiguration" "transfigurations";
lin transfigure_V2 = mkV2 (mkV "transfigure" "transfigures" "transfigured" "transfigured" "transfiguring");
lin transfix_V2 = mkV2 (mkV "transfix" "transfixes" "transfixed" "transfixed" "transfixing");
lin transform_V2 = mkV2 (mkV "transform" "transforms" "transformed" "transformed" "transforming");
lin transformable_A = compoundA (mkA "transformable");
lin transformation_N = mkN "transformation" "transformations";
lin transformer_N = mkN "transformer" "transformers";
lin transfuse_V2 = mkV2 (mkV "transfuse" "transfuses" "transfused" "transfused" "transfusing");
lin transfusion_N = mkN "transfusion" "transfusions";
lin transgress_V = mkV "transgress" "transgresses" "transgressed" "transgressed" "transgressing";
lin transgress_V2 = mkV2 (mkV "transgress" "transgresses" "transgressed" "transgressed" "transgressing");
lin transgression_N = mkN "transgression" "transgressions";
lin transgressor_N = mkN "transgressor" "transgressors";
lin transience_N = mkN "transience" ;
lin transiency_N = mkN "transiency" ;
lin transient_A = compoundA (mkA "transient");
lin transient_N = mkN "transient" "transients";
lin transistor_N = mkN "transistor" "transistors";
lin transistorized_A = compoundA (mkA "transistorized");
lin transit_N = mkN "transit" ;
lin transition_N = mkN "transition" "transitions";
lin transitional_A = compoundA (mkA "transitional");
lin transitive_A = compoundA (mkA "transitive");
lin transitory_A = compoundA (mkA "transitory");
lin translatable_A = compoundA (mkA "translatable");
lin translate_V = mkV "translate";
lin translate_V2 = mkV2 (mkV "translate" "translates" "translated" "translated" "translating");
lin translation_N = mkN "translation" "translations";
lin translator_N = mkN "translator" "translators";
lin transliterate_V2 = mkV2 (mkV "transliterate" "transliterates" "transliterated" "transliterated" "transliterating");
lin transliteration_N = mkN "transliteration" "transliterations";
lin translucence_N = mkN "translucence" ;
lin translucency_N = mkN "translucency" ;
lin translucent_A = compoundA (mkA "translucent");
lin transmigration_N = mkN "transmigration" ;
lin transmission_N = mkN "transmission" "transmissions";
lin transmit_V2 = mkV2 (mkV "transmit" "transmits" "transmitted" "transmitted" "transmitting");
lin transmitter_N = mkN "transmitter" "transmitters";
lin transmogrification_N = mkN "transmogrification" "transmogrifications";
lin transmogrify_V2 = mkV2 (mkV "transmogrify" "transmogrifies" "transmogrified" "transmogrified" "transmogrifying");
lin transmutable_A = compoundA (mkA "transmutable");
lin transmutation_N = mkN "transmutation" "transmutations";
lin transmute_V2 = mkV2 (mkV "transmute" "transmutes" "transmuted" "transmuted" "transmuting");
lin transoceanic_A = compoundA (mkA "transoceanic");
lin transom_N = mkN "transom" "transoms";
lin transom_window_N = mkN "transom - window" "transom - windows";
lin transparence_N = mkN "transparence" ;
lin transparency_N = mkN "transparency" "transparencies";
lin transparent_A = compoundA (mkA "transparent");
lin transpiration_N = mkN "transpiration" ;
lin transpire_V = mkV "transpire" "transpires" "transpired" "transpired" "transpiring";
lin transpire_V2 = mkV2 (mkV "transpire" "transpires" "transpired" "transpired" "transpiring");
lin transplant_N = mkN "transplant" "transplants";
lin transplant_V = mkV "transplant" "transplants" "transplanted" "transplanted" "transplanting";
lin transplant_V2 = mkV2 (mkV "transplant" "transplants" "transplanted" "transplanted" "transplanting");
lin transplantation_N = mkN "transplantation" "transplantations";
lin transpolar_A = compoundA (mkA "transpolar");
lin transport_N = mkN "transport" "transports";
lin transport_V2 = mkV2 (mkV "transport" "transports" "transported" "transported" "transporting");
lin transportable_A = compoundA (mkA "transportable");
lin transportation_N = mkN "transportation" ;
lin transporter_N = mkN "transporter" "transporters";
lin transpose_V2 = mkV2 (mkV "transpose" "transposes" "transposed" "transposed" "transposing");
lin transposition_N = mkN "transposition" "transpositions";
lin transsexual_N = mkN "transsexual" "transsexuals";
lin transship_V2 = mkV2 (mkV "transship" "transships" "transshipped" "transshipped" "transshipping");
lin transshipment_N = mkN "transshipment" "transshipments";
lin transubstantiation_N = mkN "transubstantiation" ;
lin transverse_A = compoundA (mkA "transverse");
lin transvestism_N = mkN "transvestism" ;
lin transvestite_N = mkN "transvestite" "transvestites";
lin trap_N = mkN "trap" "traps";
lin trap_V = mkV "trap";
lin trap_V2 = mkV2 (mkV "trap" "traps" "trapped" "trapped" "trapping");
lin trap_door_N = mkN "trap - door" "trap - doors";
lin trap_shooting_N = mkN "trap - shooting" ;
lin trapeze_N = mkN "trapeze" "trapezes";
lin trapezium_N = mkN "trapezium" "trapeziums";
lin trapezoid_N = mkN "trapezoid" "trapezoids";
lin trapper_N = mkN "trapper" "trappers";
lin trappist_N = mkN "trappist" "trappists";
lin trash_N = mkN "trash" ;
lin trash_V2 = mkV2 (mkV "trash");
lin trashy_A = mkA "trashy" "trashier";
lin trauma_N = mkN "trauma" "traumas";
lin traumatic_A = compoundA (mkA "traumatic");
lin travail_N = mkN "travail" "travails";
lin travel_N = mkN "travel" "travels";
lin travel_V = mkV "travel" "travels" "traveled" "traveled" "traveling";
lin travel_V2 = mkV2 (mkV "travel" "travels" "traveled" "traveled" "traveling");
lin travel_soiled_A = compoundA (mkA "travel - soiled");
lin travel_stained_A = compoundA (mkA "travel - stained");
lin travel_worn_A = compoundA (mkA "travel - worn");
lin traveled_A = compoundA (mkA "traveled");
lin travelled_A = compoundA (mkA "travelled");
lin traveller_N = mkN "traveller" "travellers";
lin travelling_N = mkN "travelling" ;
lin travelogue_N = mkN "travelogue" "travelogues";
lin traverse_N = mkN "traverse" "traverses";
lin traverse_V2 = mkV2 (mkV "traverse" "traverses" "traversed" "traversed" "traversing");
lin travesty_N = mkN "travesty" "travesties";
lin travesty_V2 = mkV2 (mkV "travesty" "travesties" "travestied" "travestied" "travestying");
lin trawl_N = mkN "trawl" "trawls";
lin trawl_V = mkV "trawl" "trawls" "trawled" "trawled" "trawling";
lin trawl_V2 = mkV2 (mkV "trawl" "trawls" "trawled" "trawled" "trawling");
lin trawl_net_N = mkN "trawl - net" "trawl - nets";
lin trawler_N = mkN "trawler" "trawlers";
lin tray_N = mkN "tray" "trays";
lin tray_cloth_N = mkN "tray - cloth" "tray - cloths";
lin treacherous_A = compoundA (mkA "treacherous");
lin treachery_N = mkN "treachery" "treacheries";
lin treacle_N = mkN "treacle" ;
lin treacly_A = compoundA (mkA "treacly");
lin tread_N = mkN "tread" "treads";
lin tread_V = IrregEng.tread_V;
lin tread_V2 = mkV2 (IrregEng.tread_V);
lin treadle_N = mkN "treadle" "treadles";
lin treadle_V = mkV "treadle" "treadles" "treadled" "treadled" "treadling";
lin treadmill_N = mkN "treadmill" "treadmills";
lin treas_N = mkN "treas" ;
lin treason_N = mkN "treason" ;
lin treasonable_A = compoundA (mkA "treasonable");
lin treasonous_A = compoundA (mkA "treasonous");
lin treasure_N = mkN "treasure" "treasures";
lin treasure_V2 = mkV2 (mkV "treasure" "treasures" "treasured" "treasured" "treasuring");
lin treasure_house_N = mkN "treasure - house" "treasure - houses";
lin treasure_trove_N = mkN "treasure - trove" ;
lin treasurer_N = mkN "treasurer" "treasurers";
lin treasury_N = mkN "treasury" "treasuries";
lin treat_N = mkN "treat" "treats";
lin treat_V = mkV "treat" "treats" "treated" "treated" "treating";
lin treat_V2 = mkV2 (mkV "treat" "treats" "treated" "treated" "treating");
lin treatise_N = mkN "treatise" "treatises";
lin treatment_N = mkN "treatment" "treatments";
lin treaty_N = mkN "treaty" "treaties";
lin treble_A = compoundA (mkA "treble");
lin treble_N = mkN "treble" "trebles";
lin treble_V = mkV "treble" "trebles" "trebled" "trebled" "trebling";
lin treble_V2 = mkV2 (mkV "treble" "trebles" "trebled" "trebled" "trebling");
lin tredegar_PN = mkPN "Tredegar";
lin tree_N = mkN "tree" "trees";
lin tree_V2 = mkV2 (mkV "tree" "IRREG" "IRREG" "IRREG" "IRREG");
lin tree_fern_N = mkN "tree - fern" "tree - ferns";
lin treeless_A = compoundA (mkA "treeless");
lin trefoil_N = mkN "trefoil" "trefoils";
lin trek_N = mkN "trek" "treks";
lin trek_V = mkV "trek" "treks" "trekked" "trekked" "trekking";
lin trellis_N = mkN "trellis" "trellises";
lin trellis_V2 = mkV2 (mkV "trellis" "trellises" "trellised" "trellised" "trellising");
lin tremble_N = mkN "tremble" "trembles";
lin tremble_V = mkV "tremble" "trembles" "trembled" "trembled" "trembling";
lin tremendous_A = compoundA (mkA "tremendous");
lin tremolo_N = mkN "tremolo" "tremolos";
lin tremor_N = mkN "tremor" "tremors";
lin tremulous_A = compoundA (mkA "tremulous");
lin trench_N = mkN "trench" "trenches";
lin trench_V2 = mkV2 (mkV "trench" "trenches" "trenched" "trenched" "trenching");
lin trenchancy_N = mkN "trenchancy" ;
lin trenchant_A = compoundA (mkA "trenchant");
lin trencher_N = mkN "trencher" "trenchers";
lin trencherman_N = mkN "trencherman" "trenchermen" {- FIXME: guessed plural form -};
lin trend_N = mkN "trend" "trends";
lin trend_V = mkV "trend" "trends" "trended" "trended" "trending";
lin trend_setter_N = mkN "trend - setter" "trend - setters";
lin trend_setting_N = mkN "trend - setting" ;
lin trendy_A = mkA "trendy" "trendier";
lin trepan_V2 = mkV2 (mkV "trepan" "trepans" "trepanned" "trepanned" "trepanning");
lin trephine_N = mkN "trephine" "trephines";
lin trephine_V2 = mkV2 (mkV "trephine" "trephines" "trephined" "trephined" "trephining");
lin trepidation_N = mkN "trepidation" ;
lin trespass_N = mkN "trespass" "trespasses";
lin trespass_V = mkV "trespass" "trespasses" "trespassed" "trespassed" "trespassing";
lin trespasser_N = mkN "trespasser" "trespassers";
lin tress_N = mkN "tress" "tresses";
lin trestle_N = mkN "trestle" "trestles";
lin trestle_bridge_N = mkN "trestle - bridge" "trestle - bridges";
lin trestle_table_N = mkN "trestle - table" "trestle - tables";
lin trevor_PN = mkPN "Trevor";
lin triad_N = mkN "triad" "triads";
lin trial_N = mkN "trial" "trials";
lin triangle_N = mkN "triangle" "triangles";
lin triangular_A = compoundA (mkA "triangular");
lin tribal_A = compoundA (mkA "tribal");
lin tribalism_N = mkN "tribalism" ;
lin tribe_N = mkN "tribe" "tribes";
lin tribesman_N = mkN "tribesman" "tribesmen" {- FIXME: guessed plural form -};
lin tribulation_N = mkN "tribulation" "tribulations";
lin tribunal_N = mkN "tribunal" "tribunals";
lin tribune_N = mkN "tribune" "tribunes";
lin tributary_A = compoundA (mkA "tributary");
lin tributary_N = mkN "tributary" "tributaries";
lin tribute_N = mkN "tribute" "tributes";
lin trice_N = mkN "trice" "trices";
lin trice_V2 = mkV2 (mkV "trice" "trices" "triced" "triced" "tricing");
lin trick_N = mkN "trick" "tricks";
lin trick_V2 = mkV2 (mkV "trick" "tricks" "tricked" "tricked" "tricking");
lin trickery_N = mkN "trickery" ;
lin trickiness_N = mkN "trickiness" ;
lin trickle_N = mkN "trickle" "trickles";
lin trickle_V = mkV "trickle" "trickles" "trickled" "trickled" "trickling";
lin trickle_V2 = mkV2 (mkV "trickle" "trickles" "trickled" "trickled" "trickling");
lin trickster_N = mkN "trickster" "tricksters";
lin tricksy_A = compoundA (mkA "tricksy");
lin tricky_A = mkA "tricky" "trickier";
lin tricolour_N = mkN "tricolour" "tricolours";
lin tricycle_N = mkN "tricycle" "tricycles";
lin trident_N = mkN "trident" "tridents";
lin tried_A = compoundA (mkA "tried");
lin triennial_A = compoundA (mkA "triennial");
lin triennial_N = mkN "triennial" "triennials";
lin trier_N = mkN "trier" "triers";
lin trieste_PN = mkPN "Trieste";
lin trifle_N = mkN "trifle" "trifles";
lin trifle_V = mkV "trifle" "trifles" "trifled" "trifled" "trifling";
lin trifle_V2 = mkV2 (mkV "trifle" "trifles" "trifled" "trifled" "trifling");
lin trifler_N = mkN "trifler" "triflers";
lin trifling_A = compoundA (mkA "trifling");
lin trigger_N = mkN "trigger" "triggers";
lin trigger_V2 = mkV2 (mkV "trigger" "triggers" "triggered" "triggered" "triggering");
lin trigger_happy_A = compoundA (mkA "trigger - happy");
lin trigonometry_N = mkN "trigonometry" ;
lin trilateral_A = compoundA (mkA "trilateral");
lin trilby_N = mkN "trilby" "trilbies";
lin trill_N = mkN "trill" "trills";
lin trill_V = mkV "trill" "trills" "trilled" "trilled" "trilling";
lin trill_V2 = mkV2 (mkV "trill" "trills" "trilled" "trilled" "trilling");
lin trillion_A = compoundA (mkA "trillion");
lin trillion_N = mkN "trillion" "trillions";
lin trillionth_A = compoundA (mkA "trillionth");
lin trillionth_N = mkN "trillionth" "trillionths";
lin trilogy_N = mkN "trilogy" "trilogies";
lin trim_A = mkA "trim" "trimmer*";
lin trim_N = mkN "trim" ;
lin trim_V = mkV "trim" "trims" "trimmed" "trimmed" "trimming";
lin trim_V2 = mkV2 (mkV "trim" "trims" "trimmed" "trimmed" "trimming");
lin trimaran_N = mkN "trimaran" "trimarans";
lin trimmer_N = mkN "trimmer" "trimmers";
lin trimming_N = mkN "trimming" "trimmings";
lin tring_PN = mkPN "Tring";
lin trinidad_PN = mkPN "Trinidad";
lin trinidadian_A = compoundA (mkA "trinidadian");
lin trinidadian_N = mkN "trinidadian" "trinidadians";
lin trinitrotoluene_N = mkN "trinitrotoluene" ;
lin trinity_N = mkN "trinity" "trinities";
lin trinket_N = mkN "trinket" "trinkets";
lin trio_N = mkN "trio" "trios";
lin trip_N = mkN "trip" "trips";
lin trip_V = mkV "trip" "trips" "tripped" "tripped" "tripping";
lin trip_V2 = mkV2 (mkV "trip" "trips" "tripped" "tripped" "tripping");
lin tripartite_A = compoundA (mkA "tripartite");
lin tripe_N = mkN "tripe" ;
lin triple_A = compoundA (mkA "triple");
lin triple_V = mkV "triple" "triples" "tripled" "tripled" "tripling";
lin triple_V2 = mkV2 (mkV "triple" "triples" "tripled" "tripled" "tripling");
lin triplet_N = mkN "triplet" "triplets";
lin triplex_A = compoundA (mkA "triplex");
lin triplicate_A = compoundA (mkA "triplicate");
lin triplicate_N = mkN "triplicate" "triplicates";
lin triplicate_V2 = mkV2 (mkV "triplicate" "triplicates" "triplicated" "triplicated" "triplicating");
lin tripod_N = mkN "tripod" "tripods";
lin tripos_N = mkN "tripos" "triposes";
lin tripper_N = mkN "tripper" "trippers";
lin tripping_A = compoundA (mkA "tripping");
lin triptych_N = mkN "triptych" "triptychs";
lin trireme_N = mkN "trireme" "triremes";
lin trisect_V2 = mkV2 (mkV "trisect" "trisects" "trisected" "trisected" "trisecting");
lin trite_A = compoundA (mkA "trite");
lin triteness_N = mkN "triteness" ;
lin triumph_N = mkN "triumph" "triumphs";
lin triumph_V = mkV "triumph" "triumphs" "triumphed" "triumphed" "triumphing";
lin triumphal_A = compoundA (mkA "triumphal");
lin triumphant_A = compoundA (mkA "triumphant");
lin triumvir_N = mkN "triumvir" "triumvirs";
lin triumvirate_N = mkN "triumvirate" "triumvirates";
lin triune_A = compoundA (mkA "triune");
lin trivet_N = mkN "trivet" "trivets";
lin trivial_A = compoundA (mkA "trivial");
lin triviality_N = mkN "triviality" "trivialities";
lin trivialize_V2 = mkV2 (mkV "trivialize" "trivializes" "trivialized" "trivialized" "trivializing");
lin trochaic_A = compoundA (mkA "trochaic");
lin trochee_N = mkN "trochee" "trochees";
lin troglodyte_N = mkN "troglodyte" "troglodytes";
lin troika_N = mkN "troika" "troikas";
lin trojan_A = compoundA (mkA "trojan");
lin trojan_N = mkN "trojan" "trojans";
lin troll_N = mkN "troll" "trolls";
lin troll_V = mkV "troll" "trolls" "trolled" "trolled" "trolling";
lin troll_V2 = mkV2 (mkV "troll" "trolls" "trolled" "trolled" "trolling");
lin trolley_N = mkN "trolley" "trolleys";
lin trolley_car_N = mkN "trolley - car" "trolley - cars";
lin trollop_N = mkN "trollop" "trollops";
lin trombone_N = mkN "trombone" "trombones";
lin trombonist_N = mkN "trombonist" "trombonists";
lin troon_PN = mkPN "Troon";
lin troop_N = mkN "troop" "troops";
lin troop_V = mkV "troop" "troops" "trooped" "trooped" "trooping";
lin troop_V2 = mkV2 (mkV "troop" "troops" "trooped" "trooped" "trooping");
lin troop_carrier_N = mkN "troop - carrier" "troop - carriers";
lin trooper_N = mkN "trooper" "troopers";
lin troopship_N = mkN "troopship" "troopships";
lin trope_N = mkN "trope" "tropes";
lin trophy_N = mkN "trophy" "trophies";
lin tropic_N = mkN "tropic" "tropics";
lin tropical_A = compoundA (mkA "tropical");
lin trot_N = mkN "trot" "trots";
lin trot_V = mkV "trot" "trots" "trotted" "trotted" "trotting";
lin trot_V2 = mkV2 (mkV "trot" "trots" "trotted" "trotted" "trotting");
lin troth_N = mkN "troth" ;
lin trotter_N = mkN "trotter" "trotters";
lin troubadour_N = mkN "troubadour" "troubadours";
lin trouble_N = mkN "trouble" "troubles";
lin trouble_V = mkV "trouble" "troubles" "troubled" "troubled" "troubling";
lin trouble_V2 = mkV2 (mkV "trouble" "troubles" "troubled" "troubled" "troubling");
lin troublemaker_N = mkN "troublemaker" "troublemakers";
lin troubleshooter_N = mkN "troubleshooter" "troubleshooters";
lin troublesome_A = compoundA (mkA "troublesome");
lin troublous_A = compoundA (mkA "troublous");
lin trough_N = mkN "trough" "troughs";
lin trough_V = mkV "trough";
lin trounce_V2 = mkV2 (mkV "trounce" "trounces" "trounced" "trounced" "trouncing");
lin trouncing_N = mkN "trouncing" "trouncings";
lin troupe_N = mkN "troupe" "troupes";
lin trouper_N = mkN "trouper" "troupers";
lin trouser_N = mkN "trouser" "trousers";
lin trousseau_N = mkN "trousseau" "trousseaus";
lin trout_N = mkN "trout" "trout";
lin trove_N = mkN "trove" "troves";
lin trowbridge_PN = mkPN "Trowbridge";
lin trowel_N = mkN "trowel" "trowels";
lin troy_N = mkN "troy" ;
lin truancy_N = mkN "truancy" "truancies";
lin truant_N = mkN "truant" "truants";
lin truce_N = mkN "truce" "truces";
lin truck_N = mkN "truck" "trucks";
lin truckle_N = mkN "truckle" "truckles";
lin truckle_V = mkV "truckle" "truckles" "truckled" "truckled" "truckling";
lin truckle_bed_N = mkN "truckle - bed" "truckle - beds";
lin truculence_N = mkN "truculence" ;
lin truculency_N = mkN "truculency" ;
lin truculent_A = compoundA (mkA "truculent");
lin trudge_N = mkN "trudge" "trudges";
lin trudge_V = mkV "trudge" "trudges" "trudged" "trudged" "trudging";
lin true_A = mkA "true" "truer";
lin true_Adv = mkAdv "true";
lin true_N = mkN "true" "trues";
lin true_V2 = mkV2 (mkV "true" "trues" "trued" "trued" "truing");
lin true_blue_A = compoundA (mkA "true - blue");
lin true_blue_N = mkN "true - blue" "true - blues";
lin true_hearted_A = compoundA (mkA "true - hearted");
lin truelove_N = mkN "truelove" "trueloves";
lin truffle_N = mkN "truffle" "truffles";
lin truism_N = mkN "truism" "truisms";
lin truly_Adv = mkAdv "truly";
lin trump_N = mkN "trump" "trumps";
lin trump_V = mkV "trump" "trumps" "trumped" "trumped" "trumping";
lin trump_V2 = mkV2 (mkV "trump" "trumps" "trumped" "trumped" "trumping");
lin trumpery_A = compoundA (mkA "trumpery");
lin trumpet_N = mkN "trumpet" "trumpets";
lin trumpet_V = mkV "trumpet" "trumpets" "trumpeted" "trumpeted" "trumpeting";
lin trumpet_V2 = mkV2 (mkV "trumpet" "trumpets" "trumpeted" "trumpeted" "trumpeting");
lin trumpeter_N = mkN "trumpeter" "trumpeters";
lin truncate_V2 = mkV2 (mkV "truncate" "truncates" "truncated" "truncated" "truncating");
lin truncheon_N = mkN "truncheon" "truncheons";
lin trundle_V = mkV "trundle" "trundles" "trundled" "trundled" "trundling";
lin trundle_V2 = mkV2 (mkV "trundle" "trundles" "trundled" "trundled" "trundling");
lin trunk_N = mkN "trunk" "trunks";
lin trunk_call_N = mkN "trunk - call" "trunk - calls";
lin trunk_line_N = mkN "trunk - line" "trunk - lines";
lin trunk_road_N = mkN "trunk - road" "trunk - roads";
lin trunking_N = mkN "trunking" ;
lin truro_PN = mkPN "Truro";
lin truss_N = mkN "truss" "trusses";
lin truss_V2 = mkV2 (mkV "truss" "trusses" "trussed" "trussed" "trussing");
lin trust_N = mkN "trust" "trusts";
lin trust_V = mkV "trust" "trusts" "trusted" "trusted" "trusting";
lin trust_V2 = mkV2 (mkV "trust" "trusts" "trusted" "trusted" "trusting");
lin trust_V2V = mkV2V (mkV "trust" "trusts" "trusted" "trusted" "trusting") noPrep to_Prep ;
lin trust_VS = mkVS (mkV "trust" "trusts" "trusted" "trusted" "trusting");
lin trustee_N = mkN "trustee" "trustees";
lin trusteeship_N = mkN "trusteeship" "trusteeships";
lin trustful_A = compoundA (mkA "trustful");
lin trusting_A = compoundA (mkA "trusting");
lin trustworthiness_N = mkN "trustworthiness" ;
lin trustworthy_A = compoundA (mkA "trustworthy");
lin trusty_A = mkA "trusty" "trustier";
lin truth_N = mkN "truth" "truths";
lin truthful_A = compoundA (mkA "truthful");
lin truthfulness_N = mkN "truthfulness" ;
lin try_N = mkN "try" "tries";
lin try_V = mkV "try" "tries" "tried" "tried" "trying";
lin try_V2 = mkV2 (mkV "try" "tries" "tried" "tried" "trying");
lin try_VV = mkVV (mkV "try" "tries" "tried" "tried" "trying");
lin try_VS = mkVS (mkV "try" "tries" "tried" "tried" "trying");
lin try_on_N = mkN "try - on" "try - ons";
lin try_out_N = mkN "try - out" "try - outs";
lin trying_A = compoundA (mkA "trying");
lin tryst_N = mkN "tryst" "trysts";
lin tsar_N = mkN "tsar" "tsars";
lin tsarina_N = mkN "tsarina" "tsarinas";
lin tsetse_N = mkN "tsetse" "tsetses";
lin tsetse_fly_N = mkN "tsetse - fly" "tsetse - flies";
lin tsinan_PN = mkPN "Tsinan";
lin tsingtao_PN = mkPN "Tsingtao";
lin tsitsihar_PN = mkPN "Tsitsihar";
lin tswana_A = compoundA (mkA "tswana");
lin tswana_N = mkN "tswana" "tswanas";
lin tub_N = mkN "tub" "tubs";
lin tub_thumper_N = mkN "tub - thumper" "tub - thumpers";
lin tuba_N = mkN "tuba" "tubas";
lin tubby_A = mkA "tubby" "tubbier";
lin tube_N = mkN "tube" "tubes";
lin tube_well_N = mkN "tube - well" "tube - wells";
lin tubeless_A = compoundA (mkA "tubeless");
lin tuber_N = mkN "tuber" "tubers";
lin tubercular_A = compoundA (mkA "tubercular");
lin tuberculosis_N = mkN "tuberculosis" ;
lin tuberculous_A = compoundA (mkA "tuberculous");
lin tubful_N = mkN "tubful" "tubfuls";
lin tubing_N = mkN "tubing" ;
lin tubular_A = compoundA (mkA "tubular");
lin tuc_N = mkN "tuc" ;
lin tuck_N = mkN "tuck" "tucks";
lin tuck_V = mkV "tuck" "tucks" "tucked" "tucked" "tucking";
lin tuck_V2 = mkV2 (mkV "tuck" "tucks" "tucked" "tucked" "tucking");
lin tuck_in_N = mkN "tuck - in" "tuck - ins";
lin tuck_shop_N = mkN "tuck - shop" "tuck - shops";
lin tucker_N = mkN "tucker" "tuckers";
lin tues_PN = mkPN "Tues";
lin tuesday_N = mkN "Tuesday" "Tuesdays";
lin tuesday_PN = mkPN "Tuesday";
lin tuft_N = mkN "tuft" "tufts";
lin tufted_A = compoundA (mkA "tufted");
lin tug_N = mkN "tug" "tugs";
lin tug_V = mkV "tug" "tugs" "tugged" "tugged" "tugging";
lin tug_V2 = mkV2 (mkV "tug" "tugs" "tugged" "tugged" "tugging");
lin tugboat_N = mkN "tugboat" "tugboats";
lin tuition_N = mkN "tuition" ;
lin tulip_N = mkN "tulip" "tulips";
lin tulle_N = mkN "tulle" ;
lin tullibody_PN = mkPN "Tullibody";
lin tumble_N = mkN "tumble" "tumbles";
lin tumble_V = mkV "tumble" "tumbles" "tumbled" "tumbled" "tumbling";
lin tumble_V2 = mkV2 (mkV "tumble" "tumbles" "tumbled" "tumbled" "tumbling");
lin tumble_down_A = compoundA (mkA "tumble - down");
lin tumbler_N = mkN "tumbler" "tumblers";
lin tumbleweed_N = mkN "tumbleweed" ;
lin tumbrel_N = mkN "tumbrel" "tumbrels";
lin tumbril_N = mkN "tumbril" "tumbrils";
lin tumescence_N = mkN "tumescence" "tumescences";
lin tumescent_A = compoundA (mkA "tumescent");
lin tumid_A = compoundA (mkA "tumid");
lin tumidity_N = mkN "tumidity" ;
lin tummy_N = mkN "tummy" "tummies";
lin tumour_N = mkN "tumour" "tumours";
lin tumult_N = mkN "tumult" "tumults";
lin tumultuous_A = compoundA (mkA "tumultuous");
lin tumulus_N = mkN "tumulus" "tumuli" {- FIXME: guessed plural form -};
lin tun_N = mkN "tun" "tuns";
lin tuna_N = mkN "tuna" "tuna";
lin tunbridge_wells_PN = mkPN "Tunbridge wells";
lin tundra_N = mkN "tundra" "tundras";
lin tune_N = mkN "tune" "tunes";
lin tune_V = mkV "tune" "tunes" "tuned" "tuned" "tuning";
lin tune_V2 = mkV2 (mkV "tune" "tunes" "tuned" "tuned" "tuning");
lin tuneful_A = compoundA (mkA "tuneful");
lin tunefulness_N = mkN "tunefulness" ;
lin tuner_N = mkN "tuner" "tuners";
lin tung_oil_N = mkN "tung - oil" ;
lin tungsten_N = mkN "tungsten" ;
lin tunic_N = mkN "tunic" "tunics";
lin tuning_fork_N = mkN "tuning - fork" "tuning - forks";
lin tunis_PN = mkPN "Tunis";
lin tunisia_PN = mkPN "Tunisia";
lin tunisian_A = compoundA (mkA "tunisian");
lin tunisian_N = mkN "tunisian" "tunisians";
lin tunnel_N = mkN "tunnel" "tunnels";
lin tunnel_V = mkV "tunnel" "tunnels" "tunnelled" "tunnelled" "tunnelling";
lin tunnel_V2 = mkV2 (mkV "tunnel" "tunnels" "tunnelled" "tunnelled" "tunnelling");
lin tunny_N = mkN "tunny" "tunny";
lin tup_N = mkN "tup" "tups";
lin tuppence_N = mkN "tuppence" "tuppences";
lin tuppenny_A = compoundA (mkA "tuppenny");
lin turban_N = mkN "turban" "turbans";
lin turbaned_A = compoundA (mkA "turbaned");
lin turbid_A = compoundA (mkA "turbid");
lin turbidity_N = mkN "turbidity" ;
lin turbidness_N = mkN "turbidness" ;
lin turbine_N = mkN "turbine" "turbines";
lin turbojet_N = mkN "turbojet" "turbojets";
lin turboprop_N = mkN "turboprop" "turboprops";
lin turbot_N = mkN "turbot" "turbot";
lin turbulence_N = mkN "turbulence" "turbulences";
lin turbulent_A = compoundA (mkA "turbulent");
lin turd_N = mkN "turd" "turds";
lin tureen_N = mkN "tureen" "tureens";
lin turf_N = mkN "turf" "turfs";
lin turf_V2 = mkV2 (mkV "turf" "turfs" "turfed" "turfed" "turfing");
lin turgid_A = compoundA (mkA "turgid");
lin turgidity_N = mkN "turgidity" ;
lin turin_PN = mkPN "Turin";
lin turk_N = mkN "turk" "turks";
lin turkey_N = mkN "turkey" "turkeys";
lin turkey_PN = mkPN "Turkey";
lin turkish_A = compoundA (mkA "Turkish");
lin turkish_N = mkN "Turkish" ;
lin turku_PN = mkPN "Turku";
lin turmeric_N = mkN "turmeric" ;
lin turmoil_N = mkN "turmoil" "turmoils";
lin turn_N = mkN "turn" "turns";
lin turn_V = mkV "turn" "turns" "turned" "turned" "turning";
lin turn_V2 = mkV2 (mkV "turn" "turns" "turned" "turned" "turning");
lin turn_VA = mkVA (mkV "turn" "turns" "turned" "turned" "turning");
lin turn_VS = mkVS (mkV "turn" "turns" "turned" "turned" "turning");
lin turn_off_N = mkN "turn - off" "turn - offs";
lin turn_on_N = mkN "turn - on" "turn - ons";
lin turn_out_N = mkN "turn - out" "turn - outs";
lin turn_round_N = mkN "turn - round" "turn - rounds";
lin turn_up_N = mkN "turn - up" "turn - ups";
lin turncoat_N = mkN "turncoat" "turncoats";
lin turncock_N = mkN "turncock" "turncocks";
lin turner_N = mkN "turner" "turners";
lin turning_N = mkN "turning" "turnings";
lin turning_point_N = mkN "turning - point" "turning - points";
lin turnip_N = mkN "turnip" "turnips";
lin turnkey_N = mkN "turnkey" "turnkeys";
lin turnover_N = mkN "turnover" "turnovers";
lin turnpike_N = mkN "turnpike" "turnpikes";
lin turnspit_N = mkN "turnspit" "turnspits";
lin turnstile_N = mkN "turnstile" "turnstiles";
lin turntable_N = mkN "turntable" "turntables";
lin turpentine_N = mkN "turpentine" ;
lin turpitude_N = mkN "turpitude" ;
lin turps_N = mkN "turps" ;
lin turquoise_N = mkN "turquoise" "turquoises";
lin turret_N = mkN "turret" "turrets";
lin turtle_N = mkN "turtle" "turtles";
lin turtledove_N = mkN "turtledove" "turtledoves";
lin turtleneck_A = compoundA (mkA "turtleneck");
lin turtlenecked_A = compoundA (mkA "turtlenecked");
lin tusk_N = mkN "tusk" "tusks";
lin tussle_N = mkN "tussle" "tussles";
lin tussle_V = mkV "tussle" "tussles" "tussled" "tussled" "tussling";
lin tussock_N = mkN "tussock" "tussocks";
lin tut_V2 = mkV2 (mkV "tut" "tuts" "tutted" "tutted" "tutting");
lin tutelage_N = mkN "tutelage" ;
lin tutelary_A = compoundA (mkA "tutelary");
lin tutor_N = mkN "tutor" "tutors";
lin tutor_V2 = mkV2 (mkV "tutor" "tutors" "tutored" "tutored" "tutoring");
lin tutorial_A = compoundA (mkA "tutorial");
lin tutorial_N = mkN "tutorial" "tutorials";
lin tutorship_N = mkN "tutorship" "tutorships";
lin tutti_frutti_N = mkN "tutti - frutti" "tutti - fruttis";
lin tutu_N = mkN "tutu" "tutus";
lin tuxedo_N = mkN "tuxedo" "tuxedos";
lin tv_N = mkN "TV" "TVs" ;
lin twaddle_N = mkN "twaddle" ;
lin twaddle_V = mkV "twaddle" "twaddles" "twaddled" "twaddled" "twaddling";
lin twain_N = mkN "twain" "twains";
lin twang_N = mkN "twang" "twangs";
lin twang_V = mkV "twang" "twangs" "twanged" "twanged" "twanging";
lin twang_V2 = mkV2 (mkV "twang" "twangs" "twanged" "twanged" "twanging");
lin tweak_N = mkN "tweak" "tweaks";
lin tweak_V2 = mkV2 (mkV "tweak" "tweaks" "tweaked" "tweaked" "tweaking");
lin twee_A = compoundA (mkA "twee");
lin tweed_N = mkN "tweed" "tweeds";
lin tween_Adv = mkAdv "'tween";
lin tween_decks_Adv = mkAdv "'tween - decks";
lin tweet_N = mkN "tweet" "tweets";
lin tweet_V = mkV "tweet" "tweets" "tweeted" "tweeted" "tweeting";
lin tweeter_N = mkN "tweeter" "tweeters";
lin twelfth_night_N = mkN "twelfth - night" "twelfth - nights";
lin twelfth_night_PN = mkPN "Twelfth - night";
lin twelvemonth_N = mkN "twelvemonth" "twelvemonths";
lin twerp_N = mkN "twerp" "twerps";
lin twice_Adv = mkAdv "twice";
lin twiddle_N = mkN "twiddle" "twiddles";
lin twiddle_V = mkV "twiddle" "twiddles" "twiddled" "twiddled" "twiddling";
lin twiddle_V2 = mkV2 (mkV "twiddle" "twiddles" "twiddled" "twiddled" "twiddling");
lin twiddly_A = compoundA (mkA "twiddly");
lin twig_N = mkN "twig" "twigs";
lin twig_V = mkV "twig" "twigs" "twigged" "twigged" "twigging";
lin twig_V2 = mkV2 (mkV "twig" "twigs" "twigged" "twigged" "twigging");
lin twiggy_A = mkA "twiggy" "twiggier";
lin twilight_N = mkN "twilight" ;
lin twilit_A = compoundA (mkA "twilit");
lin twill_N = mkN "twill" ;
lin twilled_A = compoundA (mkA "twilled");
lin twin_N = mkN "twin" "twins";
lin twin_V2 = mkV2 (mkV "twin" "twins" "twinned" "twinned" "twinning");
lin twine_N = mkN "twine" ;
lin twine_V = mkV "twine" "twines" "twined" "twined" "twining";
lin twine_V2 = mkV2 (mkV "twine" "twines" "twined" "twined" "twining");
lin twinge_N = mkN "twinge" "twinges";
lin twinkle_N = mkN "twinkle" ;
lin twinkle_V = mkV "twinkle" "twinkles" "twinkled" "twinkled" "twinkling";
lin twinkling_N = mkN "twinkling" "IRREG";
lin twinned_A = compoundA (mkA "twinned");
lin twirl_N = mkN "twirl" "twirls";
lin twirl_V = mkV "twirl" "twirls" "twirled" "twirled" "twirling";
lin twirl_V2 = mkV2 (mkV "twirl" "twirls" "twirled" "twirled" "twirling");
lin twist_N = mkN "twist" "twists";
lin twist_V = mkV "twist" "twists" "twisted" "twisted" "twisting";
lin twist_V2 = mkV2 (mkV "twist" "twists" "twisted" "twisted" "twisting");
lin twister_N = mkN "twister" "twisters";
lin twisty_A = mkA "twisty" "twistier";
lin twit_N = mkN "twit" "twits";
lin twit_V2 = mkV2 (mkV "twit" "twits" "twitted" "twitted" "twitting");
lin twitch_N = mkN "twitch" "twitches";
lin twitch_V = mkV "twitch" "twitches" "twitched" "twitched" "twitching";
lin twitch_V2 = mkV2 (mkV "twitch" "twitches" "twitched" "twitched" "twitching");
lin twitter_N = mkN "twitter" "twitters";
lin twitter_V = mkV "twitter" "twitters" "twittered" "twittered" "twittering";
lin twixt_Prep = mkPrep "twixt";
lin two_a_penny_A = compoundA (mkA "two - a - penny");
lin two_edged_A = compoundA (mkA "two - edged");
lin two_faced_A = compoundA (mkA "two - faced");
lin two_funnelled_A = compoundA (mkA "two - funnelled");
lin two_handed_A = compoundA (mkA "two - handed");
lin two_piece_N = mkN "two - piece" "IRREG";
lin two_ply_A = compoundA (mkA "two - ply");
lin two_seater_N = mkN "two - seater" "two - seaters";
lin two_step_N = mkN "two - step" "two - steps";
lin two_timing_A = compoundA (mkA "two - timing");
lin two_way_A = compoundA (mkA "two - way");
lin twofold_A = compoundA (mkA "twofold");
lin twofold_Adv = mkAdv "twofold";
lin twopence_N = mkN "twopence" "twopences";
lin twopenny_A = compoundA (mkA "twopenny");
lin twopenny_halfpenny_A = compoundA (mkA "twopenny - halfpenny");
lin tycoon_N = mkN "tycoon" "tycoons";
lin tyke_N = mkN "tyke" "tykes";
lin tympanum_N = mkN "tympanum" "tympanums";
lin tyne_PN = mkPN "Tyne";
lin tynemouth_PN = mkPN "Tynemouth";
lin type_N = mkN "type" "types";
lin type_V = mkV "type" "types" "typed" "typed" "typing";
lin type_V2 = mkV2 (mkV "type" "types" "typed" "typed" "typing");
lin typecast_V2 = mkV2 (mkV "type" IrregEng.cast_V);
lin typeface_N = mkN "typeface" "typefaces";
lin typescript_N = mkN "typescript" "typescripts";
lin typesetter_N = mkN "typesetter" "typesetters";
lin typewriter_N = mkN "typewriter" "typewriters";
lin typewritten_A = compoundA (mkA "typewritten");
lin typhoid_N = mkN "typhoid" ;
lin typhoon_N = mkN "typhoon" "typhoons";
lin typhus_N = mkN "typhus" ;
lin typical_A = compoundA (mkA "typical");
lin typify_V2 = mkV2 (mkV "typify" "typifies" "typified" "typified" "typifying");
lin typist_N = mkN "typist" "typists";
lin typographer_N = mkN "typographer" "typographers";
lin typographic_A = compoundA (mkA "typographic");
lin typographically_Adv = mkAdv "typographically";
lin typography_N = mkN "typography" ;
lin tyrannical_A = compoundA (mkA "tyrannical");
lin tyrannize_V = mkV "tyrannize" "tyrannizes" "tyrannized" "tyrannized" "tyrannizing";
lin tyrannize_V2 = mkV2 (mkV "tyrannize" "tyrannizes" "tyrannized" "tyrannized" "tyrannizing");
lin tyrannous_A = compoundA (mkA "tyrannous");
lin tyranny_N = mkN "tyranny" "tyrannies";
lin tyrant_N = mkN "tyrant" "tyrants";
lin tyre_N = mkN "tyre" "tyres";
lin tyro_N = mkN "tyro" "tyros";
lin tyrone_PN = mkPN "Tyrone";
lin tzar_N = mkN "tzar" "tzars";
lin tzarina_N = mkN "tzarina" "tzarinas";
lin tzupo_PN = mkPN "Tzupo";
lin u_boat_N = mkN "u - boat" "u - boats";
lin u_turn_N = mkN "u - turn" "u - turns";
lin ubiquitous_A = compoundA (mkA "ubiquitous");
lin ubiquity_N = mkN "ubiquity" ;
lin udder_N = mkN "udder" "udders";
lin uddingston_PN = mkPN "Uddingston";
lin udi_PN = mkPN "Udi";
lin udine_PN = mkPN "Udine";
lin ufa_PN = mkPN "Ufa";
lin ufo_N = mkN "UFO" "UFO's" ;
lin uganda_PN = mkPN "Uganda";
lin ugandan_A = compoundA (mkA "ugandan");
lin ugandan_N = mkN "ugandan" "ugandans";
lin uglify_V2 = mkV2 (mkV "uglify" "uglifies" "uglified" "uglified" "uglifying");
lin ugliness_N = mkN "ugliness" ;
lin ugly_A = mkA "ugly" "uglier";
lin uk_PN = mkPN "UK";
lin ukase_N = mkN "ukase" "ukases";
lin ukulele_N = mkN "ukulele" "ukuleles";
lin ulcer_N = mkN "ulcer" "ulcers";
lin ulcerate_V = mkV "ulcerate" "ulcerates" "ulcerated" "ulcerated" "ulcerating";
lin ulcerate_V2 = mkV2 (mkV "ulcerate" "ulcerates" "ulcerated" "ulcerated" "ulcerating");
lin ulceration_N = mkN "ulceration" "ulcerations";
lin ulcerous_A = compoundA (mkA "ulcerous");
lin ulna_N = mkN "ulna" "ulnae" {- FIXME: guessed plural form -};
lin ulster_N = mkN "ulster" "ulsters";
lin ulster_PN = mkPN "Ulster";
lin ulterior_A = compoundA (mkA "ulterior");
lin ultimate_A = compoundA (mkA "ultimate");
lin ultimatum_N = mkN "ultimatum" "ultimatums";
lin ultimo_A = compoundA (mkA "ultimo");
lin ultra_vires_A = compoundA (mkA "ultra vires");
lin ultra_vires_Adv = mkAdv "ultra vires";
lin ultramarine_A = compoundA (mkA "ultramarine");
lin ultramarine_N = mkN "ultramarine" "ultramarines";
lin ultramontane_A = compoundA (mkA "ultramontane");
lin ultrasonic_A = compoundA (mkA "ultrasonic");
lin ultraviolet_A = compoundA (mkA "ultraviolet");
lin ululate_V = mkV "ululate" "ululates" "ululated" "ululated" "ululating";
lin ululation_N = mkN "ululation" "ululations";
lin ulverston_PN = mkPN "Ulverston";
lin umber_A = compoundA (mkA "umber");
lin umber_N = mkN "umber" "umbers";
lin umbilical_A = compoundA (mkA "umbilical");
lin umbrage_N = mkN "umbrage" ;
lin umbrella_N = mkN "umbrella" "umbrellas";
lin umlaut_N = mkN "umlaut" "umlauts";
lin umpire_N = mkN "umpire" "umpires";
lin umpire_V = mkV "umpire" "umpires" "umpired" "umpired" "umpiring";
lin umpire_V2 = mkV2 (mkV "umpire" "umpires" "umpired" "umpired" "umpiring");
lin umpteen_A = compoundA (mkA "umpteen");
lin umpteenth_A = compoundA (mkA "umpteenth");
lin un_N = mkN "un" ;
lin un_come_at_able_A = compoundA (mkA "un - come - at - able");
lin un_get_at_able_A = compoundA (mkA "un - get - at - able");
lin unabashed_A = compoundA (mkA "unabashed");
lin unabated_A = compoundA (mkA "unabated");
lin unable_A = compoundA (mkA "unable");
lin unabridged_A = compoundA (mkA "unabridged");
lin unacceptable_A = compoundA (mkA "unacceptable");
lin unaccommodating_A = compoundA (mkA "unaccommodating");
lin unaccompanied_A = compoundA (mkA "unaccompanied");
lin unaccountable_A = compoundA (mkA "unaccountable");
lin unaccounted_A = compoundA (mkA "unaccounted");
lin unaccustomed_A = compoundA (mkA "unaccustomed");
lin unacknowledged_A = compoundA (mkA "unacknowledged");
lin unacquainted_A = compoundA (mkA "unacquainted");
lin unadorned_A = compoundA (mkA "unadorned");
lin unadulterated_A = compoundA (mkA "unadulterated");
lin unadventurous_A = compoundA (mkA "unadventurous");
lin unadvised_A = compoundA (mkA "unadvised");
lin unaffected_A = compoundA (mkA "unaffected");
lin unafraid_A = compoundA (mkA "unafraid");
lin unaided_A = compoundA (mkA "unaided");
lin unalienable_A = compoundA (mkA "unalienable");
lin unaligned_A = compoundA (mkA "unaligned");
lin unalloyed_A = compoundA (mkA "unalloyed");
lin unalterable_A = compoundA (mkA "unalterable");
lin unaltered_A = compoundA (mkA "unaltered");
lin unambiguous_A = compoundA (mkA "unambiguous");
lin unamended_A = compoundA (mkA "unamended");
lin unanimity_N = mkN "unanimity" ;
lin unanimous_A = compoundA (mkA "unanimous");
lin unannounced_A = compoundA (mkA "unannounced");
lin unanswerable_A = compoundA (mkA "unanswerable");
lin unanswered_A = compoundA (mkA "unanswered");
lin unanticipated_A = compoundA (mkA "unanticipated");
lin unappealing_A = compoundA (mkA "unappealing");
lin unappetizing_A = compoundA (mkA "unappetizing");
lin unappreciated_A = compoundA (mkA "unappreciated");
lin unappreciative_A = compoundA (mkA "unappreciative");
lin unapproachable_A = compoundA (mkA "unapproachable");
lin unarguable_A = compoundA (mkA "unarguable");
lin unarmed_A = compoundA (mkA "unarmed");
lin unarticulated_A = compoundA (mkA "unarticulated");
lin unashamed_A = compoundA (mkA "unashamed");
lin unasked_A = compoundA (mkA "unasked");
lin unassailable_A = compoundA (mkA "unassailable");
lin unassisted_A = compoundA (mkA "unassisted");
lin unassuming_A = compoundA (mkA "unassuming");
lin unattached_A = compoundA (mkA "unattached");
lin unattainable_A = compoundA (mkA "unattainable");
lin unattended_A = compoundA (mkA "unattended");
lin unattractive_A = compoundA (mkA "unattractive");
lin unauthorized_A = compoundA (mkA "unauthorized");
lin unavailable_A = compoundA (mkA "unavailable");
lin unavailing_A = compoundA (mkA "unavailing");
lin unavoidable_A = compoundA (mkA "unavoidable");
lin unawakened_A = compoundA (mkA "unawakened");
lin unaware_A = compoundA (mkA "unaware");
lin unawares_Adv = mkAdv "unawares";
lin unbacked_A = compoundA (mkA "unbacked");
lin unbalance_V2 = mkV2 (mkV "unbalance" "unbalances" "unbalanced" "unbalanced" "unbalancing");
lin unbalanced_A = compoundA (mkA "unbalanced");
lin unbar_V2 = mkV2 (mkV "unbar" "unbars" "unbarred" "unbarred" "unbarring");
lin unbearable_A = compoundA (mkA "unbearable");
lin unbeatable_A = compoundA (mkA "unbeatable");
lin unbeaten_A = compoundA (mkA "unbeaten");
lin unbecoming_A = compoundA (mkA "unbecoming");
lin unbeknown_A = compoundA (mkA "unbeknown");
lin unbeknown_Adv = mkAdv "unbeknown";
lin unbeknownst_A = compoundA (mkA "unbeknownst");
lin unbeknownst_Adv = mkAdv "unbeknownst";
lin unbelief_N = mkN "unbelief" ;
lin unbelievable_A = compoundA (mkA "unbelievable");
lin unbeliever_N = mkN "unbeliever" "unbelievers";
lin unbelieving_A = compoundA (mkA "unbelieving");
lin unbeloved_A = compoundA (mkA "unbeloved");
lin unbend_V = mkV "unbend" "unbends" "unbended" "unbended" "unbending";
lin unbend_V2 = mkV2 (mkV "unbend" "unbends" "unbended" "unbended" "unbending");
lin unbending_A = compoundA (mkA "unbending");
lin unbiased_A = compoundA (mkA "unbiased");
lin unbiassed_A = compoundA (mkA "unbiassed");
lin unbidden_A = compoundA (mkA "unbidden");
lin unbind_V2 = mkV2 (mkV "un" IrregEng.bind_V);
lin unblock_V2 = mkV2 (mkV "unblock" "unblocks" "unblocked" "unblocked" "unblocking");
lin unblushing_A = compoundA (mkA "unblushing");
lin unbolt_V = mkV "unbolt" "unbolts" "unbolted" "unbolted" "unbolting";
lin unbolt_V2 = mkV2 (mkV "unbolt" "unbolts" "unbolted" "unbolted" "unbolting");
lin unborn_A = compoundA (mkA "unborn");
lin unbosom_V2 = mkV2 (mkV "unbosom" "unbosoms" "unbosomed" "unbosomed" "unbosoming");
lin unbounded_A = compoundA (mkA "unbounded");
lin unbowed_A = compoundA (mkA "unbowed");
lin unbreakable_A = compoundA (mkA "unbreakable");
lin unbridled_A = compoundA (mkA "unbridled");
lin unbroken_A = compoundA (mkA "unbroken");
lin unbuckle_V2 = mkV2 (mkV "unbuckle" "unbuckles" "unbuckled" "unbuckled" "unbuckling");
lin unburden_V2 = mkV2 (mkV "unburden" "unburdens" "unburdened" "unburdened" "unburdening");
lin unburied_A = compoundA (mkA "unburied");
lin unbutton_V2 = mkV2 (mkV "unbutton" "unbuttons" "unbuttoned" "unbuttoned" "unbuttoning");
lin unbuttoned_A = compoundA (mkA "unbuttoned");
lin uncalled_for_A = compoundA (mkA "uncalled - for");
lin uncanny_A = compoundA (mkA "uncanny");
lin uncared_for_A = compoundA (mkA "uncared - for");
lin uncarpeted_A = compoundA (mkA "uncarpeted");
lin unceasing_A = compoundA (mkA "unceasing");
lin uncensored_A = compoundA (mkA "uncensored");
lin unceremonious_A = compoundA (mkA "unceremonious");
lin unceremoniousness_N = mkN "unceremoniousness" ;
lin uncertain_A = compoundA (mkA "uncertain");
lin uncertainty_N = mkN "uncertainty" "uncertainties";
lin unchain_V2 = mkV2 (mkV "unchain" "unchains" "unchained" "unchained" "unchaining");
lin unchallengeable_A = compoundA (mkA "unchallengeable");
lin unchallenged_A = compoundA (mkA "unchallenged");
lin unchanged_A = compoundA (mkA "unchanged");
lin unchanging_A = compoundA (mkA "unchanging");
lin uncharacteristic_A = compoundA (mkA "uncharacteristic");
lin uncharacteristically_Adv = mkAdv "uncharacteristically";
lin uncharitable_A = compoundA (mkA "uncharitable");
lin uncharted_A = compoundA (mkA "uncharted");
lin unchecked_A = compoundA (mkA "unchecked");
lin unchivalrously_Adv = mkAdv "unchivalrously";
lin unchristian_A = compoundA (mkA "unchristian");
lin uncivil_A = compoundA (mkA "uncivil");
lin uncivilized_A = compoundA (mkA "uncivilized");
lin unclaimed_A = compoundA (mkA "unclaimed");
lin unclassified_A = compoundA (mkA "unclassified");
lin uncle_N = mkN "uncle" "uncles";
lin unclean_A = compoundA (mkA "unclean");
lin unclear_A = compoundA (mkA "unclear");
lin unclouded_A = compoundA (mkA "unclouded");
lin uncluttered_A = compoundA (mkA "uncluttered");
lin unco_A = compoundA (mkA "unco");
lin unco_Adv = mkAdv "unco";
lin unco_operative_A = compoundA (mkA "unco - operative");
lin unco_ordinated_A = compoundA (mkA "unco - ordinated");
lin uncoloured_A = compoundA (mkA "uncoloured");
lin uncomfortable_A = compoundA (mkA "uncomfortable");
lin uncommercialized_A = compoundA (mkA "uncommercialized");
lin uncommitted_A = compoundA (mkA "uncommitted");
lin uncommon_A = compoundA (mkA "uncommon");
lin uncommunicative_A = compoundA (mkA "uncommunicative");
lin uncompetitive_A = compoundA (mkA "uncompetitive");
lin uncomplaining_A = compoundA (mkA "uncomplaining");
lin uncompleted_A = compoundA (mkA "uncompleted");
lin uncomplicated_A = compoundA (mkA "uncomplicated");
lin uncomplimentary_A = compoundA (mkA "uncomplimentary");
lin uncomprehending_A = compoundA (mkA "uncomprehending");
lin uncompromising_A = compoundA (mkA "uncompromising");
lin unconcealed_A = compoundA (mkA "unconcealed");
lin unconcern_N = mkN "unconcern" ;
lin unconcerned_A = compoundA (mkA "unconcerned");
lin unconditional_A = compoundA (mkA "unconditional");
lin unconditioned_A = compoundA (mkA "unconditioned");
lin unconfined_A = compoundA (mkA "unconfined");
lin unconfirmed_A = compoundA (mkA "unconfirmed");
lin unconformable_A = compoundA (mkA "unconformable");
lin uncongenial_A = compoundA (mkA "uncongenial");
lin unconnected_A = compoundA (mkA "unconnected");
lin unconquered_A = compoundA (mkA "unconquered");
lin unconscionable_A = compoundA (mkA "unconscionable");
lin unconscious_A = compoundA (mkA "unconscious");
lin unconscious_N = mkN "unconscious" "unconsciouses";
lin unconsciousness_N = mkN "unconsciousness" ;
lin unconsidered_A = compoundA (mkA "unconsidered");
lin unconstitutional_A = compoundA (mkA "unconstitutional");
lin unconstrained_A = compoundA (mkA "unconstrained");
lin unconstructive_A = compoundA (mkA "unconstructive");
lin unconsummated_A = compoundA (mkA "unconsummated");
lin uncontaminated_A = compoundA (mkA "uncontaminated");
lin uncontrollable_A = compoundA (mkA "uncontrollable");
lin uncontrolled_A = compoundA (mkA "uncontrolled");
lin uncontroversial_A = compoundA (mkA "uncontroversial");
lin unconventional_A = compoundA (mkA "unconventional");
lin unconventionality_N = mkN "unconventionality" ;
lin unconverted_A = compoundA (mkA "unconverted");
lin unconvinced_A = compoundA (mkA "unconvinced");
lin unconvincing_A = compoundA (mkA "unconvincing");
lin uncooked_A = compoundA (mkA "uncooked");
lin uncork_V2 = mkV2 (mkV "uncork" "uncorks" "uncorked" "uncorked" "uncorking");
lin uncorrected_A = compoundA (mkA "uncorrected");
lin uncorrelated_A = compoundA (mkA "uncorrelated");
lin uncorroborated_A = compoundA (mkA "uncorroborated");
lin uncouple_V2 = mkV2 (mkV "uncouple" "uncouples" "uncoupled" "uncoupled" "uncoupling");
lin uncouth_A = compoundA (mkA "uncouth");
lin uncouthness_N = mkN "uncouthness" ;
lin uncover_V2 = mkV2 (mkV "uncover" "uncovers" "uncovered" "uncovered" "uncovering");
lin uncritical_A = compoundA (mkA "uncritical");
lin uncross_V2 = mkV2 (mkV "uncross" "uncrosses" "uncrossed" "uncrossed" "uncrossing");
lin uncrossed_A = compoundA (mkA "uncrossed");
lin uncrowned_A = compoundA (mkA "uncrowned");
lin unction_N = mkN "unction" ;
lin unctuous_A = compoundA (mkA "unctuous");
lin uncultivated_A = compoundA (mkA "uncultivated");
lin uncultured_A = compoundA (mkA "uncultured");
lin uncurl_V = mkV "uncurl" "uncurls" "uncurled" "uncurled" "uncurling";
lin uncurl_V2 = mkV2 (mkV "uncurl" "uncurls" "uncurled" "uncurled" "uncurling");
lin uncut_A = compoundA (mkA "uncut");
lin undamaged_A = compoundA (mkA "undamaged");
lin undated_A = compoundA (mkA "undated");
lin undaunted_A = compoundA (mkA "undaunted");
lin undeceive_V2 = mkV2 (mkV "undeceive" "undeceives" "undeceived" "undeceived" "undeceiving");
lin undecided_A = compoundA (mkA "undecided");
lin undeclared_A = compoundA (mkA "undeclared");
lin undefeated_A = compoundA (mkA "undefeated");
lin undefended_A = compoundA (mkA "undefended");
lin undeferential_A = compoundA (mkA "undeferential");
lin undefinable_A = compoundA (mkA "undefinable");
lin undefined_A = compoundA (mkA "undefined");
lin undemanding_A = compoundA (mkA "undemanding");
lin undemocratic_A = compoundA (mkA "undemocratic");
lin undemocratically_Adv = mkAdv "undemocratically";
lin undemonstrative_A = compoundA (mkA "undemonstrative");
lin undeniable_A = compoundA (mkA "undeniable");
lin undenominational_A = compoundA (mkA "undenominational");
lin under_Adv = mkAdv "under";
lin under_Prep = mkPrep "under";
lin under_the_counter_A = compoundA (mkA "under - the - counter");
lin underact_V = mkV "underact" "underacts" "underacted" "underacted" "underacting";
lin underact_V2 = mkV2 (mkV "underact" "underacts" "underacted" "underacted" "underacting");
lin underarm_A = compoundA (mkA "underarm");
lin underarm_Adv = mkAdv "underarm";
lin underbelly_N = mkN "underbelly" "underbellies";
lin underbid_V2 = mkV2 (mkV "under" IrregEng.bid_V);
lin underbred_A = compoundA (mkA "underbred");
lin underbrush_N = mkN "underbrush" ;
lin undercarriage_N = mkN "undercarriage" "undercarriages";
lin undercharge_N = mkN "undercharge" "undercharges";
lin undercharge_V2 = mkV2 (mkV "undercharge" "undercharges" "undercharged" "undercharged" "undercharging");
lin underclothing_N = mkN "underclothing" ;
lin undercoat_N = mkN "undercoat" "undercoats";
lin undercover_A = compoundA (mkA "undercover");
lin undercurrent_N = mkN "undercurrent" "undercurrents";
lin undercut_N = mkN "undercut" ;
lin undercut_V2 = mkV2 (mkV "under" IrregEng.cut_V);
lin underdeveloped_A = compoundA (mkA "underdeveloped");
lin underdevelopment_N = mkN "underdevelopment" ;
lin underdog_N = mkN "underdog" "underdogs";
lin underdone_A = compoundA (mkA "underdone");
lin underemployed_A = compoundA (mkA "underemployed");
lin underestimate_N = mkN "underestimate" "underestimates";
lin underestimate_V2 = mkV2 (mkV "underestimate" "underestimates" "underestimated" "underestimated" "underestimating");
lin underestimation_N = mkN "underestimation" "underestimations";
lin underexpose_V2 = mkV2 (mkV "underexpose" "underexposes" "underexposed" "underexposed" "underexposing");
lin underexposure_N = mkN "underexposure" "underexposures";
lin underfed_A = compoundA (mkA "underfed");
lin underfelt_N = mkN "underfelt" ;
lin underfloor_A = compoundA (mkA "underfloor");
lin underfoot_Adv = mkAdv "underfoot";
lin underfund_V2 = mkV2 (mkV "underfund");
lin undergarment_N = mkN "undergarment" "undergarments";
lin undergo_V2 = mkV2 (mkV "under" IrregEng.go_V);
lin undergraduate_N = mkN "undergraduate" "undergraduates";
lin underground_A = compoundA (mkA "underground");
lin underground_Adv = mkAdv "underground";
lin underground_N = mkN "underground" "undergrounds";
lin undergrowth_N = mkN "undergrowth" ;
lin underhand_A = compoundA (mkA "underhand");
lin underhand_Adv = mkAdv "underhand";
lin underhanded_A = compoundA (mkA "underhanded");
lin underhung_A = compoundA (mkA "underhung");
lin underlay_N = mkN "underlay" ;
lin underlie_V2 = mkV2 (mkV "under" IrregEng.lie_V);
lin underline_N = mkN "underline" "underlines";
lin underline_V2 = mkV2 (mkV "underline" "underlines" "underlined" "underlined" "underlining");
lin underling_N = mkN "underling" "underlings";
lin undermanned_A = compoundA (mkA "undermanned");
lin undermentioned_A = compoundA (mkA "undermentioned");
lin undermine_V2 = mkV2 (mkV "undermine" "undermines" "undermined" "undermined" "undermining");
lin underneath_Adv = mkAdv "underneath";
lin underneath_Prep = mkPrep "underneath";
lin undernourished_A = compoundA (mkA "undernourished");
lin undernourishment_N = mkN "undernourishment" ;
lin underpass_N = mkN "underpass" "underpasses";
lin underpay_V2 = mkV2 (mkV "under" IrregEng.pay_V);
lin underpayment_N = mkN "underpayment" "underpayments";
lin underperform_V2 = mkV2 (mkV "underperform");
lin underpin_V2 = mkV2 (mkV "underpin" "underpins" "underpinned" "underpinned" "underpinning");
lin underpopulated_A = compoundA (mkA "underpopulated");
lin underprivileged_A = compoundA (mkA "underprivileged");
lin underproduction_N = mkN "underproduction" ;
lin underquote_V2 = mkV2 (mkV "underquote" "underquotes" "underquoted" "underquoted" "underquoting");
lin underrate_V2 = mkV2 (mkV "underrate" "underrates" "underrated" "underrated" "underrating");
lin underscore_V2 = mkV2 (mkV "underscore" "underscores" "underscored" "underscored" "underscoring");
lin undersea_A = compoundA (mkA "undersea");
lin underseal_N = mkN "underseal" ;
lin undersealed_A = compoundA (mkA "undersealed");
lin undersecretary_N = mkN "undersecretary" "undersecretaries";
lin undersell_V2 = mkV2 (mkV "under" IrregEng.sell_V);
lin undersexed_A = compoundA (mkA "undersexed");
lin undershoot_V2 = mkV2 (mkV "under" IrregEng.shoot_V);
lin underside_N = mkN "underside" "undersides";
lin undersign_V2 = mkV2 (mkV "undersign" "undersigns" "undersigned" "undersigned" "undersigning");
lin undersized_A = compoundA (mkA "undersized");
lin underskirt_N = mkN "underskirt" "underskirts";
lin underslung_A = compoundA (mkA "underslung");
lin underspend_V = mkV "under" IrregEng.spend_V;
lin underspend_V2 = mkV2 (mkV "under" IrregEng.spend_V);
lin underspent_A = compoundA (mkA "underspent");
lin understaffed_A = compoundA (mkA "understaffed");
lin understand_V = IrregEng.understand_V;
lin understand_V2 = mkV2 (IrregEng.understand_V);
lin understand_V2V = mkV2V (IrregEng.understand_V) noPrep to_Prep ;
lin understand_VS = mkVS (IrregEng.understand_V);
lin understandable_A = compoundA (mkA "understandable");
lin understanding_A = compoundA (mkA "understanding");
lin understanding_N = mkN "understanding" "understandings";
lin understate_V2 = mkV2 (mkV "understate" "understates" "understated" "understated" "understating");
lin understatement_N = mkN "understatement" "understatements";
lin understock_V2 = mkV2 (mkV "understock" "understocks" "understocked" "understocked" "understocking");
lin understudy_N = mkN "understudy" "understudies";
lin understudy_V2 = mkV2 (mkV "understudy" "understudies" "understudied" "understudied" "understudying");
lin undersurface_N = mkN "undersurface" "undersurfaces";
lin undertake_V2 = mkV2 (mkV "under" IrregEng.take_V);
lin undertaker_N = mkN "undertaker" "undertakers";
lin undertaking_N = mkN "undertaking" "undertakings";
lin undertone_N = mkN "undertone" "undertones";
lin undertow_N = mkN "undertow" "undertows";
lin undervaluation_N = mkN "undervaluation" "undervaluations";
lin undervalue_V2 = mkV2 (mkV "undervalue" "undervalues" "undervalued" "undervalued" "undervaluing");
lin underwater_A = compoundA (mkA "underwater");
lin underwear_N = mkN "underwear" ;
lin underweight_A = compoundA (mkA "underweight");
lin underwhelm_V2 = mkV2 (mkV "underwhelm");
lin underworld_N = mkN "underworld" "underworlds";
lin underwrite_V = mkV "underwrite";
lin underwrite_V2 = mkV2 (mkV "under" IrregEng.write_V);
lin underwriter_N = mkN "underwriter" "underwriters";
lin undeserved_A = compoundA (mkA "undeserved");
lin undeserving_A = compoundA (mkA "undeserving");
lin undesigned_A = compoundA (mkA "undesigned");
lin undesirable_A = compoundA (mkA "undesirable");
lin undesirable_N = mkN "undesirable" "undesirables";
lin undetected_A = compoundA (mkA "undetected");
lin undetermined_A = compoundA (mkA "undetermined");
lin undeterred_A = compoundA (mkA "undeterred");
lin undeveloped_A = compoundA (mkA "undeveloped");
lin undiagnosed_A = compoundA (mkA "undiagnosed");
lin undifferentiated_A = compoundA (mkA "undifferentiated");
lin undigested_A = compoundA (mkA "undigested");
lin undignified_A = compoundA (mkA "undignified");
lin undiluted_A = compoundA (mkA "undiluted");
lin undiminished_A = compoundA (mkA "undiminished");
lin undimmed_A = compoundA (mkA "undimmed");
lin undiplomatic_A = compoundA (mkA "undiplomatic");
lin undiplomatically_Adv = mkAdv "undiplomatically";
lin undischarged_A = compoundA (mkA "undischarged");
lin undisciplined_A = compoundA (mkA "undisciplined");
lin undisclosed_A = compoundA (mkA "undisclosed");
lin undiscovered_A = compoundA (mkA "undiscovered");
lin undiscriminating_A = compoundA (mkA "undiscriminating");
lin undisguised_A = compoundA (mkA "undisguised");
lin undismayed_A = compoundA (mkA "undismayed");
lin undisputed_A = compoundA (mkA "undisputed");
lin undissolved_A = compoundA (mkA "undissolved");
lin undistinguishable_A = compoundA (mkA "undistinguishable");
lin undistinguished_A = compoundA (mkA "undistinguished");
lin undistributed_A = compoundA (mkA "undistributed");
lin undisturbed_A = compoundA (mkA "undisturbed");
lin undivided_A = compoundA (mkA "undivided");
lin undo_V2 = mkV2 (mkV "un" IrregEng.do_V);
lin undock_V = mkV "undock" "undocks" "undocked" "undocked" "undocking";
lin undock_V2 = mkV2 (mkV "undock" "undocks" "undocked" "undocked" "undocking");
lin undocumented_A = compoundA (mkA "undocumented");
lin undogmatic_A = compoundA (mkA "undogmatic");
lin undoing_N = mkN "undoing" "undoings";
lin undomesticated_A = compoundA (mkA "undomesticated");
lin undone_A = compoundA (mkA "undone");
lin undoubted_A = compoundA (mkA "undoubted");
lin undramatic_A = compoundA (mkA "undramatic");
lin undramatically_Adv = mkAdv "undramatically";
lin undreamed_A = compoundA (mkA "undreamed");
lin undreamed_of_A = compoundA (mkA "undreamed - of");
lin undreamt_A = compoundA (mkA "undreamt");
lin undress_N = mkN "undress" ;
lin undress_V = mkV "undress" "undresses" "undressed" "undressed" "undressing";
lin undress_V2 = mkV2 (mkV "undress" "undresses" "undressed" "undressed" "undressing");
lin undrinkable_A = compoundA (mkA "undrinkable");
lin undue_A = compoundA (mkA "undue");
lin undulate_V = mkV "undulate" "undulates" "undulated" "undulated" "undulating";
lin undulation_N = mkN "undulation" "undulations";
lin unduly_Adv = mkAdv "unduly";
lin undying_A = compoundA (mkA "undying");
lin unearned_A = compoundA (mkA "unearned");
lin unearth_V2 = mkV2 (mkV "unearth" "unearths" "unearthed" "unearthed" "unearthing");
lin unearthly_A = compoundA (mkA "unearthly");
lin unease_N = mkN "unease" ;
lin uneasiness_N = mkN "uneasiness" ;
lin uneasy_A = compoundA (mkA "uneasy");
lin uneatable_A = compoundA (mkA "uneatable");
lin uneaten_A = compoundA (mkA "uneaten");
lin uneconomic_A = compoundA (mkA "uneconomic");
lin uneconomical_A = compoundA (mkA "uneconomical");
lin unedifying_A = compoundA (mkA "unedifying");
lin unedited_A = compoundA (mkA "unedited");
lin uneducated_A = compoundA (mkA "uneducated");
lin uneffective_A = compoundA (mkA "uneffective");
lin unelaborated_A = compoundA (mkA "unelaborated");
lin unemotional_A = compoundA (mkA "unemotional");
lin unemployable_A = compoundA (mkA "unemployable");
lin unemployed_A = compoundA (mkA "unemployed");
lin unemployment_N = mkN "unemployment" ;
lin unending_A = compoundA (mkA "unending");
lin unendurable_A = compoundA (mkA "unendurable");
lin unenlightened_A = compoundA (mkA "unenlightened");
lin unenterprising_A = compoundA (mkA "unenterprising");
lin unenthusiastic_A = compoundA (mkA "unenthusiastic");
lin unenthusiastically_Adv = mkAdv "unenthusiastically";
lin unenviable_A = compoundA (mkA "unenviable");
lin unequal_A = compoundA (mkA "unequal");
lin unequalled_A = compoundA (mkA "unequalled");
lin unequipped_A = compoundA (mkA "unequipped");
lin unequivocal_A = compoundA (mkA "unequivocal");
lin unerring_A = compoundA (mkA "unerring");
lin unesco_PN = mkPN "Unesco";
lin unethical_A = compoundA (mkA "unethical");
lin uneven_A = compoundA (mkA "uneven");
lin uneventful_A = compoundA (mkA "uneventful");
lin unexampled_A = compoundA (mkA "unexampled");
lin unexceeded_A = compoundA (mkA "unexceeded");
lin unexceptionable_A = compoundA (mkA "unexceptionable");
lin unexceptional_A = compoundA (mkA "unexceptional");
lin unexciting_A = compoundA (mkA "unexciting");
lin unexpected_A = compoundA (mkA "unexpected");
lin unexpectedness_N = mkN "unexpectedness" ;
lin unexpired_A = compoundA (mkA "unexpired");
lin unexplained_A = compoundA (mkA "unexplained");
lin unexplored_A = compoundA (mkA "unexplored");
lin unexposed_A = compoundA (mkA "unexposed");
lin unexpressed_A = compoundA (mkA "unexpressed");
lin unexpurgated_A = compoundA (mkA "unexpurgated");
lin unfailing_A = compoundA (mkA "unfailing");
lin unfair_A = compoundA (mkA "unfair");
lin unfairness_N = mkN "unfairness" ;
lin unfaithful_A = compoundA (mkA "unfaithful");
lin unfaithfulness_N = mkN "unfaithfulness" ;
lin unfaltering_A = compoundA (mkA "unfaltering");
lin unfamiliar_A = compoundA (mkA "unfamiliar");
lin unfamiliarity_N = mkN "unfamiliarity" ;
lin unfashionable_A = compoundA (mkA "unfashionable");
lin unfasten_V = mkV "unfasten" "unfastens" "unfastened" "unfastened" "unfastening";
lin unfasten_V2 = mkV2 (mkV "unfasten" "unfastens" "unfastened" "unfastened" "unfastening");
lin unfathomable_A = compoundA (mkA "unfathomable");
lin unfathomed_A = compoundA (mkA "unfathomed");
lin unfavourable_A = compoundA (mkA "unfavourable");
lin unfaze_V2 = mkV2 (mkV "unfaze");
lin unfed_A = compoundA (mkA "unfed");
lin unfeeling_A = compoundA (mkA "unfeeling");
lin unfeigned_A = compoundA (mkA "unfeigned");
lin unfermented_A = compoundA (mkA "unfermented");
lin unfertilized_A = compoundA (mkA "unfertilized");
lin unfettered_A = compoundA (mkA "unfettered");
lin unfinished_A = compoundA (mkA "unfinished");
lin unfit_A = compoundA (mkA "unfit");
lin unfit_V2 = mkV2 (mkV "unfit" "unfits" "unfitted" "unfitted" "unfitting");
lin unflagging_A = compoundA (mkA "unflagging");
lin unflappable_A = compoundA (mkA "unflappable");
lin unfledged_A = compoundA (mkA "unfledged");
lin unflinching_A = compoundA (mkA "unflinching");
lin unflurried_A = compoundA (mkA "unflurried");
lin unfold_V = mkV "unfold" "unfolds" "unfolded" "unfolded" "unfolding";
lin unfold_V2 = mkV2 (mkV "unfold" "unfolds" "unfolded" "unfolded" "unfolding");
lin unforeseeable_A = compoundA (mkA "unforeseeable");
lin unforeseen_A = compoundA (mkA "unforeseen");
lin unforgettable_A = compoundA (mkA "unforgettable");
lin unforgivable_A = compoundA (mkA "unforgivable");
lin unforgiving_A = compoundA (mkA "unforgiving");
lin unformed_A = compoundA (mkA "unformed");
lin unforthcoming_A = compoundA (mkA "unforthcoming");
lin unfortunate_A = compoundA (mkA "unfortunate");
lin unfortunate_N = mkN "unfortunate" "unfortunates";
lin unfounded_A = compoundA (mkA "unfounded");
lin unframed_A = compoundA (mkA "unframed");
lin unfrequented_A = compoundA (mkA "unfrequented");
lin unfriendliness_N = mkN "unfriendliness" ;
lin unfriendly_A = compoundA (mkA "unfriendly");
lin unfrock_V2 = mkV2 (mkV "unfrock" "unfrocks" "unfrocked" "unfrocked" "unfrocking");
lin unfruitful_A = compoundA (mkA "unfruitful");
lin unfulfilled_A = compoundA (mkA "unfulfilled");
lin unfurl_V = mkV "unfurl" "unfurls" "unfurled" "unfurled" "unfurling";
lin unfurl_V2 = mkV2 (mkV "unfurl" "unfurls" "unfurled" "unfurled" "unfurling");
lin unfurnished_A = compoundA (mkA "unfurnished");
lin ungainly_A = compoundA (mkA "ungainly");
lin ungenerous_A = compoundA (mkA "ungenerous");
lin ungentle_A = compoundA (mkA "ungentle");
lin ungentlemanly_A = compoundA (mkA "ungentlemanly");
lin unglazed_A = compoundA (mkA "unglazed");
lin ungodly_A = compoundA (mkA "ungodly");
lin ungovernable_A = compoundA (mkA "ungovernable");
lin ungraceful_A = compoundA (mkA "ungraceful");
lin ungracious_A = compoundA (mkA "ungracious");
lin ungrammatical_A = compoundA (mkA "ungrammatical");
lin ungrateful_A = compoundA (mkA "ungrateful");
lin ungratefulness_N = mkN "ungratefulness" ;
lin ungrudging_A = compoundA (mkA "ungrudging");
lin unguarded_A = compoundA (mkA "unguarded");
lin unguent_N = mkN "unguent" "unguents";
lin unhallowed_A = compoundA (mkA "unhallowed");
lin unhampered_A = compoundA (mkA "unhampered");
lin unhand_V2 = mkV2 (mkV "unhand" "unhands" "unhanded" "unhanded" "unhanding");
lin unhappily_Adv = mkAdv "unhappily";
lin unhappiness_N = mkN "unhappiness" ;
lin unhappy_A = mkA "unhappy" "unhappier";
lin unharmed_A = compoundA (mkA "unharmed");
lin unhealed_A = compoundA (mkA "unhealed");
lin unhealthy_A = compoundA (mkA "unhealthy");
lin unheard_A = compoundA (mkA "unheard");
lin unheard_of_A = compoundA (mkA "unheard - of");
lin unhearing_A = compoundA (mkA "unhearing");
lin unheated_A = compoundA (mkA "unheated");
lin unheeded_A = compoundA (mkA "unheeded");
lin unhelpful_A = compoundA (mkA "unhelpful");
lin unheralded_A = compoundA (mkA "unheralded");
lin unhesitating_A = compoundA (mkA "unhesitating");
lin unhindered_A = compoundA (mkA "unhindered");
lin unhinge_V2 = mkV2 (mkV "unhinge" "unhinges" "unhinged" "unhinged" "unhinging");
lin unhitch_V = mkV "unhitch" "unhitches" "unhitched" "unhitched" "unhitching";
lin unhitch_V2 = mkV2 (mkV "unhitch" "unhitches" "unhitched" "unhitched" "unhitching");
lin unholy_A = compoundA (mkA "unholy");
lin unhook_V2 = mkV2 (mkV "unhook" "unhooks" "unhooked" "unhooked" "unhooking");
lin unhoped_for_A = compoundA (mkA "unhoped - for");
lin unhorse_V2 = mkV2 (mkV "unhorse" "unhorses" "unhorsed" "unhorsed" "unhorsing");
lin unhurried_A = compoundA (mkA "unhurried");
lin unhurt_A = compoundA (mkA "unhurt");
lin unhygienic_A = compoundA (mkA "unhygienic");
lin unhygienically_Adv = mkAdv "unhygienically";
lin unicef_PN = mkPN "Unicef";
lin unicorn_N = mkN "unicorn" "unicorns";
lin unidentifiable_A = compoundA (mkA "unidentifiable");
lin unidentified_A = compoundA (mkA "unidentified");
lin unification_N = mkN "unification" ;
lin uniform_A = compoundA (mkA "uniform");
lin uniform_N = mkN "uniform" "uniforms";
lin uniformed_A = compoundA (mkA "uniformed");
lin uniformity_N = mkN "uniformity" ;
lin unify_V2 = mkV2 (mkV "unify" "unifies" "unified" "unified" "unifying");
lin unilateral_A = compoundA (mkA "unilateral");
lin unilateralism_N = mkN "unilateralism" ;
lin unilateralist_A = compoundA (mkA "unilateralist");
lin unilateralist_N = mkN "unilateralist" "unilateralists";
lin unimaginable_A = compoundA (mkA "unimaginable");
lin unimaginative_A = compoundA (mkA "unimaginative");
lin unimpaired_A = compoundA (mkA "unimpaired");
lin unimpeachable_A = compoundA (mkA "unimpeachable");
lin unimpeded_A = compoundA (mkA "unimpeded");
lin unimportant_A = compoundA (mkA "unimportant");
lin unimpressed_A = compoundA (mkA "unimpressed");
lin unimpressive_A = compoundA (mkA "unimpressive");
lin uninfluenced_A = compoundA (mkA "uninfluenced");
lin uninformative_A = compoundA (mkA "uninformative");
lin uninformed_A = compoundA (mkA "uninformed");
lin uninhabitable_A = compoundA (mkA "uninhabitable");
lin uninhabited_A = compoundA (mkA "uninhabited");
lin uninhibited_A = compoundA (mkA "uninhibited");
lin uninitiated_A = compoundA (mkA "uninitiated");
lin uninjured_A = compoundA (mkA "uninjured");
lin uninspired_A = compoundA (mkA "uninspired");
lin uninspiring_A = compoundA (mkA "uninspiring");
lin uninsured_A = compoundA (mkA "uninsured");
lin unintelligent_A = compoundA (mkA "unintelligent");
lin unintelligible_A = compoundA (mkA "unintelligible");
lin unintended_A = compoundA (mkA "unintended");
lin unintentional_A = compoundA (mkA "unintentional");
lin uninterested_A = compoundA (mkA "uninterested");
lin uninteresting_A = compoundA (mkA "uninteresting");
lin uninterrupted_A = compoundA (mkA "uninterrupted");
lin uninvited_A = compoundA (mkA "uninvited");
lin uninviting_A = compoundA (mkA "uninviting");
lin union_N = mkN "union" "unions";
lin unionist_N = mkN "unionist" "unionists";
lin unique_A = compoundA (mkA "unique");
lin uniqueness_N = mkN "uniqueness" ;
lin unisex_A = compoundA (mkA "unisex");
lin unison_N = mkN "unison" ;
lin unit_N = mkN "unit" "units";
lin unit_V2V = mkV2V (mkV "unit") noPrep to_Prep ;
lin unitarian_A = compoundA (mkA "unitarian");
lin unitarian_N = mkN "unitarian" "unitarians";
lin unitarianism_N = mkN "unitarianism" ;
lin unitary_A = compoundA (mkA "unitary");
lin unite_V = mkV "unite" "unites" "united" "united" "uniting";
lin unite_V2 = mkV2 (mkV "unite" "unites" "united" "united" "uniting");
lin united_A = compoundA (mkA "united");
lin unity_N = mkN "unity" "unities";
lin univ_PN = mkPN "Univ";
lin universal_A = compoundA (mkA "universal");
lin universality_N = mkN "universality" ;
lin universe_N = mkN "universe" "universes";
lin university_N = mkN "university" "universities";
lin unjust_A = compoundA (mkA "unjust");
lin unjustifiable_A = compoundA (mkA "unjustifiable");
lin unjustified_A = compoundA (mkA "unjustified");
lin unkempt_A = compoundA (mkA "unkempt");
lin unkind_A = compoundA (mkA "unkind");
lin unkissed_A = compoundA (mkA "unkissed");
lin unknowable_A = compoundA (mkA "unknowable");
lin unknowing_A = compoundA (mkA "unknowing");
lin unknown_A = compoundA (mkA "unknown");
lin unknown_N = mkN "unknown" "unknowns";
lin unlabelled_A = compoundA (mkA "unlabelled");
lin unladylike_A = compoundA (mkA "unladylike");
lin unlamented_A = compoundA (mkA "unlamented");
lin unlatched_A = compoundA (mkA "unlatched");
lin unlawful_A = compoundA (mkA "unlawful");
lin unlearn_V2 = mkV2 (mkV "unlearn" "unlearns" "unlearned" "unlearned" "unlearning");
lin unleash_V2 = mkV2 (mkV "unleash" "unleashes" "unleashed" "unleashed" "unleashing");
lin unleavened_A = compoundA (mkA "unleavened");
lin unless_Prep = mkPrep "unless";
lin unlettered_A = compoundA (mkA "unlettered");
lin unlicensed_A = compoundA (mkA "unlicensed");
lin unlighted_A = compoundA (mkA "unlighted");
lin unlikable_A = compoundA (mkA "unlikable");
lin unlike_A = compoundA (mkA "unlike");
lin unlike_Prep = mkPrep "unlike";
lin unlikely_A = compoundA (mkA "unlikely");
lin unlimited_A = compoundA (mkA "unlimited");
lin unlined_A = compoundA (mkA "unlined");
lin unlisted_A = compoundA (mkA "unlisted");
lin unlit_A = compoundA (mkA "unlit");
lin unliterary_A = compoundA (mkA "unliterary");
lin unload_V = mkV "unload" "unloads" "unloaded" "unloaded" "unloading";
lin unload_V2 = mkV2 (mkV "unload" "unloads" "unloaded" "unloaded" "unloading");
lin unlocated_A = compoundA (mkA "unlocated");
lin unlock_V = mkV "unlock" "unlocks" "unlocked" "unlocked" "unlocking";
lin unlock_V2 = mkV2 (mkV "unlock" "unlocks" "unlocked" "unlocked" "unlocking");
lin unlooked_for_A = compoundA (mkA "unlooked - for");
lin unloose_V2 = mkV2 (mkV "unloose" "unlooses" "unloosed" "unloosed" "unloosing");
lin unlovable_A = compoundA (mkA "unlovable");
lin unloved_A = compoundA (mkA "unloved");
lin unlovely_A = compoundA (mkA "unlovely");
lin unlucky_A = compoundA (mkA "unlucky");
lin unmade_A = compoundA (mkA "unmade");
lin unman_V2 = mkV2 (mkV "unman" "unmans" "unmanned" "unmanned" "unmanning");
lin unmanageable_A = compoundA (mkA "unmanageable");
lin unmanly_A = compoundA (mkA "unmanly");
lin unmanned_A = compoundA (mkA "unmanned");
lin unmannered_A = compoundA (mkA "unmannered");
lin unmannerly_A = compoundA (mkA "unmannerly");
lin unmarked_A = compoundA (mkA "unmarked");
lin unmarried_A = compoundA (mkA "unmarried");
lin unmask_V = mkV "unmask" "unmasks" "unmasked" "unmasked" "unmasking";
lin unmask_V2 = mkV2 (mkV "unmask" "unmasks" "unmasked" "unmasked" "unmasking");
lin unmatchable_A = compoundA (mkA "unmatchable");
lin unmatched_A = compoundA (mkA "unmatched");
lin unmechanized_A = compoundA (mkA "unmechanized");
lin unmemorable_A = compoundA (mkA "unmemorable");
lin unmentionable_A = compoundA (mkA "unmentionable");
lin unmerciful_A = compoundA (mkA "unmerciful");
lin unmerited_A = compoundA (mkA "unmerited");
lin unmindful_A = compoundA (mkA "unmindful");
lin unmingled_A = compoundA (mkA "unmingled");
lin unmistakable_A = compoundA (mkA "unmistakable");
lin unmitigated_A = compoundA (mkA "unmitigated");
lin unmixed_A = compoundA (mkA "unmixed");
lin unmodernized_A = compoundA (mkA "unmodernized");
lin unmodified_A = compoundA (mkA "unmodified");
lin unmolested_A = compoundA (mkA "unmolested");
lin unmourned_A = compoundA (mkA "unmourned");
lin unmovable_A = compoundA (mkA "unmovable");
lin unmoved_A = compoundA (mkA "unmoved");
lin unmoving_A = compoundA (mkA "unmoving");
lin unmusical_A = compoundA (mkA "unmusical");
lin unnamed_A = compoundA (mkA "unnamed");
lin unnatural_A = compoundA (mkA "unnatural");
lin unnecessary_A = compoundA (mkA "unnecessary");
lin unnerve_V2 = mkV2 (mkV "unnerve" "unnerves" "unnerved" "unnerved" "unnerving");
lin unnoticeable_A = compoundA (mkA "unnoticeable");
lin unnoticed_A = compoundA (mkA "unnoticed");
lin unnumbered_A = compoundA (mkA "unnumbered");
lin unobjectionable_A = compoundA (mkA "unobjectionable");
lin unobservant_A = compoundA (mkA "unobservant");
lin unobserved_A = compoundA (mkA "unobserved");
lin unobtainable_A = compoundA (mkA "unobtainable");
lin unobtrusive_A = compoundA (mkA "unobtrusive");
lin unobvious_A = compoundA (mkA "unobvious");
lin unoccupied_A = compoundA (mkA "unoccupied");
lin unofficial_A = compoundA (mkA "unofficial");
lin unopen_A = compoundA (mkA "unopen");
lin unopened_A = compoundA (mkA "unopened");
lin unopposed_A = compoundA (mkA "unopposed");
lin unoriginal_A = compoundA (mkA "unoriginal");
lin unorthodox_A = compoundA (mkA "unorthodox");
lin unpack_V = mkV "unpack" "unpacks" "unpacked" "unpacked" "unpacking";
lin unpack_V2 = mkV2 (mkV "unpack" "unpacks" "unpacked" "unpacked" "unpacking");
lin unpaid_A = compoundA (mkA "unpaid");
lin unpainted_A = compoundA (mkA "unpainted");
lin unpalatable_A = compoundA (mkA "unpalatable");
lin unparalleled_A = compoundA (mkA "unparalleled");
lin unpardonable_A = compoundA (mkA "unpardonable");
lin unparliamentary_A = compoundA (mkA "unparliamentary");
lin unpatriotic_A = compoundA (mkA "unpatriotic");
lin unpatriotically_Adv = mkAdv "unpatriotically";
lin unpaved_A = compoundA (mkA "unpaved");
lin unpersuaded_A = compoundA (mkA "unpersuaded");
lin unperturbed_A = compoundA (mkA "unperturbed");
lin unpick_V = mkV "unpick" "unpicks" "unpicked" "unpicked" "unpicking";
lin unpick_V2 = mkV2 (mkV "unpick" "unpicks" "unpicked" "unpicked" "unpicking");
lin unplaced_A = compoundA (mkA "unplaced");
lin unplanned_A = compoundA (mkA "unplanned");
lin unplayable_A = compoundA (mkA "unplayable");
lin unpleasant_A = compoundA (mkA "unpleasant");
lin unpleasantness_N = mkN "unpleasantness" "unpleasantnesses";
lin unplug_V = mkV "unplug" "unplugs" "unplugged" "unplugged" "unplugging";
lin unplug_V2 = mkV2 (mkV "unplug" "unplugs" "unplugged" "unplugged" "unplugging");
lin unplumbed_A = compoundA (mkA "unplumbed");
lin unpolluted_A = compoundA (mkA "unpolluted");
lin unpompous_A = compoundA (mkA "unpompous");
lin unpopular_A = compoundA (mkA "unpopular");
lin unpopularity_N = mkN "unpopularity" ;
lin unpractised_A = compoundA (mkA "unpractised");
lin unprecedented_A = compoundA (mkA "unprecedented");
lin unpredictability_N = mkN "unpredictability" ;
lin unpredictable_A = compoundA (mkA "unpredictable");
lin unpredicted_A = compoundA (mkA "unpredicted");
lin unprejudiced_A = compoundA (mkA "unprejudiced");
lin unpremeditated_A = compoundA (mkA "unpremeditated");
lin unprepared_A = compoundA (mkA "unprepared");
lin unprepossessing_A = compoundA (mkA "unprepossessing");
lin unpretentious_A = compoundA (mkA "unpretentious");
lin unprincipled_A = compoundA (mkA "unprincipled");
lin unprintable_A = compoundA (mkA "unprintable");
lin unproductive_A = compoundA (mkA "unproductive");
lin unprofessional_A = compoundA (mkA "unprofessional");
lin unprofitable_A = compoundA (mkA "unprofitable");
lin unpromising_A = compoundA (mkA "unpromising");
lin unprompted_A = compoundA (mkA "unprompted");
lin unpronounceable_A = compoundA (mkA "unpronounceable");
lin unpropitious_A = compoundA (mkA "unpropitious");
lin unprotected_A = compoundA (mkA "unprotected");
lin unproved_A = compoundA (mkA "unproved");
lin unproven_A = compoundA (mkA "unproven");
lin unprovided_A = compoundA (mkA "unprovided");
lin unprovoked_A = compoundA (mkA "unprovoked");
lin unpublished_A = compoundA (mkA "unpublished");
lin unpunished_A = compoundA (mkA "unpunished");
lin unputdownable_A = compoundA (mkA "unputdownable");
lin unqualified_A = compoundA (mkA "unqualified");
lin unquestionable_A = compoundA (mkA "unquestionable");
lin unquestioned_A = compoundA (mkA "unquestioned");
lin unquestioning_A = compoundA (mkA "unquestioning");
lin unquiet_A = compoundA (mkA "unquiet");
lin unquotable_A = compoundA (mkA "unquotable");
lin unquote_Adv = mkAdv "unquote";
lin unravel_V = mkV "unravel" "unravels" "unravelled" "unravelled" "unravelling";
lin unravel_V2 = mkV2 (mkV "unravel" "unravels" "unravelled" "unravelled" "unravelling");
lin unreached_A = compoundA (mkA "unreached");
lin unread_A = compoundA (mkA "unread");
lin unreadable_A = compoundA (mkA "unreadable");
lin unready_A = compoundA (mkA "unready");
lin unreal_A = compoundA (mkA "unreal");
lin unrealistic_A = compoundA (mkA "unrealistic");
lin unrealistically_Adv = mkAdv "unrealistically";
lin unreality_N = mkN "unreality" ;
lin unrealized_A = compoundA (mkA "unrealized");
lin unreasonable_A = compoundA (mkA "unreasonable");
lin unreasoning_A = compoundA (mkA "unreasoning");
lin unreceptive_A = compoundA (mkA "unreceptive");
lin unreciprocated_A = compoundA (mkA "unreciprocated");
lin unrecognizable_A = compoundA (mkA "unrecognizable");
lin unrecognized_A = compoundA (mkA "unrecognized");
lin unreconciled_A = compoundA (mkA "unreconciled");
lin unrecorded_A = compoundA (mkA "unrecorded");
lin unredeemable_A = compoundA (mkA "unredeemable");
lin unrefined_A = compoundA (mkA "unrefined");
lin unreflective_A = compoundA (mkA "unreflective");
lin unregenerate_A = compoundA (mkA "unregenerate");
lin unregistered_A = compoundA (mkA "unregistered");
lin unrehearsed_A = compoundA (mkA "unrehearsed");
lin unrelated_A = compoundA (mkA "unrelated");
lin unrelaxed_A = compoundA (mkA "unrelaxed");
lin unrelenting_A = compoundA (mkA "unrelenting");
lin unreliable_A = compoundA (mkA "unreliable");
lin unrelieved_A = compoundA (mkA "unrelieved");
lin unremarkable_A = compoundA (mkA "unremarkable");
lin unremitting_A = compoundA (mkA "unremitting");
lin unrepeatable_A = compoundA (mkA "unrepeatable");
lin unrepentant_A = compoundA (mkA "unrepentant");
lin unrepresentative_A = compoundA (mkA "unrepresentative");
lin unrequested_A = compoundA (mkA "unrequested");
lin unrequited_A = compoundA (mkA "unrequited");
lin unreserved_A = compoundA (mkA "unreserved");
lin unresisting_A = compoundA (mkA "unresisting");
lin unresolved_A = compoundA (mkA "unresolved");
lin unrest_N = mkN "unrest" ;
lin unrestrained_A = compoundA (mkA "unrestrained");
lin unrestricted_A = compoundA (mkA "unrestricted");
lin unrevised_A = compoundA (mkA "unrevised");
lin unrewarded_A = compoundA (mkA "unrewarded");
lin unrewarding_A = compoundA (mkA "unrewarding");
lin unrhythmical_A = compoundA (mkA "unrhythmical");
lin unrighteous_A = compoundA (mkA "unrighteous");
lin unripe_A = compoundA (mkA "unripe");
lin unripened_A = compoundA (mkA "unripened");
lin unrivalled_A = compoundA (mkA "unrivalled");
lin unroll_V = mkV "unroll" "unrolls" "unrolled" "unrolled" "unrolling";
lin unroll_V2 = mkV2 (mkV "unroll" "unrolls" "unrolled" "unrolled" "unrolling");
lin unromantic_A = compoundA (mkA "unromantic");
lin unromantically_Adv = mkAdv "unromantically";
lin unruffled_A = compoundA (mkA "unruffled");
lin unruly_A = mkA "unruly" "unrulier";
lin unsaddle_V2 = mkV2 (mkV "unsaddle" "unsaddles" "unsaddled" "unsaddled" "unsaddling");
lin unsaddled_A = compoundA (mkA "unsaddled");
lin unsafe_A = compoundA (mkA "unsafe");
lin unsaid_A = compoundA (mkA "unsaid");
lin unsaleable_A = compoundA (mkA "unsaleable");
lin unsalted_A = compoundA (mkA "unsalted");
lin unsatisfactory_A = compoundA (mkA "unsatisfactory");
lin unsatisfied_A = compoundA (mkA "unsatisfied");
lin unsatisfying_A = compoundA (mkA "unsatisfying");
lin unsaturated_A = compoundA (mkA "unsaturated");
lin unsavoury_A = compoundA (mkA "unsavoury");
lin unsay_V2 = mkV2 (mkV "un" IrregEng.say_V);
lin unscathed_A = compoundA (mkA "unscathed");
lin unscheduled_A = compoundA (mkA "unscheduled");
lin unscientific_A = compoundA (mkA "unscientific");
lin unscientifically_Adv = mkAdv "unscientifically";
lin unscramble_V2 = mkV2 (mkV "unscramble" "unscrambles" "unscrambled" "unscrambled" "unscrambling");
lin unscrew_V = mkV "unscrew" "unscrews" "unscrewed" "unscrewed" "unscrewing";
lin unscrew_V2 = mkV2 (mkV "unscrew" "unscrews" "unscrewed" "unscrewed" "unscrewing");
lin unscripted_A = compoundA (mkA "unscripted");
lin unscrupulous_A = compoundA (mkA "unscrupulous");
lin unsealed_A = compoundA (mkA "unsealed");
lin unseasonable_A = compoundA (mkA "unseasonable");
lin unseasoned_A = compoundA (mkA "unseasoned");
lin unseat_V2 = mkV2 (mkV "unseat" "unseats" "unseated" "unseated" "unseating");
lin unseaworthy_A = compoundA (mkA "unseaworthy");
lin unsecured_A = compoundA (mkA "unsecured");
lin unseeded_A = compoundA (mkA "unseeded");
lin unseeing_A = compoundA (mkA "unseeing");
lin unseemly_A = compoundA (mkA "unseemly");
lin unseen_A = compoundA (mkA "unseen");
lin unseen_N = mkN "unseen" "unseens";
lin unselected_A = compoundA (mkA "unselected");
lin unselective_A = compoundA (mkA "unselective");
lin unselfconscious_A = compoundA (mkA "unselfconscious");
lin unselfish_A = compoundA (mkA "unselfish");
lin unselfishness_N = mkN "unselfishness" ;
lin unsettle_V2 = mkV2 (mkV "unsettle" "unsettles" "unsettled" "unsettled" "unsettling");
lin unsex_V2 = mkV2 (mkV "unsex" "unsexes" "unsexed" "unsexed" "unsexing");
lin unsexed_A = compoundA (mkA "unsexed");
lin unshakable_A = compoundA (mkA "unshakable");
lin unshaved_A = compoundA (mkA "unshaved");
lin unshaven_A = compoundA (mkA "unshaven");
lin unsheathe_V2 = mkV2 (mkV "unsheathe" "unsheathes" "unsheathed" "unsheathed" "unsheathing");
lin unshielded_A = compoundA (mkA "unshielded");
lin unshrinkable_A = compoundA (mkA "unshrinkable");
lin unshrinking_A = compoundA (mkA "unshrinking");
lin unshuttered_A = compoundA (mkA "unshuttered");
lin unsighted_A = compoundA (mkA "unsighted");
lin unsightliness_N = mkN "unsightliness" ;
lin unsightly_A = compoundA (mkA "unsightly");
lin unsigned_A = compoundA (mkA "unsigned");
lin unsilenced_A = compoundA (mkA "unsilenced");
lin unsinkable_A = compoundA (mkA "unsinkable");
lin unskilled_A = compoundA (mkA "unskilled");
lin unsmiling_A = compoundA (mkA "unsmiling");
lin unsociable_A = compoundA (mkA "unsociable");
lin unsocial_A = compoundA (mkA "unsocial");
lin unsold_A = compoundA (mkA "unsold");
lin unsolicited_A = compoundA (mkA "unsolicited");
lin unsolved_A = compoundA (mkA "unsolved");
lin unsophisticated_A = compoundA (mkA "unsophisticated");
lin unsound_A = compoundA (mkA "unsound");
lin unsparing_A = compoundA (mkA "unsparing");
lin unspeakable_A = compoundA (mkA "unspeakable");
lin unspecialized_A = compoundA (mkA "unspecialized");
lin unspecific_A = compoundA (mkA "unspecific");
lin unspecifically_Adv = mkAdv "unspecifically";
lin unspecified_A = compoundA (mkA "unspecified");
lin unspectacular_A = compoundA (mkA "unspectacular");
lin unspoiled_A = compoundA (mkA "unspoiled");
lin unspoilt_A = compoundA (mkA "unspoilt");
lin unspoken_A = compoundA (mkA "unspoken");
lin unsporting_A = compoundA (mkA "unsporting");
lin unsportsmanlike_A = compoundA (mkA "unsportsmanlike");
lin unspotted_A = compoundA (mkA "unspotted");
lin unstable_A = compoundA (mkA "unstable");
lin unstartling_A = compoundA (mkA "unstartling");
lin unstated_A = compoundA (mkA "unstated");
lin unstatesmanlike_A = compoundA (mkA "unstatesmanlike");
lin unsteady_A = compoundA (mkA "unsteady");
lin unstoppable_A = compoundA (mkA "unstoppable");
lin unstrained_A = compoundA (mkA "unstrained");
lin unstressed_A = compoundA (mkA "unstressed");
lin unstructured_A = compoundA (mkA "unstructured");
lin unstrung_A = compoundA (mkA "unstrung");
lin unstuck_A = compoundA (mkA "unstuck");
lin unstudied_A = compoundA (mkA "unstudied");
lin unsubtle_A = compoundA (mkA "unsubtle");
lin unsuccessful_A = compoundA (mkA "unsuccessful");
lin unsuitability_N = mkN "unsuitability" ;
lin unsuitable_A = compoundA (mkA "unsuitable");
lin unsuited_A = compoundA (mkA "unsuited");
lin unsullied_A = compoundA (mkA "unsullied");
lin unsung_A = compoundA (mkA "unsung");
lin unsupervised_A = compoundA (mkA "unsupervised");
lin unsupported_A = compoundA (mkA "unsupported");
lin unsure_A = compoundA (mkA "unsure");
lin unsurpassed_A = compoundA (mkA "unsurpassed");
lin unsuspected_A = compoundA (mkA "unsuspected");
lin unsuspecting_A = compoundA (mkA "unsuspecting");
lin unsuspicious_A = compoundA (mkA "unsuspicious");
lin unswayed_A = compoundA (mkA "unswayed");
lin unsweetened_A = compoundA (mkA "unsweetened");
lin unswept_A = compoundA (mkA "unswept");
lin unswerving_A = compoundA (mkA "unswerving");
lin unsyllabic_A = compoundA (mkA "unsyllabic");
lin unsympathetic_A = compoundA (mkA "unsympathetic");
lin unsympathetically_Adv = mkAdv "unsympathetically";
lin unsystematic_A = compoundA (mkA "unsystematic");
lin unsystematically_Adv = mkAdv "unsystematically";
lin untainted_A = compoundA (mkA "untainted");
lin untamed_A = compoundA (mkA "untamed");
lin untapped_A = compoundA (mkA "untapped");
lin untarnished_A = compoundA (mkA "untarnished");
lin untaxed_A = compoundA (mkA "untaxed");
lin untenable_A = compoundA (mkA "untenable");
lin untenanted_A = compoundA (mkA "untenanted");
lin untended_A = compoundA (mkA "untended");
lin untested_A = compoundA (mkA "untested");
lin untethered_A = compoundA (mkA "untethered");
lin unthinkable_A = compoundA (mkA "unthinkable");
lin unthinking_A = compoundA (mkA "unthinking");
lin unthought_of_A = compoundA (mkA "unthought - of");
lin untidily_Adv = mkAdv "untidily";
lin untidiness_N = mkN "untidiness" ;
lin untidy_A = mkA "untidy" "untidier";
lin untie_V = mkV "untie" "IRREG" "IRREG" "IRREG" "IRREG";
lin untie_V2 = mkV2 (mkV "untie" "IRREG" "IRREG" "IRREG" "IRREG");
lin until_Prep = mkPrep "until";
lin untimely_A = compoundA (mkA "untimely");
lin untiring_A = compoundA (mkA "untiring");
lin untitled_A = compoundA (mkA "untitled");
lin untold_A = compoundA (mkA "untold");
lin untouchable_A = compoundA (mkA "untouchable");
lin untouchable_N = mkN "untouchable" "untouchables";
lin untouched_A = compoundA (mkA "untouched");
lin untoward_A = compoundA (mkA "untoward");
lin untrained_A = compoundA (mkA "untrained");
lin untrammelled_A = compoundA (mkA "untrammelled");
lin untranslatable_A = compoundA (mkA "untranslatable");
lin untreated_A = compoundA (mkA "untreated");
lin untried_A = compoundA (mkA "untried");
lin untroubled_A = compoundA (mkA "untroubled");
lin untrue_A = compoundA (mkA "untrue");
lin untruly_Adv = mkAdv "untruly";
lin untrustworthy_A = compoundA (mkA "untrustworthy");
lin untruth_N = mkN "untruth" "untruths";
lin untruthful_A = compoundA (mkA "untruthful");
lin untucked_A = compoundA (mkA "untucked");
lin unturned_A = compoundA (mkA "unturned");
lin untutored_A = compoundA (mkA "untutored");
lin untwisted_A = compoundA (mkA "untwisted");
lin untypical_A = compoundA (mkA "untypical");
lin unused_A = compoundA (mkA "unused");
lin unusual_A = compoundA (mkA "unusual");
lin unutterable_A = compoundA (mkA "unutterable");
lin unvaried_A = compoundA (mkA "unvaried");
lin unvarnished_A = compoundA (mkA "unvarnished");
lin unvarying_A = compoundA (mkA "unvarying");
lin unveil_V = mkV "unveil" "unveils" "unveiled" "unveiled" "unveiling";
lin unveil_V2 = mkV2 (mkV "unveil" "unveils" "unveiled" "unveiled" "unveiling");
lin unverified_A = compoundA (mkA "unverified");
lin unversed_A = compoundA (mkA "unversed");
lin unvigilant_A = compoundA (mkA "unvigilant");
lin unvoiced_A = compoundA (mkA "unvoiced");
lin unwanted_A = compoundA (mkA "unwanted");
lin unwarrantably_Adv = mkAdv "unwarrantably";
lin unwarranted_A = compoundA (mkA "unwarranted");
lin unwary_A = compoundA (mkA "unwary");
lin unwashed_A = compoundA (mkA "unwashed");
lin unwavering_A = compoundA (mkA "unwavering");
lin unweaned_A = compoundA (mkA "unweaned");
lin unwearied_A = compoundA (mkA "unwearied");
lin unwed_A = compoundA (mkA "unwed");
lin unwelcome_A = compoundA (mkA "unwelcome");
lin unwell_A = compoundA (mkA "unwell");
lin unwholesome_A = compoundA (mkA "unwholesome");
lin unwieldiness_N = mkN "unwieldiness" ;
lin unwieldy_A = compoundA (mkA "unwieldy");
lin unwilling_A = compoundA (mkA "unwilling");
lin unwillingness_N = mkN "unwillingness" ;
lin unwind_V = mkV "un" IrregEng.wind_V;
lin unwind_V2 = mkV2 (mkV "un" IrregEng.wind_V);
lin unwise_A = compoundA (mkA "unwise");
lin unwitnessed_A = compoundA (mkA "unwitnessed");
lin unwitting_A = compoundA (mkA "unwitting");
lin unwonted_A = compoundA (mkA "unwonted");
lin unworkable_A = compoundA (mkA "unworkable");
lin unworkmanlike_A = compoundA (mkA "unworkmanlike");
lin unworldly_A = compoundA (mkA "unworldly");
lin unworn_A = compoundA (mkA "unworn");
lin unworried_A = compoundA (mkA "unworried");
lin unworthiness_N = mkN "unworthiness" ;
lin unworthy_A = compoundA (mkA "unworthy");
lin unwrap_V = mkV "unwrap" "unwraps" "unwrapped" "unwrapped" "unwrapping";
lin unwrap_V2 = mkV2 (mkV "unwrap" "unwraps" "unwrapped" "unwrapped" "unwrapping");
lin unwritten_A = compoundA (mkA "unwritten");
lin unyielding_A = compoundA (mkA "unyielding");
lin unzip_V2 = mkV2 (mkV "unzip" "unzips" "unzipped" "unzipped" "unzipping");
lin up_Adv = mkAdv "up";
lin up_Prep = mkPrep "up";
lin up_V = mkV "up" "ups" "upped" "upped" "upping";
lin up_V2 = mkV2 (mkV "up" "ups" "upped" "upped" "upping");
lin up_and_coming_A = compoundA (mkA "up - and - coming");
lin up_beat_N = mkN "up - beat" "up - beats";
lin up_holland_PN = mkPN "Up holland";
lin up_market_A = compoundA (mkA "up - market");
lin up_to_date_A = compoundA (mkA "up - to - date");
lin up_to_the_minute_A = compoundA (mkA "up - to - the - minute");
lin upbraid_V2 = mkV2 (mkV "upbraid" "upbraids" "upbraided" "upbraided" "upbraiding");
lin upbraiding_N = mkN "upbraiding" "upbraidings";
lin upbringing_N = mkN "upbringing" ;
lin upcountry_A = compoundA (mkA "upcountry");
lin upcountry_Adv = mkAdv "upcountry";
lin update_V2 = mkV2 (mkV "update" "updates" "updated" "updated" "updating");
lin upgrade_N = mkN "upgrade" "upgrades";
lin upgrade_V2 = mkV2 (mkV "upgrade" "upgrades" "upgraded" "upgraded" "upgrading");
lin upheaval_N = mkN "upheaval" "upheavals";
lin uphill_A = compoundA (mkA "uphill");
lin uphill_Adv = mkAdv "uphill";
lin uphold_V2 = mkV2 (IrregEng.uphold_V);
lin upholster_V2 = mkV2 (mkV "upholster" "upholsters" "upholstered" "upholstered" "upholstering");
lin upholsterer_N = mkN "upholsterer" "upholsterers";
lin upholstery_N = mkN "upholstery" ;
lin upkeep_N = mkN "upkeep" ;
lin upland_N = mkN "upland" "uplands";
lin uplift_N = mkN "uplift" ;
lin uplift_V2 = mkV2 (mkV "uplift" "uplifts" "uplifted" "uplifted" "uplifting");
lin upmost_A = compoundA (mkA "upmost");
lin upon_Prep = mkPrep "upon";
lin upper_A = compoundA (mkA "upper");
lin upper_N = mkN "upper" "uppers";
lin uppercut_N = mkN "uppercut" "uppercuts";
lin uppermost_A = compoundA (mkA "uppermost");
lin uppermost_Adv = mkAdv "uppermost";
lin uppish_A = compoundA (mkA "uppish");
lin uppishness_N = mkN "uppishness" ;
lin uppity_A = compoundA (mkA "uppity");
lin upright_A = compoundA (mkA "upright");
lin upright_N = mkN "upright" "uprights";
lin uprightness_N = mkN "uprightness" ;
lin uprising_N = mkN "uprising" "uprisings";
lin uproar_N = mkN "uproar" "uproars";
lin uproarious_A = compoundA (mkA "uproarious");
lin uproot_V2 = mkV2 (mkV "uproot" "uproots" "uprooted" "uprooted" "uprooting");
lin upset_N = mkN "upset" "upsets";
lin upset_V = IrregEng.upset_V;
lin upset_V2 = mkV2 (IrregEng.upset_V);
lin upshot_N = mkN "upshot" "upshots";
lin upside_down_Adv = mkAdv "upside - down";
lin upstage_A = compoundA (mkA "upstage");
lin upstage_Adv = mkAdv "upstage";
lin upstage_V2 = mkV2 (mkV "upstage" "upstages" "upstaged" "upstaged" "upstaging");
lin upstairs_A = compoundA (mkA "upstairs");
lin upstairs_Adv = mkAdv "upstairs";
lin upstanding_A = compoundA (mkA "upstanding");
lin upstart_A = compoundA (mkA "upstart");
lin upstart_N = mkN "upstart" "upstarts";
lin upstream_Adv = mkAdv "upstream";
lin upsurge_N = mkN "upsurge" "upsurges";
lin uptake_N = mkN "uptake" "uptakes";
lin uptight_A = compoundA (mkA "uptight");
lin upton_PN = mkPN "Upton";
lin uptown_A = compoundA (mkA "uptown");
lin uptown_Adv = mkAdv "uptown";
lin upturn_N = mkN "upturn" "upturns";
lin upturned_A = compoundA (mkA "upturned");
lin upward_A = compoundA (mkA "upward");
lin upward_Adv = mkAdv "upward";
lin upwards_Adv = mkAdv "upwards";
lin uranium_N = mkN "uranium" ;
lin uranus_PN = mkPN "Uranus";
lin urban_A = compoundA (mkA "urban");
lin urbane_A = compoundA (mkA "urbane");
lin urbanity_N = mkN "urbanity" ;
lin urbanization_N = mkN "urbanization" ;
lin urbanize_V2 = mkV2 (mkV "urbanize" "urbanizes" "urbanized" "urbanized" "urbanizing");
lin urchin_N = mkN "urchin" "urchins";
lin urdu_A = compoundA (mkA "urdu");
lin urdu_N = mkN "urdu" ;
lin urge_N = mkN "urge" "urges";
lin urge_V2 = mkV2 (mkV "urge" "urges" "urged" "urged" "urging");
lin urge_V2V = mkV2V (mkV "urge") noPrep to_Prep ;
lin urge_VS = mkVS (mkV "urge");
lin urgency_N = mkN "urgency" ;
lin urgent_A = compoundA (mkA "urgent");
lin urging_N = mkN "urging" "urgings";
lin uric_A = compoundA (mkA "uric");
lin urinal_N = mkN "urinal" "urinals";
lin urinary_A = compoundA (mkA "urinary");
lin urinate_V = mkV "urinate" "urinates" "urinated" "urinated" "urinating";
lin urine_N = mkN "urine" ;
lin urn_N = mkN "urn" "urns";
lin ursula_PN = mkPN "Ursula";
lin uruguay_PN = mkPN "Uruguay";
lin uruguayan_A = compoundA (mkA "uruguayan");
lin uruguayan_N = mkN "uruguayan" "uruguayans";
lin urumchi_PN = mkPN "Urumchi";
lin us_PN = mkPN "US";
lin usa_PN = mkPN "USA";
lin usable_A = compoundA (mkA "usable");
lin usaf_N = mkN "usaf" ;
lin usage_N = mkN "usage" "usages";
lin use_N = mkN "use" "uses";
lin use_V = mkV "use";
lin use_V2 = mkV2 (mkV "use" "uses" "used" "used" "using");
lin use_VV = mkVV (mkV "use");
lin used_A = compoundA (mkA "used");
lin useful_A = compoundA (mkA "useful");
lin usefulness_N = mkN "usefulness" ;
lin useless_A = compoundA (mkA "useless");
lin uselessness_N = mkN "uselessness" ;
lin user_N = mkN "user" "users";
lin ushaw_moor_PN = mkPN "Ushaw moor";
lin usher_N = mkN "usher" "ushers";
lin usher_V2 = mkV2 (mkV "usher" "ushers" "ushered" "ushered" "ushering");
lin usherette_N = mkN "usherette" "usherettes";
lin usn_N = mkN "usn" ;
lin uss_N = mkN "uss" ;
lin ussr_N = mkN "ussr" ;
lin usual_A = compoundA (mkA "usual");
lin usurer_N = mkN "usurer" "usurers";
lin usurious_A = compoundA (mkA "usurious");
lin usurp_V2 = mkV2 (mkV "usurp" "usurps" "usurped" "usurped" "usurping");
lin usurpation_N = mkN "usurpation" "usurpations";
lin usurper_N = mkN "usurper" "usurpers";
lin usury_N = mkN "usury" ;
lin utah_PN = mkPN "Utah";
lin utensil_N = mkN "utensil" "utensils";
lin uterine_A = compoundA (mkA "uterine");
lin uterus_N = mkN "uterus" "uteruses";
lin utilitarian_A = compoundA (mkA "utilitarian");
lin utilitarian_N = mkN "utilitarian" "utilitarians";
lin utilitarianism_N = mkN "utilitarianism" ;
lin utility_N = mkN "utility" "utilities";
lin utilizable_A = compoundA (mkA "utilizable");
lin utilization_N = mkN "utilization" ;
lin utilize_V2 = mkV2 (mkV "utilize" "utilizes" "utilized" "utilized" "utilizing");
lin utmost_A = compoundA (mkA "utmost");
lin utmost_N = mkN "utmost" "utmosts";
lin utopia_N = mkN "utopia" "utopias";
lin utopian_A = compoundA (mkA "utopian");
lin utrecht_PN = mkPN "Utrecht";
lin utter_A = compoundA (mkA "utter");
lin utter_V2 = mkV2 (mkV "utter" "utters" "uttered" "uttered" "uttering");
lin utterance_N = mkN "utterance" "utterances";
lin uttermost_A = compoundA (mkA "uttermost");
lin uttermost_N = mkN "uttermost" "uttermosts";
lin uttoxeter_PN = mkPN "Uttoxeter";
lin uvula_N = mkN "uvula" "uvulas";
lin uvular_A = compoundA (mkA "uvular");
lin uxorious_A = compoundA (mkA "uxorious");
lin uxoriousness_N = mkN "uxoriousness" ;
lin v_and_a_N = mkN "v and a" ;
lin vac_N = mkN "vac" "vacs";
lin vacancy_N = mkN "vacancy" "vacancies";
lin vacant_A = compoundA (mkA "vacant");
lin vacate_V2 = mkV2 (mkV "vacate" "vacates" "vacated" "vacated" "vacating");
lin vacation_N = mkN "vacation" "vacations";
lin vacation_V = mkV "vacation" "vacations" "vacationed" "vacationed" "vacationing";
lin vacationist_N = mkN "vacationist" "vacationists";
lin vaccinate_V2 = mkV2 (mkV "vaccinate" "vaccinates" "vaccinated" "vaccinated" "vaccinating");
lin vaccination_N = mkN "vaccination" "vaccinations";
lin vaccine_N = mkN "vaccine" "vaccines";
lin vacillate_V = mkV "vacillate" "vacillates" "vacillated" "vacillated" "vacillating";
lin vacillation_N = mkN "vacillation" "vacillations";
lin vacuity_N = mkN "vacuity" "vacuities";
lin vacuous_A = compoundA (mkA "vacuous");
lin vacuum_N = mkN "vacuum" "vacuums";
lin vacuum_V2 = mkV2 (mkV "vacuum");
lin vade_mecum_N = mkN "vade - mecum" "vade - mecums";
lin vagabond_A = compoundA (mkA "vagabond");
lin vagabond_N = mkN "vagabond" "vagabonds";
lin vagary_N = mkN "vagary" "vagaries";
lin vagina_N = mkN "vagina" "vaginas";
lin vaginal_A = compoundA (mkA "vaginal");
lin vagrancy_N = mkN "vagrancy" ;
lin vagrant_A = compoundA (mkA "vagrant");
lin vagrant_N = mkN "vagrant" "vagrants";
lin vague_A = mkA "vague" "vaguer";
lin vagueness_N = mkN "vagueness" ;
lin vain_A = mkA "vain" "vainer";
lin vainglorious_A = compoundA (mkA "vainglorious");
lin vainglory_N = mkN "vainglory" ;
lin valance_N = mkN "valance" "valances";
lin vale_N = mkN "vale" "vales";
lin valediction_N = mkN "valediction" "valedictions";
lin valedictory_A = compoundA (mkA "valedictory");
lin valence_N = mkN "valence" "valences";
lin valencia_PN = mkPN "Valencia";
lin valenciennes_PN = mkPN "Valenciennes";
lin valency_N = mkN "valency" "valencies";
lin valentine_N = mkN "valentine" "valentines";
lin valerian_N = mkN "valerian" ;
lin valet_N = mkN "valet" "valets";
lin valet_V2 = mkV2 (mkV "valet" "valets" "valeted" "valeted" "valeting");
lin valetudinarian_A = compoundA (mkA "valetudinarian");
lin valetudinarian_N = mkN "valetudinarian" "valetudinarians";
lin valiant_A = compoundA (mkA "valiant");
lin valid_A = compoundA (mkA "valid");
lin validate_V2 = mkV2 (mkV "validate" "validates" "validated" "validated" "validating");
lin validity_N = mkN "validity" ;
lin valise_N = mkN "valise" "valises";
lin valladolid_PN = mkPN "Valladolid";
lin valley_N = mkN "valley" "valleys";
lin valorous_A = compoundA (mkA "valorous");
lin valour_N = mkN "valour" ;
lin valuable_A = compoundA (mkA "valuable");
lin valuable_N = mkN "valuable" "valuables";
lin valuation_N = mkN "valuation" "valuations";
lin value_N = mkN "value" "values";
lin value_V = mkV "value";
lin value_V2 = mkV2 (mkV "value" "values" "valued" "valued" "valuing");
lin value_added_A = compoundA (mkA "value - added");
lin valueless_A = compoundA (mkA "valueless");
lin valuer_N = mkN "valuer" "valuers";
lin valve_N = mkN "valve" "valves";
lin valvular_A = compoundA (mkA "valvular");
lin vamoose_V = mkV "vamoose" "vamooses" "vamoosed" "vamoosed" "vamoosing";
lin vamp_N = mkN "vamp" "vamps";
lin vamp_V = mkV "vamp" "vamps" "vamped" "vamped" "vamping";
lin vamp_V2 = mkV2 (mkV "vamp" "vamps" "vamped" "vamped" "vamping");
lin vampire_N = mkN "vampire" "vampires";
lin van_N = mkN "van" "vans";
lin vancouver_PN = mkPN "Vancouver";
lin vandal_N = mkN "vandal" "vandals";
lin vandalism_N = mkN "vandalism" ;
lin vane_N = mkN "vane" "vanes";
lin vanessa_PN = mkPN "Vanessa";
lin vanguard_N = mkN "vanguard" "vanguards";
lin vanilla_N = mkN "vanilla" "vanillas";
lin vanish_V = mkV "vanish" "vanishes" "vanished" "vanished" "vanishing";
lin vanity_N = mkN "vanity" "vanities";
lin vanquish_V2 = mkV2 (mkV "vanquish" "vanquishes" "vanquished" "vanquished" "vanquishing");
lin vantage_N = mkN "vantage" "vantages";
lin vantage_point_N = mkN "vantage - point" "vantage - points";
lin vapid_A = compoundA (mkA "vapid");
lin vapidity_N = mkN "vapidity" ;
lin vapidness_N = mkN "vapidness" ;
lin vaporization_N = mkN "vaporization" "vaporizations";
lin vaporize_V = mkV "vaporize" "vaporizes" "vaporized" "vaporized" "vaporizing";
lin vaporize_V2 = mkV2 (mkV "vaporize" "vaporizes" "vaporized" "vaporized" "vaporizing");
lin vaporous_A = compoundA (mkA "vaporous");
lin vapour_N = mkN "vapour" "vapours";
lin vapour_bath_N = mkN "vapour - bath" "vapour - baths";
lin varanasi_PN = mkPN "Varanasi";
lin variability_N = mkN "variability" ;
lin variable_A = compoundA (mkA "variable");
lin variable_N = mkN "variable" "variables";
lin variableness_N = mkN "variableness" ;
lin variance_N = mkN "variance" "variances";
lin variant_A = compoundA (mkA "variant");
lin variant_N = mkN "variant" "variants";
lin variation_N = mkN "variation" "variations";
lin varicoloured_A = compoundA (mkA "varicoloured");
lin varicose_A = compoundA (mkA "varicose");
lin varied_A = compoundA (mkA "varied");
lin variegated_A = compoundA (mkA "variegated");
lin variegation_N = mkN "variegation" "variegations";
lin variety_N = mkN "variety" "varieties";
lin variform_A = compoundA (mkA "variform");
lin variorum_A = compoundA (mkA "variorum");
lin various_A = compoundA (mkA "various");
lin varlet_N = mkN "varlet" "varlets";
lin varnish_N = mkN "varnish" "varnishes";
lin varnish_V2 = mkV2 (mkV "varnish" "varnishes" "varnished" "varnished" "varnishing");
lin varsity_N = mkN "varsity" "varsities";
lin vary_V = mkV "vary" "varies" "varied" "varied" "varying";
lin vary_V2 = mkV2 (mkV "vary" "varies" "varied" "varied" "varying");
lin vascular_A = compoundA (mkA "vascular");
lin vase_N = mkN "vase" "vases";
lin vasectomy_N = mkN "vasectomy" "vasectomies";
lin vaseline_N = mkN "vaseline" ;
lin vassal_N = mkN "vassal" "vassals";
lin vassalage_N = mkN "vassalage" ;
lin vast_A = compoundA (mkA "vast");
lin vasteras_PN = mkPN "Vasteras";
lin vastness_N = mkN "vastness" ;
lin vat_N = mkN "vat" ;
lin vatican_N = mkN "vatican" "vaticans";
lin vaudeville_N = mkN "vaudeville" ;
lin vault_N = mkN "vault" "vaults";
lin vault_V = mkV "vault" "vaults" "vaulted" "vaulted" "vaulting";
lin vault_V2 = mkV2 (mkV "vault" "vaults" "vaulted" "vaulted" "vaulting");
lin vaulted_A = compoundA (mkA "vaulted");
lin vaulter_N = mkN "vaulter" "vaulters";
lin vaulting_horse_N = mkN "vaulting - horse" "vaulting - horses";
lin vaunt_N = mkN "vaunt" "vaunts";
lin vaunt_V = mkV "vaunt" "vaunts" "vaunted" "vaunted" "vaunting";
lin vaunt_V2 = mkV2 (mkV "vaunt" "vaunts" "vaunted" "vaunted" "vaunting");
lin vaunter_N = mkN "vaunter" "vaunters";
lin vauntingly_Adv = mkAdv "vauntingly";
lin vc_N = mkN "vc" ;
lin vd_N = mkN "vd" ;
lin veal_N = mkN "veal" ;
lin vector_N = mkN "vector" "vectors";
lin veer_V = mkV "veer" "veers" "veered" "veered" "veering";
lin vegetable_A = compoundA (mkA "vegetable");
lin vegetable_N = mkN "vegetable" "vegetables";
lin vegetarian_N = mkN "vegetarian" "vegetarians";
lin vegetate_V = mkV "vegetate" "vegetates" "vegetated" "vegetated" "vegetating";
lin vegetation_N = mkN "vegetation" ;
lin vehemence_N = mkN "vehemence" ;
lin vehement_A = compoundA (mkA "vehement");
lin vehicle_N = mkN "vehicle" "vehicles";
lin vehicular_A = compoundA (mkA "vehicular");
lin veil_N = mkN "veil" "veils";
lin veil_V2 = mkV2 (mkV "veil" "veils" "veiled" "veiled" "veiling");
lin veiling_N = mkN "veiling" ;
lin vein_N = mkN "vein" "veins";
lin veined_A = compoundA (mkA "veined");
lin veld_N = mkN "veld" ;
lin vellum_N = mkN "vellum" ;
lin velocipede_N = mkN "velocipede" "velocipedes";
lin velocity_N = mkN "velocity" "velocities";
lin velour_N = mkN "velour" ;
lin velvet_N = mkN "velvet" ;
lin velveteen_N = mkN "velveteen" ;
lin velvety_A = compoundA (mkA "velvety");
lin venal_A = compoundA (mkA "venal");
lin venality_N = mkN "venality" ;
lin vend_V2 = mkV2 (mkV "vend" "vends" "vended" "vended" "vending");
lin vendee_N = mkN "vendee" "vendees";
lin vender_N = mkN "vender" "venders";
lin vendetta_N = mkN "vendetta" "vendettas";
lin vendor_N = mkN "vendor" "vendors";
lin veneer_N = mkN "veneer" "veneers";
lin veneer_V2 = mkV2 (mkV "veneer" "veneers" "veneered" "veneered" "veneering");
lin venerable_A = compoundA (mkA "venerable");
lin venerate_V2 = mkV2 (mkV "venerate" "venerates" "venerated" "venerated" "venerating");
lin veneration_N = mkN "veneration" "venerations";
lin venereal_A = compoundA (mkA "venereal");
lin venetian_A = compoundA (mkA "venetian");
lin venezia_PN = mkPN "Venezia";
lin venezuela_PN = mkPN "Venezuela";
lin venezuelan_A = compoundA (mkA "venezuelan");
lin venezuelan_N = mkN "venezuelan" "venezuelans";
lin vengeance_N = mkN "vengeance" ;
lin vengeful_A = compoundA (mkA "vengeful");
lin venial_A = compoundA (mkA "venial");
lin venice_PN = mkPN "Venice";
lin venison_N = mkN "venison" ;
lin venom_N = mkN "venom" ;
lin venomed_A = compoundA (mkA "venomed");
lin venomous_A = compoundA (mkA "venomous");
lin venous_A = compoundA (mkA "venous");
lin vent_N = mkN "vent" "vents";
lin vent_V2 = mkV2 (mkV "vent" "vents" "vented" "vented" "venting");
lin vent_hole_N = mkN "vent - hole" "vent - holes";
lin ventilate_V2 = mkV2 (mkV "ventilate" "ventilates" "ventilated" "ventilated" "ventilating");
lin ventilation_N = mkN "ventilation" ;
lin ventilator_N = mkN "ventilator" "ventilators";
lin ventnor_PN = mkPN "Ventnor";
lin ventral_A = compoundA (mkA "ventral");
lin ventricle_N = mkN "ventricle" "ventricles";
lin ventricular_A = compoundA (mkA "ventricular");
lin ventriloquism_N = mkN "ventriloquism" ;
lin ventriloquist_N = mkN "ventriloquist" "ventriloquists";
lin venture_N = mkN "venture" "ventures";
lin venture_V = mkV "venture" "ventures" "ventured" "ventured" "venturing";
lin venture_V2 = mkV2 (mkV "venture" "ventures" "ventured" "ventured" "venturing");
lin venture_VS = mkVS (mkV "venture" "ventures" "ventured" "ventured" "venturing");
lin venturesome_A = compoundA (mkA "venturesome");
lin venturous_A = compoundA (mkA "venturous");
lin venue_N = mkN "venue" "venues";
lin venus_PN = mkPN "Venus";
lin vera_PN = mkPN "Vera";
lin veracious_A = compoundA (mkA "veracious");
lin veracity_N = mkN "veracity" ;
lin veranda_N = mkN "veranda" "verandas";
lin verandah_N = mkN "verandah" "verandahs";
lin verb_N = mkN "verb" "verbs";
lin verbal_A = compoundA (mkA "verbal");
lin verbalize_V2 = mkV2 (mkV "verbalize" "verbalizes" "verbalized" "verbalized" "verbalizing");
lin verbatim_A = compoundA (mkA "verbatim");
lin verbatim_Adv = mkAdv "verbatim";
lin verbena_N = mkN "verbena" "verbenas";
lin verbiage_N = mkN "verbiage" ;
lin verbose_A = compoundA (mkA "verbose");
lin verboseness_N = mkN "verboseness" ;
lin verbosity_N = mkN "verbosity" ;
lin verdancy_N = mkN "verdancy" ;
lin verdant_A = compoundA (mkA "verdant");
lin verdict_N = mkN "verdict" "verdicts";
lin verdigris_N = mkN "verdigris" ;
lin verdure_N = mkN "verdure" ;
lin verey_A = compoundA (mkA "verey");
lin verge_N = mkN "verge" "verges";
lin verge_V = mkV "verge" "verges" "verged" "verged" "verging";
lin verger_N = mkN "verger" "vergers";
lin verifiable_A = compoundA (mkA "verifiable");
lin verification_N = mkN "verification" "verifications";
lin verify_V2 = mkV2 (mkV "verify" "verifies" "verified" "verified" "verifying");
lin verisimilitude_N = mkN "verisimilitude" "verisimilitudes";
lin veritable_A = compoundA (mkA "veritable");
lin verity_N = mkN "verity" "verities";
lin vermicelli_N = mkN "vermicelli" ;
lin vermiform_A = compoundA (mkA "vermiform");
lin vermilion_A = compoundA (mkA "vermilion");
lin vermilion_N = mkN "vermilion" "vermilions";
lin vermin_N = mkN "vermin" ;
lin verminous_A = compoundA (mkA "verminous");
lin vermont_PN = mkPN "Vermont";
lin vermouth_N = mkN "vermouth" "vermouths";
lin vernacular_A = compoundA (mkA "vernacular");
lin vernacular_N = mkN "vernacular" "vernaculars";
lin vernal_A = compoundA (mkA "vernal");
lin vernon_PN = mkPN "Vernon";
lin verona_PN = mkPN "Verona";
lin veronica_N = mkN "veronica" "veronicas";
lin veronica_PN = mkPN "Veronica";
lin verruca_N = mkN "verruca" "verrucas";
lin versatile_A = compoundA (mkA "versatile");
lin versatility_N = mkN "versatility" ;
lin verse_N = mkN "verse" "verses";
lin versed_A = compoundA (mkA "versed");
lin versification_N = mkN "versification" ;
lin versifier_N = mkN "versifier" "versifiers";
lin versify_V = mkV "versify" "versifies" "versified" "versified" "versifying";
lin versify_V2 = mkV2 (mkV "versify" "versifies" "versified" "versified" "versifying");
lin version_N = mkN "version" "versions";
lin verso_N = mkN "verso" "versos";
lin versus_Prep = mkPrep "versus";
lin vertebra_N = mkN "vertebra" "vertebrae" {- FIXME: guessed plural form -};
lin vertebrate_A = compoundA (mkA "vertebrate");
lin vertebrate_N = mkN "vertebrate" "vertebrates";
lin vertex_N = mkN "vertex" "vertices" {- FIXME: guessed plural form -};
lin vertical_A = compoundA (mkA "vertical");
lin vertical_N = mkN "vertical" "verticals";
lin vertiginous_A = compoundA (mkA "vertiginous");
lin vertigo_N = mkN "vertigo" ;
lin verve_N = mkN "verve" ;
lin very_AdA = mkAdA "very" ;
lin vesicle_N = mkN "vesicle" "vesicles";
lin vesicular_A = compoundA (mkA "vesicular");
lin vessel_N = mkN "vessel" "vessels";
lin vest_N = mkN "vest" "vests";
lin vest_V = mkV "vest" "vests" "vested" "vested" "vesting";
lin vest_V2 = mkV2 (mkV "vest" "vests" "vested" "vested" "vesting");
lin vestal_A = compoundA (mkA "vestal");
lin vestal_N = mkN "vestal" "vestals";
lin vestibule_N = mkN "vestibule" "vestibules";
lin vestige_N = mkN "vestige" "vestiges";
lin vestigial_A = compoundA (mkA "vestigial");
lin vestment_N = mkN "vestment" "vestments";
lin vestry_N = mkN "vestry" "vestries";
lin vestryman_N = mkN "vestryman" "vestrymen" {- FIXME: guessed plural form -};
lin vesture_N = mkN "vesture" "vestures";
lin vesture_V2 = mkV2 (mkV "vesture" "vestures" "vestured" "vestured" "vesturing");
lin vet_N = mkN "vet" "vets";
lin vet_V2 = mkV2 (mkV "vet" "vets" "vetted" "vetted" "vetting");
lin vetch_N = mkN "vetch" "vetches";
lin veteran_N = mkN "veteran" "veterans";
lin veterinary_A = compoundA (mkA "veterinary");
lin veto_N = mkN "veto" "vetoes";
lin veto_V = mkV "veto";
lin veto_V2 = mkV2 (mkV "veto" "vetos" "vetoed" "vetoed" "vetoing");
lin vex_V2 = mkV2 (mkV "vex" "vexes" "vexed" "vexed" "vexing");
lin vex_V2V = mkV2V (mkV "vex") noPrep to_Prep ;
lin vexation_N = mkN "vexation" "vexations";
lin vexatious_A = compoundA (mkA "vexatious");
lin vhf_PN = mkPN "Vhf";
lin via_Prep = mkPrep "via";
lin via_media_N = mkN "via media" "via mediae" {- FIXME: guessed plural form -};
lin viability_N = mkN "viability" ;
lin viable_A = compoundA (mkA "viable");
lin viaduct_N = mkN "viaduct" "viaducts";
lin vial_N = mkN "vial" "vials";
lin vibrant_A = compoundA (mkA "vibrant");
lin vibraphone_N = mkN "vibraphone" "vibraphones";
lin vibrate_V = mkV "vibrate" "vibrates" "vibrated" "vibrated" "vibrating";
lin vibrate_V2 = mkV2 (mkV "vibrate" "vibrates" "vibrated" "vibrated" "vibrating");
lin vibration_N = mkN "vibration" "vibrations";
lin vibrato_N = mkN "vibrato" "vibratos";
lin vibrator_N = mkN "vibrator" "vibrators";
lin vic_PN = mkPN "Vic";
lin vicar_N = mkN "vicar" "vicars";
lin vicarage_N = mkN "vicarage" "vicarages";
lin vicarious_A = compoundA (mkA "vicarious");
lin vice_N = mkN "vice" "vices";
lin vice_versa_Adv = mkAdv "vice versa";
lin vicenza_PN = mkPN "Vicenza";
lin viceregal_A = compoundA (mkA "viceregal");
lin vicereine_N = mkN "vicereine" "vicereines";
lin viceroy_N = mkN "viceroy" "viceroys";
lin vicinity_N = mkN "vicinity" "vicinities";
lin vicious_A = compoundA (mkA "vicious");
lin viciousness_N = mkN "viciousness" ;
lin vicissitude_N = mkN "vicissitude" "vicissitudes";
lin vicky_PN = mkPN "Vicky";
lin victim_N = mkN "victim" "victims";
lin victimization_N = mkN "victimization" "victimizations";
lin victimize_V2 = mkV2 (mkV "victimize" "victimizes" "victimized" "victimized" "victimizing");
lin victor_N = mkN "victor" "victors";
lin victor_PN = mkPN "Victor";
lin victoria_N = mkN "victoria" "victorias";
lin victoria_PN = mkPN "Victoria";
lin victorian_A = compoundA (mkA "victorian");
lin victorian_N = mkN "victorian" "victorians";
lin victoriana_N = mkN "victoriana" ;
lin victorious_A = compoundA (mkA "victorious");
lin victory_N = mkN "victory" "victories";
lin victual_N = mkN "victual" "victuals";
lin victual_V = mkV "victual" "victuals" "victualled" "victualled" "victualling";
lin victual_V2 = mkV2 (mkV "victual" "victuals" "victualled" "victualled" "victualling");
lin victualler_N = mkN "victualler" "victuallers";
lin vicuna_N = mkN "vicuña" "vicuñas";
lin videlicet_Adv = mkAdv "videlicet";
lin video_N = mkN "video" "videos";
lin videotape_N = mkN "videotape" "videotapes";
lin videotape_V2 = mkV2 (mkV "videotape" "videotapes" "videotaped" "videotaped" "videotaping");
lin vie_V = mkV "vie" "IRREG" "IRREG" "IRREG" "IRREG";
lin vienna_PN = mkPN "Vienna";
lin vietnam_PN = mkPN "Vietnam";
lin vietnamese_A = compoundA (mkA "Vietnamese");
lin vietnamese_N = mkN "Vietnamese" "Vietnamese";
lin view_N = mkN "view" "views";
lin view_V2 = mkV2 (mkV "view" "views" "viewed" "viewed" "viewing");
lin viewer_N = mkN "viewer" "viewers";
lin viewfinder_N = mkN "viewfinder" "viewfinders";
lin viewless_A = compoundA (mkA "viewless");
lin viewpark_PN = mkPN "Viewpark";
lin viewpoint_N = mkN "viewpoint" "viewpoints";
lin vigil_N = mkN "vigil" "vigils";
lin vigilance_N = mkN "vigilance" ;
lin vigilant_A = compoundA (mkA "vigilant");
lin vigilante_N = mkN "vigilante" "vigilantes";
lin vignette_N = mkN "vignette" "vignettes";
lin vigo_PN = mkPN "Vigo";
lin vigorous_A = compoundA (mkA "vigorous");
lin vigour_N = mkN "vigour" ;
lin viking_N = mkN "viking" "vikings";
lin vile_A = mkA "vile" "viler";
lin vileness_N = mkN "vileness" ;
lin vilification_N = mkN "vilification" "vilifications";
lin vilify_V2 = mkV2 (mkV "vilify" "vilifies" "vilified" "vilified" "vilifying");
lin villa_N = mkN "villa" "villas";
lin village_N = mkN "village" "villages";
lin villager_N = mkN "villager" "villagers";
lin villain_N = mkN "villain" "villains";
lin villainess_N = mkN "villainess" "villainesss";
lin villainous_A = compoundA (mkA "villainous");
lin villainy_N = mkN "villainy" "villainies";
lin villein_N = mkN "villein" "villeins";
lin villeinage_N = mkN "villeinage" ;
lin vim_N = mkN "vim" ;
lin vinaigrette_N = mkN "vinaigrette" ;
lin vince_PN = mkPN "Vince";
lin vincent_PN = mkPN "Vincent";
lin vindicate_V2 = mkV2 (mkV "vindicate" "vindicates" "vindicated" "vindicated" "vindicating");
lin vindication_N = mkN "vindication" "vindications";
lin vindictive_A = compoundA (mkA "vindictive");
lin vindictiveness_N = mkN "vindictiveness" ;
lin vine_N = mkN "vine" "vines";
lin vinegar_N = mkN "vinegar" "vinegars";
lin vinegary_A = compoundA (mkA "vinegary");
lin vinery_N = mkN "vinery" "vineries";
lin vineyard_N = mkN "vineyard" "vineyards";
lin vino_N = mkN "vino" "vinoes";
lin vinous_A = compoundA (mkA "vinous");
lin vintage_N = mkN "vintage" "vintages";
lin vintner_N = mkN "vintner" "vintners";
lin vinyl_N = mkN "vinyl" "vinyls";
lin viol_N = mkN "viol" "viols";
lin viola_N = mkN "viola" "violas";
lin viola_PN = mkPN "Viola";
lin violate_V2 = mkV2 (mkV "violate" "violates" "violated" "violated" "violating");
lin violation_N = mkN "violation" "violations";
lin violence_N = mkN "violence" ;
lin violent_A = compoundA (mkA "violent");
lin violet_N = mkN "violet" "violets";
lin violet_PN = mkPN "Violet";
lin violin_N = mkN "violin" "violins";
lin violinist_N = mkN "violinist" "violinists";
lin vip_N = mkN "vip" "vips" ;
lin viper_N = mkN "viper" "vipers";
lin virago_N = mkN "virago" "viragos";
lin virgin_A = compoundA (mkA "virgin");
lin virgin_N = mkN "virgin" "virgins";
lin virginal_A = compoundA (mkA "virginal");
lin virginal_N = mkN "virginal" "virginals";
lin virginia_N = mkN "virginia" ;
lin virginia_PN = mkPN "Virginia";
lin virginia_water_PN = mkPN "Virginia water";
lin virginity_N = mkN "virginity" ;
lin virgo_PN = mkPN "Virgo";
lin virgule_N = mkN "virgule" "virgules";
lin virile_A = compoundA (mkA "virile");
lin virility_N = mkN "virility" ;
lin virology_N = mkN "virology" ;
lin virtu_N = mkN "virtu" ;
lin virtual_A = compoundA (mkA "virtual");
lin virtue_N = mkN "virtue" "virtues";
lin virtuosity_N = mkN "virtuosity" ;
lin virtuoso_N = mkN "virtuoso" "virtuosos";
lin virtuous_A = compoundA (mkA "virtuous");
lin virulence_N = mkN "virulence" ;
lin virulent_A = compoundA (mkA "virulent");
lin virus_N = mkN "virus" "viruses";
lin vis_a_vis_Adv = mkAdv "vis - à - vis";
lin visa_N = mkN "visa" "visas";
lin visa_V2 = mkV2 (mkV "visa" "visas" "visaed" "visaed" "visaing");
lin visage_N = mkN "visage" "visages";
lin visaged_A = compoundA (mkA "visaged");
lin visceral_A = compoundA (mkA "visceral");
lin viscid_A = compoundA (mkA "viscid");
lin viscosity_N = mkN "viscosity" ;
lin viscount_N = mkN "viscount" "viscounts";
lin viscountcy_N = mkN "viscountcy" "viscountcies";
lin viscountess_N = mkN "viscountess" "viscountesses";
lin viscous_A = compoundA (mkA "viscous");
lin visibility_N = mkN "visibility" ;
lin visible_A = compoundA (mkA "visible");
lin vision_N = mkN "vision" "visions";
lin visionary_A = compoundA (mkA "visionary");
lin visionary_N = mkN "visionary" "visionaries";
lin visit_N = mkN "visit" "visits";
lin visit_V = mkV "visit" "visits" "visited" "visited" "visiting";
lin visit_V2 = mkV2 (mkV "visit" "visits" "visited" "visited" "visiting");
lin visitant_N = mkN "visitant" "visitants";
lin visitation_N = mkN "visitation" "visitations";
lin visiting_N = mkN "visiting" ;
lin visitor_N = mkN "visitor" "visitors";
lin visor_N = mkN "visor" "visors";
lin vista_N = mkN "vista" "vistas";
lin visual_A = compoundA (mkA "visual");
lin visualization_N = mkN "visualization" "visualizations";
lin visualize_V2 = mkV2 (mkV "visualize" "visualizes" "visualized" "visualized" "visualizing");
lin vital_A = compoundA (mkA "vital");
lin vitalism_N = mkN "vitalism" ;
lin vitalist_N = mkN "vitalist" "vitalists";
lin vitality_N = mkN "vitality" ;
lin vitalize_V2 = mkV2 (mkV "vitalize" "vitalizes" "vitalized" "vitalized" "vitalizing");
lin vitamin_N = mkN "vitamin" "vitamins";
lin vitiate_V2 = mkV2 (mkV "vitiate" "vitiates" "vitiated" "vitiated" "vitiating");
lin vitoria_PN = mkPN "Vitoria";
lin vitreous_A = compoundA (mkA "vitreous");
lin vitrify_V = mkV "vitrify" "vitrifies" "vitrified" "vitrified" "vitrifying";
lin vitrify_V2 = mkV2 (mkV "vitrify" "vitrifies" "vitrified" "vitrified" "vitrifying");
lin vitriol_N = mkN "vitriol" ;
lin vitriolic_A = compoundA (mkA "vitriolic");
lin vituperate_V2 = mkV2 (mkV "vituperate" "vituperates" "vituperated" "vituperated" "vituperating");
lin vituperation_N = mkN "vituperation" ;
lin vituperative_A = compoundA (mkA "vituperative");
lin viv_PN = mkPN "Viv";
lin viva_N = mkN "viva" "vivas";
lin viva_voce_A = compoundA (mkA "viva voce");
lin viva_voce_Adv = mkAdv "viva voce";
lin viva_voce_N = mkN "viva voce" "viva voces";
lin vivace_Adv = mkAdv "vivace";
lin vivacious_A = compoundA (mkA "vivacious");
lin vivacity_N = mkN "vivacity" ;
lin vivian_PN = mkPN "Vivian";
lin vivid_A = compoundA (mkA "vivid");
lin vividness_N = mkN "vividness" ;
lin vivien_PN = mkPN "Vivien";
lin vivienne_PN = mkPN "Vivienne";
lin viviparous_A = compoundA (mkA "viviparous");
lin vivisect_V2 = mkV2 (mkV "vivisect" "vivisects" "vivisected" "vivisected" "vivisecting");
lin vivisection_N = mkN "vivisection" "vivisections";
lin vivisectionist_N = mkN "vivisectionist" "vivisectionists";
lin vixen_N = mkN "vixen" "vixens";
lin vixenish_A = compoundA (mkA "vixenish");
lin viz_PN = mkPN "Viz";
lin vizier_N = mkN "vizier" "viziers";
lin vocabulary_N = mkN "vocabulary" "vocabularies";
lin vocal_A = compoundA (mkA "vocal");
lin vocalist_N = mkN "vocalist" "vocalists";
lin vocalize_V2 = mkV2 (mkV "vocalize" "vocalizes" "vocalized" "vocalized" "vocalizing");
lin vocation_N = mkN "vocation" "vocations";
lin vocational_A = compoundA (mkA "vocational");
lin vocative_A = compoundA (mkA "vocative");
lin vocative_N = mkN "vocative" "vocatives";
lin vociferate_V = mkV "vociferate" "vociferates" "vociferated" "vociferated" "vociferating";
lin vociferate_V2 = mkV2 (mkV "vociferate" "vociferates" "vociferated" "vociferated" "vociferating");
lin vociferation_N = mkN "vociferation" ;
lin vociferous_A = compoundA (mkA "vociferous");
lin vodka_N = mkN "vodka" "vodkas";
lin vogue_N = mkN "vogue" "vogues";
lin voice_N = mkN "voice" "voices";
lin voice_V2 = mkV2 (mkV "voice" "voices" "voiced" "voiced" "voicing");
lin voiced_A = compoundA (mkA "voiced");
lin voiceless_A = compoundA (mkA "voiceless");
lin void_A = compoundA (mkA "void");
lin void_N = mkN "void" "voids";
lin void_V2 = mkV2 (mkV "void" "voids" "voided" "voided" "voiding");
lin voile_N = mkN "voile" ;
lin vol_N = mkN "vol" "vols" ;
lin volatile_A = compoundA (mkA "volatile");
lin volatility_N = mkN "volatility" "volatilities";
lin volcanic_A = compoundA (mkA "volcanic");
lin volcano_N = mkN "volcano" "volcanos";
lin vole_N = mkN "vole" "voles";
lin volgograd_PN = mkPN "Volgograd";
lin volition_N = mkN "volition" ;
lin volitional_A = compoundA (mkA "volitional");
lin volley_N = mkN "volley" "volleys";
lin volley_V = mkV "volley" "volleys" "volleyed" "volleyed" "volleying";
lin volley_V2 = mkV2 (mkV "volley" "volleys" "volleyed" "volleyed" "volleying");
lin volleyball_N = mkN "volleyball" "volleyballs";
lin volt_N = mkN "volt" "volts";
lin voltage_N = mkN "voltage" "voltages";
lin volte_face_N = mkN "volte - face" "IRREG";
lin volubility_N = mkN "volubility" ;
lin voluble_A = compoundA (mkA "voluble");
lin volume_N = mkN "volume" "volumes";
lin voluminous_A = compoundA (mkA "voluminous");
lin voluntary_A = compoundA (mkA "voluntary");
lin voluntary_N = mkN "voluntary" "voluntaries";
lin volunteer_N = mkN "volunteer" "volunteers";
lin volunteer_V = mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering";
lin volunteer_V2 = mkV2 (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering");
lin volunteer_V2V = mkV2V (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering") noPrep to_Prep ;
lin volunteer_VS = mkVS (mkV "volunteer" "volunteers" "volunteered" "volunteered" "volunteering");
lin voluptuary_N = mkN "voluptuary" "voluptuaries";
lin voluptuous_A = compoundA (mkA "voluptuous");
lin voluptuousness_N = mkN "voluptuousness" ;
lin volute_N = mkN "volute" "volutes";
lin voluted_A = compoundA (mkA "voluted");
lin vomit_N = mkN "vomit" ;
lin vomit_V = mkV "vomit" "vomits" "vomited" "vomited" "vomiting";
lin vomit_V2 = mkV2 (mkV "vomit" "vomits" "vomited" "vomited" "vomiting");
lin voodoo_N = mkN "voodoo" ;
lin voodooism_N = mkN "voodooism" ;
lin voracious_A = compoundA (mkA "voracious");
lin voracity_N = mkN "voracity" ;
lin voronezh_PN = mkPN "Voronezh";
lin vortex_N = mkN "vortex" "vortexes";
lin votary_N = mkN "votary" "votaries";
lin vote_N = mkN "vote" "votes";
lin vote_V = mkV "vote" "votes" "voted" "voted" "voting";
lin vote_V2 = mkV2 (mkV "vote" "votes" "voted" "voted" "voting");
lin vote_VV = mkVV (mkV "vote" "votes" "voted" "voted" "voting");
lin vote_VS = mkVS (mkV "vote" "votes" "voted" "voted" "voting");
lin voteless_A = compoundA (mkA "voteless");
lin voter_N = mkN "voter" "voters";
lin votive_A = compoundA (mkA "votive");
lin vouch_V = mkV "vouch" "vouches" "vouched" "vouched" "vouching";
lin voucher_N = mkN "voucher" "vouchers";
lin vouchsafe_V2 = mkV2 (mkV "vouchsafe" "vouchsafes" "vouchsafed" "vouchsafed" "vouchsafing");
lin vow_N = mkN "vow" "vows";
lin vow_V2 = mkV2 (mkV "vow" "vows" "vowed" "vowed" "vowing");
lin vow_VV = mkVV (mkV "vow");
lin vow_VS = mkVS (mkV "vow");
lin vowel_N = mkN "vowel" "vowels";
lin vox_N = mkN "vox" "IRREG";
lin vox_populi_N = mkN "vox populi" "IRREG";
lin voyage_N = mkN "voyage" "voyages";
lin voyage_V = mkV "voyage" "voyages" "voyaged" "voyaged" "voyaging";
lin voyager_N = mkN "voyager" "voyagers";
lin voyeur_N = mkN "voyeur" "voyeurs";
lin voyeurism_N = mkN "voyeurism" ;
lin voyeuristic_A = compoundA (mkA "voyeuristic");
lin voyeuristically_Adv = mkAdv "voyeuristically";
lin vp_N = mkN "vp" ;
lin vs_PN = mkPN "Vs";
lin vs_Prep = mkPrep "vs.";
lin vso_PN = mkPN "Vso";
lin vulcanite_N = mkN "vulcanite" ;
lin vulcanization_N = mkN "vulcanization" "vulcanizations";
lin vulcanize_V2 = mkV2 (mkV "vulcanize" "vulcanizes" "vulcanized" "vulcanized" "vulcanizing");
lin vulgar_A = compoundA (mkA "vulgar");
lin vulgarian_N = mkN "vulgarian" "vulgarians";
lin vulgarism_N = mkN "vulgarism" "vulgarisms";
lin vulgarity_N = mkN "vulgarity" "vulgarities";
lin vulgarization_N = mkN "vulgarization" ;
lin vulgarize_V2 = mkV2 (mkV "vulgarize" "vulgarizes" "vulgarized" "vulgarized" "vulgarizing");
lin vulgate_N = mkN "vulgate" "vulgates";
lin vulnerability_N = mkN "vulnerability" "vulnerabilities";
lin vulnerable_A = compoundA (mkA "vulnerable");
lin vulpine_A = compoundA (mkA "vulpine");
lin vulture_N = mkN "vulture" "vultures";
lin vulva_N = mkN "vulva" "vulvas";
lin wad_N = mkN "wad" "wads";
lin wad_V2 = mkV2 (mkV "wad" "wads" "wadded" "wadded" "wadding");
lin wad_VS = mkVS (mkV "wad");
lin wadding_N = mkN "wadding" ;
lin waddle_N = mkN "waddle" "IRREG";
lin waddle_V = mkV "waddle" "waddles" "waddled" "waddled" "waddling";
lin wade_V = mkV "wade" "wades" "waded" "waded" "wading";
lin wade_V2 = mkV2 (mkV "wade" "wades" "waded" "waded" "wading");
lin wader_N = mkN "wader" "waders";
lin wadi_N = mkN "wadi" "wadis";
lin wafer_N = mkN "wafer" "wafers";
lin waffle_N = mkN "waffle" "waffles";
lin waffle_V = mkV "waffle" "waffles" "waffled" "waffled" "waffling";
lin waffle_V2 = mkV2 (mkV "waffle" "waffles" "waffled" "waffled" "waffling");
lin waft_N = mkN "waft" "wafts";
lin waft_V2 = mkV2 (mkV "waft" "wafts" "wafted" "wafted" "wafting");
lin wag_N = mkN "wag" "wags";
lin wag_V = mkV "wag" "wags" "wagged" "wagged" "wagging";
lin wag_V2 = mkV2 (mkV "wag" "wags" "wagged" "wagged" "wagging");
lin wage_N = mkN "wage" "wages";
lin wage_V2 = mkV2 (mkV "wage" "wages" "waged" "waged" "waging");
lin wage_claim_N = mkN "wage - claim" "wage - claims";
lin wage_earner_N = mkN "wage - earner" "wage - earners";
lin wage_freeze_N = mkN "wage - freeze" "wage - freezes";
lin wager_N = mkN "wager" "wagers";
lin wager_V = mkV "wager" "wagers" "wagered" "wagered" "wagering";
lin wager_V2 = mkV2 (mkV "wager" "wagers" "wagered" "wagered" "wagering");
lin waggery_N = mkN "waggery" "waggeries";
lin waggish_A = compoundA (mkA "waggish");
lin waggishness_N = mkN "waggishness" ;
lin waggle_V = mkV "waggle" "waggles" "waggled" "waggled" "waggling";
lin waggle_V2 = mkV2 (mkV "waggle" "waggles" "waggled" "waggled" "waggling");
lin waggon_N = mkN "waggon" "waggons";
lin waggoner_N = mkN "waggoner" "waggoners";
lin wagon_lit_N = mkN "wagon - lit" "IRREG";
lin wagtail_N = mkN "wagtail" "wagtails";
lin waif_N = mkN "waif" "waifs";
lin wail_N = mkN "wail" "wails";
lin wail_V = mkV "wail" "wails" "wailed" "wailed" "wailing";
lin wail_V2 = mkV2 (mkV "wail" "wails" "wailed" "wailed" "wailing");
lin wain_N = mkN "wain" "wains";
lin wainscot_N = mkN "wainscot" "wainscots";
lin wainscoted_A = compoundA (mkA "wainscoted");
lin waist_N = mkN "waist" "waists";
lin waist_deep_A = compoundA (mkA "waist - deep");
lin waist_deep_Adv = mkAdv "waist - deep";
lin waist_high_A = compoundA (mkA "waist - high");
lin waist_high_Adv = mkAdv "waist - high";
lin waistband_N = mkN "waistband" "waistbands";
lin waistcoat_N = mkN "waistcoat" "waistcoats";
lin waistline_N = mkN "waistline" "waistlines";
lin wait_N = mkN "wait" "waits";
lin wait_V = mkV "wait" "waits" "waited" "waited" "waiting";
lin wait_V2 = mkV2 (mkV "wait" "waits" "waited" "waited" "waiting");
lin wait_VV = mkVV (mkV "wait" "waits" "waited" "waited" "waiting");
lin waiter_N = mkN "waiter" "waiters";
lin waiting_list_N = mkN "waiting - list" "waiting - lists";
lin waiting_room_N = mkN "waiting - room" "waiting - rooms";
lin waitress_N = mkN "waitress" "waitresses";
lin waive_V2 = mkV2 (mkV "waive" "waives" "waived" "waived" "waiving");
lin waiver_N = mkN "waiver" "waivers";
lin waiver_V = mkV "waiver";
lin wake_N = mkN "wake" "wakes";
lin wake_V = mkV "wake" "wakes" "waked" "waked" "waking";
lin wake_V2 = mkV2 (mkV "wake" "wakes" "waked" "waked" "waking");
lin wakefield_PN = mkPN "Wakefield";
lin wakeful_A = compoundA (mkA "wakeful");
lin wakefulness_N = mkN "wakefulness" ;
lin waken_V = mkV "waken" "wakens" "wakened" "wakened" "wakening";
lin waken_V2 = mkV2 (mkV "waken" "wakens" "wakened" "wakened" "wakening");
lin waking_A = compoundA (mkA "waking");
lin wale_N = mkN "wale" "wales";
lin wales_PN = mkPN "Wales";
lin walk_N = mkN "walk" "walks";
lin walk_V = mkV "walk" "walks" "walked" "walked" "walking";
lin walk_V2 = mkV2 (mkV "walk" "walks" "walked" "walked" "walking");
lin walkabout_N = mkN "walkabout" "walkabouts";
lin walkaway_N = mkN "walkaway" "walkaways";
lin walker_N = mkN "walker" "walkers";
lin walkie_talkie_N = mkN "walkie - talkie" "walkie - talkies";
lin walking_N = mkN "walking" ;
lin walkout_N = mkN "walkout" "walkouts";
lin walkover_N = mkN "walkover" "walkovers";
lin wall_N = mkN "wall" "walls";
lin wall_V2 = mkV2 (mkV "wall" "walls" "walled" "walled" "walling");
lin wall_eyed_A = compoundA (mkA "wall - eyed");
lin wall_painting_N = mkN "wall - painting" "wall - paintings";
lin wall_street_PN = mkPN "Wall street";
lin wallaby_N = mkN "wallaby" "wallabies";
lin wallace_PN = mkPN "Wallace";
lin wallah_N = mkN "wallah" "wallahs";
lin wallasey_PN = mkPN "Wallasey";
lin wallet_N = mkN "wallet" "wallets";
lin wallflower_N = mkN "wallflower" "wallflowers";
lin wallingford_PN = mkPN "Wallingford";
lin wallop_N = mkN "wallop" "wallops";
lin wallop_V2 = mkV2 (mkV "wallop" "wallops" "walloped" "walloped" "walloping");
lin walloping_A = compoundA (mkA "walloping");
lin wallow_N = mkN "wallow" "wallows";
lin wallow_V = mkV "wallow" "wallows" "wallowed" "wallowed" "wallowing";
lin wallpaper_N = mkN "wallpaper" ;
lin wallsend_PN = mkPN "Wallsend";
lin wally_PN = mkPN "Wally";
lin walnut_N = mkN "walnut" "walnuts";
lin walrus_N = mkN "walrus" "walruses";
lin walsall_PN = mkPN "Walsall";
lin walsham_PN = mkPN "Walsham";
lin walter_PN = mkPN "Walter";
lin waltham_forest_PN = mkPN "Waltham forest";
lin walton_PN = mkPN "Walton";
lin waltz_N = mkN "waltz" "waltzes";
lin waltz_V = mkV "waltz" "waltzes" "waltzed" "waltzed" "waltzing";
lin waltz_V2 = mkV2 (mkV "waltz" "waltzes" "waltzed" "waltzed" "waltzing");
lin wampum_N = mkN "wampum" ;
lin wan_A = mkA "wan" "wanner*";
lin wand_N = mkN "wand" "wands";
lin wander_V = mkV "wander" "wanders" "wandered" "wandered" "wandering";
lin wander_V2 = mkV2 (mkV "wander" "wanders" "wandered" "wandered" "wandering");
lin wanderer_N = mkN "wanderer" "wanderers";
lin wanderlust_N = mkN "wanderlust" ;
lin wandsworth_PN = mkPN "Wandsworth";
lin wane_N = mkN "wane" "wanes";
lin wane_V = mkV "wane" "wanes" "waned" "waned" "waning";
lin wangle_N = mkN "wangle" "wangles";
lin wangle_V2 = mkV2 (mkV "wangle" "wangles" "wangled" "wangled" "wangling");
lin wank_N = mkN "wank" "wanks";
lin wank_V = mkV "wank" "wanks" "wanked" "wanked" "wanking";
lin wanness_N = mkN "wanness" ;
lin want_N = mkN "want";
lin want_V = mkV "want";
lin want_V2 = mkV2 (mkV "want");
lin want_V2V = mkV2V (mkV "want") noPrep to_Prep ;
lin want_VS = mkVS (mkV "want");
lin want_VV = mkVV (mkV "want");
lin want_ad_N = mkN "want - ad" "want - ads";
lin wantage_PN = mkPN "Wantage";
lin wanton_A = compoundA (mkA "wanton");
lin wanton_N = mkN "wanton" "wantons";
lin wanton_V = mkV "wanton" "wantons" "wantoned" "wantoned" "wantoning";
lin wantonness_N = mkN "wantonness" ;
lin war_N = mkN "war" "wars";
lin war_V = mkV "war" "wars" "warred" "warred" "warring";
lin war_baby_N = mkN "war - baby" "war - babies";
lin war_bride_N = mkN "war - bride" "war - brides";
lin war_cloud_N = mkN "war - cloud" "war - clouds";
lin war_cry_N = mkN "war - cry" "war - cries";
lin war_dance_N = mkN "war - dance" "war - dances";
lin war_god_N = mkN "war - god" "war - gods";
lin war_torn_A = compoundA (mkA "war - torn");
lin war_widow_N = mkN "war - widow" "war - widows";
lin warble_N = mkN "warble" "warbles";
lin warble_V = mkV "warble" "warbles" "warbled" "warbled" "warbling";
lin warble_V2 = mkV2 (mkV "warble" "warbles" "warbled" "warbled" "warbling");
lin warbler_N = mkN "warbler" "warblers";
lin ward_N = mkN "ward" "wards";
lin ward_V2 = mkV2 (mkV "ward" "wards" "warded" "warded" "warding");
lin warden_N = mkN "warden" "wardens";
lin warder_N = mkN "warder" "warders";
lin wardress_N = mkN "wardress" "wardresses";
lin wardrobe_N = mkN "wardrobe" "wardrobes";
lin wardroom_N = mkN "wardroom" "wardrooms";
lin ware_N = mkN "ware" "wares";
lin ware_PN = mkPN "Ware";
lin ware_V2 = mkV2 (mkV "ware" "wares" "wared" "wared" "waring");
lin warehouse_N = mkN "warehouse" "warehouses";
lin warehousing_N = mkN "warehousing" ;
lin warfare_N = mkN "warfare" ;
lin warhead_N = mkN "warhead" "warheads";
lin warhorse_N = mkN "warhorse" "warhorses";
lin warily_Adv = mkAdv "warily";
lin wariness_N = mkN "wariness" ;
lin warley_PN = mkPN "Warley";
lin warlike_A = compoundA (mkA "warlike");
lin warlord_N = mkN "warlord" "warlords";
lin warm_A = mkA "warm" "warmer";
lin warm_V = mkV "warm" "warms" "warmed" "warmed" "warming";
lin warm_V2 = mkV2 (mkV "warm" "warms" "warmed" "warmed" "warming");
lin warm_blooded_A = compoundA (mkA "warm - blooded");
lin warm_hearted_A = compoundA (mkA "warm - hearted");
lin warmer_N = mkN "warmer" "warmers";
lin warming_pan_N = mkN "warming - pan" "warming - pans";
lin warminster_PN = mkPN "Warminster";
lin warmonger_N = mkN "warmonger" "warmongers";
lin warmth_N = mkN "warmth" ;
lin warn_V = mkV "warn";
lin warn_V2 = mkV2 (mkV "warn" "warns" "warned" "warned" "warning");
lin warn_VS = mkVS (mkV "warn");
lin warning_A = compoundA (mkA "warning");
lin warning_N = mkN "warning" "warnings";
lin warp_N = mkN "warp" "warps";
lin warp_V = mkV "warp" "warps" "warped" "warped" "warping";
lin warp_V2 = mkV2 (mkV "warp" "warps" "warped" "warped" "warping");
lin warpaint_N = mkN "warpaint" ;
lin warpath_N = mkN "warpath" "warpaths";
lin warrant_N = mkN "warrant" "warrants";
lin warrant_V2 = mkV2 (mkV "warrant" "warrants" "warranted" "warranted" "warranting");
lin warrant_VS = mkVS (mkV "warrant");
lin warrantee_N = mkN "warrantee" "warrantees";
lin warrantor_N = mkN "warrantor" "warrantors";
lin warranty_N = mkN "warranty" "warranties";
lin warren_N = mkN "warren" "warrens";
lin warrington_PN = mkPN "Warrington";
lin warrior_N = mkN "warrior" "warriors";
lin warsaw_PN = mkPN "Warsaw";
lin warship_N = mkN "warship" "warships";
lin warsop_PN = mkPN "Warsop";
lin wart_N = mkN "wart" "warts";
lin warthog_N = mkN "warthog" "warthogs";
lin wartime_N = mkN "wartime" ;
lin warwick_PN = mkPN "Warwick";
lin warwickshire_PN = mkPN "Warwickshire";
lin wary_A = mkA "wary" "warier";
lin wash_N = mkN "wash" "washes";
lin wash_V = mkV "wash" "washes" "washed" "washed" "washing";
lin wash_V2 = mkV2 (mkV "wash" "washes" "washed" "washed" "washing");
lin wash_drawing_N = mkN "wash - drawing" "wash - drawings";
lin wash_hand_basin_N = mkN "wash - hand - basin" "wash - hand - basins";
lin wash_hand_stand_N = mkN "wash - hand - stand" "wash - hand - stands";
lin wash_house_N = mkN "wash - house" "wash - houses";
lin wash_leather_N = mkN "wash - leather" "wash - leathers";
lin washable_A = compoundA (mkA "washable");
lin washbasin_N = mkN "washbasin" "washbasins";
lin washboard_N = mkN "washboard" "washboards";
lin washbowl_N = mkN "washbowl" "washbowls";
lin washcloth_N = mkN "washcloth" "washcloths";
lin washday_N = mkN "washday" "washdays";
lin washer_N = mkN "washer" "washers";
lin washerwoman_N = mkN "washerwoman" "washerwomen" {- FIXME: guessed plural form -};
lin washing_N = mkN "washing" ;
lin washing_day_N = mkN "washing - day" "washing - days";
lin washing_machine_N = mkN "washing - machine" "washing - machines";
lin washing_up_N = mkN "washing - up" "washing - ups";
lin washington_PN = mkPN "Washington";
lin washington_dc_PN = mkPN "Washington dc";
lin washout_N = mkN "washout" "washouts";
lin washroom_N = mkN "washroom" "washrooms";
lin washstand_N = mkN "washstand" "washstands";
lin washtub_N = mkN "washtub" "washtubs";
lin washy_A = compoundA (mkA "washy");
lin wasp_N = mkN "wasp" "wasps";
lin wasp_waisted_A = compoundA (mkA "wasp - waisted");
lin waspish_A = compoundA (mkA "waspish");
lin wassail_N = mkN "wassail" "wassails";
lin wastage_N = mkN "wastage" ;
lin waste_A = compoundA (mkA "waste");
lin waste_N = mkN "waste" "wastes";
lin waste_V = mkV "waste" "wastes" "wasted" "wasted" "wasting";
lin waste_V2 = mkV2 (mkV "waste" "wastes" "wasted" "wasted" "wasting");
lin waste_paper_basket_N = mkN "waste - paper - basket" "waste - paper - baskets";
lin waste_pipe_N = mkN "waste - pipe" "waste - pipes";
lin wastebasket_N = mkN "wastebasket" "wastebaskets";
lin wastebin_N = mkN "wastebin" "wastebins";
lin wasteful_A = compoundA (mkA "wasteful");
lin wasteland_N = mkN "wasteland" "wastelands";
lin waster_N = mkN "waster" "wasters";
lin wastrel_N = mkN "wastrel" "wastrels";
lin watch_N = mkN "watch" "watches";
lin watch_V = mkV "watch" "watches" "watched" "watched" "watching";
lin watch_V2 = mkV2 (mkV "watch" "watches" "watched" "watched" "watching");
lin watch_V2V = mkV2V (mkV "watch" "watches" "watched" "watched" "watching") noPrep to_Prep ;
lin watch_VS = mkVS (mkV "watch" "watches" "watched" "watched" "watching");
lin watch_chain_N = mkN "watch - chain" "watch - chains";
lin watch_glass_N = mkN "watch - glass" "watch - glasses";
lin watch_guard_N = mkN "watch - guard" "watch - guards";
lin watch_key_N = mkN "watch - key" "watch - keys";
lin watchdog_N = mkN "watchdog" "watchdogs";
lin watcher_N = mkN "watcher" "watchers";
lin watchful_A = compoundA (mkA "watchful");
lin watchfulness_N = mkN "watchfulness" ;
lin watchmaker_N = mkN "watchmaker" "watchmakers";
lin watchman_N = mkN "watchman" "watchmen" {- FIXME: guessed plural form -};
lin watchtower_N = mkN "watchtower" "watchtowers";
lin watchword_N = mkN "watchword" "watchwords";
lin water_N = mkN "water" "waters";
lin water_V = mkV "water" "waters" "watered" "watered" "watering";
lin water_V2 = mkV2 (mkV "water" "waters" "watered" "watered" "watering");
lin water_biscuit_N = mkN "water - biscuit" "water - biscuits";
lin water_blister_N = mkN "water - blister" "water - blisters";
lin water_bottle_N = mkN "water - bottle" "water - bottles";
lin water_buffalo_N = mkN "water - buffalo" "water - buffalos";
lin water_butt_N = mkN "water - butt" "water - butts";
lin water_cart_N = mkN "water - cart" "water - carts";
lin water_closet_N = mkN "water - closet" "water - closets";
lin water_finder_N = mkN "water - finder" "water - finders";
lin water_glass_N = mkN "water - glass" ;
lin water_hole_N = mkN "water - hole" "water - holes";
lin water_ice_N = mkN "water - ice" "water - ices";
lin water_jacket_N = mkN "water - jacket" "water - jackets";
lin water_level_N = mkN "water - level" "water - levels";
lin water_lily_N = mkN "water - lily" "water - lilies";
lin water_line_N = mkN "water - line" "water - lines";
lin water_main_N = mkN "water - main" "water - mains";
lin water_nymph_N = mkN "water - nymph" "water - nymphs";
lin water_polo_N = mkN "water - polo" ;
lin water_power_N = mkN "water - power" ;
lin water_rat_N = mkN "water - rat" "water - rats";
lin water_rate_N = mkN "water - rate" "water - rates";
lin water_skiing_N = mkN "water - skiing" ;
lin water_skin_N = mkN "water - skin" "water - skins";
lin water_softener_N = mkN "water - softener" "water - softeners";
lin water_spaniel_N = mkN "water - spaniel" "water - spaniels";
lin water_supply_N = mkN "water - supply" "water - supplies";
lin water_tower_N = mkN "water - tower" "water - towers";
lin water_vole_N = mkN "water - vole" "water - voles";
lin water_waggon_N = mkN "water - waggon" "water - waggons";
lin water_wagon_N = mkN "water - wagon" "water - wagons";
lin water_wheel_N = mkN "water - wheel" "water - wheels";
lin water_worn_A = compoundA (mkA "water - worn");
lin waterbird_N = mkN "waterbird" "waterbirds";
lin waterborne_A = compoundA (mkA "waterborne");
lin watercannon_N = mkN "watercannon" "watercannons";
lin waterchute_N = mkN "waterchute" "waterchutes";
lin watercolour_N = mkN "watercolour" "watercolours";
lin watercolourist_N = mkN "watercolourist" "watercolourists";
lin watercourse_N = mkN "watercourse" "watercourses";
lin watercress_N = mkN "watercress" ;
lin waterfall_N = mkN "waterfall" "waterfalls";
lin waterford_PN = mkPN "Waterford";
lin waterfowl_N = mkN "waterfowl" "waterfowls";
lin waterfront_N = mkN "waterfront" "waterfronts";
lin waterhen_N = mkN "waterhen" "waterhens";
lin waterhyacinth_N = mkN "waterhyacinth" "waterhyacinths";
lin watering_can_N = mkN "watering - can" "watering - cans";
lin watering_cart_N = mkN "watering - cart" "watering - carts";
lin waterless_A = compoundA (mkA "waterless");
lin waterlogged_A = compoundA (mkA "waterlogged");
lin waterloo_PN = mkPN "Waterloo";
lin waterman_N = mkN "waterman" "watermen" {- FIXME: guessed plural form -};
lin watermark_N = mkN "watermark" "watermarks";
lin watermelon_N = mkN "watermelon" "watermelons";
lin watermill_N = mkN "watermill" "watermills";
lin waterproof_A = compoundA (mkA "waterproof");
lin waterproof_N = mkN "waterproof" "waterproofs";
lin waterproof_V2 = mkV2 (mkV "waterproof" "waterproofs" "waterproofed" "waterproofed" "waterproofing");
lin watershed_N = mkN "watershed" "watersheds";
lin waterside_N = mkN "waterside" "watersides";
lin waterspout_N = mkN "waterspout" "waterspouts";
lin watertable_N = mkN "watertable" "watertables";
lin watertight_A = compoundA (mkA "watertight");
lin waterway_N = mkN "waterway" "waterways";
lin waterworks_N = mkN "waterworks" "waterworks";
lin watery_A = mkA "watery" "waterier";
lin watford_PN = mkPN "Watford";
lin watt_N = mkN "watt" "watts";
lin wattage_N = mkN "wattage" "wattages";
lin wattle_N = mkN "wattle" "wattles";
lin wave_N = mkN "wave" "waves";
lin wave_V = mkV "wave" "waves" "waved" "waved" "waving";
lin wave_V2 = mkV2 (mkV "wave" "waves" "waved" "waved" "waving");
lin wavelength_N = mkN "wavelength" "wavelengths";
lin waver_V = mkV "waver" "wavers" "wavered" "wavered" "wavering";
lin waverer_N = mkN "waverer" "waverers";
lin wavy_A = mkA "wavy" "wavier";
lin wax_N = mkN "wax" "waxes";
lin wax_V = mkV "wax" "waxes" "waxed" "waxed" "waxing";
lin wax_V2 = mkV2 (mkV "wax" "waxes" "waxed" "waxed" "waxing");
lin wax_chandler_N = mkN "wax - chandler" "wax - chandlers";
lin wax_paper_N = mkN "wax - paper" "wax - papers";
lin waxen_A = compoundA (mkA "waxen");
lin waxwork_N = mkN "waxwork" "waxworks";
lin waxy_A = mkA "waxy" "waxier";
lin way_Adv = mkAdv "way";
lin way_N = mkN "way" "ways";
lin way_out_A = compoundA (mkA "way - out");
lin waybill_N = mkN "waybill" "waybills";
lin wayfarer_N = mkN "wayfarer" "wayfarers";
lin wayfaring_A = compoundA (mkA "wayfaring");
lin waylay_V2 = mkV2 (mkV "way" IrregEng.lay_V);
lin wayne_PN = mkPN "Wayne";
lin wayside_N = mkN "wayside" "waysides";
lin wayward_A = compoundA (mkA "wayward");
lin wc_N = mkN "WC" "WCs" ;
lin we_Pron = mkPron "we" "us" "our" "ours" plural P1 human ;
lin weak_A = mkA "weak" "weaker";
lin weak_kneed_A = compoundA (mkA "weak - kneed");
lin weaken_V = mkV "weaken" "weakens" "weakened" "weakened" "weakening";
lin weaken_V2 = mkV2 (mkV "weaken" "weakens" "weakened" "weakened" "weakening");
lin weakling_N = mkN "weakling" "weaklings";
lin weakly_A = mkA "weakly" "weaklier";
lin weakness_N = mkN "weakness" "weaknesses";
lin weal_N = mkN "weal" "weals";
lin weald_N = mkN "weald" "wealds";
lin wealth_N = mkN "wealth" ;
lin wealthily_Adv = mkAdv "wealthily";
lin wealthy_A = mkA "wealthy" "wealthier";
lin wean_V2 = mkV2 (mkV "wean" "weans" "weaned" "weaned" "weaning");
lin weapon_N = mkN "weapon" "weapons";
lin weaponless_A = compoundA (mkA "weaponless");
lin wear_N = mkN "wear" ;
lin wear_PN = mkPN "Wear";
lin wear_V = IrregEng.wear_V;
lin wear_V2 = mkV2 (IrregEng.wear_V);
lin wearable_A = compoundA (mkA "wearable");
lin wearer_N = mkN "wearer" "wearers";
lin wearily_Adv = mkAdv "wearily";
lin weariness_N = mkN "weariness" ;
lin wearing_A = compoundA (mkA "wearing");
lin wearisome_A = compoundA (mkA "wearisome");
lin weary_A = mkA "weary" "wearier";
lin weary_V = mkV "weary" "wearies" "wearied" "wearied" "wearying";
lin weary_V2 = mkV2 (mkV "weary" "wearies" "wearied" "wearied" "wearying");
lin weasel_N = mkN "weasel" "weasels";
lin weather_N = mkN "weather" "weathers";
lin weather_V = mkV "weather" "weathers" "weathered" "weathered" "weathering";
lin weather_V2 = mkV2 (mkV "weather" "weathers" "weathered" "weathered" "weathering");
lin weather_beaten_A = compoundA (mkA "weather - beaten");
lin weather_bound_A = compoundA (mkA "weather - bound");
lin weather_bureau_N = mkN "weather - bureau" "weather - bureaus";
lin weather_chart_N = mkN "weather - chart" "weather - charts";
lin weather_glass_N = mkN "weather - glass" "weather - glasses";
lin weather_map_N = mkN "weather - map" "weather - maps";
lin weather_ship_N = mkN "weather - ship" "weather - ships";
lin weather_station_N = mkN "weather - station" "weather - stations";
lin weather_vane_N = mkN "weather - vane" "weather - vanes";
lin weatherboarding_N = mkN "weatherboarding" ;
lin weathercock_N = mkN "weathercock" "weathercocks";
lin weatherman_N = mkN "weatherman" "weathermen" {- FIXME: guessed plural form -};
lin weatherproof_A = compoundA (mkA "weatherproof");
lin weave_N = mkN "weave" "weaves";
lin weave_V = IrregEng.weave_V;
lin weave_V2 = mkV2 (IrregEng.weave_V);
lin weaver_N = mkN "weaver" "weavers";
lin weaverbird_N = mkN "weaverbird" "weaverbirds";
lin web_N = mkN "web" "webs";
lin web_footed_A = compoundA (mkA "web - footed");
lin web_toed_A = compoundA (mkA "web - toed");
lin webbed_A = compoundA (mkA "webbed");
lin webbing_N = mkN "webbing" ;
lin wed_PN = mkPN "Wed";
lin wed_V = mkV "wed" "weds" "wedded" "wedded" "wedding";
lin wed_V2 = mkV2 (mkV "wed" "weds" "wedded" "wedded" "wedding");
lin wedding_N = mkN "wedding" "weddings";
lin wedding_cake_N = mkN "wedding - cake" "wedding - cakes";
lin wedding_ring_N = mkN "wedding - ring" "wedding - rings";
lin wedge_N = mkN "wedge" "wedges";
lin wedge_V = mkV "wedge" "wedges" "wedged" "wedged" "wedging";
lin wedge_V2 = mkV2 (mkV "wedge" "wedges" "wedged" "wedged" "wedging");
lin wedlock_N = mkN "wedlock" ;
lin wednesday_N = mkN "Wednesday" "Wednesdays";
lin wednesday_PN = mkPN "Wednesday";
lin wee_A = compoundA (mkA "wee");
lin wee_N = mkN "wee" "wees";
lin wee_V = mkV "wee" "IRREG" "IRREG" "IRREG" "IRREG";
lin wee_wee_N = mkN "wee - wee" "wee - wees";
lin weed_N = mkN "weed" "weeds";
lin weed_V = mkV "weed" "weeds" "weeded" "weeded" "weeding";
lin weed_V2 = mkV2 (mkV "weed" "weeds" "weeded" "weeded" "weeding");
lin weedkiller_N = mkN "weedkiller" "weedkillers";
lin weedy_A = mkA "weedy" "weedier";
lin week_N = mkN "week" "weeks";
lin weekday_N = mkN "weekday" "weekdays";
lin weekend_N = mkN "weekend" "weekends";
lin weekend_V = mkV "weekend" "weekends" "weekended" "weekended" "weekending";
lin weekender_N = mkN "weekender" "weekenders";
lin weekly_A = compoundA (mkA "weekly");
lin weekly_Adv = mkAdv "weekly";
lin weekly_N = mkN "weekly" "weeklies";
lin weeny_A = mkA "weeny" "weenier";
lin weep_V = IrregEng.weep_V;
lin weep_V2 = mkV2 (IrregEng.weep_V);
lin weeping_A = compoundA (mkA "weeping");
lin weevil_N = mkN "weevil" "weevils";
lin weft_N = mkN "weft" "wefts";
lin weigh_V = mkV "weigh" "weighs" "weighed" "weighed" "weighing";
lin weigh_V2 = mkV2 (mkV "weigh" "weighs" "weighed" "weighed" "weighing");
lin weighbridge_N = mkN "weighbridge" "weighbridges";
lin weighing_machine_N = mkN "weighing - machine" "weighing - machines";
lin weight_N = mkN "weight" "weights";
lin weight_V2 = mkV2 (mkV "weight" "weights" "weighted" "weighted" "weighting");
lin weightily_Adv = mkAdv "weightily";
lin weightiness_N = mkN "weightiness" ;
lin weightless_A = compoundA (mkA "weightless");
lin weightlessness_N = mkN "weightlessness" ;
lin weightlifting_N = mkN "weightlifting" ;
lin weighty_A = mkA "weighty" "weightier";
lin weir_N = mkN "weir" "weirs";
lin weird_A = mkA "weird" "weirder";
lin weirdie_N = mkN "weirdie" "weirdies";
lin weirdness_N = mkN "weirdness" ;
lin welcome_A = compoundA (mkA "welcome");
lin welcome_N = mkN "welcome" "welcomes";
lin welcome_V2 = mkV2 (mkV "welcome" "welcomes" "welcomed" "welcomed" "welcoming");
lin weld_N = mkN "weld" "welds";
lin weld_V = mkV "weld" "welds" "welded" "welded" "welding";
lin weld_V2 = mkV2 (mkV "weld" "welds" "welded" "welded" "welding");
lin welder_N = mkN "welder" "welders";
lin welfare_N = mkN "welfare" ;
lin welkin_N = mkN "welkin" "IRREG";
lin well_A = compoundA (mkA "well");
lin well_Adv = mkAdv "well";
lin well_N = mkN "well" "wells";
lin well_V = mkV "well" "wells" "welled" "welled" "welling";
lin well_adjusted_A = compoundA (mkA "well - adjusted");
lin well_advised_A = compoundA (mkA "well - advised");
lin well_appointed_A = compoundA (mkA "well - appointed");
lin well_balanced_A = compoundA (mkA "well - balanced");
lin well_behaved_A = compoundA (mkA "well - behaved");
lin well_being_N = mkN "well - being" ;
lin well_born_A = compoundA (mkA "well - born");
lin well_bred_A = compoundA (mkA "well - bred");
lin well_conducted_A = compoundA (mkA "well - conducted");
lin well_connected_A = compoundA (mkA "well - connected");
lin well_disposed_A = compoundA (mkA "well - disposed");
lin well_doer_N = mkN "well - doer" "well - doers";
lin well_doing_N = mkN "well - doing" ;
lin well_favoured_A = compoundA (mkA "well - favoured");
lin well_found_A = compoundA (mkA "well - found");
lin well_founded_A = compoundA (mkA "well - founded");
lin well_groomed_A = compoundA (mkA "well - groomed");
lin well_grounded_A = compoundA (mkA "well - grounded");
lin well_heeled_A = compoundA (mkA "well - heeled");
lin well_informed_A = compoundA (mkA "well - informed");
lin well_intentioned_A = compoundA (mkA "well - intentioned");
lin well_knit_A = compoundA (mkA "well - knit");
lin well_known_A = compoundA (mkA "well - known");
lin well_lined_A = compoundA (mkA "well - lined");
lin well_marked_A = compoundA (mkA "well - marked");
lin well_meaning_A = compoundA (mkA "well - meaning");
lin well_meant_A = compoundA (mkA "well - meant");
lin well_nigh_Adv = mkAdv "well - nigh";
lin well_read_A = compoundA (mkA "well - read");
lin well_rounded_A = compoundA (mkA "well - rounded");
lin well_set_A = compoundA (mkA "well - set");
lin well_shaven_A = compoundA (mkA "well - shaven");
lin well_spoken_A = compoundA (mkA "well - spoken");
lin well_timed_A = compoundA (mkA "well - timed");
lin well_to_do_A = compoundA (mkA "well - to - do");
lin well_tried_A = compoundA (mkA "well - tried");
lin well_turned_A = compoundA (mkA "well - turned");
lin well_water_N = mkN "well - water" ;
lin well_wisher_N = mkN "well - wisher" "well - wishers";
lin well_worn_A = compoundA (mkA "well - worn");
lin wellhead_N = mkN "wellhead" "wellheads";
lin wellingborough_PN = mkPN "Wellingborough";
lin wellington_N = mkN "wellington" "wellingtons";
lin wellington_PN = mkPN "Wellington";
lin wells_PN = mkPN "Wells";
lin welsh_A = compoundA (mkA "welsh");
lin welsh_N = mkN "welsh" ;
lin welsh_V = mkV "welsh" "welshes" "welshed" "welshed" "welshing";
lin welsher_N = mkN "welsher" "welshers";
lin welshman_N = mkN "welshman" "welshmen" {- FIXME: guessed plural form -};
lin welshpool_PN = mkPN "Welshpool";
lin welt_N = mkN "welt" "welts";
lin welter_A = compoundA (mkA "welter");
lin welter_N = mkN "welter" "IRREG";
lin welter_V = mkV "welter" "welters" "weltered" "weltered" "weltering";
lin welterweight_N = mkN "welterweight" "welterweights";
lin welwyn_PN = mkPN "Welwyn";
lin welwyn_garden_city_PN = mkPN "Welwyn garden city";
lin wen_N = mkN "wen" "wens";
lin wench_N = mkN "wench" "wenches";
lin wench_V = mkV "wench" "wenches" "wenched" "wenched" "wenching";
lin wend_V2 = mkV2 (mkV "wend" "wends" "wended" "wended" "wending");
lin wendover_PN = mkPN "Wendover";
lin wendy_PN = mkPN "Wendy";
lin werewolf_N = mkN "werewolf" "werewolves" {- FIXME: guessed plural form -};
lin wesleyan_A = compoundA (mkA "wesleyan");
lin wesleyan_N = mkN "wesleyan" "wesleyans";
lin west_A = mkA "west";
lin west_Adv = mkAdv "west";
lin west_N = mkN "west" ;
lin west_bromwich_PN = mkPN "West bromwich";
lin west_country_A = compoundA (mkA "west - country");
lin west_end_A = compoundA (mkA "west - end");
lin westbury_PN = mkPN "Westbury";
lin westerly_A = compoundA (mkA "westerly");
lin westerly_Adv = mkAdv "westerly";
lin western_A = compoundA (mkA "western");
lin western_N = mkN "western" "westerns";
lin westerner_N = mkN "westerner" "westerners";
lin westernization_N = mkN "westernization" ;
lin westernize_V2 = mkV2 (mkV "westernize" "westernizes" "westernized" "westernized" "westernizing");
lin westernmost_A = compoundA (mkA "westernmost");
lin westhoughton_PN = mkPN "Westhoughton";
lin westmeath_PN = mkPN "Westmeath";
lin westminster_PN = mkPN "Westminster";
lin westmoreland_PN = mkPN "Westmoreland";
lin weston_super_mare_PN = mkPN "Weston - super - mare";
lin westward_A = compoundA (mkA "westward");
lin westward_Adv = mkAdv "westward";
lin westwards_Adv = mkAdv "westwards";
lin wet_A = mkA "wet" "wetter*";
lin wet_N = mkN "wet" ;
lin wet_V2 = mkV2 (mkV "wet" "wets" "wetted" "wetted" "wetting");
lin wet_nurse_N = mkN "wet - nurse" "wet - nurses";
lin wether_N = mkN "wether" "wethers";
lin wetherby_PN = mkPN "Wetherby";
lin wetting_N = mkN "wetting" "wettings";
lin wexford_PN = mkPN "Wexford";
lin weymouth_PN = mkPN "Weymouth";
lin whack_N = mkN "whack" "whacks";
lin whack_V2 = mkV2 (mkV "whack" "whacks" "whacked" "whacked" "whacking");
lin whacked_A = compoundA (mkA "whacked");
lin whacker_N = mkN "whacker" "whackers";
lin whacking_A = compoundA (mkA "whacking");
lin whacking_Adv = mkAdv "whacking";
lin whacking_N = mkN "whacking" "whackings";
lin whale_N = mkN "whale" "whales";
lin whale_V = mkV "whale" "whales" "whaled" "whaled" "whaling";
lin whalebone_N = mkN "whalebone" ;
lin whaler_N = mkN "whaler" "whalers";
lin whaley_bridge_PN = mkPN "Whaley bridge";
lin whaling_gun_N = mkN "whaling - gun" "whaling - guns";
lin whang_Adv = mkAdv "whang";
lin whang_N = mkN "whang" "whangs";
lin whang_V2 = mkV2 (mkV "whang" "whangs" "whanged" "whanged" "whanging");
lin wharf_N = mkN "wharf" "wharfs";
lin wharfage_N = mkN "wharfage" ;
lin what_A = compoundA (mkA "what");
lin what_for_N = mkN "what - for" ;
lin whate'er_A = compoundA (mkA "whate'er");
lin whatever_A = compoundA (mkA "whatever");
lin whatnot_N = mkN "whatnot" ;
lin whatsoe'er_A = compoundA (mkA "whatsoe'er");
lin whatsoever_A = compoundA (mkA "whatsoever");
lin wheat_N = mkN "wheat" ;
lin wheaten_A = compoundA (mkA "wheaten");
lin wheatley_hill_PN = mkPN "Wheatley hill";
lin wheedle_V2 = mkV2 (mkV "wheedle" "wheedles" "wheedled" "wheedled" "wheedling");
lin wheel_N = mkN "wheel" "wheels";
lin wheel_V = mkV "wheel" "wheels" "wheeled" "wheeled" "wheeling";
lin wheel_V2 = mkV2 (mkV "wheel" "wheels" "wheeled" "wheeled" "wheeling");
lin wheelbarrow_N = mkN "wheelbarrow" "wheelbarrows";
lin wheelbase_N = mkN "wheelbase" "wheelbases";
lin wheelchair_N = mkN "wheelchair" "wheelchairs";
lin wheelhouse_N = mkN "wheelhouse" "IRREG";
lin wheelwright_N = mkN "wheelwright" "wheelwrights";
lin wheeze_N = mkN "wheeze" "wheezes";
lin wheeze_V = mkV "wheeze" "wheezes" "wheezed" "wheezed" "wheezing";
lin wheeze_V2 = mkV2 (mkV "wheeze" "wheezes" "wheezed" "wheezed" "wheezing");
lin wheezily_Adv = mkAdv "wheezily";
lin wheeziness_N = mkN "wheeziness" ;
lin wheezy_A = mkA "wheezy" "wheezier";
lin whelk_N = mkN "whelk" "whelks";
lin whelp_N = mkN "whelp" "whelps";
lin whelp_V = mkV "whelp" "whelps" "whelped" "whelped" "whelping";
lin when_Adv = mkAdv "when";
lin when_Subj = mkSubj "when";
lin whence_Adv = mkAdv "whence";
lin whencesoever_A = compoundA (mkA "whencesoever");
lin whenever_Adv = mkAdv "whenever";
lin where_Adv = mkAdv "where";
lin whereabouts_Adv = mkAdv "whereabouts";
lin whereas_Prep = mkPrep "whereas";
lin whereat_Adv = mkAdv "whereat";
lin whereby_Adv = mkAdv "whereby";
lin wherefore_Adv = mkAdv "wherefore";
lin wherein_Adv = mkAdv "wherein";
lin whereof_Adv = mkAdv "whereof";
lin whereon_Adv = mkAdv "whereon";
lin wheresoever_Adv = mkAdv "wheresoever";
lin whereto_Adv = mkAdv "whereto";
lin whereunto_Adv = mkAdv "whereunto";
lin whereupon_Adv = mkAdv "whereupon";
lin wherever_Adv = mkAdv "wherever";
lin wherewith_Adv = mkAdv "wherewith";
lin wherewithal_Adv = mkAdv "wherewithal";
lin wherewithal_N = mkN "wherewithal" ;
lin wherry_N = mkN "wherry" "wherries";
lin whet_V2 = mkV2 (mkV "whet" "whets" "whetted" "whetted" "whetting");
lin whether_Prep = mkPrep "whether";
lin whetstone_N = mkN "whetstone" "whetstones";
lin whey_N = mkN "whey" ;
lin which_A = compoundA (mkA "which");
lin whichever_A = compoundA (mkA "whichever");
lin whichsoever_A = compoundA (mkA "whichsoever");
lin whiff_N = mkN "whiff" "whiffs";
lin whig_N = mkN "whig" "whigs";
lin while_N = mkN "while" "whiles";
lin while_Subj = mkSubj "while";
lin whilst_Subj = mkSubj "whilst";
lin while_V2 = mkV2 (mkV "while" "whiles" "whiled" "whiled" "whiling");
lin whim_N = mkN "whim" "whims";
lin whimper_N = mkN "whimper" "whimpers";
lin whimper_V = mkV "whimper" "whimpers" "whimpered" "whimpered" "whimpering";
lin whimper_V2 = mkV2 (mkV "whimper" "whimpers" "whimpered" "whimpered" "whimpering");
lin whimsey_N = mkN "whimsey" "whimseys";
lin whimsical_A = compoundA (mkA "whimsical");
lin whimsicality_N = mkN "whimsicality" "whimsicalities";
lin whimsy_N = mkN "whimsy" "whimsies";
lin whin_N = mkN "whin" ;
lin whine_N = mkN "whine" "whines";
lin whine_V = mkV "whine" "whines" "whined" "whined" "whining";
lin whine_V2 = mkV2 (mkV "whine" "whines" "whined" "whined" "whining");
lin whiner_N = mkN "whiner" "whiners";
lin whinny_N = mkN "whinny" "whinnies";
lin whinny_V = mkV "whinny" "whinnies" "whinnied" "whinnied" "whinnying";
lin whip_N = mkN "whip" "whips";
lin whip_V = mkV "whip" "whips" "whipped" "whipped" "whipping";
lin whip_V2 = mkV2 (mkV "whip" "whips" "whipped" "whipped" "whipping");
lin whip_round_N = mkN "whip - round" "whip - rounds";
lin whipcord_N = mkN "whipcord" ;
lin whipper_in_N = mkN "whipper - in" "IRREG";
lin whippersnapper_N = mkN "whippersnapper" "whippersnappers";
lin whippet_N = mkN "whippet" "whippets";
lin whipping_N = mkN "whipping" "whippings";
lin whipping_boy_N = mkN "whipping - boy" "whipping - boys";
lin whipping_post_N = mkN "whipping - post" "whipping - posts";
lin whipping_top_N = mkN "whipping - top" "whipping - tops";
lin whippoorwill_N = mkN "whippoorwill" "whippoorwills";
lin whippy_A = mkA "whippy" "whippier";
lin whipsaw_V2 = mkV2 (mkV "whipsaw");
lin whir_N = mkN "whir" "IRREG";
lin whir_V = mkV "whir" "whirs" "whirred" "whirred" "whirring";
lin whirl_N = mkN "whirl" "IRREG";
lin whirl_V = mkV "whirl" "whirls" "whirled" "whirled" "whirling";
lin whirl_V2 = mkV2 (mkV "whirl" "whirls" "whirled" "whirled" "whirling");
lin whirligig_N = mkN "whirligig" "whirligigs";
lin whirlpool_N = mkN "whirlpool" "whirlpools";
lin whirlwind_N = mkN "whirlwind" "whirlwinds";
lin whirr_N = mkN "whirr" "IRREG";
lin whirr_V = mkV "whirr" "whirrs" "whirred" "whirred" "whirring";
lin whisk_N = mkN "whisk" "whisks";
lin whisk_V = mkV "whisk" "whisks" "whisked" "whisked" "whisking";
lin whisk_V2 = mkV2 (mkV "whisk" "whisks" "whisked" "whisked" "whisking");
lin whisker_N = mkN "whisker" "whiskers";
lin whiskered_A = compoundA (mkA "whiskered");
lin whiskey_N = mkN "whiskey" "whiskeys";
lin whisky_N = mkN "whisky" "whiskies";
lin whisper_N = mkN "whisper" "whispers";
lin whisper_V = mkV "whisper" "whispers" "whispered" "whispered" "whispering";
lin whisper_V2 = mkV2 (mkV "whisper" "whispers" "whispered" "whispered" "whispering");
lin whisperer_N = mkN "whisperer" "whisperers";
lin whispering_N = mkN "whispering" "whisperings";
lin whispering_gallery_N = mkN "whispering - gallery" "whispering - galleries";
lin whist_N = mkN "whist" ;
lin whist_drive_N = mkN "whist - drive" "whist - drives";
lin whistle_N = mkN "whistle" "whistles";
lin whistle_V = mkV "whistle" "whistles" "whistled" "whistled" "whistling";
lin whistle_V2 = mkV2 (mkV "whistle" "whistles" "whistled" "whistled" "whistling");
lin whistle_stop_N = mkN "whistle - stop" "whistle - stops";
lin whit_N = mkN "whit" "whits";
lin whitburn_PN = mkPN "Whitburn";
lin whitby_PN = mkPN "Whitby";
lin whitchurch_PN = mkPN "Whitchurch";
lin white_A = mkA "white" "whiter";
lin white_N = mkN "white" "whites";
lin white_collar_A = compoundA (mkA "white - collar");
lin white_hot_A = compoundA (mkA "white - hot");
lin white_lipped_A = compoundA (mkA "white - lipped");
lin white_livered_A = compoundA (mkA "white - livered");
lin whitebait_N = mkN "whitebait" ;
lin whitehall_PN = mkPN "Whitehall";
lin whitehaven_PN = mkPN "Whitehaven";
lin whiten_V = mkV "whiten" "whitens" "whitened" "whitened" "whitening";
lin whiten_V2 = mkV2 (mkV "whiten" "whitens" "whitened" "whitened" "whitening");
lin whiteness_N = mkN "whiteness" ;
lin whitening_N = mkN "whitening" ;
lin whitethorn_N = mkN "whitethorn" "whitethorns";
lin whitewash_N = mkN "whitewash" ;
lin whitewash_V2 = mkV2 (mkV "whitewash" "whitewashes" "whitewashed" "whitewashed" "whitewashing");
lin whither_Adv = mkAdv "whither";
lin whithersoever_Adv = mkAdv "whithersoever";
lin whiting_N = mkN "whiting" "whiting";
lin whitish_A = compoundA (mkA "whitish");
lin whitley_bay_PN = mkPN "Whitley bay";
lin whitlow_N = mkN "whitlow" "whitlows";
lin whitstable_PN = mkPN "Whitstable";
lin whitsun_N = mkN "whitsun" "whitsuns";
lin whitsun_PN = mkPN "Whitsun";
lin whitsuntide_N = mkN "whitsuntide" "whitsuntides";
lin whitsuntide_PN = mkPN "Whitsuntide";
lin whittle_V = mkV "whittle" "whittles" "whittled" "whittled" "whittling";
lin whittle_V2 = mkV2 (mkV "whittle" "whittles" "whittled" "whittled" "whittling");
lin whittle_le_woods_PN = mkPN "Whittle - le - woods";
lin whittlesey_PN = mkPN "Whittlesey";
lin whitworth_PN = mkPN "Whitworth";
lin whiz_N = mkN "whiz" ;
lin whiz_V = mkV "whiz" "IRREG" "IRREG" "IRREG" "IRREG";
lin whizz_kid_N = mkN "whizz - kid" "whizz - kids";
lin who_N = mkN "who" ;
lin whodunit_N = mkN "whodunit" "whodunits";
lin whole_A = compoundA (mkA "whole");
lin whole_N = mkN "whole" "wholes";
lin whole_wheat_N = mkN "whole - wheat" ;
lin wholehearted_A = compoundA (mkA "wholehearted");
lin wholeheartedness_N = mkN "wholeheartedness" ;
lin wholemeal_N = mkN "wholemeal" ;
lin wholesale_A = compoundA (mkA "wholesale");
lin wholesale_Adv = mkAdv "wholesale";
lin wholesale_N = mkN "wholesale" ;
lin wholesale_V2 = mkV2 (mkV "wholesale");
lin wholesaler_N = mkN "wholesaler" "wholesalers";
lin wholesome_A = compoundA (mkA "wholesome");
lin wholly_Adv = mkAdv "wholly";
lin whoop_N = mkN "whoop" "whoops";
lin whoop_V = mkV "whoop" "whoops" "whooped" "whooped" "whooping";
lin whoop_V2 = mkV2 (mkV "whoop" "whoops" "whooped" "whooped" "whooping");
lin whoopee_N = mkN "whoopee" "whoopees";
lin whooping_cough_N = mkN "whooping - cough" ;
lin whop_V2 = mkV2 (mkV "whop" "whops" "whopped" "whopped" "whopping");
lin whopper_N = mkN "whopper" "whoppers";
lin whopping_A = compoundA (mkA "whopping");
lin whopping_Adv = mkAdv "whopping";
lin whore_N = mkN "whore" "whores";
lin whoremonger_N = mkN "whoremonger" "whoremongers";
lin whorl_N = mkN "whorl" "whorls";
lin whorled_A = compoundA (mkA "whorled");
lin why_Adv = mkAdv "why";
lin why_N = mkN "why" "whys";
lin wi_N = mkN "wi" ;
lin wick_N = mkN "wick" "wicks";
lin wick_PN = mkPN "Wick";
lin wicked_A = compoundA (mkA "wicked");
lin wickedness_N = mkN "wickedness" ;
lin wicker_N = mkN "wicker" ;
lin wickerwork_N = mkN "wickerwork" ;
lin wicket_N = mkN "wicket" "wickets";
lin wicket_door_N = mkN "wicket - door" "wicket - doors";
lin wicket_gate_N = mkN "wicket - gate" "wicket - gates";
lin wicket_keeper_N = mkN "wicket - keeper" "wicket - keepers";
lin wickford_PN = mkPN "Wickford";
lin wicklow_PN = mkPN "Wicklow";
lin wide_A = mkA "wide" "wider";
lin wide_Adv = mkAdv "wide";
lin wide_awake_A = compoundA (mkA "wide - awake");
lin widen_V = mkV "widen" "widens" "widened" "widened" "widening";
lin widen_V2 = mkV2 (mkV "widen" "widens" "widened" "widened" "widening");
lin widespread_A = compoundA (mkA "widespread");
lin widgeon_N = mkN "widgeon" "widgeons";
lin widnes_PN = mkPN "Widnes";
lin widow_N = mkN "widow" "widows";
lin widowed_A = compoundA (mkA "widowed");
lin widower_N = mkN "widower" "widowers";
lin widowhood_N = mkN "widowhood" ;
lin width_N = mkN "width" "widths";
lin wield_V2 = mkV2 (mkV "wield" "wields" "wielded" "wielded" "wielding");
lin wiesbaden_PN = mkPN "Wiesbaden";
lin wife_N = mkN "wife" "wives" {- FIXME: guessed plural form -};
lin wifelike_A = compoundA (mkA "wifelike");
lin wifely_A = mkA "wifely" "wifelier";
lin wig_N = mkN "wig" "wigs";
lin wigan_PN = mkPN "Wigan";
lin wigged_A = compoundA (mkA "wigged");
lin wigging_N = mkN "wigging" "wiggings";
lin wiggle_N = mkN "wiggle" "wiggles";
lin wiggle_V = mkV "wiggle" "wiggles" "wiggled" "wiggled" "wiggling";
lin wiggle_V2 = mkV2 (mkV "wiggle" "wiggles" "wiggled" "wiggled" "wiggling");
lin wight_N = mkN "wight" "wights";
lin wight_PN = mkPN "Wight";
lin wigwam_N = mkN "wigwam" "wigwams";
lin wild_A = mkA "wild" "wilder";
lin wild_Adv = mkAdv "wild";
lin wildcat_A = compoundA (mkA "wildcat");
lin wildebeest_N = mkN "wildebeest" "wildebeests";
lin wilderness_N = mkN "wilderness" "wildernesses";
lin wildfire_N = mkN "wildfire" ;
lin wildness_N = mkN "wildness" ;
lin wile_N = mkN "wile" "wiles";
lin wilf_PN = mkPN "Wilf";
lin wilfrid_PN = mkPN "Wilfrid";
lin wilful_A = compoundA (mkA "wilful");
lin wilfulness_N = mkN "wilfulness" ;
lin wilhelmshaven_PN = mkPN "Wilhelmshaven";
lin will_N = mkN "will" "wills";
lin will_PN = mkPN "Will";
lin will_V = mkV "will" "wills" "willed" "willed" "willing";
lin will_V2 = mkV2 (mkV "will" "wills" "willed" "willed" "willing");
lin will_o'_the_wisp_N = mkN "will - o'-the - wisp" "will - o'-the - wisps";
lin willed_A = compoundA (mkA "willed");
lin willful_A = compoundA (mkA "willful");
lin william_PN = mkPN "William";
lin willie_PN = mkPN "Willie";
lin willing_A = compoundA (mkA "willing");
lin willingness_N = mkN "willingness" ;
lin willington_PN = mkPN "Willington";
lin willow_N = mkN "willow" "willows";
lin willow_pattern_N = mkN "willow - pattern" ;
lin willow_tree_N = mkN "willow - tree" "willow - trees";
lin willowy_A = compoundA (mkA "willowy");
lin willpower_N = mkN "willpower" ;
lin willy_PN = mkPN "Willy";
lin willy_nilly_Adv = mkAdv "willy - nilly";
lin wilmslow_PN = mkPN "Wilmslow";
lin wilt_V = mkV "wilt" "wilts" "wilted" "wilted" "wilting";
lin wilt_V2 = mkV2 (mkV "wilt" "wilts" "wilted" "wilted" "wilting");
lin wilton_N = mkN "wilton" "wiltons";
lin wiltshire_PN = mkPN "Wiltshire";
lin wily_A = mkA "wily" "wilier";
lin wimbourne_PN = mkPN "Wimbourne";
lin wimbourne_minster_PN = mkPN "Wimbourne minster";
lin wimple_N = mkN "wimple" "wimples";
lin win_N = mkN "win" "wins";
lin win_V = IrregEng.win_V;
lin win_V2 = mkV2 (IrregEng.win_V);
lin wince_N = mkN "wince" "winces";
lin wince_V2 = mkV2 (mkV "wince" "winces" "winced" "winced" "wincing");
lin winceyette_N = mkN "winceyette" ;
lin winch_N = mkN "winch" "winches";
lin winch_V2 = mkV2 (mkV "winch" "winches" "winched" "winched" "winching");
lin winchester_PN = mkPN "Winchester";
lin wind_N = mkN "wind" "winds";
lin wind_V = IrregEng.wind_V;
lin wind_V2 = mkV2 (mkV "wind" "winds" "winded" "winded" "winding");
lin wind_gauge_N = mkN "wind - gauge" "wind - gauges";
lin wind_tunnel_N = mkN "wind - tunnel" "wind - tunnels";
lin windbag_N = mkN "windbag" "windbags";
lin windblown_A = compoundA (mkA "windblown");
lin windbreak_N = mkN "windbreak" "windbreaks";
lin windbreaker_N = mkN "windbreaker" "windbreakers";
lin windcheater_N = mkN "windcheater" "windcheaters";
lin windermere_PN = mkPN "Windermere";
lin windfall_N = mkN "windfall" "windfalls";
lin windflower_N = mkN "windflower" "windflowers";
lin windily_Adv = mkAdv "windily";
lin windiness_N = mkN "windiness" ;
lin winding_sheet_N = mkN "winding - sheet" "winding - sheets";
lin windjammer_N = mkN "windjammer" "windjammers";
lin windlass_N = mkN "windlass" "windlasses";
lin windless_A = compoundA (mkA "windless");
lin windmill_N = mkN "windmill" "windmills";
lin window_N = mkN "window" "windows";
lin window_box_N = mkN "window - box" "window - boxes";
lin window_dressing_N = mkN "window - dressing" ;
lin windowpane_N = mkN "windowpane" "windowpanes";
lin windowsill_N = mkN "windowsill" "windowsills";
lin windpipe_N = mkN "windpipe" "windpipes";
lin windscreen_N = mkN "windscreen" "windscreens";
lin windscreen_wiper_N = mkN "windscreen - wiper" "windscreen - wipers";
lin windshield_N = mkN "windshield" "windshields";
lin windsock_N = mkN "windsock" "windsocks";
lin windsor_PN = mkPN "Windsor";
lin windswept_A = compoundA (mkA "windswept");
lin windward_A = compoundA (mkA "windward");
lin windward_N = mkN "windward" ;
lin windy_A = mkA "windy" "windier";
lin wine_N = mkN "wine" "wines";
lin wine_V2 = mkV2 (mkV "wine" "wines" "wined" "wined" "wining");
lin wineglass_N = mkN "wineglass" "wineglasses";
lin winepress_N = mkN "winepress" "winepresses";
lin wineskin_N = mkN "wineskin" "wineskins";
lin wing_N = mkN "wing" "wings";
lin wing_V = mkV "wing" "wings" "winged" "winged" "winging";
lin wing_V2 = mkV2 (mkV "wing" "wings" "winged" "winged" "winging");
lin wing_commander_N = mkN "wing - commander" "wing - commanders";
lin wing_nut_N = mkN "wing - nut" "wing - nuts";
lin wing_screw_N = mkN "wing - screw" "wing - screws";
lin wingate_PN = mkPN "Wingate";
lin winged_A = compoundA (mkA "winged");
lin winger_N = mkN "winger" "wingers";
lin wingless_A = compoundA (mkA "wingless");
lin wingspan_N = mkN "wingspan" "wingspans";
lin wingspread_N = mkN "wingspread" "wingspreads";
lin winifred_PN = mkPN "Winifred";
lin wink_N = mkN "wink" "winks";
lin wink_V = mkV "wink" "winks" "winked" "winked" "winking";
lin wink_V2 = mkV2 (mkV "wink" "winks" "winked" "winked" "winking");
lin winkle_N = mkN "winkle" "winkles";
lin winkle_V2 = mkV2 (mkV "winkle" "winkles" "winkled" "winkled" "winkling");
lin winner_N = mkN "winner" "winners";
lin winnie_PN = mkPN "Winnie";
lin winning_post_N = mkN "winning - post" "winning - posts";
lin winnipeg_PN = mkPN "Winnipeg";
lin winnow_V2 = mkV2 (mkV "winnow" "winnows" "winnowed" "winnowed" "winnowing");
lin winsford_PN = mkPN "Winsford";
lin winsome_A = compoundA (mkA "winsome");
lin winsomeness_N = mkN "winsomeness" ;
lin winter_N = mkN "winter" "winters";
lin winter_V = mkV "winter" "winters" "wintered" "wintered" "wintering";
lin wintery_A = mkA "wintery" "winterier";
lin wintry_A = mkA "wintry" "wintrier";
lin wipe_N = mkN "wipe" "wipes";
lin wipe_V = mkV "wipe" "wipes" "wiped" "wiped" "wiping";
lin wipe_V2 = mkV2 (mkV "wipe" "wipes" "wiped" "wiped" "wiping");
lin wiper_N = mkN "wiper" "wipers";
lin wire_N = mkN "wire" "wires";
lin wire_V = mkV "wire" "wires" "wired" "wired" "wiring";
lin wire_V2 = mkV2 (mkV "wire" "wires" "wired" "wired" "wiring");
lin wire_haired_A = compoundA (mkA "wire - haired");
lin wireless_A = compoundA (mkA "wireless");
lin wireless_N = mkN "wireless" "wirelesses";
lin wirepuller_N = mkN "wirepuller" "wirepullers";
lin wireworm_N = mkN "wireworm" "wireworms";
lin wiring_N = mkN "wiring" ;
lin wiry_A = mkA "wiry" "wirier";
lin wisbech_PN = mkPN "Wisbech";
lin wisconsin_PN = mkPN "Wisconsin";
lin wisdom_N = mkN "wisdom" ;
lin wisdom_tooth_N = mkN "wisdom - tooth" "wisdom - teeth";
lin wise_A = mkA "wise" "wiser";
lin wise_N = mkN "wise" "IRREG";
lin wiseacre_N = mkN "wiseacre" "wiseacres";
lin wisecrack_N = mkN "wisecrack" "wisecracks";
lin wisecrack_V = mkV "wisecrack" "wisecracks" "wisecracked" "wisecracked" "wisecracking";
lin wish_N = mkN "wish" "wishes";
lin wish_V = mkV "wish" "wishes" "wished" "wished" "wishing";
lin wish_V2 = mkV2 (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wish_V2V = mkV2V (mkV "wish" "wishes" "wished" "wished" "wishing") noPrep to_Prep ;
lin wish_VV = mkVV (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wish_VS = mkVS (mkV "wish" "wishes" "wished" "wished" "wishing");
lin wishbone_N = mkN "wishbone" "wishbones";
lin wishful_A = compoundA (mkA "wishful");
lin wishing_cap_N = mkN "wishing - cap" "wishing - caps";
lin wishy_washy_A = compoundA (mkA "wishy - washy");
lin wisp_N = mkN "wisp" "wisps";
lin wispy_A = mkA "wispy" "wispier";
lin wisteria_N = mkN "wisteria" "wisterias";
lin wistful_A = compoundA (mkA "wistful");
lin wit_N = mkN "wit" "wits";
lin witch_N = mkN "witch" "witches";
lin witch_doctor_N = mkN "witch - doctor" "witch - doctors";
lin witch_elm_N = mkN "witch - elm" "witch - elms";
lin witch_hazel_N = mkN "witch - hazel" "witch - hazels";
lin witch_hunt_N = mkN "witch - hunt" "witch - hunts";
lin witchcraft_N = mkN "witchcraft" ;
lin witchery_N = mkN "witchery" ;
lin witching_A = compoundA (mkA "witching");
lin with_Prep = mkPrep "with";
lin withal_Adv = mkAdv "withal";
lin witham_PN = mkPN "Witham";
lin withdraw_V = mkV "with" IrregEng.draw_V;
lin withdraw_V2 = mkV2 (mkV "with" IrregEng.draw_V);
lin withdrawal_N = mkN "withdrawal" "withdrawals";
lin withe_N = mkN "withe" "withes";
lin wither_V = mkV "wither" "withers" "withered" "withered" "withering";
lin wither_V2 = mkV2 (mkV "wither" "withers" "withered" "withered" "withering");
lin witheringly_Adv = mkAdv "witheringly";
lin withernsea_PN = mkPN "Withernsea";
lin withhold_V2 = mkV2 (IrregEng.withhold_V);
lin within_Prep = mkPrep "within";
lin without_Prep = mkPrep "without";
lin withstand_V2 = mkV2 (IrregEng.withstand_V);
lin withy_N = mkN "withy" "withies";
lin witless_A = compoundA (mkA "witless");
lin witness_N = mkN "witness" "witnesses";
lin witness_V = mkV "witness" "witnesses" "witnessed" "witnessed" "witnessing";
lin witness_V2 = mkV2 (mkV "witness" "witnesses" "witnessed" "witnessed" "witnessing");
lin witness_box_N = mkN "witness - box" "witness - boxes";
lin witness_stand_N = mkN "witness - stand" "witness - stands";
lin witney_PN = mkPN "Witney";
lin witticism_N = mkN "witticism" "witticisms";
lin wittily_Adv = mkAdv "wittily";
lin wittingly_Adv = mkAdv "wittingly";
lin witty_A = mkA "witty" "wittier";
lin wive_V = mkV "wive" "wives" "wived" "wived" "wiving";
lin wive_V2 = mkV2 (mkV "wive" "wives" "wived" "wived" "wiving");
lin wizard_A = compoundA (mkA "wizard");
lin wizard_N = mkN "wizard" "wizards";
lin wizardry_N = mkN "wizardry" ;
lin wizened_A = compoundA (mkA "wizened");
lin wk_N = mkN "wk" "wk";
lin woad_N = mkN "woad" ;
lin wobble_V = mkV "wobble" "wobbles" "wobbled" "wobbled" "wobbling";
lin wobble_V2 = mkV2 (mkV "wobble" "wobbles" "wobbled" "wobbled" "wobbling");
lin wobbler_N = mkN "wobbler" "wobblers";
lin wobbly_A = mkA "wobbly" "wobblier";
lin woburn_PN = mkPN "Woburn";
lin woe_N = mkN "woe" "woes";
lin woebegone_A = compoundA (mkA "woebegone");
lin woeful_A = compoundA (mkA "woeful");
lin wokingham_PN = mkPN "Wokingham";
lin wold_N = mkN "wold" "wolds";
lin wolf's_bane_N = mkN "wolf's - bane" ;
lin wolf_N = mkN "wolf" "wolves" {- FIXME: guessed plural form -};
lin wolf_V2 = mkV2 (mkV "wolf" "wolfs" "wolfed" "wolfed" "wolfing");
lin wolf_cub_N = mkN "wolf - cub" "wolf - cubs";
lin wolfhound_N = mkN "wolfhound" "wolfhounds";
lin wolfish_A = compoundA (mkA "wolfish");
lin wolfram_N = mkN "wolfram" ;
lin wolverhampton_PN = mkPN "Wolverhampton";
lin wolverton_PN = mkPN "Wolverton";
lin woman_N = mkN "woman" "women" {- FIXME: guessed plural form -};
lin womanhood_N = mkN "womanhood" ;
lin womanish_A = compoundA (mkA "womanish");
lin womanize_V = mkV "womanize" "womanizes" "womanized" "womanized" "womanizing";
lin womanizer_N = mkN "womanizer" "womanizers";
lin womankind_N = mkN "womankind" ;
lin womanlike_A = compoundA (mkA "womanlike");
lin womanly_A = mkA "womanly" "womanlier";
lin womb_N = mkN "womb" "wombs";
lin wombat_N = mkN "wombat" "wombats";
lin wombourne_PN = mkPN "Wombourne";
lin wonder_N = mkN "wonder" "wonders";
lin wonder_V = mkV "wonder" "wonders" "wondered" "wondered" "wondering";
lin wonder_V2 = mkV2 (mkV "wonder" "wonders" "wondered" "wondered" "wondering");
lin wonder_VS = mkVS (mkV "wonder" "wonders" "wondered" "wondered" "wondering");
lin wonder_struck_A = compoundA (mkA "wonder - struck");
lin wonderful_A = compoundA (mkA "wonderful");
lin wonderingly_Adv = mkAdv "wonderingly";
lin wonderland_N = mkN "wonderland" "wonderlands";
lin wonderment_N = mkN "wonderment" ;
lin wondrous_A = compoundA (mkA "wondrous");
lin wondrous_Adv = mkAdv "wondrous";
lin wonky_A = compoundA (mkA "wonky");
lin wont_A = compoundA (mkA "wont");
lin wont_N = mkN "wont" ;
lin wonted_A = compoundA (mkA "wonted");
lin woo_V2 = mkV2 (mkV "woo" "woos" "wooed" "wooed" "wooing");
lin wood_N = mkN "wood" "woods";
lin wood_block_N = mkN "wood - block" "wood - blocks";
lin wood_pulp_N = mkN "wood - pulp" ;
lin woodbine_N = mkN "woodbine" "woodbines";
lin woodbridge_PN = mkPN "Woodbridge";
lin woodcock_N = mkN "woodcock" "woodcocks";
lin woodcraft_N = mkN "woodcraft" "woodcrafts";
lin woodcut_N = mkN "woodcut" "woodcuts";
lin woodcutter_N = mkN "woodcutter" "woodcutters";
lin wooded_A = compoundA (mkA "wooded");
lin wooden_A = compoundA (mkA "wooden");
lin woodenheaded_A = compoundA (mkA "woodenheaded");
lin woodland_N = mkN "woodland" "woodlands";
lin woodlouse_N = mkN "woodlouse" "woodlice" {- FIXME: guessed plural form -};
lin woodman_N = mkN "woodman" "woodmen" {- FIXME: guessed plural form -};
lin woodpecker_N = mkN "woodpecker" "woodpeckers";
lin woodpile_N = mkN "woodpile" "woodpiles";
lin woodshed_N = mkN "woodshed" "woodsheds";
lin woodsman_N = mkN "woodsman" "woodsmen" {- FIXME: guessed plural form -};
lin woodwind_N = mkN "woodwind" ;
lin woodwork_N = mkN "woodwork" ;
lin woodworm_N = mkN "woodworm" ;
lin woody_A = mkA "woody" "woodier";
lin wooer_N = mkN "wooer" "wooers";
lin woof_N = mkN "woof" "woofs";
lin woofer_N = mkN "woofer" "woofers";
lin wool_N = mkN "wool" "wools";
lin woolen_A = compoundA (mkA "woolen");
lin woolgathering_A = compoundA (mkA "woolgathering");
lin woolgathering_N = mkN "woolgathering" ;
lin woollen_A = compoundA (mkA "woollen");
lin woolly_A = mkA "woolly" "woollier";
lin wooly_A = mkA "wooly" "woolier";
lin wooly_N = mkN "wooly" "woolies";
lin wootton_bassett_PN = mkPN "Wootton bassett";
lin worcester_PN = mkPN "Worcester";
lin word_N = mkN "word" "words";
lin word_V2 = mkV2 (mkV "word" "words" "worded" "worded" "wording");
lin word_division_N = mkN "word - division" ;
lin word_painter_N = mkN "word - painter" "word - painters";
lin word_perfect_A = compoundA (mkA "word - perfect");
lin word_picture_N = mkN "word - picture" "word - pictures";
lin word_splitting_N = mkN "word - splitting" ;
lin wordbook_N = mkN "wordbook" "wordbooks";
lin wordily_Adv = mkAdv "wordily";
lin wordiness_N = mkN "wordiness" ;
lin wording_N = mkN "wording" "IRREG";
lin wordless_A = compoundA (mkA "wordless");
lin wordy_A = mkA "wordy" "wordier";
lin work_N = mkN "work" "works";
lin work_V = mkV "work" "works" "worked" "worked" "working";
lin work_V2 = mkV2 (mkV "work" "works" "worked" "worked" "working");
lin work_VV = mkVV (mkV "work" "works" "worked" "worked" "working");
lin work_in_N = mkN "work - in" "work - ins";
lin work_out_N = mkN "work - out" "work - outs";
lin work_study_N = mkN "work - study" "work - studies";
lin workable_A = compoundA (mkA "workable");
lin workaday_A = compoundA (mkA "workaday");
lin workbag_N = mkN "workbag" "workbags";
lin workbasket_N = mkN "workbasket" "workbaskets";
lin workbench_N = mkN "workbench" "workbenches";
lin workbook_N = mkN "workbook" "workbooks";
lin workbox_N = mkN "workbox" "workboxes";
lin workday_N = mkN "workday" "workdays";
lin worker_N = mkN "worker" "workers";
lin workhouse_N = mkN "workhouse" "IRREG";
lin working_A = compoundA (mkA "working");
lin working_N = mkN "working" "workings";
lin working_class_A = compoundA (mkA "working - class");
lin working_out_N = mkN "working - out" ;
lin workington_PN = mkPN "Workington";
lin workman_N = mkN "workman" "workmen" {- FIXME: guessed plural form -};
lin workmanlike_A = compoundA (mkA "workmanlike");
lin workmanship_N = mkN "workmanship" ;
lin workmate_N = mkN "workmate" "workmates";
lin workroom_N = mkN "workroom" "workrooms";
lin workshop_N = mkN "workshop" "workshops";
lin workshy_A = compoundA (mkA "workshy");
lin worksop_PN = mkPN "Worksop";
lin worktable_N = mkN "worktable" "worktables";
lin world_N = mkN "world" "worlds";
lin world_weary_A = compoundA (mkA "world - weary");
lin worldliness_N = mkN "worldliness" ;
lin worldly_A = mkA "worldly" "worldlier";
lin worldwide_A = compoundA (mkA "worldwide");
lin worm_N = mkN "worm" "worms";
lin worm_V2 = mkV2 (mkV "worm" "worms" "wormed" "wormed" "worming");
lin worm_eaten_A = compoundA (mkA "worm - eaten");
lin worm_gear_N = mkN "worm - gear" "worm - gears";
lin wormcast_N = mkN "wormcast" "wormcasts";
lin wormhole_N = mkN "wormhole" "wormholes";
lin wormwood_N = mkN "wormwood" ;
lin wormy_A = mkA "wormy" "wormier";
lin worried_A = compoundA (mkA "worried");
lin worrisome_A = compoundA (mkA "worrisome");
lin worry_N = mkN "worry" "worries";
lin worry_V = mkV "worry" "worries" "worried" "worried" "worrying";
lin worry_V2 = mkV2 (mkV "worry" "worries" "worried" "worried" "worrying");
lin worry_VS = mkVS (mkV "worry" "worries" "worried" "worried" "worrying");
lin worrying_A = compoundA (mkA "worrying");
lin worse_Adv = mkAdv "worse";
lin worse_N = mkN "worse" ;
lin worsen_V = mkV "worsen" "worsens" "worsened" "worsened" "worsening";
lin worsen_V2 = mkV2 (mkV "worsen" "worsens" "worsened" "worsened" "worsening");
lin worship_N = mkN "worship" ;
lin worship_V = mkV "worship" "worships" "worshipped" "worshipped" "worshipping";
lin worship_V2 = mkV2 (mkV "worship" "worships" "worshipped" "worshipped" "worshipping");
lin worshipful_A = compoundA (mkA "worshipful");
lin worshipper_N = mkN "worshipper" "worshippers";
lin worst_Adv = mkAdv "worst";
lin worst_N = mkN "worst" ;
lin worst_V2 = mkV2 (mkV "worst" "worsts" "worsted" "worsted" "worsting");
lin worsted_N = mkN "worsted" ;
lin worth_A = compoundA (mkA "worth");
lin worth_N = mkN "worth" ;
lin worth_Prep = mkPrep "worth";
lin worthily_Adv = mkAdv "worthily";
lin worthiness_N = mkN "worthiness" ;
lin worthing_PN = mkPN "Worthing";
lin worthless_A = compoundA (mkA "worthless");
lin worthlessness_N = mkN "worthlessness" ;
lin worthwhile_A = compoundA (mkA "worthwhile");
lin worthy_A = mkA "worthy" "worthier";
lin worthy_N = mkN "worthy" "worthies";
lin would_be_A = compoundA (mkA "would - be");
lin wound_N = mkN "wound" "wounds";
lin wound_V2 = mkV2 (mkV "wound" "wounds" "wounded" "wounded" "wounding");
lin wow_N = mkN "wow" "wows";
lin wpb_N = mkN "wpb" ;
lin wpm_N = mkN "wpm" "wpm";
lin wrac_N = mkN "wrac" ;
lin wrack_N = mkN "wrack" ;
lin wrack_V2 = mkV2 (mkV "wrack");
lin wraf_N = mkN "wraf" ;
lin wraith_N = mkN "wraith" "wraiths";
lin wrangle_N = mkN "wrangle" "wrangles";
lin wrangle_V = mkV "wrangle" "wrangles" "wrangled" "wrangled" "wrangling";
lin wrap_N = mkN "wrap" "wraps";
lin wrap_V = mkV "wrap" "wraps" "wrapped" "wrapped" "wrapping";
lin wrap_V2 = mkV2 (mkV "wrap" "wraps" "wrapped" "wrapped" "wrapping");
lin wrapper_N = mkN "wrapper" "wrappers";
lin wrapping_N = mkN "wrapping" "wrappings";
lin wrath_N = mkN "wrath" ;
lin wrathful_A = compoundA (mkA "wrathful");
lin wreak_V2 = mkV2 (mkV "wreak" "wreaks" "wreaked" "wreaked" "wreaking");
lin wreath_N = mkN "wreath" "wreaths";
lin wreathe_V = mkV "wreathe" "wreathes" "wreathed" "wreathed" "wreathing";
lin wreathe_V2 = mkV2 (mkV "wreathe" "wreathes" "wreathed" "wreathed" "wreathing");
lin wreck_N = mkN "wreck" "wrecks";
lin wreck_V2 = mkV2 (mkV "wreck" "wrecks" "wrecked" "wrecked" "wrecking");
lin wreckage_N = mkN "wreckage" ;
lin wrecker_N = mkN "wrecker" "wreckers";
lin wren_N = mkN "wren" "wrens";
lin wrench_N = mkN "wrench" "wrenches";
lin wrench_V2 = mkV2 (mkV "wrench" "wrenches" "wrenched" "wrenched" "wrenching");
lin wrest_V2 = mkV2 (mkV "wrest" "wrests" "wrested" "wrested" "wresting");
lin wrestle_N = mkN "wrestle" "wrestles";
lin wrestle_V = mkV "wrestle" "wrestles" "wrestled" "wrestled" "wrestling";
lin wrestle_V2 = mkV2 (mkV "wrestle" "wrestles" "wrestled" "wrestled" "wrestling");
lin wrestler_N = mkN "wrestler" "wrestlers";
lin wretch_N = mkN "wretch" "wretches";
lin wretched_A = compoundA (mkA "wretched");
lin wretchedness_N = mkN "wretchedness" ;
lin wrexham_PN = mkPN "Wrexham";
lin wrick_N = mkN "wrick" "wricks";
lin wrick_V2 = mkV2 (mkV "wrick" "wricks" "wricked" "wricked" "wricking");
lin wriggle_N = mkN "wriggle" "wriggles";
lin wriggle_V = mkV "wriggle" "wriggles" "wriggled" "wriggled" "wriggling";
lin wriggle_V2 = mkV2 (mkV "wriggle" "wriggles" "wriggled" "wriggled" "wriggling");
lin wriggler_N = mkN "wriggler" "wrigglers";
lin wright_N = mkN "wright" "wrights";
lin wring_N = mkN "wring" "wrings";
lin wring_V2 = mkV2 (IrregEng.wring_V);
lin wringer_N = mkN "wringer" "wringers";
lin wrinkle_N = mkN "wrinkle" "wrinkles";
lin wrinkle_V = mkV "wrinkle" "wrinkles" "wrinkled" "wrinkled" "wrinkling";
lin wrinkle_V2 = mkV2 (mkV "wrinkle" "wrinkles" "wrinkled" "wrinkled" "wrinkling");
lin wrinkly_A = mkA "wrinkly" "wrinklier";
lin wrist_N = mkN "wrist" "wrists";
lin wristband_N = mkN "wristband" "wristbands";
lin wristlet_N = mkN "wristlet" "wristlets";
lin wristwatch_N = mkN "wristwatch" "wristwatches";
lin writ_N = mkN "writ" "writs";
lin writ_large_A = compoundA (mkA "writ large");
lin write_V = IrregEng.write_V;
lin write_V2 = mkV2 (IrregEng.write_V);
lin write_VV = mkVV (IrregEng.write_V);
lin write_VS = mkVS (IrregEng.write_V);
lin write_off_N = mkN "write - off" "write - offs";
lin write_up_N = mkN "write - up" "write - ups";
lin writer_N = mkN "writer" "writers";
lin writhe_V = mkV "writhe" "writhes" "writhed" "writhed" "writhing";
lin writing_N = mkN "writing" "writings";
lin writing_desk_N = mkN "writing - desk" "writing - desks";
lin writing_ink_N = mkN "writing - ink" "writing - inks";
lin writing_paper_N = mkN "writing - paper" ;
lin writtle_PN = mkPN "Writtle";
lin wrns_N = mkN "wrns" ;
lin wroclaw_PN = mkPN "Wroclaw";
lin wrong_A = compoundA (mkA "wrong");
lin wrong_Adv = mkAdv "wrong";
lin wrong_N = mkN "wrong" "wrongs";
lin wrong_V2 = mkV2 (mkV "wrong" "wrongs" "wronged" "wronged" "wronging");
lin wrong_headed_A = compoundA (mkA "wrong - headed");
lin wrongdoer_N = mkN "wrongdoer" "wrongdoers";
lin wrongdoing_N = mkN "wrongdoing" "wrongdoings";
lin wrongful_A = compoundA (mkA "wrongful");
lin wroth_A = compoundA (mkA "wroth");
lin wroughton_PN = mkPN "Wroughton";
lin wry_A = mkA "wry" "wrier";
lin wt_N = mkN "wt" ;
lin wuhan_PN = mkPN "Wuhan";
lin wuppertal_PN = mkPN "Wuppertal";
lin wurzburg_PN = mkPN "Wurzburg";
lin wusih_PN = mkPN "Wusih";
lin wycombe_PN = mkPN "Wycombe";
lin wymondham_PN = mkPN "Wymondham";
lin wyoming_PN = mkPN "Wyoming";
lin wythall_PN = mkPN "Wythall";
lin x_ray_N = mkN "x - ray" "x - rays";
lin x_ray_V2 = mkV2 (mkV "x - ray" "x - rays" "x - rayed" "x - rayed" "x - raying");
lin xenophobia_N = mkN "xenophobia" ;
lin xerox_N = mkN "xerox" "xeroxes";
lin xerox_V2 = mkV2 (mkV "xerox" "xeroxes" "xeroxed" "xeroxed" "xeroxing");
lin xmas_N = mkN "xmas" "xmases";
lin xmas_PN = mkPN "Xmas";
lin xylophone_N = mkN "xylophone" "xylophones";
lin yacht_N = mkN "yacht" "yachts";
lin yacht_V = mkV "yacht" "yachts" "yachted" "yachted" "yachting";
lin yacht_club_N = mkN "yacht - club" "yacht - clubs";
lin yachting_N = mkN "yachting" ;
lin yachtsman_N = mkN "yachtsman" "yachtsmen" {- FIXME: guessed plural form -};
lin yahoo_N = mkN "yahoo" "yahoos";
lin yak_N = mkN "yak" "yaks";
lin yam_N = mkN "yam" "yams";
lin yammer_V = mkV "yammer" "yammers" "yammered" "yammered" "yammering";
lin yank_N = mkN "yank" "yanks";
lin yank_V2 = mkV2 (mkV "yank" "yanks" "yanked" "yanked" "yanking");
lin yankee_N = mkN "yankee" "yankees";
lin yap_N = mkN "yap" "yaps";
lin yap_V = mkV "yap" "yaps" "yapped" "yapped" "yapping";
lin yard_N = mkN "yard" "yards";
lin yard_measure_N = mkN "yard - measure" "yard - measures";
lin yardarm_N = mkN "yardarm" "yardarms";
lin yardstick_N = mkN "yardstick" "yardsticks";
lin yarmouth_PN = mkPN "Yarmouth";
lin yarn_N = mkN "yarn" "yarns";
lin yarn_V = mkV "yarn" "yarns" "yarned" "yarned" "yarning";
lin yaroslavi_PN = mkPN "Yaroslavi";
lin yarrow_N = mkN "yarrow" ;
lin yashmak_N = mkN "yashmak" "yashmaks";
lin yate_PN = mkPN "Yate";
lin yateley_PN = mkPN "Yateley";
lin yaw_N = mkN "yaw" "yaws";
lin yaw_V = mkV "yaw" "yaws" "yawed" "yawed" "yawing";
lin yawl_N = mkN "yawl" "yawls";
lin yawn_N = mkN "yawn" "yawns";
lin yawn_V = mkV "yawn" "yawns" "yawned" "yawned" "yawning";
lin yea_Adv = mkAdv "yea";
lin yea_N = mkN "yea" "yeas";
lin yeah_Adv = mkAdv "yeah";
lin year_N = mkN "year" "years";
lin yearbook_N = mkN "yearbook" "yearbooks";
lin yearling_N = mkN "yearling" "yearlings";
lin yearlong_A = compoundA (mkA "yearlong");
lin yearly_A = compoundA (mkA "yearly");
lin yearly_Adv = mkAdv "yearly";
lin yearn_V = mkV "yearn" "yearns" "yearned" "yearned" "yearning";
lin yearning_N = mkN "yearning" "yearnings";
lin yearningly_Adv = mkAdv "yearningly";
lin yeast_N = mkN "yeast" ;
lin yeasty_A = mkA "yeasty" "yeastier";
lin yell_N = mkN "yell" "yells";
lin yell_V = mkV "yell" "yells" "yelled" "yelled" "yelling";
lin yell_V2 = mkV2 (mkV "yell" "yells" "yelled" "yelled" "yelling");
lin yellow_A = mkA "yellow" "yellower";
lin yellow_N = mkN "yellow" "yellows";
lin yellow_V = mkV "yellow" "yellows" "yellowed" "yellowed" "yellowing";
lin yellow_V2 = mkV2 (mkV "yellow" "yellows" "yellowed" "yellowed" "yellowing");
lin yellow_bellied_A = compoundA (mkA "yellow - bellied");
lin yellow_flag_N = mkN "yellow - flag" "yellow - flags";
lin yellowish_A = compoundA (mkA "yellowish");
lin yellowness_N = mkN "yellowness" ;
lin yelp_V = mkV "yelp" "yelps" "yelped" "yelped" "yelping";
lin yemen_PN = mkPN "Yemen";
lin yemeni_A = compoundA (mkA "yemeni");
lin yemeni_N = mkN "yemeni" "yemenis";
lin yen_N = mkN "yen" "yen";
lin yen_V = mkV "yen" "yens" "yenned" "yenned" "yenning";
lin yeoman_N = mkN "yeoman" "yeomen" {- FIXME: guessed plural form -};
lin yeomanry_N = mkN "yeomanry" "yeomanries";
lin yeovil_PN = mkPN "Yeovil";
lin yerevan_PN = mkPN "Yerevan";
lin yes_N = mkN "yes" "yeses";
lin yesterday_Adv = mkAdv "yesterday";
lin yesterday_N = mkN "yesterday" "yesterdays";
lin yet_Adv = mkAdv "yet";
lin yeti_N = mkN "yeti" "yetis";
lin yew_N = mkN "yew" "yews";
lin yew_tree_N = mkN "yew - tree" "yew - trees";
lin yha_N = mkN "yha" ;
lin yiddish_N = mkN "yiddish" ;
lin yield_N = mkN "yield" "yields";
lin yield_V = mkV "yield" "yields" "yielded" "yielded" "yielding";
lin yield_V2 = mkV2 (mkV "yield" "yields" "yielded" "yielded" "yielding");
lin yield_VA = mkVA (mkV "yield" "yields" "yielded" "yielded" "yielding");
lin yielding_A = compoundA (mkA "yielding");
lin ymca_N = mkN "ymca" ;
lin yo_yo_N = mkN "yo - yo" "yo - yos";
lin yob_N = mkN "yob" "yobs";
lin yobo_N = mkN "yobo" "yobos";
lin yodel_N = mkN "yodel" "yodels";
lin yodel_V = mkV "yodel" "yodels" "yodelled" "yodelled" "yodelling";
lin yodel_V2 = mkV2 (mkV "yodel" "yodels" "yodelled" "yodelled" "yodelling");
lin yodeller_N = mkN "yodeller" "yodellers";
lin yoga_N = mkN "yoga" ;
lin yoghourt_N = mkN "yoghourt" "yoghourts";
lin yoghurt_N = mkN "yoghurt" "yoghurts";
lin yogi_N = mkN "yogi" "yogis";
lin yogurt_N = mkN "yogurt" "yogurts";
lin yoke_N = mkN "yoke" "yokes";
lin yoke_V = mkV "yoke" "yokes" "yoked" "yoked" "yoking";
lin yoke_V2 = mkV2 (mkV "yoke" "yokes" "yoked" "yoked" "yoking");
lin yokel_N = mkN "yokel" "yokels";
lin yokohama_PN = mkPN "Yokohama";
lin yolk_N = mkN "yolk" "yolks";
lin yon_A = compoundA (mkA "yon");
lin yon_Adv = mkAdv "yon";
lin yonder_A = compoundA (mkA "yonder");
lin yonder_Adv = mkAdv "yonder";
lin yore_N = mkN "yore" ;
lin york_PN = mkPN "York";
lin yorkley_PN = mkPN "Yorkley";
lin yorkshire_PN = mkPN "Yorkshire";
lin youPl_Pron = mkPron "you" "you" "your" "yours" plural P2 human ;
lin youSg_Pron = mkPron "you" "you" "your" "yours" singular P2 human ;
lin young_A = mkA "young" "younger";
lin young_N = mkN "young" ;
lin youngish_A = compoundA (mkA "youngish");
lin youngster_N = mkN "youngster" "youngsters";
lin youth_N = mkN "youth" "youths";
lin youthful_A = compoundA (mkA "youthful");
lin youthfulness_N = mkN "youthfulness" ;
lin yowl_V = mkV "yowl" "yowls" "yowled" "yowled" "yowling";
lin yr_N = mkN "yr" ;
lin ystradgynlais_PN = mkPN "Ystradgynlais";
lin yugoslav_A = compoundA (mkA "yugoslav");
lin yugoslav_N = mkN "yugoslav" "yugoslavs";
lin yugoslavia_PN = mkPN "Yugoslavia";
lin yugoslavian_A = compoundA (mkA "yugoslavian");
lin yugoslavian_N = mkN "yugoslavian" "yugoslavians";
lin yukon_PN = mkPN "Yukon";
lin yule_N = mkN "yule" ;
lin yule_log_N = mkN "yule - log" "yule - logs";
lin yuletide_N = mkN "yuletide" "yuletides";
lin yvonne_PN = mkPN "Yvonne";
lin ywca_N = mkN "ywca" ;
lin zagreb_PN = mkPN "Zagreb";
lin zaire_PN = mkPN "Zaire";
lin zairean_A = compoundA (mkA "zairean");
lin zairean_N = mkN "zairean" "zaireans";
lin zambia_PN = mkPN "Zambia";
lin zambian_A = compoundA (mkA "zambian");
lin zambian_N = mkN "zambian" "zambians";
lin zany_A = mkA "zany" "zanier";
lin zany_N = mkN "zany" "zanies";
lin zap_V2 = mkV2 (mkV "zap" "zaps" "zapped" "zapped" "zapping");
lin zaporozhye_PN = mkPN "Zaporozhye";
lin zaragoza_PN = mkPN "Zaragoza";
lin zeal_N = mkN "zeal" ;
lin zealand_PN = mkPN "Zealand";
lin zealander_A = compoundA (mkA "zealander");
lin zealander_N = mkN "zealander" "zealanders";
lin zealot_N = mkN "zealot" "zealots";
lin zealotry_N = mkN "zealotry" ;
lin zealous_A = compoundA (mkA "zealous");
lin zebra_N = mkN "zebra" "zebras";
lin zebu_N = mkN "zebu" "zebus";
lin zee_N = mkN "zee" "zees";
lin zen_N = mkN "zen" ;
lin zenith_N = mkN "zenith" "zeniths";
lin zenithal_A = compoundA (mkA "zenithal");
lin zephyr_N = mkN "zephyr" "zephyrs";
lin zeppelin_N = mkN "zeppelin" "zeppelins";
lin zero_N = mkN "zero" "zeros";
lin zero_V = mkV "zero" "zeros" "zeroed" "zeroed" "zeroing";
lin zest_N = mkN "zest" ;
lin zestful_A = compoundA (mkA "zestful");
lin zigzag_Adv = mkAdv "zigzag";
lin zigzag_N = mkN "zigzag" "zigzags";
lin zigzag_V = mkV "zigzag" "zigzags" "zigzagged" "zigzagged" "zigzagging";
lin zimbabwe_PN = mkPN "Zimbabwe";
lin zimbabwean_A = compoundA (mkA "zimbabwean");
lin zimbabwean_N = mkN "zimbabwean" "zimbabweans";
lin zinc_N = mkN "zinc" ;
lin zing_N = mkN "zing" ;
lin zinnia_N = mkN "zinnia" "zinnias";
lin zion_N = mkN "zion" "zions";
lin zionism_N = mkN "zionism" ;
lin zionist_A = compoundA (mkA "zionist");
lin zionist_N = mkN "zionist" "zionists";
lin zip_N = mkN "zip" "zips";
lin zip_V2 = mkV2 (mkV "zip" "zips" "zipped" "zipped" "zipping");
lin zip_code_N = mkN "zip code" "zip codes";
lin zip_fastener_N = mkN "zip - fastener" "zip - fasteners";
lin zipper_N = mkN "zipper" "zippers";
lin zither_N = mkN "zither" "zithers";
lin zloty_N = mkN "zloty" "zlotys";
lin zodiac_N = mkN "zodiac" "zodiacs";
lin zoe_PN = mkPN "Zoe";
lin zombie_N = mkN "zombie" "zombies";
lin zonal_A = compoundA (mkA "zonal");
lin zone_N = mkN "zone" "zones";
lin zone_V2 = mkV2 (mkV "zone" "zones" "zoned" "zoned" "zoning");
lin zoning_N = mkN "zoning" ;
lin zoo_N = mkN "zoo" "zoos";
lin zoological_A = compoundA (mkA "zoological");
lin zoologist_N = mkN "zoologist" "zoologists";
lin zoology_N = mkN "zoology" ;
lin zoom_N = mkN "zoom" ;
lin zoom_V = mkV "zoom" "zooms" "zoomed" "zoomed" "zooming";
lin zoophyte_N = mkN "zoophyte" "zoophytes";
lin zoot_suit_N = mkN "zoot suit" "zoot suits";
lin zucchini_N = mkN "zucchini" "zucchini";
lin zurich_PN = mkPN "Zurich";
} ;
