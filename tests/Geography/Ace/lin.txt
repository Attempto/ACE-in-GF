Geography: baseText (sText (s (np_coord_VPS Alps_NP and_Conj (BaseVPS (vp_as_posVPS (a2VP southern_of_A2 Danube_NP)) (vp_as_posVPS (a2VP northern_of_A2 Sicily_NP))))))
GeographyAce: the Alps are in_the_south_of the Danube and are in_the_north_of Sicily .
GeographyApe: the Alps|pndef_pl|Alps_PN|neutr are in_the_south-of|adj_tr|in_the_south-of_A2|of the Danube|pndef_sg|Danube_PN|neutr and are in_the_north-of|adj_tr|in_the_north-of_A2|of Sicily|pn_sg|Sicily_PN|neutr .
GeographyGer: die Alpen sind im_Süden von der Donau und sind im_Norden von Sizilien .
GeographySpa: los Alpes están al_sur del Danubio y están al_norte de Sicilia .


Geography: baseText (sText (s (np_coord_VPS Canary_islands_NP and_Conj (BaseVPS (vp_as_posVPS (a2VP in_the_middle_of_A2 Atlantic_Ocean_NP)) (vp_as_posVPS (a2VP western_of_A2 Europe_NP))))))
GeographyAce: the Canary_Islands are in_the_middle_of the Atlantic_Ocean and are in_the_west_of Europe .
GeographyApe: the Canary_Islands|pndef_pl|Canary_Islands_PN|neutr are in_the_middle-of|adj_tr|in_the_middle-of_A2|of the Atlantic_Ocean|pndef_sg|Atlantic_Ocean_PN|neutr and are in_the_west-of|adj_tr|in_the_west-of_A2|of Europe|pn_sg|Europe_PN|neutr .
GeographyGer: die Kanarischen_Inseln sind in_der_Mitte von dem Atlantischen_Ozean und sind im_Westen von Europa .
GeographySpa: Canarias está en_el_centro del océano_Atlántico y está al_oeste de Europa .


Geography: baseText (sText (s (np_coord_VPS Pyrenees_NP and_Conj (BaseVPS (vp_as_posVPS (a2VP eastern_of_A2 Atlantic_Ocean_NP)) (vp_as_posVPS (a2VP in_the_middle_of_A2 Spain_NP))))))
GeographyAce: the Pyrenees are in_the_east_of the Atlantic_Ocean and are in_the_middle_of Spain .
GeographyApe: the Pyrenees|pndef_pl|Pyrenees_PN|neutr are in_the_east-of|adj_tr|in_the_east-of_A2|of the Atlantic_Ocean|pndef_sg|Atlantic_Ocean_PN|neutr and are in_the_middle-of|adj_tr|in_the_middle-of_A2|of Spain|pn_sg|Spain_PN|neutr .
GeographyGer: die Pyrenäen sind im_Osten von dem Atlantischen_Ozean und sind in_der_Mitte von Spanien .
GeographySpa: los Pirineos están al_este del océano_Atlántico y están en_el_centro de España .


Geography: baseText (sText (s (vpS (thereNP_as_NP (at_leastNP (digitsCard (IDig D_3)) (cn_as_VarCN country_CN))) (a2VP western_of_A2 Switzerland_NP))))
GeographyAce: at least 3 countries are in_the_west_of Switzerland .
GeographyApe: at least 3 countries|noun_pl|country_N|neutr are in_the_west-of|adj_tr|in_the_west-of_A2|of Switzerland|pn_sg|Switzerland_PN|neutr .
GeographyGer: wenigstens 3 Länder sind im_Westen von der Schweiz .
GeographySpa: al menos 3 países están al_oeste de Suiza .


Geography: baseText (sText (s (vpS Bern_NP (a2VP located_in_A2 Switzerland_NP))))
GeographyAce: Bern is located_in Switzerland .
GeographyApe: Bern|pn_sg|Bern_PN|neutr is located-in|adj_tr|located-in_A2|in Switzerland|pn_sg|Switzerland_PN|neutr .
GeographyGer: Bern ist platziert in der Schweiz .
GeographySpa: Berna está situada en Suiza .


Geography: baseText (sText (s (vpS European_Union_NP (v2VP comprise_V2 (thereNP_as_NP (exactlyNP (digitsCard (IIDig D_2 (IDig D_7))) (cn_as_VarCN country_CN)))))))
GeographyAce: the European_Union comprises exactly 2 7 countries .
GeographyApe: the European_Union|pndef_sg|European_Union_PN|neutr comprises|tv_finsg|comprise_V2 exactly 2 7 countries|noun_pl|country_N|neutr .
GeographyGer: die Europäische_Union besteht aus genau 2 7 Ländern .
GeographySpa: la Unión_Europea consta de exactamente 2 7 países .


Geography: baseText (sText (s (neg_vpS European_Union_NP (v2VP comprise_V2 (thereNP_as_NP (at_leastNP (digitsCard (IDig D_2)) (cn_as_VarCN EFTA_state_CN)))))))
GeographyAce: the European_Union doesn't comprise at least 2 EFTA_states .
GeographyApe: the European_Union|pndef_sg|European_Union_PN|neutr doesn't comprise|tv_infpl|comprise_V2 at least 2 EFTA_states|noun_pl|EFTA_state_N|neutr .
GeographyGer: die Europäische_Union besteht nicht aus wenigstens 2 EFTA-Staaten .
GeographySpa: la Unión_Europea no consta de al menos 2 países_de_la_EALC .


Geography: baseText (sText (s (vpS (thereNP_as_NP (exactlyNP (digitsCard (IDig D_4)) (cn_as_VarCN country_CN))) (v2_byVP surround_V2by European_Free_Trade_Association_NP))))
GeographyAce: exactly 4 countries are surrounded by the EFTA .
GeographyApe: exactly 4 countries|noun_pl|country_N|neutr are surrounded|tv_pp|surround_V2 by the EFTA|pndef_sg|EFTA_PN|neutr .
GeographyGer: genau 4 Länder werden durch EFTA umschlossen .
GeographySpa: exactamente 4 países están rodeados por la AELC .



Geography: baseText (sText (s (coordS and_Conj (vpS Paris_NP (v2VP (V2by_as_V2 surround_V2by) (thereNP_as_NP (less_thanNP (digitsCard (IDig D_2)) (cn_as_VarCN fjord_CN))))) (vpS (thereNP_as_NP (exactlyNP (digitsCard (IDig D_3)) (cn_as_VarCN tributary_CN))) (v2VP (V2by_as_V2 surround_V2by) (thereNP_as_NP (indefTherePronNP something_IPron)))))))
GeographyAce: Paris surrounds less than 2 fjords and exactly 3 tributaries surround something .
GeographyApe: Paris|pn_sg|Paris_PN|neutr surrounds|tv_finsg|surround_V2 less than 2 fjords|noun_pl|fjord_N|neutr and exactly 3 tributaries|noun_pl|tributary_N|neutr surround|tv_infpl|surround_V2 something .
GeographyGer: Paris umschließt weniger als 2 Fjorde und genau 3 Nebenflüsse umschließen etwas .
GeographySpa: París rodea a menos que 2 fiordos y exactamente 3 afluentes rodean a algo .


Geography: baseText (sText (s (vpS __197_land_islands_NP (a2VP longer_than_A2 Emaj__245_gi_NP))))
GeographyAce: the Åland_islands are longer_than Emajõgi .
GeographyApe: the Åland_islands|pndef_pl|Åland_islands_PN|neutr are longer-than|adj_tr|longer-than_A2|than Emajõgi|pn_sg|Emajõgi_PN|neutr .
GeographyGer: die Åland-Inseln sind länger als Embach .
GeographySpa: las islas_de_Åland son más_largas que el Emajogi .


Geography: baseText (sText (s (vpS Etna_river_NP (npVP (thereNP_as_NP (aNP (cn_as_VarCN river_CN)))))))
GeographyAce: Etna is a river .
GeographyApe: Etna|pn_sg|Etna_PN|neutr is a river|noun_sg|river_N|neutr .
GeographyGer: Etna ist ein Fluss .
GeographySpa: el río_Etna es un río .

Geography: baseText (sText (s (vpS Mount_Etna_NP (npVP (thereNP_as_NP (aNP (cn_as_VarCN river_CN)))))))
GeographyAce: Etna is a river .
GeographyApe: Etna|pn_sg|Etna_PN|neutr is a river|noun_sg|river_N|neutr .
GeographyGer: der Ätna ist ein Fluss .
GeographySpa: el monte_Etna es un río .


Geography: baseText (sText (s (vpS Narva_river_NP (v2VP flow_through_V2 Narva_NP))))
GeographyAce: the Narva_River flows_through Narva .
GeographyApe: the Narva_River|pndef_sg|Narva_River_PN|neutr flows_through|tv_finsg|flow_through_V2 Narva|pn_sg|Narva_PN|neutr .
GeographyGer: die Narva fließt durch Narva .
GeographySpa: el río_Narva atraviesa Narva .


Geography: baseText (sText (s (np_coord_VPS Aar_NP and_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 Switzerland_NP)) (vp_as_posVPS (v2VP end_in_V2 Switzerland_NP))))))
GeographyAce: the Aar rises_in Switzerland and ends_in Switzerland .
GeographyApe: the Aar|pndef_sg|Aar_PN|neutr rises_in|tv_finsg|rise_in_V2 Switzerland|pn_sg|Switzerland_PN|neutr and ends_in|tv_finsg|end_in_V2 Switzerland|pn_sg|Switzerland_PN|neutr .
GeographyGer: die Aare beginnt in der Schweiz und endet in der Schweiz .
GeographySpa: el río_Aar nace en Suiza y termina en Suiza .


Geography: baseText (sText (s (vpS Vatican_City_NP (v2_byVP surround_V2by Rome_NP))))
GeographyAce: Vatican_City is surrounded by Rome .
GeographyApe: Vatican_City|pn_sg|Vatican_City_PN|neutr is surrounded|tv_pp|surround_V2 by Rome|pn_sg|Rome_PN|neutr .
GeographyGer: Vatikanstadt wird durch Rom umschlossen .
GeographySpa: Ciudad_del_Vaticano está rodeado por Roma .


Geography: baseText (sText (s (vpS German_language_NP (npVP (thereNP_as_NP (aNP (ofCN official_language_CN European_Union_NP)))))))
GeographyAce: German is an official_language of the European_Union .
GeographyApe: German|pn_sg|German_PN|neutr is an official_language|noun_sg|official_language_N|neutr of the European_Union|pndef_sg|European_Union_PN|neutr .
GeographyGer: Deutsch ist eine offizielle_Sprache von der Europäischen_Union .
GeographySpa: el alemán es una lengua_oficial de la Unión_Europea .


Geography: baseText (sText (s (vpS European_Union_NP (npVP European_Union_NP))))
GeographyAce: the European_Union is the European_Union .
GeographyApe: the European_Union|pndef_sg|European_Union_PN|neutr is the European_Union|pndef_sg|European_Union_PN|neutr .
GeographyGer: die Europäische_Union ist die Europäische_Union .
GeographySpa: la Unión_Europea es la Unión_Europea .



Geography: baseText (sText (s (thereNP (at_leastNP (digitsCard (IDig D_2)) (cn_as_VarCN body_of_water_CN)))))
GeographyAce: there are at least 2 bodies_of_water .
GeographyApe: there are at least 2 bodies_of_water|noun_pl|body_of_water_N|neutr .
GeographyGer: es gibt wenigstens 2 Gewässer .
GeographySpa: hay al menos 2 cuerpos_de_agua .


Geography: baseText (sText (s (thereNP (more_thanNP (digitsCard (IDig D_3)) (relCN (cn_as_VarCN location_CN) (predRS which_RP (refl_v2VP (V2by_as_V2 surround_V2by))))))))
GeographyAce: there are more than 3 locations that surround themselves .
GeographyApe: there are more than 3 locations|noun_pl|location_N|neutr that surround|tv_infpl|surround_V2 themselves .
GeographyGer: es gibt mehr als 3 Orte , die sich umschließen .
GeographySpa: hay más que 3 lugares que rodean a se .


Geography: baseText (sText (s (thereNP (more_thanNP (digitsCard (IDig D_3)) (relCN (cn_as_VarCN location_CN) (neg_predRS which_RP (refl_a2VP longer_than_A2)))))))
GeographyAce: there are more than 3 locations that aren't longer_than themselves .
GeographyApe: there are more than 3 locations|noun_pl|location_N|neutr that aren't longer-than|adj_tr|longer-than_A2|than themselves .
GeographyGer: es gibt mehr als 3 Orte , die nicht länger als es sind .
GeographySpa: hay más que 3 lugares que no son más_largos que sí .


Geography: baseText (sText (s (coordS and_Conj (np_coord_VPS (thereNP_as_NP (more_thanNP (digitsCard (IDig D_2)) (cn_as_VarCN lake_CN))) or_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 (thereNP_as_NP (aNP (cn_as_VarCN lake_CN))))) (vp_as_posVPS (v2VP (V2by_as_V2 surround_V2by) (thereNP_as_NP (aNP (cn_as_VarCN lake_CN))))))) (np_coord_VPS (thereNP_as_NP (aNP (cn_as_VarCN lake_CN))) and_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 (thereNP_as_NP (less_thanNP (digitsCard (IDig D_2)) (cn_as_VarCN lake_CN))))) (vp_as_negVPS (v2VP (V2by_as_V2 surround_V2by) (thereNP_as_NP (at_leastNP (digitsCard (IDig D_2)) (cn_as_VarCN lake_CN))))))))))
GeographyAce: more than 2 lakes rise_in a lake or surround a lake and a lake rises_in less than 2 lakes and doesn't surround at least 2 lakes .
GeographyApe: more than 2 lakes|noun_pl|lake_N|neutr rise_in|tv_infpl|rise_in_V2 a lake|noun_sg|lake_N|neutr or surround|tv_infpl|surround_V2 a lake|noun_sg|lake_N|neutr and a lake|noun_sg|lake_N|neutr rises_in|tv_finsg|rise_in_V2 less than 2 lakes|noun_pl|lake_N|neutr and doesn't surround|tv_infpl|surround_V2 at least 2 lakes|noun_pl|lake_N|neutr .
GeographyGer: mehr als 2 Seen beginnen in einem See oder umschließen einen See und ein See beginnt in weniger als 2 Seen und umschließt nicht wenigstens 2 Seen .
GeographySpa: más que 2 lagos nacen en un lago o rodean a un lago y un lago nace en menos que 2 lagos y no rodea a al menos 2 lagos .


Geography: baseText (sText (s (vpS (thereNP_as_NP (more_thanNP (digitsCard (IDig D_2)) (cn_as_VarCN river_CN))) (v2VP has_as_location_V2 European_Union_NP))))
GeographyAce: more than 2 rivers lie_in the European_Union .
GeographyApe: more than 2 rivers|noun_pl|river_N|neutr lie_in|tv_infpl|lie_in_V2 the European_Union|pndef_sg|European_Union_PN|neutr .
GeographyGer: mehr als 2 Flüsse liegen in der Europäischen_Union .
GeographySpa: más que 2 ríos están en la Unión_Europea .



Geography: baseText (sText (s (vpS (noNP (apposVarCN country_CN X_Var)) (v2VP border_V2 (termNP X_Var)))))
GeographyAce: no country X borders X .
GeographyApe: no country|noun_sg|country_N|neutr X borders|tv_finsg|border_V2 X .
GeographyGer: kein Land X grenzt an X .
GeographySpa: ningún país X limita con X .


Geography: baseText (sText (s (vpS (noNP (relCN (cn_as_VarCN river_CN) (predRS which_RP (v2VP drain_into_V2 (thereNP_as_NP (aNP (cn_as_VarCN endorheic_basin_CN))))))) (v2VP drain_into_V2 (thereNP_as_NP (aNP (cn_as_VarCN ocean_CN)))))))
GeographyAce: no river that drains_into an endorheic_basin drains_into an ocean .
GeographyApe: no river|noun_sg|river_N|neutr that drains_into|tv_finsg|drain_into_V2 an endorheic_basin|noun_sg|endorheic_basin_N|neutr drains_into|tv_finsg|drain_into_V2 an ocean|noun_sg|ocean_N|neutr .
GeographyGer: kein Fluss , der in ein endorheisches_Becken mündet mündet in einen Ozean .
GeographySpa: ningún río que desemboca en una cuenca_endorreica desemboca en un océano .

Geography: baseText (sText (s (vpS (relNP (noNP (cn_as_VarCN river_CN)) (predRS which_RP (v2VP drain_into_V2 (thereNP_as_NP (aNP (cn_as_VarCN endorheic_basin_CN)))))) (v2VP drain_into_V2 (thereNP_as_NP (aNP (cn_as_VarCN ocean_CN)))))))
GeographyAce: no river that drains_into an endorheic_basin drains_into an ocean .
GeographyApe: no river|noun_sg|river_N|neutr that drains_into|tv_finsg|drain_into_V2 an endorheic_basin|noun_sg|endorheic_basin_N|neutr drains_into|tv_finsg|drain_into_V2 an ocean|noun_sg|ocean_N|neutr .
GeographyGer: kein Fluss , der in ein endorheisches_Becken mündet mündet in einen Ozean .
GeographySpa: ningún río que desemboca en una cuenca_endorreica desemboca en un océano .


Geography: baseText (sText (s (for_everyS (apposVarCN country_CN X_Var) (neg_vpS (termNP X_Var) (v2VP border_V2 (termNP X_Var))))))
GeographyAce: for every country X X doesn't border X .
GeographyApe: for every country|noun_sg|country_N|neutr X X doesn't border|tv_infpl|border_V2 X .
GeographyGer: für jedes Land X grenzt X nicht an X .
GeographySpa: para cada país X X no limita con X .


Geography: baseText (sText (s (if_thenS (vpS (termNP X_Var) (v2VP border_V2 (termNP Y_Var))) (vpS (termNP Y_Var) (v2VP border_V2 (termNP X_Var))))))
GeographyAce: if X borders Y then Y borders X .
GeographyApe: if X borders|tv_finsg|border_V2 Y then Y borders|tv_finsg|border_V2 X .
GeographyGer: wenn X an Y grenzt , dann grenzt Y an X .
GeographySpa: si X limita con Y entonces Y limita con X .


Geography: baseText (sText (s (if_thenS (vpS (termNP X_Var) (v2VP contain_V2 (termNP Y_Var))) (neg_vpS (termNP Y_Var) (v2VP contain_V2 (termNP X_Var))))))
GeographyAce: if X contains Y then Y doesn't contain X .
GeographyApe: if X contains|tv_finsg|contain_V2 Y then Y doesn't contain|tv_infpl|contain_V2 X .
GeographyGer: wenn X Y enthält , dann enthält Y X nicht .
GeographySpa: si X contiene Y entonces Y no contiene X .


Geography: baseText (sText (s (if_thenS (coordS and_Conj (vpS (termNP X_Var) (v2VP contain_V2 (termNP Y_Var))) (vpS (termNP Y_Var) (v2VP contain_V2 (termNP Z_Var)))) (vpS (termNP Z_Var) (v2_byVP surround_V2by (termNP X_Var))))))
GeographyAce: if X contains Y and Y contains Z then Z is surrounded by X .
GeographyApe: if X contains|tv_finsg|contain_V2 Y and Y contains|tv_finsg|contain_V2 Z then Z is surrounded|tv_pp|surround_V2 by X .
GeographyGer: wenn X Y enthält und Y Z enthält , dann wird Z durch X umschlossen .
GeographySpa: si X contiene Y y Y contiene Z entonces Z está rodeado por X .


Geography: baseText (sText (s (vpS Switzerland_NP (v2VP border_V2 (noNP (cn_as_VarCN sea_CN))))))
GeographyAce: Switzerland borders no sea .
GeographyApe: Switzerland|pn_sg|Switzerland_PN|neutr borders|tv_finsg|border_V2 no sea|noun_sg|sea_N|neutr .
GeographyGer: die Schweiz grenzt an kein Meer .
GeographySpa: Suiza no limita con ningún mar .


Geography: baseText (sText (s (vpS Zurich_NP (v2_byVP surround_V2by Switzerland_NP))))
GeographyAce: Zurich is surrounded by Switzerland .
GeographyApe: Zurich|pn_sg|Zurich_PN|neutr is surrounded|tv_pp|surround_V2 by Switzerland|pn_sg|Switzerland_PN|neutr .
GeographyGer: Zürich wird durch die Schweiz umschlossen .
GeographySpa: Zúrich está rodeado por Suiza .


Geography: baseText (sText (s (neg_vpS (everyNP (cn_as_VarCN city_CN)) (npVP (thereNP_as_NP (aNP (ofCN capital_CN (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))))))))
GeographyAce: every city isn't a capital of a country .
GeographyApe: every city|noun_sg|city_N|neutr isn't a capital|noun_sg|capital_N|neutr of a country|noun_sg|country_N|neutr .
GeographyGer: jede Stadt ist nicht eine Hauptstadt von einem Land .
GeographySpa: cada ciudad no es una capital de un país .


Geography: baseText (sText (s (thereNP (aNP (relCN (cn_as_VarCN city_CN) (neg_predRS which_RP (npVP (thereNP_as_NP (aNP (ofCN capital_CN (thereNP_as_NP (aNP (cn_as_VarCN country_CN)))))))))))))
GeographyAce: there is a city that isn't a capital of a country .
GeographyApe: there is a city|noun_sg|city_N|neutr that isn't a capital|noun_sg|capital_N|neutr of a country|noun_sg|country_N|neutr .
GeographyGer: es gibt eine Stadt , die nicht eine Hauptstadt von einem Land ist .
GeographySpa: hay una ciudad que no es una capital de un país .


Geography: baseText (sText (s (vpS (noNP (cn_as_VarCN river_CN)) (refl_v2VP flow_into_V2))))
GeographyAce: no river flows_into itself .
GeographyApe: no river|noun_sg|river_N|neutr flows_into|tv_finsg|flow_into_V2 itself .
GeographyGer: kein Fluss fließt in sich .
GeographySpa: ningún río desemboca en se .


Geography: baseText (sText (s (vpS (indefPronNP nothing_IPron) (refl_a2VP larger_than_A2))))
GeographyAce: nothing is larger_than itself .
GeographyApe: nothing is larger-than|adj_tr|larger-than_A2|than itself .
GeographyGer: nichts ist größer als es .
GeographySpa: nada es mayor que sí .


Geography: baseText (sText (s (vpS (noNP (cn_as_VarCN city_CN)) (npVP (thereNP_as_NP (aNP (ofCN capital_CN (thereNP_as_NP (more_thanNP (digitsCard (IDig D_1)) (cn_as_VarCN country_CN))))))))))
GeographyAce: no city is a capital of more than 1 country .
GeographyApe: no city|noun_sg|city_N|neutr is a capital|noun_sg|capital_N|neutr of more than 1 country|noun_sg|country_N|neutr .
GeographyGer: keine Stadt ist eine Hauptstadt von mehr als 1 Land .
GeographySpa: ninguna ciudad es una capital de más que 1 país .


Geography: baseText (sText (s (vpS (noNP (cn_as_VarCN capital_CN)) (v2_byVP surround_V2by (thereNP_as_NP (more_thanNP (digitsCard (IDig D_2)) (cn_as_VarCN sea_CN)))))))
GeographyAce: no capital is surrounded by more than 2 seas .
GeographyApe: no capital|noun_sg|capital_N|neutr is surrounded|tv_pp|surround_V2 by more than 2 seas|noun_pl|sea_N|neutr .
GeographyGer: keine Hauptstadt wird durch mehr als 2 Meere umschlossen .
GeographySpa: ninguna capital está rodeada por más que 2 mares .


Geography: baseText (sText (s (for_everyS (apposVarCN country_CN X_Var) (np_coord_VPS (thereNP_as_NP (aNP (ofCN capital_CN (termNP X_Var)))) and_Conj (BaseVPS (vp_as_posVPS (v2_byVP surround_V2by (termNP X_Var))) (vp_as_negVPS (npVP (thereNP_as_NP (aNP (cn_as_VarCN sea_CN))))))))))
GeographyAce: for every country X a capital of X is surrounded by X and isn't a sea .
GeographyApe: for every country|noun_sg|country_N|neutr X a capital|noun_sg|capital_N|neutr of X is surrounded|tv_pp|surround_V2 by X and isn't a sea|noun_sg|sea_N|neutr .
GeographyGer: für jedes Land X wird durch X umschlossen und ist nicht ein Meer eine Hauptstadt von X .
GeographySpa: para cada país X una capital de X está rodeada por X y no es un mar .


Geography: baseText (sText (s (np_coord_VPS (thereNP_as_NP (aNP (ofCN capital_CN (termNP X_Var)))) and_Conj (BaseVPS (vp_as_posVPS (v2_byVP surround_V2by (termNP X_Var))) (vp_as_negVPS (npVP (thereNP_as_NP (aNP (cn_as_VarCN sea_CN)))))))))
GeographyAce: a capital of X is surrounded by X and isn't a sea .
GeographyApe: a capital|noun_sg|capital_N|neutr of X is surrounded|tv_pp|surround_V2 by X and isn't a sea|noun_sg|sea_N|neutr .
GeographyGer: eine Hauptstadt von X wird durch X umschlossen und ist nicht ein Meer .
GeographySpa: una capital de X está rodeada por X y no es un mar .



Geography: baseText (sText (s (vpS Rhine_NP (v2VP flow_through_V2 Netherlands_NP))))
GeographyAce: the Rhine flows_through the Netherlands .
GeographyApe: the Rhine|pndef_sg|Rhine_PN|neutr flows_through|tv_finsg|flow_through_V2 the Netherlands|pndef_sg|Netherlands_PN|neutr .
GeographyGer: der Rhein fließt durch die Niederlande .
GeographySpa: el Rin atraviesa los Países_Bajos .


Geography: baseText (sText (s (if_thenS (thereNP (aNP (apposVarCN river_CN X_Var))) (coordS and_Conj (np_coord_VPS (termNP X_Var) and_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))) (vp_as_posVPS (v2VP end_in_V2 (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))))) (np_coord_VPS (termNP X_Var) and_Conj (BaseVPS (vp_as_posVPS (v2VP flow_through_V2 (thereNP_as_NP (at_leastNP (digitsCard (IDig D_1)) (cn_as_VarCN country_CN))))) (vp_as_posVPS (v2VP flow_into_V2 (relNP (thereNP_as_NP (indefTherePronNP something_IPron)) (orRS (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN river_CN))))) (orRS (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN lake_CN))))) (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN sea_CN))))))))))))))))
GeographyAce: if there is a river X then X rises_in a country and ends_in a country and X flows_through at least 1 country and flows_into something that is a river or that is a lake or that is a sea .
GeographyApe: if there is a river|noun_sg|river_N|neutr X then X rises_in|tv_finsg|rise_in_V2 a country|noun_sg|country_N|neutr and ends_in|tv_finsg|end_in_V2 a country|noun_sg|country_N|neutr and X flows_through|tv_finsg|flow_through_V2 at least 1 country|noun_sg|country_N|neutr and flows_into|tv_finsg|flow_into_V2 something that is a river|noun_sg|river_N|neutr or that is a lake|noun_sg|lake_N|neutr or that is a sea|noun_sg|sea_N|neutr .
GeographyGer: wenn es einen Fluss X gibt , dann beginnt in einem Land und endet in einem Land X und X fließt durch wenigstens 1 Land und fließt in etwas , das ein Fluss ist oder das ein See ist oder das ein Meer ist .
GeographySpa: si hay un río X entonces X nace en un país y termina en un país y X atraviesa al menos 1 país y desemboca en algo que es un río o que es un lago o que es un mar .

Geography: baseText (sText (s (if_thenS (thereNP (aNP (apposVarCN river_CN X_Var))) (coordS and_Conj (np_coord_VPS (termNP X_Var) and_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))) (vp_as_posVPS (v2VP end_in_V2 (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))))) (np_coord_VPS (termNP X_Var) and_Conj (BaseVPS (vp_as_posVPS (v2VP flow_through_V2 (thereNP_as_NP (at_leastNP (digitsCard (IDig D_1)) (cn_as_VarCN country_CN))))) (vp_as_posVPS (v2VP flow_into_V2 (relNP (thereNP_as_NP (indefTherePronNP something_IPron)) (orRS (orRS (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN river_CN))))) (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN lake_CN)))))) (predRS which_RP (npVP (thereNP_as_NP (aNP (cn_as_VarCN sea_CN)))))))))))))))
GeographyAce: if there is a river X then X rises_in a country and ends_in a country and X flows_through at least 1 country and flows_into something that is a river or that is a lake or that is a sea .
GeographyApe: if there is a river|noun_sg|river_N|neutr X then X rises_in|tv_finsg|rise_in_V2 a country|noun_sg|country_N|neutr and ends_in|tv_finsg|end_in_V2 a country|noun_sg|country_N|neutr and X flows_through|tv_finsg|flow_through_V2 at least 1 country|noun_sg|country_N|neutr and flows_into|tv_finsg|flow_into_V2 something that is a river|noun_sg|river_N|neutr or that is a lake|noun_sg|lake_N|neutr or that is a sea|noun_sg|sea_N|neutr .
GeographyGer: wenn es einen Fluss X gibt , dann beginnt in einem Land und endet in einem Land X und X fließt durch wenigstens 1 Land und fließt in etwas , das ein Fluss ist oder das ein See ist oder das ein Meer ist .
GeographySpa: si hay un río X entonces X nace en un país y termina en un país y X atraviesa al menos 1 país y desemboca en algo que es un río o que es un lago o que es un mar .


Geography: baseText (sText (s (if_thenS (vpS (termNP X_Var) (v2VP flow_into_V2 (relNP (thereNP_as_NP (indefTherePronNP something_IPron)) (predRS which_RP (v2VP drain_into_V2 (termNP Y_Var)))))) (vpS (termNP X_Var) (v2VP drain_into_V2 (termNP Y_Var))))))
GeographyAce: if X flows_into something that drains_into Y then X drains_into Y .
GeographyApe: if X flows_into|tv_finsg|flow_into_V2 something that drains_into|tv_finsg|drain_into_V2 Y then X drains_into|tv_finsg|drain_into_V2 Y .
GeographyGer: wenn X in etwas , das in Y mündet fließt , dann mündet X in Y .
GeographySpa: si X desemboca en algo que desemboca en Y entonces X desemboca en Y .


Geography: baseText (sText (s (np_coord_VPS (everyNP (relCN (cn_as_VarCN river_CN) (predRS which_RP (v2VP rise_in_V2 Switzerland_NP)))) or_Conj (BaseVPS (vp_as_posVPS (v2VP drain_into_V2 Mediterranean_Sea_NP)) (vp_as_posVPS (v2VP drain_into_V2 North_Sea_NP))))))
GeographyAce: every river that rises_in Switzerland drains_into the Mediterranean or drains_into the North_Sea .
GeographyApe: every river|noun_sg|river_N|neutr that rises_in|tv_finsg|rise_in_V2 Switzerland|pn_sg|Switzerland_PN|neutr drains_into|tv_finsg|drain_into_V2 the Mediterranean|pndef_sg|Mediterranean_PN|neutr or drains_into|tv_finsg|drain_into_V2 the North_Sea|pndef_sg|North_Sea_PN|neutr .
GeographyGer: jeder Fluss , der in der Schweiz beginnt mündet ins Mittelmeer oder mündet in die Nordsee .
GeographySpa: cada río que nace en Suiza desemboca en el mar_Mediterráneo o desemboca en el Mar_del_Norte .

Geography: baseText (sText (s (np_coord_VPS (relNP (everyNP (cn_as_VarCN river_CN)) (predRS which_RP (v2VP rise_in_V2 Switzerland_NP))) or_Conj (BaseVPS (vp_as_posVPS (v2VP drain_into_V2 Mediterranean_Sea_NP)) (vp_as_posVPS (v2VP drain_into_V2 North_Sea_NP))))))
GeographyAce: every river that rises_in Switzerland drains_into the Mediterranean or drains_into the North_Sea .
GeographyApe: every river|noun_sg|river_N|neutr that rises_in|tv_finsg|rise_in_V2 Switzerland|pn_sg|Switzerland_PN|neutr drains_into|tv_finsg|drain_into_V2 the Mediterranean|pndef_sg|Mediterranean_PN|neutr or drains_into|tv_finsg|drain_into_V2 the North_Sea|pndef_sg|North_Sea_PN|neutr .
GeographyGer: jeder Fluss , der in der Schweiz beginnt mündet ins Mittelmeer oder mündet in die Nordsee .
GeographySpa: cada río que nace en Suiza desemboca en el mar_Mediterráneo o desemboca en el Mar_del_Norte .


Geography: baseText (sText (s (vpS (thereNP_as_NP (at_leastNP (digitsCard (IDig D_3)) (cn_as_VarCN Finno_Ugric_language_CN))) (npVP (thereNP_as_NP (aNP (ofCN official_language_CN (thereNP_as_NP (aNP (cn_as_VarCN country_CN))))))))))
GeographyAce: at least 3 Finno-Ugric_languages are an official_language of a country .
GeographyApe: at least 3 Finno-Ugric_languages|noun_pl|Finno-Ugric_language_N|neutr are an official_language|noun_sg|official_language_N|neutr of a country|noun_sg|country_N|neutr .
GeographyGer: wenigstens 3 Finno-ugrische_Sprachen sind eine offizielle_Sprache von einem Land .
GeographySpa: al menos 3 lenguas_fino-úgricas son una lengua_oficial de un país .


Geography: baseText (sText (s (vpS (thereNP_as_NP (at_mostNP (digitsCard (IDig D_0)) (cn_as_VarCN city_CN))) (npVP (thereNP_as_NP (aNP (cn_as_VarCN capital_CN)))))))
GeographyAce: at most 0 cities are a capital .
GeographyApe: at most 0 cities|noun_pl|city_N|neutr are a capital|noun_sg|capital_N|neutr .
GeographyGer: höchstens 0 Städte sind eine Hauptstadt .
GeographySpa: como máximo 0 ciudades son una capital .


Geography: baseText (sText (s (vpS (everyNP (apposVarCN country_CN X_Var)) (a2VP northern_of_A2 (everyNP (relCN (cn_as_VarCN country_CN) (predRS which_RP (a2VP southern_of_A2 (termNP X_Var)))))))))
GeographyAce: every country X is in_the_north_of every country that is in_the_south_of X .
GeographyApe: every country|noun_sg|country_N|neutr X is in_the_north-of|adj_tr|in_the_north-of_A2|of every country|noun_sg|country_N|neutr that is in_the_south-of|adj_tr|in_the_south-of_A2|of X .
GeographyGer: jedes Land X ist im_Norden von jedem Land , das im_Süden von X ist .
GeographySpa: cada país X está al_norte de cada país que está al_sur de X .

Geography: baseText (sText (s (vpS (everyNP (apposVarCN country_CN X_Var)) (a2VP northern_of_A2 (relNP (everyNP (cn_as_VarCN country_CN)) (predRS which_RP (a2VP southern_of_A2 (termNP X_Var))))))))
GeographyAce: every country X is in_the_north_of every country that is in_the_south_of X .
GeographyApe: every country|noun_sg|country_N|neutr X is in_the_north-of|adj_tr|in_the_north-of_A2|of every country|noun_sg|country_N|neutr that is in_the_south-of|adj_tr|in_the_south-of_A2|of X .
GeographyGer: jedes Land X ist im_Norden von jedem Land , das im_Süden von X ist .
GeographySpa: cada país X está al_norte de cada país que está al_sur de X .


Geography: baseText (sText (s (if_thenS (vpS (thereNP_as_NP (aNP (ofCN official_language_CN (thereNP_as_NP (aNP (cn_as_VarCN country_CN)))))) (npVP (thereNP_as_NP (aNP (cn_as_VarCN Finno_Ugric_language_CN))))) (np_coord_VPS (theNP (cn_as_VarCN country_CN)) or_Conj (BaseVPS (vp_as_posVPS (v2VP border_V2 Russia_NP)) (vp_as_posVPS (v2VP border_V2 (relNP (thereNP_as_NP (aNP (cn_as_VarCN country_CN))) (predRS which_RP (v2VP border_V2 Russia_NP))))))))))
GeographyAce: if an official_language of a country is a Finno-Ugric_language then the country borders Russia or borders a country that borders Russia .
GeographyApe: if an official_language|noun_sg|official_language_N|neutr of a country|noun_sg|country_N|neutr is a Finno-Ugric_language|noun_sg|Finno-Ugric_language_N|neutr then the country|noun_sg|country_N|neutr borders|tv_finsg|border_V2 Russia|pn_sg|Russia_PN|neutr or borders|tv_finsg|border_V2 a country|noun_sg|country_N|neutr that borders|tv_finsg|border_V2 Russia|pn_sg|Russia_PN|neutr .
GeographyGer: wenn eine offizielle_Sprache von einem Land eine Finno-ugrische_Sprache ist , dann grenzt an Russland oder grenzt an ein Land , das an Russland grenzt das Land .
GeographySpa: si una lengua_oficial de un país es una lengua_fino-úgrica entonces el país limita con Rusia o limita con un país que limita con Rusia .

Geography: baseText (sText (s (if_thenS (vpS (thereNP_as_NP (aNP (ofCN official_language_CN (thereNP_as_NP (aNP (cn_as_VarCN country_CN)))))) (npVP (thereNP_as_NP (aNP (cn_as_VarCN Finno_Ugric_language_CN))))) (np_coord_VPS (theNP (cn_as_VarCN country_CN)) or_Conj (BaseVPS (vp_as_posVPS (v2VP border_V2 Russia_NP)) (vp_as_posVPS (v2VP border_V2 (thereNP_as_NP (aNP (relCN (cn_as_VarCN country_CN) (predRS which_RP (v2VP border_V2 Russia_NP))))))))))))
GeographyAce: if an official_language of a country is a Finno-Ugric_language then the country borders Russia or borders a country that borders Russia .
GeographyApe: if an official_language|noun_sg|official_language_N|neutr of a country|noun_sg|country_N|neutr is a Finno-Ugric_language|noun_sg|Finno-Ugric_language_N|neutr then the country|noun_sg|country_N|neutr borders|tv_finsg|border_V2 Russia|pn_sg|Russia_PN|neutr or borders|tv_finsg|border_V2 a country|noun_sg|country_N|neutr that borders|tv_finsg|border_V2 Russia|pn_sg|Russia_PN|neutr .
GeographyGer: wenn eine offizielle_Sprache von einem Land eine Finno-ugrische_Sprache ist , dann grenzt an Russland oder grenzt an ein Land , das an Russland grenzt das Land .
GeographySpa: si una lengua_oficial de un país es una lengua_fino-úgrica entonces el país limita con Rusia o limita con un país que limita con Rusia .


Geography: baseText (sText (s (vpS (everyNP (relCN (cn_as_VarCN Germanic_language_CN) (predRS which_RP (v2_byVP surround_V2by Hiiumaa_island_NP)))) (v2VP to_be_a_natural_border_between_V2 Atlantic_Ocean_NP))))
GeographyAce: every Germanic_language that is surrounded by Hiiumaa naturally_borders the Atlantic_Ocean .
GeographyApe: every Germanic_language|noun_sg|Germanic_language_N|neutr that is surrounded|tv_pp|surround_V2 by Hiiumaa|pn_sg|Hiiumaa_PN|neutr naturally_borders|tv_finsg|naturally_border_V2 the Atlantic_Ocean|pndef_sg|Atlantic_Ocean_PN|neutr .
GeographyGer: jede Germanische_Sprache , die durch Hiiumaa umschlossen wird grenzt natürlich_an den Atlantischen_Ozean .
GeographySpa: cada lengua_germánica que está rodeada por la isla_de_Hiiumaa es un_límite_natural_de el océano_Atlántico .

Geography: baseText (sText (s (vpS (relNP (everyNP (cn_as_VarCN Germanic_language_CN)) (predRS which_RP (v2_byVP surround_V2by Hiiumaa_island_NP))) (v2VP to_be_a_natural_border_between_V2 Atlantic_Ocean_NP))))
GeographyAce: every Germanic_language that is surrounded by Hiiumaa naturally_borders the Atlantic_Ocean .
GeographyApe: every Germanic_language|noun_sg|Germanic_language_N|neutr that is surrounded|tv_pp|surround_V2 by Hiiumaa|pn_sg|Hiiumaa_PN|neutr naturally_borders|tv_finsg|naturally_border_V2 the Atlantic_Ocean|pndef_sg|Atlantic_Ocean_PN|neutr .
GeographyGer: jede Germanische_Sprache , die durch Hiiumaa umschlossen wird grenzt natürlich_an den Atlantischen_Ozean .
GeographySpa: cada lengua_germánica que está rodeada por la isla_de_Hiiumaa es un_límite_natural_de el océano_Atlántico .


Geography: baseText (qsText (qs (npqQS (ipNPQ whatSg_IP) (npVP Switzerland_NP))))
GeographyAce: what is Switzerland ?
GeographyApe: what is Switzerland|pn_sg|Switzerland_PN|neutr ?
GeographyGer: was ist die Schweiz ?
GeographySpa: ¿ qué es Suiza ?


Geography: baseText (qsText (qs (npqQS (ipNPQ (whichIP which_IDet (cn_as_VarCN country_CN))) (v2VP border_V2 Switzerland_NP))))
GeographyAce: which country borders Switzerland ?
GeographyApe: which country|noun_sg|country_N|neutr borders|tv_finsg|border_V2 Switzerland|pn_sg|Switzerland_PN|neutr ?
GeographyGer: welches Land grenzt an die Schweiz ?
GeographySpa: ¿ qué país limita con Suiza ?


Geography: baseText (qsText (qs (npqQS (ipNPQ (whichIP whichPl_IDet (cn_as_VarCN country_CN))) (v2VP border_V2 (thereNP_as_NP (at_leastNP (digitsCard (IDig D_5)) (cn_as_VarCN country_CN)))))))
GeographyAce: which countries border at least 5 countries ?
GeographyApe: which countries|noun_pl|country_N|neutr border|tv_infpl|border_V2 at least 5 countries|noun_pl|country_N|neutr ?
GeographyGer: welche Länder grenzen an wenigstens 5 Länder ?
GeographySpa: ¿ qué países limitan con al menos 5 países ?


Geography: baseText (qsText (qs (npqQS (ipNPQ (whichIP whichPl_IDet (relCN (cn_as_VarCN country_CN) (slashRS which_RP Germany_NP border_V2)))) (v2VP border_V2 Switzerland_NP))))
GeographyAce: which countries that Germany borders border Switzerland ?
GeographyApe: which countries|noun_pl|country_N|neutr that Germany|pn_sg|Germany_PN|neutr borders|tv_finsg|border_V2 border|tv_infpl|border_V2 Switzerland|pn_sg|Switzerland_PN|neutr ?
GeographyGer: welche Länder , an die Deutschland grenzt grenzen an die Schweiz ?
GeographySpa: ¿ qué países con que Alemania limita limitan con Suiza ?


Geography: baseText (qsText (qs (npq_coord_VPS (ipNPQ (whichIP whichPl_IDet (cn_as_VarCN country_CN))) and_Conj (BaseVPS (vp_as_posVPS (v2VP border_V2 Switzerland_NP)) (vp_as_posVPS (v2VP border_V2 (relNP (thereNP_as_NP (exactlyNP (digitsCard (IDig D_1)) (cn_as_VarCN country_CN))) (slashRS which_RP Switzerland_NP border_V2))))))))
GeographyAce: which countries border Switzerland and border exactly 1 country that Switzerland borders ?
GeographyApe: which countries|noun_pl|country_N|neutr border|tv_infpl|border_V2 Switzerland|pn_sg|Switzerland_PN|neutr and border|tv_infpl|border_V2 exactly 1 country|noun_sg|country_N|neutr that Switzerland|pn_sg|Switzerland_PN|neutr borders|tv_finsg|border_V2 ?
GeographyGer: welche Länder grenzen an die Schweiz und grenzen an genau 1 Land , an das die Schweiz grenzt ?
GeographySpa: ¿ qué países limitan con Suiza y limitan con exactamente 1 país con que Suiza limita ?

Geography: baseText (qsText (qs (npq_coord_VPS (ipNPQ (whichIP whichPl_IDet (cn_as_VarCN country_CN))) and_Conj (BaseVPS (vp_as_posVPS (v2VP border_V2 Switzerland_NP)) (vp_as_posVPS (v2VP border_V2 (thereNP_as_NP (exactlyNP (digitsCard (IDig D_1)) (relCN (cn_as_VarCN country_CN) (slashRS which_RP Switzerland_NP border_V2))))))))))
GeographyAce: which countries border Switzerland and border exactly 1 country that Switzerland borders ?
GeographyApe: which countries|noun_pl|country_N|neutr border|tv_infpl|border_V2 Switzerland|pn_sg|Switzerland_PN|neutr and border|tv_infpl|border_V2 exactly 1 country|noun_sg|country_N|neutr that Switzerland|pn_sg|Switzerland_PN|neutr borders|tv_finsg|border_V2 ?
GeographyGer: welche Länder grenzen an die Schweiz und grenzen an genau 1 Land , an das die Schweiz grenzt ?
GeographySpa: ¿ qué países limitan con Suiza y limitan con exactamente 1 país con que Suiza limita ?



Geography: baseText (qsText (qs (npq_coord_VPS (ipNPQ (whichIP which_IDet (cn_as_VarCN river_CN))) and_Conj (BaseVPS (vp_as_posVPS (v2VP rise_in_V2 (thereNP_as_NP (aNP (apposVarCN country_CN X_Var))))) (vp_as_posVPS (v2VP end_in_V2 (termNP X_Var)))))))
GeographyAce: which river rises_in a country X and ends_in X ?
GeographyApe: which river|noun_sg|river_N|neutr rises_in|tv_finsg|rise_in_V2 a country|noun_sg|country_N|neutr X and ends_in|tv_finsg|end_in_V2 X ?
GeographyGer: welcher Fluss beginnt in einem Land X und endet in X ?
GeographySpa: ¿ qué río nace en un país X y termina en X ?


